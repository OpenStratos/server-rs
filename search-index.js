var N=null,E="",T="t",U="u",searchIndex={};
var R=["UnicodeXID","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","usize","rand_core","Implement `fill_bytes` by reading chunks from the output…","try_from","result","try_into","borrow_mut","rand_core::block","to_owned","clone_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","rngcore","blockrng","blockrng64","formatter","description","stderror","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","smallvec","Constructs a new `SmallVec` on the stack from an `A`…","extend_from_slice","borrow","typeid","into_iter","intoiterator","option","size_hint","ordering","next_back","index_mut","rangefrom","rangefull","ExtendFromSlice","SmallVec","IntoIter","lazy_static","scopeguard","should_run","Strategy","ScopeGuard","deref_mut","unreachable","to_string","partial_cmp","ResultVoidExt","ResultVoidErrExt","fnvhasher","FnvHasher","traitobject","Return a reference to the value associated with the given…","Return a mutable reference to the value associated with…","VacantEntry","with_capacity","is_empty","capacity","reserve_exact","shrink_to_fit","default","The requisite parameters for testing for approximate…","The left-hand side of the approximate equality comparison.","The right-hand side of the approximate equality comparison.","The tolerance to use when testing values that are close…","epsilon","relative","max_relative","Replace the epsilon value with the one specified.","max_ulps","Peform the equality comparison","Peform the inequality comparison","relative_eq","relative_ne","Predicate for testing the approximate equality of two…","Predicate for testing the approximate inequality of two…","Relative","ApproxEq","demangle","trydemangleerror","Demangle","TryDemangleError","NotReady","is_not_ready","futureresult","Creates a \"leaf future\" from an immediate value of a…","Same as `join`, but with more futures.","Flatten the execution of this future when the successful…","Do something with the item of a future, passing it on.","executeerror","executeerrorkind","into_future","A stream which is just a shim over an underlying instance…","A stream combinator to concatenate the results of a stream…","An adapter for merging the output of two streams.","An adaptor for a stream of futures to execute the futures…","CatchUnwind","Converts an `Iterator` over `Result`s into a `Stream`…","Converts a list of futures into a `Stream` of results from…","Acquires a reference to the underlying stream that this…","Acquires a mutable reference to the underlying stream that…","into_inner","Consumes this combinator, returning the underlying stream.","get_ref","get_mut","reuniteerror","Attempts to put the two \"halves\" of a split `Stream +…","futures_unordered","An unbounded set of futures.","futuresunordered","futures::stream","futuresordered","Chain on a computation for when a value is ready, passing…","Concatenate all results of a stream into a single…","catch_unwind","catchunwind","Get a shared reference to the inner sink.","Get a mutable reference to the inner sink.","Consumes this combinator, returning the underlying sink.","Composes a function in front of the sink.","A future that completes after the given stream has been…","futures","spawnhandle","futures::sync","The transmission end of a channel which is used to send…","The receiving end of a channel which implements the…","SpawnHandle","Handle returned from the `spawn` function.","Creates an in-memory channel implementation of the…","Spawns a `stream` onto the instance of `Executor`…","Returns the message that was attempted to be sent but…","trysenderror","senderror","is_closed","Returns whether this channel is closed without needing a…","Closes the receiving half","bilockguard","A multi-producer, single-consumer, futures-aware, FIFO…","Receiver","UnboundedSender","UnboundedReceiver","SendError","Error type for sending, used when the receiving end of a…","Type of future which `Executor` instances must be able to…","unbounded","spawn_unbounded","unbounded_send","Sends the provided message along this channel.","futures::unsync","A one-shot, futures-aware channel","Represents the completion half of a oneshot through which…","A future representing the completion of a computation…","Creates a new futures-aware, one-shot channel.","Spawns a `future` onto the instance of `Executor`…","Spawns a function `f` onto the `Spawn` instance provided…","Completes this oneshot with a successful result.","poll_cancel","Polls this `Sender` half to detect whether the `Receiver`…","is_canceled","Tests to see whether this `Sender`'s corresponding…","Gracefully close this receiver, preventing sending any…","Drop this future without canceling the underlying future.","futures::future","futures::stream::futures_unordered","futures::sink","futures::task","futures::executor","futures::sync::oneshot","futures::sync::mpsc","futures::unsync::mpsc","futures::unsync::oneshot","canceled","bilockacquired","start_send","startsend","poll_complete","asyncsink","notifyhandle","fmtresult","from_iter","shareditem","sharederror","sinkfromerr","sinkmaperr","unparkevent","This function is called whenever a new copy of `id` is…","All instances of `Task` store an `id` that they're going…","AsyncSink","ExecuteErrorKind","IntoFuture","FutureFrom","ExecuteError","ReuniteError","MergedItem","FilterMap","StreamFuture","InspectErr","SkipWhile","TakeWhile","BufferUnordered","SplitStream","SplitSink","FuturesUnordered","FuturesOrdered","WithFlatMap","SinkFromErr","SinkMapErr","UnsafeNotify","TrySendError","BiLockAcquired","FutureResult","FlattenStream","IntoStream","SelectNext","SelectAll","SharedItem","SharedError","IterResult","NotifyHandle","AtomicTask","UnparkEvent","BiLockGuard","BiLockAcquire","Execute","quick_error","ResultExt","new_alpha","Convenience function for creating a new pixel The order of…","Blue first","brightness level","16-bit BGR in machine's native endian","16-bit gray in machine's native endian","The components interpreted as raw bytes, in machine's…","as_mut_slice","as_slice","rgb::alt","grayalpha","__hcomponenttype","__hcomponenttypealphacomponenttype","Convenience function for creating a new pixel","Iterate over color components (R, G, and B)","Iterate over all components (length=4)","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out…","Create new RGBA with the same alpha value, but different…","as_bytes_mut","GrayAlpha","ComponentSlice","ComponentBytes","ComponentMap","FromSlice","arc_swap","from_pointee","arc_swap::cache","arc_swap::gen_lock","atomicusize","choose_shard","Increments the reference count by one.","Decrements the reference count by one.","LockStorage","ArcSwapAny","PrivateUnsharded","PrivateSharded","mutexguard","trylockresult","rwlockreadguard","rwlockwriteguard","waittimeoutresult","WaitTimeoutResult","MutexGuard","TryLockError","RwLockReadGuard","RwLockWriteGuard","InsertGuard","ExtendGuard","timererror","jitterrng","TimerError","JitterRng","An owning reference.","Typedef of a owning reference that uses a…","Typedef of a mutable owning reference that uses a…","The type of handle to be encapsulated by the OwningHandle.","Given an appropriately-long-lived pointer to ourselves,…","owningref","Creates a new owning reference from a owner initialized to…","new_assert_stable_address","Like `new`, but doesn’t require `O` to implement the…","owningrefmut","map_owner","Converts `self` into a new owning reference with a…","map_owner_box","Converts `self` into a new owning reference where the…","erase_owner","Erases the concrete base type of the owner with a trait…","A reference to the underlying owner.","into_owner","Discards the reference and retrieves the owner.","Create a new OwningHandle. The provided callback will be…","as_owner","IntoErased","ToHandleMut","OwningRef","OwningRefMut","OwningHandle","An unsafe marker trait for types that deref to a stable…","An unsafe marker trait for types where clones deref to the…","downcast_ref_unchecked","Returns a reference to the contained value, assuming that…","downcast_mut_unchecked","Returns a mutable reference to the contained value,…","downcast_unchecked","Returns a the contained value, assuming that it is of type…","unsafeany","UnsafeAnyExt","UnsafeAny","compare_and_swap","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","fetch_or","crossbeam_utils","Pads and aligns a value to the length of a cache line.","lockresult","shardedlockreadguard","try_write","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","crossbeam_utils::thread","atomiccell","cachepadded","shardedlock","unparker","waitgroup","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","poll_lock","lockguard","tokio_sync","poll_ready","Closes the receiving half of a channel, without dropping it.","try_send","unboundedtrysenderror","channel","RecvError","tokio_sync::oneshot","Check if the associated [`Receiver`] handle has been…","tryrecverror","semaphore","acquireerror","tryacquireerror","A synchronization primitive for task notification.","Create an `AtomicTask` initialized with the given `Task`","atomictask","Registers the current task to be notified on calls to…","register_task","Registers the provided task to be notified on calls to…","Notifies the task that last called `register`.","tokio_sync::watch","recverror","poll_close","tokio_sync::lock","tokio_sync::mpsc","tokio_sync::mpsc::error","tokio_sync::oneshot::error","tokio_sync::semaphore","tokio_sync::task","tokio_sync::watch::error","Get the inner value.","Semaphore","TryAcquireError","LockGuard","UnboundedSendError","UnboundedTrySendError","UnboundedRecvError","TryRecvError","AcquireError","duration","systemtime","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`","rfc3339timestamp","formattedduration","timestamp","stdduration","DurationError","TimestampError","FormattedDuration","Timestamp","Rfc3339Timestamp","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","statvfs64","if_nameindex","ipv6_mreq","itimerval","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_vm","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","siginfo_t","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","in6_addr","sigset_t","timezone","fpos64_t","proc_macro2","tokenstream","delimiter","set_span","Creates a new suffixed integer literal with the specified…","literal","Creates a new unsuffixed integer literal with the…","proc_macro2::token_stream","tokentree","from_str","TokenTree","Delimiter","TokenStream","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_u128","read_uint","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_i128","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","read_u48","Reads an unsigned 48 bit integer from the underlying reader.","read_i48","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","read_int","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","read_i8_into","Reads a sequence of signed 8 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","rand_isaac","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","Create an ISAAC random number generator using an `u64` as…","generate","Refills the output buffer, `results`. See also the…","isaacarray","Isaac64Rng","Isaac64Core","IsaacCore","Hc128Core","XorShiftRng","Marker type which indicates that the Guard type for a lock…","Returns a mutable reference to the underlying data.","Attempts to acquire this lock until a timeout is reached.","mappedmutexguard","Temporarily unlocks the mutex to execute the given function.","Makes a new `MappedMutexGuard` for a component of the…","Attempts to make a new `MappedMutexGuard` for a component…","unlock_fair","Unlocks the mutex using a fair unlock protocol.","Consumes this mutex, returning the underlying data.","try_lock","Attempts to acquire this lock.","reentrantmutexguard","force_unlock","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","force_unlock_fair","try_lock_for","try_lock_until","reentrantmutex","mappedreentrantmutexguard","unlocked_fair","Temporarily yields the mutex to a waiting thread if there…","Makes a new `MappedReentrantMutexGuard` for a component of…","Attempts to make a new `MappedReentrantMutexGuard` for a…","try_read","Attempts to acquire this `RwLock` with shared read access…","Attempts to acquire this `RwLock` with exclusive write…","Locks this `RwLock` with shared read access, blocking the…","Attempts to acquire this `RwLock` with shared read access.","rwlockupgradablereadguard","Attempts to acquire this `RwLock` with upgradable read…","mappedrwlockreadguard","unlocked","Temporarily unlocks the `RwLock` to execute the given…","Returns a reference to the original reader-writer lock…","try_map","mappedrwlockwriteguard","Unlocks the `RwLock` using a fair unlock protocol.","Temporarily yields the `RwLock` to a waiting thread if…","downgrade","Tries to atomically upgrade an upgradable read lock into a…","Make a new `MappedRwLockReadGuard` for a component of the…","Attempts to make a new `MappedRwLockReadGuard` for a…","Make a new `MappedRwLockWriteGuard` for a component of the…","Attempts to make a new `MappedRwLockWriteGuard` for a…","Atomically downgrades a write lock into a read lock…","Duration","GuardMarker","Marker type which determines whether a lock guard should…","Duration type used for `try_lock_for`.","Instant type used for `try_lock_until`.","Attempts to acquire a shared lock until a timeout is…","Attempts to acquire an exclusive lock until a timeout is…","Additional methods for RwLocks which support recursive…","Additional methods for RwLocks which support atomically…","try_upgrade","Additional methods for RwLocks which support upgradable…","downgrade_to_upgradable","Attempts to acquire an upgradable lock until a timeout is…","try_upgrade_for","Attempts to upgrade an upgradable lock to an exclusive…","try_upgrade_until","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked `RwLock`.","bump_shared","Temporarily yields a shared lock to a waiting thread if…","bump_exclusive","Temporarily yields an exclusive lock to a waiting thread…","bump_upgradable","Temporarily yields an upgradable lock to a waiting thread…","MappedMutexGuard","ReentrantMutex","ReentrantMutexGuard","MappedReentrantMutexGuard","RwLockUpgradableReadGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","RawMutexFair","RawMutexTimed","GetThreadId","RawRwLock","RawRwLockFair","RawRwLockDowngrade","RawRwLockTimed","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockUpgrade","RawRwLockUpgradeFair","RawRwLockUpgradeDowngrade","RawRwLockUpgradeTimed","GuardSend","GuardNoSend","A view onto an occupied entry in a TypeMap.","A view onto an unoccupied entry in a TypeMap.","A marker trait meant for use as the `A` parameter in…","Create a new, empty TypeMap.","OccupiedEntry","entererror","park_timeout","Executor","tokio_executor","spawnerror","Provides a best effort hint to whether or not `spawn` will…","tokio_executor::park","defaultexecutor","SpawnError","DefaultExecutor","ParkThread","TypedExecutor","EnterError","ParkError","UnparkThread","A specialized byte slice type for performing vectored I/O…","tcpbuilder","tcplistener","tcpstream","socketaddr","udpbuilder","Binds this socket to the specified address.","udpsocket","Sets the value for the `IP_TTL` option on this socket.","Sets the value for the `IPV6_V6ONLY` option on this socket.","reuse_address","Set value for the `SO_REUSEADDR` option on this socket.","get_reuse_address","Check the `SO_REUSEADDR` option on this socket.","take_error","Get the value of the `SO_ERROR` option on this socket.","reuse_port","Set value for the `SO_REUSEPORT` option on this socket.","get_reuse_port","Check the value of the `SO_REUSEPORT` option on this socket.","Sets whether keepalive messages are enabled to be sent on…","Returns whether keepalive messages are enabled on this…","Sets the `SO_RCVTIMEO` option for this socket.","Gets the value of the `SO_RCVTIMEO` option for this socket.","Sets the `SO_SNDTIMEO` option for this socket.","Gets the value of the `SO_SNDTIMEO` option for this socket.","Gets the value of the `IP_TTL` option for this socket.","set_only_v6","Gets the value of the `IPV6_V6ONLY` option for this socket.","set_nonblocking","set_linger","Sets the linger duration of this socket by setting the…","reads the linger duration for this socket by getting the…","set_recv_buffer_size","Sets the value of the `SO_RCVBUF` option on this socket.","recv_buffer_size","Gets the value of the `SO_RCVBUF` option on this socket.","set_send_buffer_size","Sets the value of the `SO_SNDBUF` option on this socket.","send_buffer_size","Gets the value of the `SO_SNDBUF` option on this socket.","ipv4addr","set_read_timeout_ms","set_read_timeout","read_timeout_ms","read_timeout","set_write_timeout_ms","set_write_timeout","write_timeout_ms","write_timeout","tosocketaddrs","as_raw_fd","from_raw_fd","TcpBuilder","UdpBuilder","UnixTcpBuilderExt","UnixUdpBuilderExt","TcpStreamExt","TcpListenerExt","UdpSocketExt","broadcast","A wrapper for generating floating point numbers uniformly…","rand::distributions","ChaChaRng","A random number generator that uses the ChaCha20 algorithm…","A random number generator that uses the ISAAC algorithm[1].","A random number generator that uses ISAAC-64[1], the…","new_unseeded","xorshiftrng","partialord","samplerange","rand::distributions::range","rand::distributions::gamma","rand::distributions::normal","rand::distributions::exponential","rand::jitter","rand::read","rand::reseeding","ind_sample","chacharng","isaac64rng","rand::os","reseedingrng","isaacrng","Create an ISAAC random number generator with a seed. This…","chisquared","standardnormal","lognormal","reseedwithdefault","threadrng","SampleRange","ChiSquared","StandardNormal","LogNormal","IndependentSample","RandSample","WeightedChoice","ReseedingRng","IsaacRng","Generator","AsciiGenerator","ThreadRng","ReseedWithDefault","Fill `dest` with random data.","The ISAAC random number generator.","Non-physical true random number generator based on timing…","A true random number generator based on jitter in the CPU…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","set_rounds","Configures how many rounds are used to generate each…","test_timer","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","A random number generator that retrieves randomness…","Create a new `OsRng`.","parseerror","Returns the current value of a high-resolution performance…","outofrangeerror","precisetime","Returns a TmFmt that outputs according to the `asctime`…","Formats the time according to the format string.","steadytime","The resulting Tm is in UTC.","ParseError","PreciseTime","SteadyTime","OutOfRangeError","For use by `ToTokens` implementations.","into_token_stream","Convert `self` directly into a `TokenStream` object.","TokenStreamExt","Lcg64Xsh32","Mcg128Xsl64","The ChaCha random number generator.","chachacore","ChaChaCore","A cryptographically secure random number generator that…","udev_hwdb","udev_list_entry","udev_device","udev_monitor","udev_enumerate","udev_queue","num_traits","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","MulAddAssign","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","checked_add","checked_sub","ENAMETOOLONG","EDESTADDRREQ","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EPFNOSUPPORT","EAFNOSUPPORT","EADDRNOTAVAIL","ENETUNREACH","ECONNABORTED","ETOOMANYREFS","ECONNREFUSED","EHOSTUNREACH","EINPROGRESS","EMEDIUMTYPE","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","ENOTRECOVERABLE","EWOULDBLOCK","errnosentinel","F_DUPFD_CLOEXEC","F_ADD_SEALS","F_GET_SEALS","F_GETPIPE_SZ","F_SETPIPE_SZ","splicefflags","AT_SYMLINK_NOFOLLOW","AT_NO_AUTOMOUNT","AT_EMPTY_PATH","O_DIRECTORY","O_LARGEFILE","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","intersects","sealflag","from_bits","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_ZERO_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_UNSHARE_RANGE","fallocateflags","interfaceaddressiterator","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","moduleinitflags","contains","O_NONBLOCK","deletemoduleflags","MS_SYNCHRONOUS","MS_MANDLOCK","MS_NODIRATIME","MS_POSIXACL","MS_UNBINDABLE","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_RMT_MASK","mntflags","mq_oflag","FD_CLOEXEC","if_nametoindex","IFF_BROADCAST","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_PROMISC","IFF_ALLMULTI","IFF_MULTICAST","IFF_PORTSEL","IFF_AUTOMEDIA","IFF_DYNAMIC","IFF_LOWER_UP","IFF_DORMANT","interfaceflags","eventflags","posix_openpt","ptymaster","Get the name of the slave pseudoterminal (see `ptsname(3)`)","openptyresult","sched_setaffinity","cloneflags","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWCGROUP","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","aiocancelstat","aio_suspend","sigevnotify","lioopcode","aio_return","epoll_create","epoll_create1","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLEXCLUSIVE","EPOLLWAKEUP","EPOLLONESHOT","epollflags","EPOLL_CLOEXEC","epollcreateflags","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","efdflags","MFD_CLOEXEC","MFD_ALLOW_SEALING","memfdcreateflag","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_HWPOISON","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_SOFT_OFFLINE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","PROT_GROWSDOWN","PROT_GROWSUP","protflags","MAP_PRIVATE","MAP_ANONYMOUS","MAP_GROWSDOWN","MAP_DENYWRITE","Compatibility flag. Ignored.","MAP_EXECUTABLE","MAP_NORESERVE","MAP_POPULATE","MAP_NONBLOCK","MAP_HUGETLB","mapflags","MS_INVALIDATE","MCL_CURRENT","mlockallflags","pthread_self","nix::sys","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_ATTACH","PTRACE_DETACH","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","addresstype","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","PTRACE_O_EXITKILL","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","quotatype","QIF_BLIMITS","QIF_ILIMITS","quotavalidflags","RB_HALT_SYSTEM","RB_POWER_OFF","RB_AUTOBOOT","RB_SW_SUSPEND","SIG_UNBLOCK","SIG_SETMASK","Use the given signal-catching function, which takes in the…","nix::sys::signal","nix::sys::signal::SigevNotify","pthread_sigmask","sigprocmask","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_RESETHAND","sigmaskhow","ssi_overrun","ssi_addr_lsb","ssi_syscall","ssi_call_addr","SFD_NONBLOCK","SFD_CLOEXEC","sfdflags","signalfd","msg_namelen","msg_control","msg_controllen","sa_family_t","sin6_family","sin6_flowinfo","sin6_scope_id","addressfamily","sockprotocol","Accept a connection on a socket","getsockopt","setsockopt","getpeername","getsockname","nix::sys::socket","Represents a socket option that can be accessed or set.…","SOCK_NONBLOCK","SOCK_CLOEXEC","sockflag","MSG_DONTWAIT","MSG_ERRQUEUE","MSG_CMSG_CLOEXEC","msgflags","ipv6addr","FollowSymlink","NoFollowSymlink","filestat","Change the access and modification times of a file.","ST_SYNCHRONOUS","ST_MANDLOCK","ST_IMMUTABLE","ST_NODIRATIME","Do not update access times on files","ST_RELATIME","fsblkcnt_t","fsfilcnt_t","_POSIX_VDISABLE","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcsendbreak","inputflags","outputflags","tcflag_t","controlflags","localflags","suseconds_t","process_vm_writev","process_vm_readv","from_mut_slice","waitpidflag","waitstatus","__WNOTHREAD","nix::unistd","The implementation supports the Non-Robust Mutex Priority…","The implementation supports the Robust Mutex Priority…","The implementation provides a C-language compilation…","PTHREAD_STACK_MIN","Change the ownership of the file at `path` to be owned by…","Replace the current process image with a new one (see…","Replace the current process image with a new one and…","sethostname","gethostname","Truncate a file to a specified length","Set the user ID","getgrouplist","pathconfvar","Generates a wrapper function for a \"bad\" ioctl that writes…","Generates a wrapper function for a \"bad\" ioctl that reads…","Generates a wrapper function for an ioctl that reads and…","nix::ifaddrs","nix::mqueue","nix::net::if_","nix::sys::aio","nix::sys::epoll","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","nix::sys::ptrace","nix::sys::quota","nix::sys::reboot","nix::sys::select","nix::sys::signalfd","nix::sys::socket::sockopt","nix::sys::stat","nix::sys::statvfs","nix::sys::sysinfo","nix::sys::termios","nix::sys::time","nix::sys::uio","nix::sys::utsname","nix::sys::wait","nix::ucontext","unixcredentials","ipmembershiprequest","ipv6membershiprequest","milliseconds","microseconds","nanoseconds","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","nix::fcntl","nix::mount","nix::sched","controlmessage","nix::errno","nix::kmod","nix::poll","aiofsyncmode","signaliterator","sighandler","netlinkaddr","fchmodatflags","utimensatflags","forkresult","fchownatflags","mmapadvise","rebootmode","baudrate","specialcharacterindices","interfaceaddress","socktype","sysconfvar","nix::dir","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","sub_assign","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","nix::pty","ErrnoSentinel","SpliceFFlags","FallocateFlags","InterfaceAddress","ModuleInitFlags","DeleteModuleFlags","InterfaceFlags","OpenptyResult","AioFsyncMode","AioCancelStat","EpollCreateFlags","MemFdCreateFlag","MlockAllFlags","QuotaValidFlags","SigevNotify","NetlinkAddr","AddressFamily","SockProtocol","ControlMessage","UnixCredentials","IpMembershipRequest","Ipv6MembershipRequest","FchmodatFlags","UtimensatFlags","SpecialCharacterIndices","OutputFlags","ControlFlags","TimeValLike","RemoteIoVec","WaitPidFlag","FchownatFlags","PathconfVar","InterfaceAddressIterator","SignalIterator","CmsgIterator","IpAddMembership","IpDropMembership","Ipv6AddMembership","Ipv6DropMembership","IpMulticastTtl","IpMulticastLoop","ReceiveTimeout","SendTimeout","SocketError","PeerCredentials","TcpKeepIdle","RcvBufForce","SndBufForce","OriginalDst","ReceiveTimestamp","IpTransparent","from_slice","num_minutes","pollflags","The master port in a virtual pty pair","forkptyresult","sched_yield","Received version of…","ScmCredentials","Ipv4PacketInfo","IN_CLOSE_WRITE","IN_CLOSE_NOWRITE","IN_MOVED_FROM","IN_MOVED_TO","IN_DELETE_SELF","IN_MOVE_SELF","IN_Q_OVERFLOW","IN_DONT_FOLLOW","IN_ALL_EVENTS","addwatchflags","IN_NONBLOCK","initflags","watchdescriptor","accessflags","nix::sys::inotify","controlmessageowned","ForkptyResult","ControlMessageOwned","InotifyEvent","AddWatchFlags","AccessFlags","TcpCongestion","Ipv6RecvPacketInfo","AlgSetAeadAuthSize","WatchDescriptor","backtrace_state","`ByteOrder` describes types that can serialize integers as…","Reads an unsigned 16 bit integer from `buf`.","Reads an unsigned 24 bit integer from `buf`, stored in u32.","Reads an unsigned 32 bit integer from `buf`.","Reads an unsigned 48 bit integer from `buf`, stored in u64.","Reads an unsigned 64 bit integer from `buf`.","Reads an unsigned 128 bit integer from `buf`.","Writes an unsigned 16 bit integer `n` to `buf`.","Writes an unsigned 24 bit integer `n` to `buf`, stored in…","Writes an unsigned 32 bit integer `n` to `buf`.","Writes an unsigned 48 bit integer `n` to `buf`, stored in…","Writes an unsigned 64 bit integer `n` to `buf`.","Writes an unsigned 128 bit integer `n` to `buf`.","Reads a signed 16 bit integer from `buf`.","Reads a signed 24 bit integer from `buf`, stored in i32.","Reads a signed 32 bit integer from `buf`.","Reads a signed 48 bit integer from `buf`, stored in i64.","Reads a signed 64 bit integer from `buf`.","Reads a signed 128 bit integer from `buf`.","Writes a signed 16 bit integer `n` to `buf`.","Writes a signed 24 bit integer `n` to `buf`, stored in i32.","Writes a signed 32 bit integer `n` to `buf`.","Writes a signed 48 bit integer `n` to `buf`, stored in i64.","Writes a signed 64 bit integer `n` to `buf`.","Writes a signed 128 bit integer `n` to `buf`.","Reads unsigned 16 bit integers from `src` into `dst`.","Reads unsigned 32 bit integers from `src` into `dst`.","Reads unsigned 64 bit integers from `src` into `dst`.","Reads unsigned 128 bit integers from `src` into `dst`.","Reads signed 16 bit integers from `src` to `dst`.","Reads signed 32 bit integers from `src` into `dst`.","Reads signed 64 bit integers from `src` into `dst`.","Reads signed 128 bit integers from `src` into `dst`.","Writes unsigned 16 bit integers from `src` into `dst`.","Writes unsigned 32 bit integers from `src` into `dst`.","Writes unsigned 64 bit integers from `src` into `dst`.","Writes unsigned 128 bit integers from `src` into `dst`.","write_i16_into","Writes signed 16 bit integers from `src` into `dst`.","write_i32_into","Writes signed 32 bit integers from `src` into `dst`.","write_i64_into","Writes signed 64 bit integers from `src` into `dst`.","write_i128_into","Writes signed 128 bit integers from `src` into `dst`.","write_f32_into","Writes IEEE754 single-precision (4 bytes) floating point…","write_f64_into","Writes IEEE754 double-precision (8 bytes) floating point…","Converts the given slice of unsigned 16 bit integers to a…","Converts the given slice of unsigned 32 bit integers to a…","Converts the given slice of unsigned 64 bit integers to a…","Converts the given slice of unsigned 128 bit integers to a…","from_slice_i16","Converts the given slice of signed 16 bit integers to a…","from_slice_i32","Converts the given slice of signed 32 bit integers to a…","from_slice_i64","Converts the given slice of signed 64 bit integers to a…","from_slice_i128","Converts the given slice of signed 128 bit integers to a…","Converts the given slice of IEEE754 single-precision (4…","Converts the given slice of IEEE754 double-precision (8…","Defines big-endian serialization.","Defines little-endian serialization.","Gets a reference to the underlying `Buf`.","Gets a mutable reference to the underlying `Buf`.","Gets an unsigned 32 bit integer from `self` in the…","Gets an IEEE754 single-precision (4 bytes) floating point…","Gets an IEEE754 double-precision (8 bytes) floating point…","Transfer bytes into `self` from `src` and advance the…","Writes an IEEE754 single-precision (4 bytes) floating…","Writes an IEEE754 double-precision (8 bytes) floating…","Splits the bytes into two at the given index.","bytesmut","Shortens the buffer, keeping the first `len` bytes and…","Shortens the buffer, dropping the first `cnt` bytes and…","Clears the buffer, removing all data.","Appends given bytes to this object.","Read bytes from a buffer.","Returns the number of bytes between the current position…","Returns a slice starting at the current position and of…","Fills `dst` with potentially multiple slices starting at…","Advance the internal cursor of the Buf","has_remaining","bytes::buf","Returns true if there are any more bytes to consume","copy_to_slice","Copies bytes from `self` into `dst`.","Gets an unsigned 8 bit integer from `self`.","Gets a signed 8 bit integer from `self`.","Gets an unsigned 16 bit integer from `self` in big-endian…","Gets an unsigned 16 bit integer from `self` in…","Gets a signed 16 bit integer from `self` in big-endian…","Gets a signed 16 bit integer from `self` in little-endian…","Gets a signed 32 bit integer from `self` in big-endian…","Gets a signed 32 bit integer from `self` in little-endian…","Gets an unsigned 64 bit integer from `self` in big-endian…","Gets an unsigned 64 bit integer from `self` in…","Gets a signed 64 bit integer from `self` in big-endian…","Gets a signed 64 bit integer from `self` in little-endian…","get_uint_be","Gets an unsigned n-byte integer from `self` in big-endian…","get_uint_le","Gets an unsigned n-byte integer from `self` in…","Gets a signed n-byte integer from `self` in big-endian…","Gets a signed n-byte integer from `self` in little-endian…","Transforms a `Buf` into a concrete buffer.","Creates an adaptor which will read at most `limit` bytes…","Creates an adaptor which will chain this buffer with…","Creates a \"by reference\" adaptor for this instance of `Buf`.","Creates an adaptor which implements the `Read` trait for…","Returns an iterator over the bytes contained by the buffer.","A trait for values that provide sequential write access to…","remaining_mut","Returns the number of bytes that can be written from the…","advance_mut","Advance the internal cursor of the BufMut","has_remaining_mut","Returns true if there is space in `self` for more bytes.","Returns a mutable slice starting at the current BufMut…","bytes_vec_mut","Fills `dst` with potentially multiple mutable slices…","Writes an unsigned 8 bit integer to `self`.","Writes a signed 8 bit integer to `self`.","Writes an unsigned 16 bit integer to `self` in big-endian…","Writes an unsigned 16 bit integer to `self` in…","Writes a signed 16 bit integer to `self` in big-endian…","Writes a signed 16 bit integer to `self` in little-endian…","Writes an unsigned 32 bit integer to `self` in big-endian…","Writes an unsigned 32 bit integer to `self` in…","Writes a signed 32 bit integer to `self` in big-endian…","Writes a signed 32 bit integer to `self` in little-endian…","Writes an unsigned 64 bit integer to `self` in the…","Writes an unsigned 64 bit integer to `self` in…","Writes a signed 64 bit integer to `self` in the big-endian…","Writes a signed 64 bit integer to `self` in little-endian…","put_uint_be","Writes an unsigned n-byte integer to `self` in big-endian…","put_uint_le","Writes an unsigned n-byte integer to `self` in the…","Writes a signed n-byte integer to `self` in big-endian…","Writes a signed n-byte integer to `self` in little-endian…","Creates a \"by reference\" adaptor for this instance of…","Creates an adaptor which implements the `Write` trait for…","Conversion into a `Buf`","The `Buf` type that `self` is being converted into","Creates a `Buf` from a value.","remaining","bytes_mut","bytes_vec","get_u16_be","get_u16_le","get_i16_be","get_i16_le","get_u32_be","get_u32_le","get_i32_be","get_i32_le","get_u64_be","get_u64_le","get_i64_be","get_i64_le","get_int_be","get_int_le","get_f32_be","get_f32_le","get_f64_be","get_f64_le","put_slice","put_u16_be","put_u16_le","put_i16_be","put_i16_le","put_u32_be","put_u32_le","put_i32_be","put_i32_le","put_u64_be","put_u64_le","put_i64_be","put_i64_le","put_int_be","put_int_le","put_f32_be","put_f32_le","put_f64_be","put_f64_le","A word of Rust code, which may be a keyword or legal…","paren_token","bracket_token","colon_token","Returned by `Generics::split_for_impl`.","brace_token","lifetimes","const_token","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A box expression: `box f`.","A placement expression: `place <- value`.","A slice literal expression: `[a, b, c, d]`.","A function call expression: `invoke(a, b)`.","A method call expression: `x.foo::<T>(a, b)`.","A tuple expression: `(a, b, c, d)`.","A binary operation: `a + b`, `a * b`.","A unary operation: `!x`, `*x`.","A literal in place of an expression: `1`, `\"foo\"`.","A cast expression: `foo as f64`.","A type ascription expression: `foo: f64`.","A `let` guard: `let Some(x) = opt`.","An `if` expression with an optional `else` block: `if expr…","A while loop: `while expr { ... }`.","A for loop: `for pat in expr { ... }`.","Conditionless loop: `loop { ... }`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A closure expression: `|a, b| a + b`.","An unsafe block: `unsafe { ... }`.","A blocked scope: `{ ... }`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","Access of a named struct field (`obj.k`) or unnamed tuple…","A square bracketed indexing expression: `vector[2]`.","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A path like `std::mem::replace` possibly containing…","A referencing operation: `&a` or `&mut a`.","A `break`, with an optional label to break and an optional…","A `continue`, with an optional label.","A `return`, with an optional value to be returned.","A macro invocation expression: `format!(\"{}\", q)`.","A struct literal expression: `Point { x: 1, y: 1 }`.","An array literal constructed from one repeated element:…","A parenthesized expression: `(a + b)`.","An expression contained within invisible delimiters.","A try-expression: `expr?`.","An async block: `async { ... }`.","A try block: `try { ... }`.","A yield expression: `yield expr`.","Tokens in expression position not interpreted by Syn.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","A raw token literal not interpreted by Syn, possibly…","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","A tagged union input to a `proc_macro_derive` macro.","A dynamically sized slice type: `[T]`.","A fixed size array type: `[T; n]`.","A raw pointer type: `*const T` or `*mut T`.","A reference type: `&'a T` or `&'a mut T`.","A bare function type: `fn(usize) -> bool`.","The never type: `!`.","A tuple type: `(A, B, C, String)`.","A path like `std::slice::Iter`, optionally qualified with…","A trait object type `Bound1 + Bound2 + Bound3` where…","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","A parenthesized type equivalent to the inner type.","A type contained within invisible delimiters.","Indication that a type should be inferred by the compiler:…","A macro in the type position.","Tokens in type position not interpreted by Syn.","An associated type bound: `Iterator<Item: Display>`.","parsestream","floatsuffix","Parse the tokens within the macro invocation's delimiters…","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","token_stream","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","A trait that can provide the `Span` of the complete…","whereclause","Syntax tree traversal to walk a shared borrow of a syntax…","visit_angle_bracketed_generic_arguments","anglebracketedgenericarguments","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg_name","barefnargname","visit_bin_op","visit_binding","visit_bound_lifetimes","boundlifetimes","visit_const_param","visit_constraint","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","deriveinput","visit_expr_binary","visit_expr_call","visit_expr_cast","visit_expr_field","visit_expr_index","visit_expr_lit","visit_expr_paren","visit_expr_path","visit_expr_unary","visit_expr_verbatim","exprverbatim","visit_field","visit_fields","visit_fields_named","fieldsnamed","visit_fields_unnamed","fieldsunnamed","visit_generic_argument","genericargument","visit_generic_param","genericparam","visit_generics","visit_index","visit_lifetime","lifetime","visit_lifetime_def","lifetimedef","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_lit_verbatim","litverbatim","visit_macro","visit_macro_delimiter","macrodelimiter","visit_member","visit_meta_list","visit_meta_name_value","metanamevalue","visit_nested_meta","visit_parenthesized_generic_arguments","parenthesizedgenericarguments","visit_path_arguments","patharguments","visit_path_segment","pathsegment","visit_predicate_eq","predicateeq","visit_predicate_lifetime","predicatelifetime","visit_predicate_type","predicatetype","visit_qself","visit_return_type","visit_trait_bound","visit_trait_bound_modifier","traitboundmodifier","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","typeimpltrait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","typeparambound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","typereference","visit_type_slice","visit_type_trait_object","typetraitobject","visit_type_tuple","visit_type_verbatim","typeverbatim","visit_un_op","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visrestricted","visit_visibility","visit_where_clause","visit_where_predicate","wherepredicate","visit_ident","Error returned when a Syn parser cannot parse the input…","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","Parse a string of Rust code into the chosen syntax tree…","parse_terminated","Parses zero or more occurrences of `T` separated by…","punctuated","Triggers an error at the current position of the parse…","The result of a Syn parser.","syn::buffer","syn::punctuated","syn::parse","syn::token","nestedmeta","visibility","exprbinary","constparam","traitbound","litbytestr","datastruct","typebarefn","returntype","constraint","vispublic","exprinplace","exprmethodcall","exprunary","exprforloop","exprclosure","exprassignop","exprfield","exprindex","exprreference","exprcontinue","exprparen","exprtryblock","typeparam","dataunion","typeslice","typearray","typenever","typetuple","typeparen","typegroup","typeinfer","typemacro","underscore","existential","attrstyle","exprarray","exprtuple","exprwhile","exprmatch","exprunsafe","exprblock","exprassign","exprrange","exprbreak","exprreturn","exprmacro","exprstruct","exprrepeat","exprgroup","exprasync","expryield","generics","implgenerics","typegenerics","turbofish","intsuffix","barefnarg","to_tokens","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","attribute","visit_data","dataenum","visit_expr","exprcall","exprcast","exprpath","visit_meta","metalist","visit_path","visit_type","typepath","viscrate","visit_span","Looks at the next token in the parse stream to determine…","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","ExprVerbatim","BoundLifetimes","LifetimeDef","PredicateEq","PredicateLifetime","PredicateType","WhereClause","LitVerbatim","DeriveInput","TypeImplTrait","TypeReference","TypeTraitObject","TypeVerbatim","AngleBracketedGenericArguments","Constraint","ParenthesizedGenericArguments","PathSegment","GenericParam","TraitBoundModifier","TypeParamBound","WherePredicate","FloatSuffix","MacroDelimiter","BareFnArgName","GenericArgument","PathArguments","Existential","TypeGenerics","TokenBuffer","Punctuated","Speculative","ParseBuffer","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprInPlace","ExprMethodCall","ExprReference","ExprTryBlock","ImplGenerics","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","weightederror","weightedindex","sample_iter","choose_multiple","Collects `amount` values at random from the iterator into…","distribution","Fill `dest` entirely with random bytes (uniform value…","Shuffle a mutable slice in place.","rand::distributions::uniform","rand::rngs","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","rand::seq","unitspheresurface","indexvecintoiter","WeightedError","SampleUniform","UniformSampler","SampleBorrow","WeightedIndex","UnitSphereSurface","Distribution","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","General failure; there may be a chance of recovery on retry.","A transient failure which likely can be resolved or worked…","Not ready yet: recommended to try again a little later.","Error type of random number generators","The error kind","The error message","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` entirely with random data.","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","Create a new instance, with specified kind, message, and a…","Take the cause, if any. This allows the embedded cause to…","An error that can occur when [`JitterRng::test_timer`]…","Adds a filter that matches only devices with the given…","match_subsystem","Adds a filter that matches events for devices with the…","monitorsocket","eventtype","MonitorSocket","Attribute","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Useful functions for signed numbers (i.e. numbers that can…","is_positive","Returns true if the number is positive and false if the…","is_negative","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","checked_mul","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","checked_div","Divides two numbers, checking for underflow, overflow and…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedShl","CheckedShr","Saturating","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","A wrapper around Floats providing an implementation of Ord…","An error indicating an attempt to construct NotNan from a…","Get the value out.","floatisnan","parsenotnanerror","orderedfloat","from_isize","from_usize","from_str_radix","OrderedFloat","ParseNotNanError","Unexpected","InvalidPath","direction","pinpoller","bytesorwidestring","symbolname","symbol_address","backtraceframe","backtrace","BytesOrWideString","BacktraceFrame","BacktraceSymbol","discriminant","Runs the passed-in function once for each bound field,…","referenced_ty_params","Returns a list of the type parameters which are referenced…","Returns a reference to the underlying `syn` AST node which…","Updates the `BindStyle` for each of the passed-in fields…","binding_name","Updates the binding name for each fo the passed-in fields…","NOTE: This methods' features are superceded by…","addbounds","bindinginfo","variantast","variantinfo","BindingInfo","VariantInfo","InvalidInput","serialport","available_ports","serialportinfo","serialportsettings","flow_control","flowcontrol","Returns the corresponding `ErrorKind` for this error.","serialport::posix","set_baud_rate","set_flow_control","set_data_bits","set_stop_bits","set_timeout","write_request_to_send","write_data_terminal_ready","read_clear_to_send","read_data_set_ready","read_ring_indicator","read_carrier_detect","bytes_to_read","bytes_to_write","clearbuffer","databits","stopbits","usbportinfo","serialporttype","into_raw_fd","SerialPortSettings","UsbPortInfo","SerialPortInfo","FlowControl","ClearBuffer","SerialPortType","Makes a new `FixedOffset` for the Eastern Hemisphere with…","fixedoffset","Makes a new `FixedOffset` for the Western Hemisphere with…","Returns a `Date` which corresponds to the current date.","Returns a `DateTime` which corresponds to the current date.","Makes a new `Date` from year, month, day and the current…","Makes a new `Date` from year, day of year (DOY or…","localresult","Makes a new `Date` from ISO week date (year and week…","Makes a new `DateTime` from the number of non-leap seconds…","Makes a new `DateTime` from the number of non-leap…","datetime","naivedatetime","naivedate","Makes a new `DateTime` from the current date, hour,…","Makes a new `NaiveDate` from the calendar date (year,…","Makes a new `NaiveDate` from the ordinal date (year and…","Makes a new `NaiveDate` from the ISO week date (year, week…","Makes a new `NaiveDate` from the number of days since…","Parses a string with the specified format string and…","parseresult","and_hms_opt","Makes a new `NaiveDateTime` from the current date, hour,…","and_hms_milli_opt","and_hms_micro_opt","and_hms_nano_opt","Makes a new `NaiveDate` for the next calendar date.","Makes a new `NaiveDate` for the previous calendar date.","oldduration","delayedformat","strftimeitems","Makes a new `NaiveTime` from hour, minute and second.","naivetime","Makes a new `NaiveTime` from hour, minute, second and…","Makes a new `NaiveTime` from the number of seconds since…","parse_from_str","signed_duration_since","format_with_items","Makes a new `NaiveDateTime` corresponding to a UTC date…","timestamp_millis","timestamp_nanos","checked_add_signed","checked_sub_signed","Formats the combined date and time with the specified…","Makes a new `DateTime` from the current date and given…","Makes a new `DateTime` from the current date, hour, minute…","and_hms_milli","and_hms_micro","and_hms_nano","Makes a new `Date` for the next date.","Makes a new `Date` for the prior date.","Formats the date with the specified format string. See the…","Retrieves a date component.","timestamp_subsec_millis","timestamp_subsec_micros","timestamp_subsec_nanos","Retrieves an associated offset from UTC.","Retrieves an associated time zone.","with_timezone","Changes the associated time zone. This does not change the…","Adds given `Duration` to the current date and time.","Subtracts given `Duration` from the current date and time.","naive_local","Week number, where the week 1 starts at the first Sunday…","Week number, where the week 1 starts at the first Monday…","The number of non-leap seconds since the midnight UTC on…","Offset from the local time to UTC (`+09:00` or `-04:00` or…","Internal uses only.","Returns a parsed timezone-aware date and time out of given…","chrono::format","Makes a new `DelayedFormat` value out of local date and…","chrono::offset","chrono::naive","chrono::format::strftime","from_offset","offset_from_local_date","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_datetime","from_local_date","from_local_datetime","from_utc_date","from_utc_datetime","Returns the year number in the calendar date.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of week.","with_month0","Makes a new `NaiveDate` with the month number (starting…","Makes a new `NaiveDate` with the day of month (starting…","with_ordinal","with_ordinal0","Makes a new `NaiveDate` with the day of year (starting…","with_month","Makes a new `NaiveDateTime` with the month number…","Makes a new `NaiveDateTime` with the day of month…","Makes a new `NaiveDateTime` with the day of year (starting…","with_year","with_day0","Returns the hour number from 0 to 23.","Returns the minute number from 0 to 59.","Returns the second number from 0 to 59.","nanosecond","Returns the number of nanoseconds since the whole non-leap…","with_minute","with_second","with_nanosecond","num_seconds_from_midnight","Returns the number of non-leap seconds past the last…","with_hour","secondsformat","Convert this `DateTime<Utc>` instance into a…","Convert this `DateTime<FixedOffset>` instance into a…","Convert this `DateTime<Local>` instance into a…","internalfixed","parseweekdayerror","add_assign","SecondsFormat","LocalResult","FixedOffset","NaiveDateTime","StrftimeItems","DelayedFormat","SubsecRound","ParseWeekdayError","InternalNumeric","InternalFixed","ISO 8601 time duration with nanosecond precision. This…","Makes a new `Duration` with given number of weeks.…","Makes a new `Duration` with given number of days.…","Makes a new `Duration` with given number of hours.…","Makes a new `Duration` with given number of minutes.…","Makes a new `Duration` with given number of seconds.…","Makes a new `Duration` with given number of milliseconds.","Makes a new `Duration` with given number of microseconds.","Makes a new `Duration` with given number of nanoseconds.","Runs a closure, returning the duration of time it took to…","Returns the total number of whole weeks in the duration.","Returns the total number of whole days in the duration.","Returns the total number of whole hours in the duration.","Returns the total number of whole minutes in the duration.","Returns the total number of whole seconds in the duration.","Returns the total number of whole milliseconds in the…","Returns the total number of whole microseconds in the…","Returns the total number of whole nanoseconds in the…","Add two durations, returning `None` if overflow occurred.","Subtract two durations, returning `None` if overflow…","The minimum possible `Duration`: `i64::MIN` milliseconds.","The maximum possible `Duration`: `i64::MAX` milliseconds.","A duration where the stored seconds and nanoseconds are…","Returns `true` if the duration equals `Duration::zero()`.","Creates a `time::Duration` object from `std::time::Duration`","Creates a `std::time::Duration` object from `time::Duration`","Equality comparisons based on floating point tolerances.","Used for specifying relative comparisons.","default_epsilon","The default tolerance to use when testing values that are…","default_max_relative","The default relative tolerance for testing values that are…","default_max_ulps","The default ULPs to tolerate when testing values that are…","A test for equality that uses a relative comparison if the…","The inverse of `ApproxEq::relative_eq`.","A test for equality that uses units in the last place…","The inverse of `ApproxEq::ulps_eq`.","The relative tolerance for testing values that are…","The ULPs to tolerate when testing values that are far-apart.","assert_ulps_ne","assert_relative_eq","assert_ulps_eq","assert_relative_ne","The first column of the matrix.","The second column of the matrix.","The third column of the matrix.","The x component of the vector.","The y component of the vector.","The z component of the vector.","The short constructor.","basefloat","Get the pointer to the first element of the array.","Get a mutable pointer to the first element of the array.","swap_elements","as_mut_ptr","Swap the elements at indices `i` and `j` in-place.","The distance between two values.","is_perpendicular","Returns `true` if the vector is perpendicular (at right…","Returns the squared magnitude.","The distance from the tail to the tip of the vector.","Returns the angle between two vectors in radians.","Returns a vector with the same direction, but with a…","normalize_to","Returns a vector with the same direction and a given…","Returns the result of linearly interpolating the magnitude…","Returns the vector projection of the current inner space…","Returns the middle point between two other points.","Returns the average position of all points in the slice.","replace_col","Replace a column in the array.","The [identity matrix]. Multiplying this matrix with…","Return the trace of this matrix. That is, the sum of the…","is_invertible","Test if this matrix is invertible.","is_identity","Test if this matrix is the identity matrix. That is, it is…","normalize","Return the angle, normalized to the range `[0, full_turn)`.","Return the angle rotated by half a turn.","Returns the interior bisector of the two angles.","Half of a full rotation.","A third of a full rotation.","A quarter of a full rotation.","A sixth of a full rotation.","Compute the cosecant of the angle.","Compute the cotangent of the angle.","Compute the secant of the angle.","Create a new matrix, providing values for each index.","Create a new matrix, providing columns.","from_angle_x","from_angle_y","from_angle_z","from_axis_angle","Create a homogeneous transformation matrix that will cause…","Create a homogeneous transformation matrix from a rotation…","Component-wise casting to another type","quaternion","Component-wise casting to another type.","Construct a new vector, using the provided values.","Perform the given operation on each field in the vector,…","A unit vector in the `x` direction.","A unit vector in the `y` direction.","A unit vector in the `z` direction.","Construct a new point, using the provided values.","Perform the given operation on each field in the point,…","rotate_point","cgmath::prelude","Rotate a point using this rotation, by converting it to…","Create a rotation from an angle around the `x` axis (pitch).","Create a rotation from an angle around the `y` axis (yaw).","Create a rotation from an angle around the `z` axis (roll).","inverse_transform_vector","Inverse transform a vector using this transform","concat_self","Combine this transform with another, in-place.","perspective","An array containing elements of type `Element`","Get the number of elements in the array type","from_value","Construct a vector from a single value, replicating it.","The sum of the elements of the array.","The product of the elements of the array.","ElementWise","Element-wise arithmetic operations. These are supplied for…","add_element_wise","sub_element_wise","mul_element_wise","div_element_wise","rem_element_wise","add_assign_element_wise","sub_assign_element_wise","mul_assign_element_wise","div_assign_element_wise","rem_assign_element_wise","VectorSpace","Vectors that can be added together and multiplied by…","The associated scalar.","MetricSpace","A type with a distance function between values.","The metric to be returned by the `distance` function.","Returns the squared distance.","Vectors that also have a dot (or inner) product.","Vector dot (or inner) product.","magnitude2","project_on","EuclideanSpace","Points in a Euclidean space with an associated space of…","The associated scalar over which the space is defined.","The associated space of displacement vectors.","The point at the origin of the Euclidean space.","Convert a displacement vector to a point.","Convert a point to a displacement vector.","This is a weird one, but its useful for plane calculations.","A column-major matrix of arbitrary dimensions.","The row vector of the matrix.","The column vector of the matrix.","The result of transposing the matrix","Get a row from this matrix by-value.","Swap two rows of this array.","swap_columns","Swap two columns of this array.","Swap the values at index `a` and `b`","Transpose this matrix, returning a new matrix.","SquareMatrix","A column-major major matrix where the rows and column…","The row/column vector of the matrix.","Create a new diagonal matrix using the supplied value.","from_diagonal","Create a matrix from a non-uniform scale","transpose_self","Transpose this matrix in-place.","determinant","Take the determinant of this matrix.","Return a vector containing the diagonal of this matrix.","Invert this matrix, returning a new matrix.…","is_diagonal","Test if this is a diagonal matrix. That is, every element…","is_symmetric","Test if this matrix is symmetric. That is, it is equal to…","Angles and their associated trigonometric functions.","A full rotation.","turn_div_2","turn_div_3","turn_div_4","turn_div_6","Compute the sine of the angle, returning a unitless ratio.","Compute the cosine of the angle, returning a unitless ratio.","Compute the tangent of the angle, returning a unitless…","Compute the sine and cosine of the angle, returning the…","Compute the arcsine of the ratio, returning the resulting…","Compute the arccosine of the ratio, returning the…","Compute the arctangent of the ratio, returning the…","A trait for a generic rotation. A rotation is a…","Create a rotation to a given direction with an 'up' vector.","between_vectors","Create a shortest rotation to transform vector 'a' into…","rotate_vector","Rotate a vector using this rotation.","Create a new rotation which \"un-does\" this rotation. That…","A two-dimensional rotation.","from_angle","Create a rotation by a given angle. Thus is a redundant…","A three-dimensional rotation.","Create a rotation using an angle around a given axis.","A trait representing an affine transformation that can be…","Create an identity transformation. That is, a…","Create a transformation that rotates a vector to look at…","transform_vector","Transform a vector using this transform.","transform_point","Transform a point using this transform.","Combine this transform with another, yielding a new…","inverse_transform","Create a transform that \"un-does\" this one.","distance2","swap_rows","transpose","full_turn","decomposed","Clone the elements of a 2-dimensional matrix into the…","perspectivefov","mul_assign","div_assign","rem_assign","iterator","The beginning of a chained equality expression, using a…","Replace the maximum relative value with the one specified.","The beginning of a chained equality expression, using an…","Replace the max ulps value with the one specified.","PerspectiveFov","Perspective","InnerSpace","magnitude","truncate","unparkresult","parking_lot_core","unparktoken","parkresult","parktoken","UnparkResult","UnparkToken","A type indicating whether a timed wait on a condition…","Waits on this condition variable for a notification,…","An RAII mutex guard returned by `MutexGuard::map`, which…","A mutual exclusion primitive useful for protecting shared…","An RAII implementation of a \"scoped lock\" of a mutex. When…","An RAII mutex guard returned by…","A mutex which can be recursively locked by a single thread.","An RAII implementation of a \"scoped lock\" of a reentrant…","An RAII read lock guard returned by…","An RAII write lock guard returned by…","A reader-writer lock","RAII structure used to release the shared read access of a…","RAII structure used to release the upgradable read access…","RAII structure used to release the exclusive write access…","nonzero_thread_id","lock_exclusive","try_lock_exclusive","unlock_exclusive","lock_shared","try_lock_shared","unlock_shared","unlock_shared_fair","unlock_exclusive_fair","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","lock_shared_recursive","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","lock_upgradable","try_lock_upgradable","unlock_upgradable","unlock_upgradable_fair","downgrade_upgradable","try_lock_upgradable_until","try_lock_upgradable_for","RawThreadId","set_override","unset_override","coloredstring","colored::control","bright_black","bright_green","bright_yellow","bright_blue","bright_magenta","bright_purple","bright_cyan","bright_white","on_bright_black","on_bright_red","on_bright_green","on_bright_yellow","on_bright_blue","on_bright_magenta","on_bright_purple","on_bright_cyan","on_bright_white","strikethrough","shouldcolorize","ShouldColorize","ColoredString","SHOULD_COLORIZE","Attempts to downcast this `Error` to a particular `Fail`…","Returns a reference to the underlying cause of this…","downcast_ref","downcast_mut","Attempts to downcast this failure to a concrete type by…","find_root_cause","iter_causes","Returns a iterator over all fails up the chain from the…","Deprecated alias to `find_root_cause`.","Backtrace","SyncFailure","Check for remaining elements after passing a…","deserialize","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","is_human_readable","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","Deserialize","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_i128","Hint that the `Deserialize` type is expecting an `i128`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_u128","Hint that the `Deserialize` type is expecting an `u128`…","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","A data structure that can be serialized into any data…","Serialize this value into the given Serde serializer.","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_i128","Serialize an `i128` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_u128","Serialize a `u128` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","serde::de::value","serde::de","visit_newtype_struct","visit_bytes","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","serde::ser","serialize_key","serialize_value","ignoredany","unexpected","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","VariantAccess","IntoDeserializer","Serializer","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","Serialize","levelfilter","setloggererror","recordbuilder","module_path","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","metadata","parselevelerror","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","ParseLevelError","serialize","arguments","NewtypeStruct","UnitVariant","NewtypeVariant","TupleVariant","StructVariant","serializererror","deserializererror","visit_bool","visit_string","visit_unit","visit_none","visit_some","deserializer","visit_byte_buf","into_deserializer","invalid_type","invalid_value","invalid_length","unknown_variant","unknown_field","missing_field","duplicate_field","DeserializerError","SerializerError","ValueVisitor","Extracts the array value if it is an array.","Extracts the table value if it is a table.","serializer","Historical versions of toml-rs accidentally allowed a…","toml::value","toml::map","toml::ser","datetimeparseerror","toml::de","DatetimeParseError","Ensures a value is in the entry by inserting the default…","or_insert_with","Ensures a value is in the entry by inserting the result of…","Removes all options represented by `other` from `self`.","Returns true if `self` is a superset of `other`.","Creates a new independently owned handle to the underlying…","local_addr","Sends data on the socket to the address previously bound…","A collection of readiness events.","reregister","deregister","register","mio::event","mio::unix","unixready","Registration","SetReadiness","TcpListener","set_nodelay","Sets the value of the `TCP_NODELAY` option on this socket.","Gets the value of the `TCP_NODELAY` option on this socket.","set_keepalive","set_broadcast","Sets the value of the `SO_BROADCAST` option for this socket.","Gets the value of the `SO_BROADCAST` option for this socket.","set_multicast_loop_v4","Sets the value of the `IP_MULTICAST_LOOP` option for this…","multicast_loop_v4","Gets the value of the `IP_MULTICAST_LOOP` option for this…","set_multicast_ttl_v4","Sets the value of the `IP_MULTICAST_TTL` option for this…","multicast_ttl_v4","Gets the value of the `IP_MULTICAST_TTL` option for this…","set_multicast_loop_v6","Sets the value of the `IPV6_MULTICAST_LOOP` option for…","multicast_loop_v6","Gets the value of the `IPV6_MULTICAST_LOOP` option for…","join_multicast_v4","Executes an operation of the `IP_ADD_MEMBERSHIP` type.","join_multicast_v6","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","leave_multicast_v4","Executes an operation of the `IP_DROP_MEMBERSHIP` type.","leave_multicast_v6","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","Receives data on the socket from the remote address to…","shutdown","try_clone","from_std","Creates a future which will read all the bytes associated…","tokio_io::io","allowstdio","read_to_end","prepare_uninitialized_buffer","Prepares an uninitialized buffer to be safe to pass to…","Attempt to read from the `AsyncRead` into `buf`.","Pull some bytes from this source into the specified…","Provides a `Stream` and `Sink` interface for reading and…","Helper method for splitting this read/write object into…","Attempt to write bytes from `buf` into the object.","Attempt to flush the object, ensuring that any buffered…","Write a `Buf` into this value, returning how many bytes…","deserializers","fileappenderbuilder","fileappender","log4rs::append","consoleappenderbuilder","Configuration for an appender.","rootbuilder","appenderbuilder","Returns the list of names of appenders that will be…","Adds an appender.","loggerbuilder","appenders","Adds appenders.","configbuilder","Consumes the `ConfigBuilder`, returning the `Config`.","log4rs::filter","log4rs::encode","log4rs::encode::writer","consolewriter","Returns a new `ConsoleWriter` that will write to standard…","log4rs::append::file","log4rs::append::console","log4rs::config","log4rs::filter::threshold","log4rs::file","cloneany","clone_any_send","clone_any_sync","clone_any_send_sync","log4rs::encode::pattern","log4rs::encode::writer::ansi","log4rs::encode::writer::console","log4rs::encode::writer::simple","set_style","patternencoder","appenderconfig","filterconfig","write_fmt","write_all","encoderconfig","AppenderConfig","FileAppender","FileAppenderBuilder","ConsoleAppender","ConsoleAppenderBuilder","RootBuilder","AppenderBuilder","LoggerBuilder","ConfigBuilder","FilterConfig","ThresholdFilter","Deserializable","Deserializers","EncoderConfig","PatternEncoder","ConsoleWriter","SimpleWriter","FileAppenderConfig","FileAppenderDeserializer","ConsoleAppenderConfig","ConsoleAppenderDeserializer","ThresholdFilterConfig","ThresholdFilterDeserializer","PatternEncoderConfig","PatternEncoderDeserializer","ConsoleWriterLock","mio_serial::unix","mio_serial","Returns a struct with the current port settings","Returns the current baud rate.","Returns the character size.","Returns the flow control mode.","Returns the parity-checking mode.","Returns the number of stop bits.","Applies all settings for a struct. This isn't guaranteed…","Sets the baud rate.","Sets the character size.","Sets the flow control mode.","Sets the parity-checking mode.","Sets the number of stop bits.","Sets the state of the RTS (Request To Send) control signal.","Writes to the Data Terminal Ready pin","Reads the state of the CTS (Clear To Send) control signal.","Reads the state of the Data Set Ready control signal.","Reads the state of the Ring Indicator control signal.","Reads the state of the Carrier Detect control signal.","Gets the number of bytes available to be read from the…","Get the number of bytes written to the output buffer,…","Discards all bytes from the serial driver's input buffer…","Attempts to clone the `SerialPort`. This allow you to…","An error type for serial port operations.","The kind of error this is","A description of the error suitable for end-users","A struct containing all serial port settings","baud_rate","The baud rate in symbols-per-second","data_bits","Number of bits used to represent a character sent on the…","The type of signalling to use for controlling data transfer","The type of parity to use for error checking","stop_bits","Number of bits to use to signal the end of a character","Amount of time to wait to receive data before timing out","A device-independent implementation of serial port…","The short name of the serial port","The hardware device type that exposes this port","Categories of errors that can occur when interacting with…","The device is not available.","A parameter was incorrect.","An unknown error occurred.","An I/O error occurred.","Number of bits per character.","5 bits per character","6 bits per character","7 bits per character","8 bits per character","Parity checking modes.","No parity bit.","Parity bit sets odd number of 1 bits.","Parity bit sets even number of 1 bits.","Number of stop bits.","One stop bit.","Two stop bits.","Flow control modes.","No flow control.","Flow control using XON/XOFF bytes.","Flow control using RTS/CTS signals.","Specifies which buffer or buffers to purge when calling…","Specify to clear data received but not read","Specify to clear data written but not yet transmitted","Specify to clear both data received and data not yet…","Returns a list of all serial ports on system","Returns the exclusivity of the port","set_exclusive","Sets the exclusivity of the port","Create a pair of pseudo serial terminals","A type for results generated by interacting with serial…","SerialPort","A trait for serial port devices","Returns the name of this port if it exists.","Returns the current timeout.","set_parity","Sets the timeout for future I/O operations.","Instantiates a new error","with_default","poll_read_ready","poll_write_ready","setfallbackerror","background","PollEvented","Shutdown","SetFallbackError","poll_write","Configuration object.","Rotation of the camera, in degrees (°).","Exposure configuration.","Brightness correction.","Contrast correction.","Sharpness configuration.","Saturation configuration.","ISO for the image.","EV correction configuration.","white_balance","White balance configuration.","UART serial console path.","Serial console baud rate.","expected_max_height","main_min_percent","fona_min_percent","brightness","saturation","stabilization","whitebalance","Gets the configured picture rotation for the camera, in…","exposure","sharpness","first_timeout","power_gpio","Gets the UART serial console path.","Gets the serial console baud rate.","Gets the power GPIO pin.","status_gpio","location_service","os_balloon::error","os_balloon::error::Config","The path of the configuration file.","os_balloon::error::Raspicam","os_balloon","__private_field","initialize","GPS fix status.","longitude","AcquiringFix","FixAcquired","WaitingLaunch","openstratos","os_balloon::logic","CURRENT_STATE","Latitude reference for EXIF data.","telemetry","os_balloon::config","clone_any","os_balloon::fona","os_balloon::gps","os_balloon::raspicam","get_state","main_logic","assert_receiver_is_total_eq","latituderef","longituderef","fixstatus","phonenumber","PhoneNumber","WhiteBalance","OpenStratos","StateMachine","LatitudeRef","LongitudeRef","capacityerror","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arraystring","Start index (inclusive)","End index (exclusive)","ArrayString","CapacityError","RangeArgument","swap_remove","Retains only the elements specified by the predicate.","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","pusherror","tokio_timer","A queue of delayed elements.","delayqueue","Sets the delay of the item associated with `key` to expire…","Returns a mutable reference to the inner value.","Slow down a stream by enforcing a delay between items.","Returns whether the throttle error has occured because of…","Allows a `Future` or `Stream` to execute for a limited…","Returns `true` if the error was caused by the inner value…","A handle to a source of time.","Set the default timer for the duration of the closure.","new_with_now","Create a new `Timer` instance that uses `park` to block…","is_shutdown","at_capacity","is_at_capacity","Returns `true` if the error was caused by the timer being…","Create a new `Interval` that starts at `at` and yields…","interval","tokio_timer::delay_queue","tokio_timer::timeout","tokio_timer::clock","tokio_timer::throttle","tokio_timer::timer","DelayQueue","ThrottleError","Run the executor to completion, blocking the thread until…","runtimeouterror","Spawn the future on the executor.","Synchronously waits for the provided `future` to complete.","blockerror","run_timeout","Perform a single iteration of the event loop.","turnerror","Returns a reference to the underlying `Park` instance.","get_park_mut","Returns a mutable reference to the underlying `Park`…","taskexecutor","CurrentThread","TaskExecutor","RunTimeoutError","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","Stores a function so that it can be executed at some point…","collector","Returns a new pointer pointing to the tagged pointer `data`.","into_usize","CompareAndSetError","LocalHandle","CompareAndSetOrdering","load_consume","Pushes a task into the queue.","Steals a task from the queue.","steal_batch","steal_batch_and_pop","blockingerror","Error returned by [`ParkThread`]","tokio_threadpool","shutdown_on_idle","shutdown_now","tokio_threadpool::park","DefaultPark","BlockingError","DefaultUnpark","unixdatagram","Receives data from the socket.","unixlistener","Accepts a new incoming connection to this listener.","Returns the local socket address of this listener.","Returns the value of the `SO_ERROR` option.","from_stream","unixstream","Shuts down the read, write, or both halves of this…","Read in a list of buffers all at once.","Write a list of buffers all at once.","UnixDatagram","UnixListener","bytescodec","linescodec","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","FramedParts","FramedWrite","write_buf","Queries the file system metadata for a path.","MetadataFuture","OpenOptions","Options and flags which can be used to configure how a…","openoptions","tokio_fs::file","Seek to an offset, in bytes, in a stream.","metadatafuture","Queries metadata about the underlying file.","Create a new `File` instance that shares the same…","permissions","Returns the bare file name of this directory entry without…","poll_metadata","tokio_fs::os::unix","tokio_fs","CreateDirFuture","CreateDirAllFuture","HardLinkFuture","ReadDirFuture","ReadLinkFuture","RemoveDirFuture","RemoveFileFuture","RenameFuture","SetPermissionsFuture","SymlinkMetadataFuture","CloneFuture","CreateFuture","SymlinkFuture","Attempt to accept a connection and create a new connected…","Creates a new `TcpStream` from the pending socket inside…","connectfuture","peer_addr","keepalive","TcpStream","ConnectFuture","A unified `Stream` and `Sink` interface to an underlying…","A future used to write the entire contents of some data to…","Connects the UDP socket setting the default destination…","Sends data on the socket to the remote address to which it…","Sends data on the socket to the given address. On success,…","Creates a future that will write the entire contents of…","Receives data from the socket. On success, returns the…","UdpSocket","UnixStream","Creates an unnamed pair of connected sockets.","Connects the socket to the specified address.","Returns the local address that this socket is bound to.","Returns the address of this socket's peer.","poll_recv_from","poll_send_to","Sends data on the socket to the specified address.","Sends data on the socket to the socket's peer.","Shut down the read, write, or both halves of this…","Test whether this socket is ready to be read or not.","poll_accept","poll_accept_std","Consumes this listener, returning a stream of the sockets…","Connects to the socket named by `path`.","Test whether this socket is ready to be written to or not.","Returns the socket address of the local half of this…","Returns the socket address of the remote half of this…","UnixDatagramFramed","RecvDgram","SendDgram","max_frame_length","lengthdelimitedcodec","A reference to an open file on the filesystem.","An error returned when an operation could not be completed…","initializer","An I/O object representing a TCP socket listening for…","An I/O object representing a TCP stream connected to a…","An I/O object representing a UDP socket.","tokio::net","An I/O object representing a Unix datagram socket.","A Unix socket which can accept connections from other Unix…","A structure representing a connected Unix socket.","Read bytes asynchronously.","Writes bytes asynchronously.","Initiates or attempts to shut down this writer, returning…","The `Read` trait allows for reading bytes from a source.","read_vectored","Like `read`, except that it reads into a slice of buffers.","Determines if this `Read`er can work with buffers of…","Read all bytes until EOF in this source, placing them into…","read_to_string","Read all bytes until EOF in this source, appending them to…","read_exact","Read the exact number of bytes required to fill `buf`.","Transforms this `Read` instance to an [`Iterator`] over…","Creates an adaptor which will chain this stream with…","A trait for objects which are byte-oriented sinks.","Write a buffer into this writer, returning how many bytes…","write_vectored","Like `write`, except that it writes from a slice of buffers.","Flush this output stream, ensuring that all intermediately…","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any…","Trait for types which are a placeholder of a value that…","The type of value that this future will resolved with if…","The type of error that this future will resolve with if it…","Query this future to see if its value has become…","Block the current thread until this future is resolved.","Map this future's result to a different type, returning a…","Map this future's error to a different error, returning a…","Map this future's error to any error implementing `From`…","Chain on a computation for when a future finished, passing…","Execute another future after this one has resolved…","Execute another future if this one resolves with an error.","Waits for either one of two futures to complete.","Waits for either one of two differently-typed futures to…","Joins the result of two futures, waiting for them both to…","into_stream","Convert this future into a single element stream.","flatten_stream","flattenstream","Fuse a future such that `poll` will never again be called…","Catches unwinding panics while polling the future.","Create a cloneable handle to this future where all handles…","Class of types which can be converted into a future.","The future that this type can be converted into.","The item that the future may resolve with.","The error that the future may resolve with.","Consumes this object and produces a future.","Asynchronous conversion from a type `T`.","The future for the conversion.","Possible errors during conversion.","future_from","Consume the given value, beginning the conversion.","A trait for types which can spawn fresh futures.","Spawns a future to run on this `Executor`, typically in…","Errors returned from the `Spawn::spawn` function.","Kinds of errors that can be returned from the…","This executor has shut down and will no longer accept new…","This executor has no more capacity to run more futures.…","A future representing a value that is immediately ready.","A future which takes a list of futures and resolves with a…","Creates a new future which will select over a list of…","A wrapped error of the original future that is cloneable…","Creates a new \"leaf future\" which will resolve with the…","Future for the `then` combinator, chaining computations on…","Future for the `join` combinator, waiting for two futures…","Future for the `catch_unwind` combinator.","A wrapped item of the original future that is cloneable…","Future for the `select_all` combinator, waiting for one of…","Future for the `join5` combinator, waiting for five…","Future for the `select2` combinator, waiting for one of…","Creates a future which represents a collection of the…","A future which is never resolved.","A future which \"fuses\" a future once it's been resolved.","Future for the `join4` combinator, waiting for four…","Future for the `or_else` combinator, chaining a…","Future for the `select_ok` combinator, waiting for one of…","Creates a new future wrapping around a function returning…","A future which adapts a function returning `Poll`.","Creates a new future implementing a tail-recursive loop.","A future implementing a tail-recursive loop.","Future for the `join3` combinator, waiting for three…","Future for the `map_err` combinator, changing the error…","Future for the `flatten` combinator, flattening a…","The status of a `loop_fn` loop.","Indicates that the loop has completed with output `T`.","Indicates that the loop function should be called again…","Future for the `map` combinator, changing the type of a…","Future for the `and_then` combinator, chaining a…","Future yielded as the second result in a `Select` future.","Future that forwards one element from the underlying…","Combines two different futures yielding the same item and…","First branch of the type","Second branch of the type","A future that is cloneable and can be polled in multiple…","Future for the `select` combinator, waiting for one of two…","A future which defers creation of the actual future until…","Creates a new future which will select the first…","Creates a future which never resolves, representing a…","Creates a new future which will eventually be the same as…","Future for the `flatten_stream` combinator, flattening a…","Future for the `from_err` combinator, changing the error…","tokio::prelude","Asynchronous streams","Mutable iterator over all futures in the unordered set.","tokio::prelude::stream","A stream of values, not all of which may have been…","The type of item this stream will yield on success.","The type of error this stream may generate.","Attempt to pull out the next value of this stream,…","Creates an iterator which blocks the current thread until…","Converts this stream into a `Future`.","streamfuture","Converts a stream of type `T` to a stream of type `U`.","Converts a stream of error type `T` to a stream of error…","Filters the values produced by this stream according to…","Filters the values produced by this stream while…","Chain on a computation for when an error happens, passing…","Collect all of the values of this stream into a vector,…","Execute an accumulating computation over a stream,…","Flattens a stream of streams into just one continuous…","Skip elements on this stream while the predicate provided…","Take elements from this stream while the predicate…","Runs this stream to completion, executing the provided…","Map this stream's error to any error implementing `From`…","Creates a new stream of at most `amt` items of the…","Creates a new stream which skips `amt` items of the…","Fuse a stream such that `poll` will never again be called…","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","An adaptor for creating a buffered list of pending futures.","buffer_unordered","An adaptor for creating a buffered list of pending futures…","bufferunordered","An adapter for zipping two streams together.","Adapter for chaining two stream.","Creates a new stream which exposes a `peek` method.","An adaptor for chunking up items of the stream inside a…","Creates a stream that selects the next element from either…","Splits this `Stream + Sink` object into separate `Stream`…","Do something with each item of this stream, afterwards…","inspect_err","Do something with the error of this stream, afterwards…","A stream combinator which takes elements from a stream…","A stream combinator used to filter the results of a stream…","A stream combinator which chains a computation onto each…","An adaptor that chunks up elements in a vector.","A stream combinator which executes a unit closure over…","iter_result","An adapter for chaining the output of two streams.","Stream that produces the same element repeatedly.","A stream combinator which skips elements of a stream while…","A `Stream` part of the split pair","A stream which creates futures, polls them and return…","Do something with the error of a stream, passing it on.","Create a stream which produces the same item repeatedly.","A stream which adapts a function returning `Poll`.","A combinator used to filter the results of a stream and…","A stream combinator which converts an asynchronous stream…","A future which collects all of the values of a stream into…","A combinator used to temporarily convert a stream into a…","A stream combinator which will change the type of a stream…","A stream combinator which returns a maximum number of…","A stream combinator which chains a computation onto values…","An item returned from a merge stream, which represents an…","An item from the first stream","An item from the second stream","Items from both streams","A `Sink` part of the split pair","An unbounded queue of futures.","A stream combinator to change the error type of a stream.","Do something with the items of a stream, passing it on.","Converts an `Iterator` into a `Stream` which is always…","A stream which emits single element and then EOF.","Stream for the `catch_unwind` combinator.","Future for the `Stream::forward` combinator, which sends a…","A stream which contains no elements.","A stream which \"fuse\"s a stream once it's terminated.","A stream combinator which chains a computation onto errors…","futures_ordered","A `Stream` that implements a `peek` method.","Creates a stream of single element","Creates a new stream wrapping around a function returning…","A stream combinator which will change the error type of a…","A combinator used to flatten a stream-of-streams into one…","Error indicating a `SplitSink<S>` and `SplitStream<S>`…","A future used to collect all the results of a stream into…","Creates a `Stream` from a seed and a closure returning a…","A stream combinator which skips a number of elements…","Creates a stream which contains no elements.","Tasks used to drive a future computation","Return whether the caller is running in a task (and so can…","A handle to a \"task\", which represents a single…","Representation of a spawned future/stream.","A trait which represents a sink of notifications that a…","Indicates that an associated future and/or task are ready…","Spawns a future or stream, returning it and the new task…","A key for task-local data stored in a future's task.","A concurrent set which allows for the insertion of `usize`…","Insert the given ID into the set","Returns a handle to the current task to call `notify` at a…","with_unpark_event","For the duration of the given callback, add an \"unpark…","Initialize the `futures` task system.","A set insertion to trigger upon `unpark`.","Return type of future, indicating whether a value is ready…","Represents that a value is immediately ready.","Represents that a value is not ready yet, but may be so…","The result of an asynchronous attempt to send a value to a…","The `start_send` attempt succeeded, so the sending process…","The `start_send` attempt failed due to the sink being…","intostream","Return type of the `Future::poll` method, indicates…","A `Sink` is a value into which other values can be sent,…","The type of value that the sink accepts.","The type of value produced by the sink when an error occurs.","Begin the process of sending a value to the sink.","Flush all output from this sink, if necessary.","A method to indicate that no more values will ever be…","Creates a new object which will produce a synchronous sink.","with_flat_map","withflatmap","sink_map_err","Transforms the error returned by the sink.","sink_from_err","Map this sink's error to any error implementing `From` for…","Adds a fixed-size buffer to the current sink.","Fanout items to multiple sinks.","A future that completes when the sink has finished…","A future that completes after the given item has been…","filter_map","skip_while","take_while","inspecterr","Future-aware synchronization","tokio::sync","tokio::sync::mpsc","tokio::sync::oneshot","tokio::sync::watch","tokio::timer","Creates a new future which allows `self` until `timeout`.","Throttle down the stream by enforcing a fixed delay…","Creates a new stream which gives the current iteration…","enumerate","Creates a new stream which allows `self` until `timeout`.","An extension trait for `Future` that provides a variety of…","tokio::util","An extension trait for `Stream` that provides a variety of…","Start the Tokio runtime using the supplied future to…","tokio::runtime","Returns a new runtime builder initialized with default…","Set the `Clock` instance that will be used by the runtime.","Create the configured `Runtime`.","Spawn a future onto the Tokio runtime.","block_on_all","tokio::codec","tokio::codec::length_delimited","tokio::fs::file","tokio::fs","tokio::fs::os::unix","tokio::net::tcp","tokio::net::udp","tokio::net::unix","tokio::prelude::future","tokio::prelude::stream::futures_unordered","tokio::prelude::task","tokio::reactor","tokio::sync::lock","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::timer::delay_queue","tokio::timer::timeout","tokio::executor","tokio::runtime::current_thread","tokio::io","unboundedsender","framedwrite","Create a new `ExecuteError`","Returns the associated reason for the error","Consumes self and returns the original future that was…","Returns whether the underlying future has finished or not.","Splits out the homogeneous type from an either of tuples.","If any clone of this `Shared` has completed execution,…","Constructs a new, empty `FuturesUnordered`","Returns the number of futures contained in the set.","Returns `true` if the set contains no futures","Push a future into the set.","Returns an iterator that allows modifying each future in…","splitstream","Constructs a new, empty `FuturesOrdered`","Returns the number of futures contained in the queue.","Returns `true` if the queue contains no futures","Push a future into the queue.","Get a shared reference to the inner sink. If this…","Get a mutable reference to the inner sink. If this…","Get a shared reference to the inner stream. If this…","Get a mutable reference to the inner stream. If this…","Returns whether the underlying stream has finished or not.","Peek retrieves a reference to the next item in the stream.","Indicate that the task should attempt to poll its future…","Returns `true` when called from within the context of the…","will_notify_current","This function is intended as a performance optimization…","wait_future","Waits for the internal future to complete, blocking this…","wait_stream","Like `wait_future`, except only waits for the next element…","Blocks the current thread until it's able to send `value`…","Blocks the current thread until it's able to flush this…","Blocks the current thread until it's able to close this…","Get a shared reference to the object the Spawn is wrapping.","Get a mutable reference to the object the Spawn is wrapping.","Consume the Spawn, returning its inner object","poll_fn_notify","Calls the provided closure, scheduling notifications to be…","poll_future_notify","Polls the internal future, scheduling notifications to be…","poll_stream_notify","Like `poll_future_notify`, except polls the underlying…","start_send_notify","Invokes the underlying `start_send` method with this task…","poll_flush_notify","Invokes the underlying `poll_complete` method with this…","close_notify","Invokes the underlying `close` method with this task in…","Access this task-local key, running the provided closure…","Construct an unpark event that will insert `id` into `set`…","Change the success value of this `Async` with the closure…","Returns whether this is `Async::Ready`","Returns whether this is `Async::NotReady`","Change the NotReady value of this `AsyncSink` with the…","Returns whether this is `AsyncSink::Ready`","Returns whether this is `AsyncSink::NotReady`","pollevented","LengthDelimitedCodec","AsyncWrite","FrameTooBig","IterStream","FutureSender","PollEvented2","Utilities for encoding and decoding frames.","Decoding of frames via buffers.","The type of decoded frames.","The type of unrecoverable frame decoding errors.","Attempts to decode a frame from the provided buffer of…","decode_eof","A default method available to be called when there are no…","Trait of helper objects to write out messages as bytes,…","The type of items consumed by the `Encoder`","The type of encoding errors.","Encodes a frame into the buffer provided.","`FramedParts` contains an export of the data of a Framed…","The inner transport used to read bytes to and write bytes to","read_buf","The buffer with read but unprocessed data.","A buffer with unprocessed data which are not written yet.","FramedRead","A `Stream` of messages decoded from an `AsyncRead`.","A `Sink` of frames encoded to an `AsyncWrite`.","BytesCodec","A simple `Codec` implementation that just ships bytes…","LinesCodec","A simple `Codec` implementation that splits up data into…","Creates a new `BytesCodec` for shipping around raw bytes.","Returns a `LinesCodec` for splitting up data into lines.","new_with_max_length","Returns a `LinesCodec` with a maximum line length limit.","Returns the maximum line length when decoding.","Returns a reference to the underlying codec wrapped by…","Returns a mutable reference to the underlying codec…","Consumes the `Frame`, returning its underlying I/O stream.","into_parts","Consumes the `Frame`, returning its underlying I/O stream,…","Create a new, default, `FramedParts`","Creates a new `FramedRead` with the given `decoder`.","framedread","Consumes the `FramedRead`, returning its underlying I/O…","decoder_mut","Creates a new `FramedWrite` with the given `encoder`.","Consumes the `FramedWrite`, returning its underlying I/O…","encoder_mut","Executes futures on the current thread.","Handle to spawn a future on the corresponding…","Executes a future on the current thread.","Returns an executor that executes futures on the current…","spawn_local","Spawn a future onto the current `CurrentThread` instance.","Errors returned by `Executor::spawn`.","Executes futures on the default executor for the current…","Return a new `SpawnError` reflecting a shutdown executor…","Return a new `SpawnError` reflecting an executor at…","Returns `true` if the error reflects a shutdown executor…","Returns `true` if the error reflects an executor at…","Returns a handle to the default executor for the current…","A value that executes futures.","Spawns a future object to run on this executor.","A value that spawns futures of a specific type.","Spawns a future to run on this executor.","A future used to open a file and read its entire contents…","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","A future used to open a file for writing and write the…","Creates a new, empty directory at the provided path","createdirfuture","create_dir_all","Recursively create a directory and all of its parent…","createdirallfuture","Creates a new hard link on the filesystem.","hardlinkfuture","Creates a future which will open a file for reading and…","Returns a stream over the entries within a directory.","readdirfuture","Reads a symbolic link, returning the file that the link…","readlinkfuture","Removes an existing, empty directory.","removedirfuture","remove_file","Removes a file from the filesystem.","removefilefuture","Rename a file or directory to a new name, replacing the…","renamefuture","set_permissions","Changes the permissions found on a file or a directory.","setpermissionsfuture","Constructs a new handle to the standard error of the…","Constructs a new handle to the standard input of the…","Constructs a new handle to the standard output of the…","symlink_metadata","symlinkmetadatafuture","Creates a future that will open a file for writing and…","Types for working with [`File`].","Future returned by `File::try_clone`.","Future returned by `File::create` and resolves to a `File`…","Future returned by `File::metadata` and resolves to a…","OpenFuture","Future returned by `File::open` and resolves to a `File`…","SeekFuture","Future returned by `File::seek`.","Creates a blank new set of options ready for configuration.","See the underlying [`read`] call for details.","See the underlying [`write`] call for details.","See the underlying [`append`] call for details.","See the underlying [`truncate`] call for details.","See the underlying [`create`] call for details.","See the underlying [`create_new`] call for details.","Opens a file at `path` with the options specified by `self`.","openfuture","Attempts to open a file in read-only mode.","Opens a file in write-only mode.","createfuture","Convert a [`std::fs::File`][std] to a…","poll_sync_all","Attempts to sync all OS-internal metadata to disk.","poll_sync_data","This function is similar to `poll_sync_all`, except that…","poll_set_len","Truncates or extends the underlying file, updating the…","poll_try_clone","clonefuture","poll_set_permissions","Changes the permissions on the underlying file.","Destructures the `tokio_fs::File` into a…","OS-specific functionality.","Unix-specific extensions to primitives in the `tokio_fs`…","Future returned by `symlink`.","Creates a new symbolic link on the filesystem.","symlinkfuture","WriteFile","A future which will copy all data from a reader into a…","A future used to fully flush an I/O object.","A future which can be used to easily read exactly enough…","A future which can be used to easily read the entire…","A future which can be used to easily read the contents of…","A future used to fully shutdown an I/O object.","Combinator created by the top-level `lines` method which…","The readable half of an object returned from…","The writable half of an object returned from…","Creates a future which represents copying all the bytes…","Creates a future which will entirely flush an I/O object…","Tries to read some bytes directly into the given `buf` in…","Creates a future which will read exactly enough bytes to…","Creates a future which will entirely shutdown an I/O…","Creates a new stream from the I/O object given…","Returns the underlying I/O object.","Reunite with a previously split `WriteHalf`.","Reunite with a previously split `ReadHalf`.","AsyncRead","poll_flush","poll_read","WriteHalf","ReadExact","ReadToEnd","ReadUntil","Event loop that drives Tokio I/O resources.","Background","Handle to the reactor running on a background thread.","Associates an I/O resource that implements the…","Associates an I/O resource with the reactor instance that…","The core reactor, or event loop.","A reference to a reactor.","Return value from the `turn` method on `Reactor`.","Returns a reference to the reactor handle.","Shutdown the reactor on idle.","Shutdown the reactor immediately","Run the reactor on its thread until the process terminates.","Creates a new `PollEvented` associated with the default…","new_with_handle","Creates a new `PollEvented` associated with the specified…","Returns a shared reference to the underlying I/O object…","Returns a mutable reference to the underlying I/O object…","Consumes self, returning the inner I/O object","Check the I/O resource's read readiness state.","clear_read_ready","Clears the I/O resource's read readiness state and…","Check the I/O resource's write readiness state.","clear_write_ready","Resets the I/O resource's write readiness state and…","Create a new `Registration`.","registration","Register the I/O resource with the default reactor.","Deregister the I/O resource from the reactor it is…","register_with","Register the I/O resource with the specified reactor.","Poll for events on the I/O resource's read readiness stream.","take_read_ready","Consume any pending read readiness event.","Poll for events on the I/O resource's write readiness…","take_write_ready","Consume any pending write readiness event.","Creates a new event loop, returning any error that…","Returns a handle to this event loop which can be sent…","set_fallback","Configures the fallback handle to be returned from…","Performs one iteration of the event loop, blocking on…","Returns true if the reactor is currently idle.","Run this reactor on a background thread.","Returns a \"default\" handle, i.e., a handle that lazily…","An asynchronous `Mutex`-like type.","An asynchronous mutual exclusion primitive useful for…","A handle to a held `Lock`.","Creates a new lock in an unlocked state ready for use.","Try to acquire the lock.","A multi-producer, single-consumer queue for sending values…","Receive values from the associated `Sender`.","Send values to the associated `Receiver`.","Receive values from the associated `UnboundedSender`.","Send values to the associated `UnboundedReceiver`.","Create a bounded mpsc channel for communicating between…","unbounded_channel","Create an unbounded mpsc channel for communicating between…","Check if the `Sender` is ready to handle a value.","Attempts to send a message on this `Sender`, returning the…","Attempts to send a message on this `UnboundedSender`…","Channel error types","Error returned by `Receiver`.","Error returned by the `Sender`.","Error returned by `Sender::try_send`.","Error returned by `UnboundedReceiver`.","Error returned by the `UnboundedSender`.","Returned by `UnboundedSender::try_send` when the channel…","A channel for sending a single message between…","Sends a value to the associated `Receiver`.","Receive a value from the associated `Sender`.","Create a new one-shot channel for sending single values…","Oneshot error types","Error returned by the `Future` implementation for…","Error returned by the `try_recv` function on `Receiver`.","Prevent the associated [`Sender`] handle from sending a…","Attempts to receive a value outside of the context of a…","A single-producer, multi-consumer channel that only…","Receives values from the associated `Sender`.","Sends values to the associated `Receiver`.","Returns a reference to the inner value","Create a new watch channel, returning the \"send\" and…","Watch error types","Error produced when receiving a value fails.","Error produced when sending a value fails.","Returns a reference to the most recently sent value","Attempts to receive the latest value sent via the channel.","Broadcast a new value via the channel, notifying all…","Returns `Ready` when all receivers have dropped.","Did the send fail because the channel has been closed?","Did the send fail because the channel was at capacity?","TCP bindings for `tokio`.","Stream returned by the `TcpListener::incoming` function…","Future returned by `TcpStream::connect` which will resolve…","Create a new TCP listener associated with this event loop.","Create a new TCP listener from the standard library's TCP…","Returns the local address that this listener is bound to.","Create a new TCP stream connected to the specified address.","Create a new `TcpStream` from a `net::TcpStream`.","connect_std","Check the TCP stream's read readiness state.","Check the TCP stream's write readiness state.","Returns the local address that this stream is bound to.","Returns the remote address that this stream is connected…","Reads the linger duration for this socket by getting the…","panic_handler","name_prefix","stack_size","Set the stack size (in bytes) for worker threads.","after_start","Execute function `f` after each thread is started but…","before_stop","Execute function `f` before each thread stops.","Utilities for tracking time.","A future that completes at a specified instant in time.","Errors encountered by the timer implementation.","A stream representing notifications at fixed interval","A configurable source of time.","Returns an `Instant` corresponding to \"now\".","delay_queue","An entry in `DelayQueue` that has expired and removed.","Token to a value stored in a `DelayQueue`.","Create a new, empty, `DelayQueue`","with_capacity_and_handle","Create a new, empty, `DelayQueue` backed by the specified…","Create a new, empty, `DelayQueue` with the specified…","Insert `value` into the queue set to expire at a specific…","Insert `value` into the queue set to expire after the…","Remove the item associated with `key` from the queue.","Clears the queue, removing all items.","Returns the number of elements the queue can hold without…","Reserve capacity for at least `additional` more items to…","Returns `true` if there are no items in the queue.","Returns a reference to the inner value.","Consumes `self` and returns the inner value.","throttle","Allows a future or stream to execute for a maximum amount…","Error returned by `Timeout`.","Create a new `Timeout` that allows `value` to execute for…","Gets a reference to the underlying value in this timeout.","Gets a mutable reference to the underlying value in this…","Consumes this timeout, returning the underlying value.","Create a new `Timeout` that completes when `future`…","Create a new `Error` representing the inner value…","Consumes `self`, returning the inner future error.","Create a new `Error` representing the inner value not…","is_elapsed","Creates a new `Error` representing an error encountered by…","Returns `true` if the error was caused by the timer.","Consumes `self`, returning the error raised by the timer…","Create a new `Delay` instance that elapses at `deadline`.","Returns the instant at which the future will complete.","Returns true if the `Delay` has elapsed","Reset the `Delay` instance to a new deadline.","Create an error representing a shutdown timer.","Create an error representing a timer at capacity.","new_interval","Creates new `Interval` that yields with interval of…","UDP bindings for `tokio`.","UdpFramed","A future used to receive a datagram from a UDP socket.","Create a new `UdpFramed` backed by the given socket and…","Consumes the `Framed`, returning its underlying I/O stream.","This function will create a new UDP socket and attempt to…","Creates a new `UdpSocket` from the previously bound socket…","Receives a single datagram message on the socket from the…","send_dgram","recv_dgram","Creates a future that receive a datagram to be written to…","Check the UDP socket's read readiness state.","Check the UDP socket's write readiness state.","Consume the `RecvDgram`, returning the socket and buffer.","Incoming","Stream of listeners","A future for receiving datagrams from a Unix datagram…","A future for writing a buffer to a Unix datagram socket.","Future returned by `UnixStream::connect` which will…","Credentials of a process","UID (user ID) of the process","GID (group ID) of the process","Creates a new `UnixDatagram` bound to the specified path.","Consumes a `UnixDatagram` in the standard library and…","Creates a new `UnixDatagram` which is not bound to any…","poll_recv","Returns a future for receiving a datagram. See the…","recvdgram","poll_send","Returns a future sending the data in buf to the socket at…","senddgram","Create a new `UnixDatagramFramed` backed by the given…","unixdatagramframed","Creates a new `UnixListener` bound to the specified path.","Consumes a `UnixListener` in the standard library and…","incoming","Consumes a `UnixStream` in the standard library and…","Returns effective credentials of the process which called…","latest_data"];
searchIndex["antidote"]={"doc":"Mutex and RwLock types that do not poison themselves.","i":[[3,R[285],"antidote",R[2732],N,N],[3,"Mutex",E,"Like `std::sync::Mutex` except that it does not poison…",N,N],[3,R[286],E,"Like `std::sync::MutexGuard`.",N,N],[3,"Condvar",E,"Like `std::sync::Condvar`.",N,N],[3,R[287],E,"Like `std::sync::TryLockError`.",N,N],[3,"RwLock",E,"Like `std::sync::RwLock` except that it does not poison…",N,N],[3,R[288],E,"Like `std::sync::RwLockReadGuard`.",N,N],[3,R[289],E,"Like `std::sync::RwLockWriteGuard`.",N,N],[6,"TryLockResult",E,"Like `std::sync::TryLockResult`.",N,N],[11,"new",E,"Like `std::sync::Mutex::new`.",0,[[[T]],["mutex"]]],[11,R[118],E,"Like `std::sync::Mutex::into_inner`.",0,[[],[T]]],[11,"lock",E,"Like `std::sync::Mutex::lock`.",0,[[["self"]],[R[280]]]],[11,R[698],E,"Like `std::sync::Mutex::try_lock`.",0,[[["self"]],[[R[280]],[R[281],[R[280]]]]]],[11,R[121],E,"Like `std::sync::Mutex::get_mut`.",0,[[["self"]],[T]]],[11,"new",E,"Like `std::sync::Condvar::new`.",1,[[],["condvar"]]],[11,"wait",E,"Like `std::sync::Condvar::wait`.",1,[[[R[280]],["self"]],[R[280]]]],[11,"wait_timeout",E,"Like `std::sync::Condvar::wait_timeout`.",1,[[[R[280]],["self"],[R[411]]]]],[11,"notify_one",E,"Like `std::sync::Condvar::notify_one`.",1,[[["self"]]]],[11,"notify_all",E,"Like `std::sync::Condvar::notify_all`.",1,[[["self"]]]],[11,"new",E,"Like `std::sync::RwLock::new`.",2,[[[T]],["rwlock"]]],[11,R[118],E,"Like `std::sync::RwLock::into_inner`.",2,[[],[T]]],[11,"read",E,"Like `std::sync::RwLock::read`.",2,[[["self"]],[R[282]]]],[11,R[713],E,"Like `std::sync::RwLock::try_read`.",2,[[["self"]],[[R[281],[R[282]]],[R[282]]]]],[11,"write",E,"Like `std::sync::RwLock::write`.",2,[[["self"]],[R[283]]]],[11,R[349],E,"Like `std::sync::RwLock::try_write`.",2,[[["self"]],[[R[283]],[R[281],[R[283]]]]]],[11,R[121],E,"Like `std::sync::RwLock::get_mut`.",2,[[["self"]],[T]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"eq",E,E,3,[[[R[284]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[284]],["self"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,3,[[["self"]],[R[284]]]],[11,R[60],E,E,4,[[["self"]],[T]]],[11,R[60],E,E,7,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"deref",E,E,6,[[["self"]],[T]]],[11,"deref",E,E,7,[[["self"]],[T]]],[11,R[31],E,E,5,[[["self"]],["str"]]],[11,"timed_out",E,"Returns `true` if the wait was known to have timed out.",3,[[["self"]],["bool"]]]],"p":[[3,"Mutex"],[3,"Condvar"],[3,"RwLock"],[3,R[285]],[3,R[286]],[3,R[287]],[3,R[288]],[3,R[289]]]};
searchIndex["approx"]={"doc":"A crate that provides facilities for testing the…","i":[[3,R[93],"approx",R[78],N,N],[12,"lhs",E,R[79],0,N],[12,"rhs",E,R[80],0,N],[12,R[82],E,R[81],0,N],[12,R[84],E,R[2527],0,N],[3,"Ulps",E,R[78],N,N],[12,"lhs",E,R[79],1,N],[12,"rhs",E,R[80],1,N],[12,R[82],E,R[81],1,N],[12,R[86],E,R[2528],1,N],[8,R[94],E,R[2515],N,N],[16,"Epsilon",E,R[2516],2,N],[10,R[2517],E,R[2518],2,[[]]],[10,R[2519],E,R[2520],2,[[]]],[10,R[2521],E,R[2522],2,[[],["u32"]]],[10,R[89],E,R[2523],2,[[["self"]],["bool"]]],[11,R[90],E,R[2524],2,[[["self"]],["bool"]]],[10,"ulps_eq",E,R[2525],2,[[["self"],["u32"]],["bool"]]],[11,"ulps_ne",E,R[2526],2,[[["self"],["u32"]],["bool"]]],[11,"new",E,R[2716],0,[[[T]],[R[83]]]],[11,R[82],E,R[85],0,[[],[R[83]]]],[11,R[84],E,R[2717],0,[[],[R[83]]]],[11,"eq",E,R[87],0,[[],["bool"]]],[11,"ne",E,R[88],0,[[],["bool"]]],[11,"new",E,R[2718],1,[[[T]],["ulps"]]],[11,R[82],E,R[85],1,[[],["ulps"]]],[11,R[86],E,R[2719],1,[[["u32"]],["ulps"]]],[11,"eq",E,R[87],1,[[],["bool"]]],[11,"ne",E,R[88],1,[[],["bool"]]],[14,R[89],E,R[91],N,N],[14,R[90],E,R[92],N,N],[14,R[2530],E,E,N,N],[14,R[2532],E,E,N,N],[14,"ulps_eq",E,R[91],N,N],[14,"ulps_ne",E,R[92],N,N],[14,R[2531],E,E,N,N],[14,R[2529],E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]]],"p":[[3,R[93]],[3,"Ulps"],[8,R[94]]]};
searchIndex["arc_swap"]={"doc":"Making [`Arc`][Arc] itself atomic","i":[[3,"Guard",R[268],"A short-term proxy object from `peek`.",N,N],[3,"Lease",E,"A temporary storage of the pointer.",N,N],[3,R[277],E,"An atomic storage for a smart pointer like [`Arc`] or…",N,N],[5,"ptr_eq",E,"Comparison of two pointer-like things.",N,[[["a"],["b"]],["bool"]]],[0,"cache",E,"Caching handle into the [ArcSwapAny].",N,N],[3,"Cache",R[270],"Caching handle for [ArcSwapAny].",N,N],[11,"new",E,"Creates a new caching handle.",0,[[["a"]],["self"]]],[11,R[268],E,"Gives access to the (possibly shared) cached [`ArcSwapAny`].",0,[[["self"]]]],[11,"load",E,"Loads the currently held value.",0,[[["self"]],[T]]],[0,"gen_lock",R[268],"Customization of where and how the generation lock works.",N,N],[3,"Shard",R[271],"A single shard.",N,N],[3,"Global",E,"The default, global lock.",N,N],[3,R[278],E,"A single „shard“ that is stored inline, inside the…",N,N],[3,R[279],E,"An alternative to [`PrivateUnsharded`], but with…",N,N],[8,R[276],E,"Abstraction of the place where generation locks are stored.",N,N],[16,"Shards",E,"The type for keeping several shards.",1,N],[10,"gen_idx",E,"Access to the generation index.",1,[[["self"]],[R[272]]]],[10,"shards",E,"Access to the shards storage.",1,[[["self"]]]],[10,R[273],E,"Pick one shard of the all selected.",1,[[["self"]],[R[9]]]],[6,"ArcSwap",R[268],"An atomic storage for `Arc`.",N,N],[6,"ArcSwapOption",E,"An atomic storage for `Option<Arc>`.",N,N],[6,"IndependentArcSwap",E,"An atomic storage that doesn't share the internal…",N,N],[8,"AsRaw",E,"A trait describing things that can be turned into a raw…",N,N],[10,"as_raw",E,"Converts the value into a raw pointer.",2,[[["self"]]]],[8,"NonNull",E,"A trait describing smart pointers that can't hold NULL.",N,N],[8,"RefCnt",E,"A trait describing smart reference counted pointers.",N,N],[16,"Base",E,"The base type the pointer points to.",3,N],[10,"into_ptr",E,"Converts the smart pointer into a raw pointer, without…",3,[[]]],[10,"as_ptr",E,"Provides a view into the smart pointer as a raw pointer.",3,[[["self"]]]],[10,"from_ptr",E,"Converts a raw pointer back into the smart pointer,…",3,[[],["self"]]],[11,"inc",E,R[274],3,[[["self"]]]],[11,"dec",E,R[275],3,[[]]],[10,"can_null",E,"Describes if the raw pointer can ever be null.",3,[[],["bool"]]],[11,"upgrade",E,"Upgrades the guard to a real `Arc`.",4,[[["self"]],[T]]],[11,"lease",E,"Upgrades the guard to a `Lease`.",4,[[["self"]],["lease"]]],[11,R[120],E,"Gets a reference to the value inside.",4,[[["self"]],[R[45]]]],[11,"upgrade",E,"Loads a full `Arc` from the lease.",5,[[["self"]],[T]]],[11,"into_upgrade",E,"A consuming version of `upgrade`.",5,[[],[T]]],[11,R[120],E,"Returns access to the data held.",5,[[["self"]],[R[45]]]],[11,"is_null",E,"Checks if it contains a null pointer.",5,[[["self"]],["bool"]]],[11,"expect",E,"Like [`unwrap`][Lease::unwrap], but with a panic message.",5,[[["str"]],["lease"]]],[11,"unwrap",E,"Asserts the lease contains non-NULL content and gets…",5,[[],["lease"]]],[11,"into_option",E,"Transposes the `Lease<Option<RefCnt>>` into…",5,[[],[[R[45],["lease"]],["lease"]]]],[11,"new",E,"Constructs a new value.",6,[[[T]],["self"]]],[11,R[118],E,"Extracts the value inside.",6,[[],[T]]],[11,"load",E,"Loads the value.",6,[[["self"]],[T]]],[11,"peek",E,"Provides a peek inside the held value.",6,[[["self"]],["guard"]]],[11,"peek_signal_safe",E,"An async-signal-safe version of `peek`",6,[[["self"]],["guard"]]],[11,"lease",E,"Provides a temporary borrow of the object inside.",6,[[["self"]],["lease"]]],[11,"store",E,"Replaces the value inside this instance.",6,[[["self"],[T]]]],[11,"swap",E,"Exchanges the value inside this instance.",6,[[["self"],[T]],[T]]],[11,R[333],E,"Swaps the stored Arc if it is equal to `current`.",6,[[["self"],["asraw"],[T]],["lease"]]],[11,"rcu",E,"Read-Copy-Update of the pointer inside.",6,[[["self"],["f"]],[T]]],[11,R[269],E,"A convenience constructor directly from the pointed-to…",6,[[[T]],["self"]]],[11,"rcu_unwrap",E,"An `rcu` which waits to be the sole owner of the original…",6,[[["self"],["f"]],[T]]],[11,R[269],E,"A convenience constructor directly from a pointed-to value.",6,[[["into",[R[45]]],[R[45]]],["self"]]],[11,"empty",E,"A convenience constructor for an empty value.",6,[[],["self"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[62],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",R[270],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",R[271],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"as_raw",R[268],E,4,[[["self"]]]],[11,"as_raw",E,E,5,[[["self"]]]],[11,"gen_idx",R[271],E,8,[[["self"]],[R[272]]]],[11,"shards",E,E,8,[[["self"]]]],[11,R[273],E,E,8,[[["self"]],[R[9]]]],[11,"gen_idx",E,E,9,[[["self"]],[R[272]]]],[11,"shards",E,E,9,[[["self"]]]],[11,R[273],E,E,9,[[["self"]],[R[9]]]],[11,"gen_idx",E,E,10,[[["self"]],[R[272]]]],[11,"shards",E,E,10,[[["self"]]]],[11,R[273],E,E,10,[[["self"]],[R[9]]]],[11,R[77],E,E,7,[[],["shard"]]],[11,R[77],E,E,8,[[],["global"]]],[11,R[77],E,E,9,[[],["privateunsharded"]]],[11,R[77],E,E,10,[[],["privatesharded"]]],[11,R[77],R[268],E,6,[[],["self"]]],[11,"clone",R[270],E,0,[[["self"]],["cache"]]],[11,"clone",R[268],E,6,[[["self"]],["self"]]],[11,"from",R[270],E,0,[[["a"]],["self"]]],[11,"from",R[268],E,6,[[[T]],["self"]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"fmt",R[270],E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[268],E,5,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[195]]]],[11,"deref",E,E,4,[[["self"]]]],[11,"deref",E,E,5,[[["self"]]]],[11,"inc",E,R[274],3,[[["self"]]]],[11,"dec",E,R[275],3,[[]]]],"p":[[3,"Cache"],[8,R[276]],[8,"AsRaw"],[8,"RefCnt"],[3,"Guard"],[3,"Lease"],[3,R[277]],[3,"Shard"],[3,"Global"],[3,R[278]],[3,R[279]]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[3360],"arrayvec","A string with a fixed capacity.",N,N],[3,R[3361],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[54],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[3357]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[13],[R[3350]]],[R[3350],["str"]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[["utf8error"],[R[13],["utf8error"]]]]],[11,R[74],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],[R[9]]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[3351],0,[[["self"],["char"]]]],[11,"try_push",E,R[3351],0,[[["self"],["char"]],[[R[13],[R[3350]]],[R[3350],["char"]]]]],[11,"push_str",E,R[3352],0,[[["self"],["str"]]]],[11,"try_push_str",E,R[3352],0,[[["self"],["str"]],[[R[3350],["str"]],[R[13],[R[3350]]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[[R[45],["char"]],["char"]]]],[11,R[2724],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],[R[9]]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],[R[9]]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],[R[9]]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[3350]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[3350]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[3362],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[3358],3,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,"end",E,R[3359],3,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],[R[9]]]],[11,R[74],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],[R[9]]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[3353],4,[[["self"]]]],[11,"try_push",E,R[3353],4,[[["self"]],[[R[3350]],[R[13],[R[3350]]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[3354],4,[[["self"],[R[9]]]]],[11,"try_insert",E,R[3354],4,[[["self"],[R[9]]],[[R[3350]],[R[13],[R[3350]]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[45]]]],[11,R[3363],E,R[3355],4,[[["self"],[R[9]]]]],[11,"swap_pop",E,R[3355],4,[[["self"],[R[9]]],[R[45]]]],[11,"remove",E,R[3356],4,[[["self"],[R[9]]]]],[11,"pop_at",E,R[3356],4,[[["self"],[R[9]]],[R[45]]]],[11,R[2724],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],[R[9]]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,R[3364],4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],[R[9]]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,R[118],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[13]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,R[251],E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[250],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[43],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[43],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[43],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[3350]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[3350]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[47]]]],[11,"cmp",E,E,1,[[["self"],[R[3350]]],[R[47]]]],[11,"cmp",E,E,4,[[["self"],["arrayvec"]],[R[47]]]],[11,R[63],E,E,0,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[63],E,E,0,[[["self"],["str"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"le",E,E,0,[[["self"],["str"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["str"]],["bool"]]],[11,R[63],E,E,1,[[["self"],[R[3350]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,1,[[["self"],[R[3350]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[3350]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[3350]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[3350]]],["bool"]]],[11,R[63],E,E,4,[[["self"],["arrayvec"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"write_char",E,E,0,[[["self"],["char"]],[R[13]]]],[11,"write_str",E,E,0,[[["self"],["str"]],[R[13]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,R[60],E,E,0,[[["self"]],["str"]]],[11,R[60],E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"extend",E,E,4,[[["self"],[R[44]]]]],[11,R[196],E,E,4,[[[R[44]]],["self"]]],[11,"next",E,E,5,[[["self"]],[R[45]]]],[11,R[46],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[45]]]],[11,R[46],E,E,6,[[["self"]]]],[11,R[43],E,E,4,[[],["intoiter"]]],[11,R[48],E,E,5,[[["self"]],[R[45]]]],[11,R[48],E,E,6,[[["self"]],[R[45]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],[R[3357]]]],[11,"clone_from",E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[3350]]]],[11,"clone",E,E,5,[[["self"]],["intoiter"]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,"clone_from",E,E,4,[[["self"],["self"]]]],[11,R[77],E,"Return an empty `ArrayString`",0,[[],[R[3357]]]],[11,R[77],E,"Return an empty array",4,[[],["arrayvec"]]],[11,R[41],E,E,0,[[["self"]],["str"]]],[11,R[41],E,E,4,[[["self"]]]],[11,R[15],E,E,4,[[["self"]]]],[11,"start",E,R[3358],3,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,"end",E,R[3359],3,[[["self"]],[[R[45],[R[9]]],[R[9]]]]]],"p":[[3,R[3360]],[3,R[3361]],[8,"Array"],[8,R[3362]],[3,"ArrayVec"],[3,R[54]],[3,"Drain"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame",R[2305],"A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol",E,"A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName",E,"A wrapper around a symbol name to provide ergonomic…",N,N],[3,R[2806],E,"Representation of an owned and self-contained backtrace.",N,N],[3,R[2307],E,"Captured version of a frame in a backtrace.",N,N],[3,R[2308],E,"Captured version of a symbol in a backtrace.",N,N],[4,R[2306],E,"A platform independent representation of a string. When…",N,N],[13,"Bytes",E,"A slice, typically provided on Unix platforms.",0,N],[13,"Wide",E,"Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized",E,"Same as `trace`, only unsafe as it's unsynchronized.",N,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized",E,"Same as `resolve_frame`, only unsafe as it's unsynchronized.",N,[[["frame"],["f"]]]],[5,"resolve_unsynchronized",E,"Same as `resolve`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"trace",E,"Inspects the current call-stack, passing all active frames…",N,[[["fnmut"]]]],[5,"resolve",E,"Resolve an address to a symbol, passing the symbol to the…",N,[[["fnmut"]]]],[5,"resolve_frame",E,"Resolve a previously capture frame to a symbol, passing…",N,[[["frame"],["fnmut"]]]],[11,"ip",E,"Returns the current instruction pointer of this frame.",1,[[["self"]]]],[11,R[2303],E,"Returns the starting symbol address of the frame of this…",1,[[["self"]]]],[11,"name",E,"Returns the name of this function.",2,[[["self"]],[[R[2302]],[R[45],[R[2302]]]]]],[11,"addr",E,"Returns the starting address of this function.",2,[[["self"]],[R[45]]]],[11,"filename_raw",E,"Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],[[R[45],[R[2301]]],[R[2301]]]]],[11,"lineno",E,"Returns the line number for where this symbol is currently…",2,[[["self"]],[[R[45],["u32"]],["u32"]]]],[11,"filename",E,"Returns the file name where this function was defined.",2,[[["self"]],[["path"],[R[45],["path"]]]]],[11,"new",E,"Creates a new symbol name from the raw underlying bytes.",3,[[],[R[2302]]]],[11,"as_str",E,"Returns the raw (mangled) symbol name as a `str` if the…",3,[[["self"]],[["str"],[R[45],["str"]]]]],[11,"as_bytes",E,"Returns the raw symbol name as a list of bytes",3,[[["self"]]]],[11,"to_str_lossy",E,"Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["cow",["str"]],["str"]]]],[11,"into_path_buf",E,"Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf"]]],[11,"new",E,"Captures a backtrace at the callsite of this function,…",4,[[],[R[2305]]]],[11,"new_unresolved",E,"Similar to `new` except that this does not resolve any…",4,[[],[R[2305]]]],[11,"frames",E,"Returns the frames from when this backtrace was captured.",4,[[["self"]]]],[11,"resolve",E,"If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip",E,"Same as `Frame::ip`",5,[[["self"]]]],[11,R[2303],E,"Same as `Frame::symbol_address`",5,[[["self"]]]],[11,"symbols",E,"Returns the list of symbols that this frame corresponds to.",5,[[["self"]]]],[11,"name",E,"Same as `Symbol::name`",6,[[["self"]],[[R[2302]],[R[45],[R[2302]]]]]],[11,"addr",E,"Same as `Symbol::addr`",6,[[["self"]],[R[45]]]],[11,"filename",E,"Same as `Symbol::filename`",6,[[["self"]],[["path"],[R[45],["path"]]]]],[11,"lineno",E,"Same as `Symbol::lineno`",6,[[["self"]],[[R[45],["u32"]],["u32"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,4,[[[R[2304]],["vec",[R[2304]]]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"into",E,E,4,[[],[[R[2304]],["vec",[R[2304]]]]]],[11,"clone",E,E,1,[[["self"]],["frame"]]],[11,"clone",E,E,4,[[["self"]],[R[2305]]]],[11,"clone",E,E,5,[[["self"]],[R[2304]]]],[11,"clone",E,E,6,[[["self"]],["backtracesymbol"]]],[11,R[77],E,E,4,[[],[R[2305]]]]],"p":[[4,R[2306]],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,R[2806]],[3,R[2307]],[3,R[2308]]]};
searchIndex["backtrace_sys"]={"doc":E,"i":[[4,R[1529],"backtrace_sys",E,N,N],[5,"backtrace_create_state",E,E,N,N],[5,"backtrace_syminfo",E,E,N,N],[5,"backtrace_pcinfo",E,E,N,N],[6,"backtrace_syminfo_callback",E,E,N,N],[6,"backtrace_full_callback",E,E,N,N],[6,"backtrace_error_callback",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]]],"p":[[4,R[1529]]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[672],"byteorder",R[1593],N,N],[4,R[673],E,R[1594],N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[669],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[619],0,[[["self"]],[[R[13],["u8"]],["u8"]]]],[11,"read_i8",E,R[620],0,[[["self"]],[["i8"],[R[13],["i8"]]]]],[11,R[604],E,R[621],0,[[["self"]],[["u16"],[R[13],["u16"]]]]],[11,R[622],E,R[623],0,[[["self"]],[["i16"],[R[13],["i16"]]]]],[11,R[624],E,R[625],0,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[626],E,R[627],0,[[["self"]],[["i32"],[R[13],["i32"]]]]],[11,R[605],E,R[628],0,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[629],E,R[630],0,[[["self"]],[["i32"],[R[13],["i32"]]]]],[11,R[631],E,R[632],0,[[["self"]],[[R[13],["u64"]],["u64"]]]],[11,R[633],E,R[634],0,[[["self"]],[[R[13],["i64"]],["i64"]]]],[11,R[606],E,R[635],0,[[["self"]],[[R[13],["u64"]],["u64"]]]],[11,R[636],E,R[637],0,[[["self"]],[[R[13],["i64"]],["i64"]]]],[11,R[560],E,R[638],0,[[["self"]],[[R[13],["u128"]],["u128"]]]],[11,R[573],E,R[639],0,[[["self"]],[[R[13],["i128"]],["i128"]]]],[11,R[561],E,R[555],0,[[["self"],[R[9]]],[[R[13],["u64"]],["u64"]]]],[11,R[640],E,R[556],0,[[["self"],[R[9]]],[[R[13],["i64"]],["i64"]]]],[11,R[562],E,R[555],0,[[["self"],[R[9]]],[[R[13],["u128"]],["u128"]]]],[11,R[574],E,R[556],0,[[["self"],[R[9]]],[[R[13],["i128"]],["i128"]]]],[11,R[641],E,R[576],0,[[["self"]],[["f32"],[R[13],["f32"]]]]],[11,R[642],E,R[577],0,[[["self"]],[["f64"],[R[13],["f64"]]]]],[11,R[591],E,R[643],0,[[["self"]],[R[13]]]],[11,R[592],E,R[644],0,[[["self"]],[R[13]]]],[11,R[593],E,R[645],0,[[["self"]],[R[13]]]],[11,R[594],E,R[646],0,[[["self"]],[R[13]]]],[11,R[647],E,R[648],0,[[["self"]],[R[13]]]],[11,R[595],E,R[649],0,[[["self"]],[R[13]]]],[11,R[596],E,R[650],0,[[["self"]],[R[13]]]],[11,R[597],E,R[651],0,[[["self"]],[R[13]]]],[11,R[598],E,R[652],0,[[["self"]],[R[13]]]],[11,R[599],E,R[653],0,[[["self"]],[R[13]]]],[11,R[600],E,R[557],0,[[["self"]],[R[13]]]],[11,R[601],E,R[654],0,[[["self"]],[R[13]]]],[11,R[603],E,R[557],0,[[["self"]],[R[13]]]],[8,R[670],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[655],1,[[["self"],["u8"]],[R[13]]]],[11,"write_i8",E,R[656],1,[[["self"],["i8"]],[R[13]]]],[11,R[564],E,R[657],1,[[["self"],["u16"]],[R[13]]]],[11,R[578],E,R[658],1,[[["self"],["i16"]],[R[13]]]],[11,R[565],E,R[659],1,[[["self"],["u32"]],[R[13]]]],[11,R[579],E,R[660],1,[[["self"],["i32"]],[R[13]]]],[11,R[566],E,R[661],1,[[["self"],["u32"]],[R[13]]]],[11,R[580],E,R[662],1,[[["self"],["i32"]],[R[13]]]],[11,R[567],E,R[663],1,[[["self"],["u64"]],[R[13]]]],[11,R[581],E,R[664],1,[[["self"],["i64"]],[R[13]]]],[11,R[568],E,R[665],1,[[["self"],["u64"]],[R[13]]]],[11,R[582],E,R[666],1,[[["self"],["i64"]],[R[13]]]],[11,R[569],E,R[667],1,[[["self"],["u128"]],[R[13]]]],[11,R[583],E,R[668],1,[[["self"],["i128"]],[R[13]]]],[11,R[570],E,R[558],1,[[["self"],["u64"],[R[9]]],[R[13]]]],[11,R[584],E,R[559],1,[[["self"],["i64"],[R[9]]],[R[13]]]],[11,R[571],E,R[558],1,[[["self"],[R[9]],["u128"]],[R[13]]]],[11,R[585],E,R[559],1,[[["self"],["i128"],[R[9]]],[R[13]]]],[11,R[587],E,R[588],1,[[["self"],["f32"]],[R[13]]]],[11,R[589],E,R[590],1,[[["self"],["f64"]],[R[13]]]],[8,R[671],E,R[1530],N,N],[10,R[604],E,R[1531],2,[[],["u16"]]],[11,R[624],E,R[1532],2,[[],["u32"]]],[10,R[605],E,R[1533],2,[[],["u32"]]],[11,R[631],E,R[1534],2,[[],["u64"]]],[10,R[606],E,R[1535],2,[[],["u64"]]],[10,R[560],E,R[1536],2,[[],["u128"]]],[10,R[561],E,R[563],2,[[[R[9]]],["u64"]]],[10,R[562],E,R[563],2,[[[R[9]]],["u128"]]],[10,R[564],E,R[1537],2,[[["u16"]]]],[11,R[565],E,R[1538],2,[[["u32"]]]],[10,R[566],E,R[1539],2,[[["u32"]]]],[11,R[567],E,R[1540],2,[[["u64"]]]],[10,R[568],E,R[1541],2,[[["u64"]]]],[10,R[569],E,R[1542],2,[[["u128"]]]],[10,R[570],E,R[572],2,[[[R[9]],["u64"]]]],[10,R[571],E,R[572],2,[[["u128"],[R[9]]]]],[11,R[622],E,R[1543],2,[[],["i16"]]],[11,R[626],E,R[1544],2,[[],["i32"]]],[11,R[629],E,R[1545],2,[[],["i32"]]],[11,R[633],E,R[1546],2,[[],["i64"]]],[11,R[636],E,R[1547],2,[[],["i64"]]],[11,R[573],E,R[1548],2,[[],["i128"]]],[11,R[640],E,R[575],2,[[[R[9]]],["i64"]]],[11,R[574],E,R[575],2,[[[R[9]]],["i128"]]],[11,R[641],E,R[576],2,[[],["f32"]]],[11,R[642],E,R[577],2,[[],["f64"]]],[11,R[578],E,R[1549],2,[[["i16"]]]],[11,R[579],E,R[1550],2,[[["i32"]]]],[11,R[580],E,R[1551],2,[[["i32"]]]],[11,R[581],E,R[1552],2,[[["i64"]]]],[11,R[582],E,R[1553],2,[[["i64"]]]],[11,R[583],E,R[1554],2,[[["i128"]]]],[11,R[584],E,R[586],2,[[["i64"],[R[9]]]]],[11,R[585],E,R[586],2,[[["i128"],[R[9]]]]],[11,R[587],E,R[588],2,[[["f32"]]]],[11,R[589],E,R[590],2,[[["f64"]]]],[10,R[591],E,R[1555],2,[[]]],[10,R[592],E,R[1556],2,[[]]],[10,R[593],E,R[1557],2,[[]]],[10,R[594],E,R[1558],2,[[]]],[11,R[595],E,R[1559],2,[[]]],[11,R[596],E,R[1560],2,[[]]],[11,R[597],E,R[1561],2,[[]]],[11,R[598],E,R[1562],2,[[]]],[11,R[599],E,R[602],2,[[]]],[11,R[600],E,R[557],2,[[]]],[11,R[601],E,R[602],2,[[]]],[11,R[603],E,R[557],2,[[]]],[10,R[607],E,R[1563],2,[[]]],[10,R[608],E,R[1564],2,[[]]],[10,R[609],E,R[1565],2,[[]]],[10,R[610],E,R[1566],2,[[]]],[11,R[1567],E,R[1568],2,[[]]],[11,R[1569],E,R[1570],2,[[]]],[11,R[1571],E,R[1572],2,[[]]],[11,R[1573],E,R[1574],2,[[]]],[11,R[1575],E,R[1576],2,[[]]],[11,R[1577],E,R[1578],2,[[]]],[10,R[611],E,R[1579],2,[[]]],[10,R[612],E,R[1580],2,[[]]],[10,R[613],E,R[1581],2,[[]]],[10,R[614],E,R[1582],2,[[]]],[11,R[1583],E,R[1584],2,[[]]],[11,R[1585],E,R[1586],2,[[]]],[11,R[1587],E,R[1588],2,[[]]],[11,R[1589],E,R[1590],2,[[]]],[10,R[615],E,R[1591],2,[[]]],[10,R[616],E,R[1592],2,[[]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[604],E,E,3,[[],["u16"]]],[11,R[605],E,E,3,[[],["u32"]]],[11,R[606],E,E,3,[[],["u64"]]],[11,R[560],E,E,3,[[],["u128"]]],[11,R[561],E,E,3,[[[R[9]]],["u64"]]],[11,R[562],E,E,3,[[[R[9]]],["u128"]]],[11,R[564],E,E,3,[[["u16"]]]],[11,R[566],E,E,3,[[["u32"]]]],[11,R[568],E,E,3,[[["u64"]]]],[11,R[569],E,E,3,[[["u128"]]]],[11,R[570],E,E,3,[[[R[9]],["u64"]]]],[11,R[571],E,E,3,[[["u128"],[R[9]]]]],[11,R[591],E,E,3,[[]]],[11,R[592],E,E,3,[[]]],[11,R[593],E,E,3,[[]]],[11,R[594],E,E,3,[[]]],[11,R[607],E,E,3,[[]]],[11,R[608],E,E,3,[[]]],[11,R[609],E,E,3,[[]]],[11,R[610],E,E,3,[[]]],[11,R[611],E,E,3,[[]]],[11,R[612],E,E,3,[[]]],[11,R[613],E,E,3,[[]]],[11,R[614],E,E,3,[[]]],[11,R[615],E,E,3,[[]]],[11,R[616],E,E,3,[[]]],[11,R[604],E,E,4,[[],["u16"]]],[11,R[605],E,E,4,[[],["u32"]]],[11,R[606],E,E,4,[[],["u64"]]],[11,R[560],E,E,4,[[],["u128"]]],[11,R[561],E,E,4,[[[R[9]]],["u64"]]],[11,R[562],E,E,4,[[[R[9]]],["u128"]]],[11,R[564],E,E,4,[[["u16"]]]],[11,R[566],E,E,4,[[["u32"]]]],[11,R[568],E,E,4,[[["u64"]]]],[11,R[569],E,E,4,[[["u128"]]]],[11,R[570],E,E,4,[[[R[9]],["u64"]]]],[11,R[571],E,E,4,[[["u128"],[R[9]]]]],[11,R[591],E,E,4,[[]]],[11,R[592],E,E,4,[[]]],[11,R[593],E,E,4,[[]]],[11,R[594],E,E,4,[[]]],[11,R[607],E,E,4,[[]]],[11,R[608],E,E,4,[[]]],[11,R[609],E,E,4,[[]]],[11,R[610],E,E,4,[[]]],[11,R[611],E,E,4,[[]]],[11,R[612],E,E,4,[[]]],[11,R[613],E,E,4,[[]]],[11,R[614],E,E,4,[[]]],[11,R[615],E,E,4,[[]]],[11,R[616],E,E,4,[[]]],[11,R[77],E,E,3,[[],[R[617]]]],[11,R[77],E,E,4,[[],[R[618]]]],[11,"clone",E,E,3,[[["self"]],[R[617]]]],[11,"clone",E,E,4,[[["self"]],[R[618]]]],[11,"cmp",E,E,3,[[["self"],[R[617]]],[R[47]]]],[11,"cmp",E,E,4,[[["self"],[R[618]]],[R[47]]]],[11,R[63],E,E,3,[[["self"],[R[617]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,4,[[["self"],[R[618]]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",E,E,3,[[["self"],[R[617]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[618]]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"read_u8",E,R[619],0,[[["self"]],[[R[13],["u8"]],["u8"]]]],[11,"read_i8",E,R[620],0,[[["self"]],[["i8"],[R[13],["i8"]]]]],[11,R[604],E,R[621],0,[[["self"]],[["u16"],[R[13],["u16"]]]]],[11,R[622],E,R[623],0,[[["self"]],[["i16"],[R[13],["i16"]]]]],[11,R[624],E,R[625],0,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[626],E,R[627],0,[[["self"]],[["i32"],[R[13],["i32"]]]]],[11,R[605],E,R[628],0,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[629],E,R[630],0,[[["self"]],[["i32"],[R[13],["i32"]]]]],[11,R[631],E,R[632],0,[[["self"]],[[R[13],["u64"]],["u64"]]]],[11,R[633],E,R[634],0,[[["self"]],[[R[13],["i64"]],["i64"]]]],[11,R[606],E,R[635],0,[[["self"]],[[R[13],["u64"]],["u64"]]]],[11,R[636],E,R[637],0,[[["self"]],[[R[13],["i64"]],["i64"]]]],[11,R[560],E,R[638],0,[[["self"]],[[R[13],["u128"]],["u128"]]]],[11,R[573],E,R[639],0,[[["self"]],[[R[13],["i128"]],["i128"]]]],[11,R[561],E,R[555],0,[[["self"],[R[9]]],[[R[13],["u64"]],["u64"]]]],[11,R[640],E,R[556],0,[[["self"],[R[9]]],[[R[13],["i64"]],["i64"]]]],[11,R[562],E,R[555],0,[[["self"],[R[9]]],[[R[13],["u128"]],["u128"]]]],[11,R[574],E,R[556],0,[[["self"],[R[9]]],[[R[13],["i128"]],["i128"]]]],[11,R[641],E,R[576],0,[[["self"]],[["f32"],[R[13],["f32"]]]]],[11,R[642],E,R[577],0,[[["self"]],[["f64"],[R[13],["f64"]]]]],[11,R[591],E,R[643],0,[[["self"]],[R[13]]]],[11,R[592],E,R[644],0,[[["self"]],[R[13]]]],[11,R[593],E,R[645],0,[[["self"]],[R[13]]]],[11,R[594],E,R[646],0,[[["self"]],[R[13]]]],[11,R[647],E,R[648],0,[[["self"]],[R[13]]]],[11,R[595],E,R[649],0,[[["self"]],[R[13]]]],[11,R[596],E,R[650],0,[[["self"]],[R[13]]]],[11,R[597],E,R[651],0,[[["self"]],[R[13]]]],[11,R[598],E,R[652],0,[[["self"]],[R[13]]]],[11,R[599],E,R[653],0,[[["self"]],[R[13]]]],[11,R[600],E,R[557],0,[[["self"]],[R[13]]]],[11,R[601],E,R[654],0,[[["self"]],[R[13]]]],[11,R[603],E,R[557],0,[[["self"]],[R[13]]]],[11,"write_u8",E,R[655],1,[[["self"],["u8"]],[R[13]]]],[11,"write_i8",E,R[656],1,[[["self"],["i8"]],[R[13]]]],[11,R[564],E,R[657],1,[[["self"],["u16"]],[R[13]]]],[11,R[578],E,R[658],1,[[["self"],["i16"]],[R[13]]]],[11,R[565],E,R[659],1,[[["self"],["u32"]],[R[13]]]],[11,R[579],E,R[660],1,[[["self"],["i32"]],[R[13]]]],[11,R[566],E,R[661],1,[[["self"],["u32"]],[R[13]]]],[11,R[580],E,R[662],1,[[["self"],["i32"]],[R[13]]]],[11,R[567],E,R[663],1,[[["self"],["u64"]],[R[13]]]],[11,R[581],E,R[664],1,[[["self"],["i64"]],[R[13]]]],[11,R[568],E,R[665],1,[[["self"],["u64"]],[R[13]]]],[11,R[582],E,R[666],1,[[["self"],["i64"]],[R[13]]]],[11,R[569],E,R[667],1,[[["self"],["u128"]],[R[13]]]],[11,R[583],E,R[668],1,[[["self"],["i128"]],[R[13]]]],[11,R[570],E,R[558],1,[[["self"],["u64"],[R[9]]],[R[13]]]],[11,R[584],E,R[559],1,[[["self"],["i64"],[R[9]]],[R[13]]]],[11,R[571],E,R[558],1,[[["self"],[R[9]],["u128"]],[R[13]]]],[11,R[585],E,R[559],1,[[["self"],["i128"],[R[9]]],[R[13]]]],[11,R[587],E,R[588],1,[[["self"],["f32"]],[R[13]]]],[11,R[589],E,R[590],1,[[["self"],["f64"]],[R[13]]]]],"p":[[8,R[669]],[8,R[670]],[8,R[671]],[4,R[672]],[4,R[673]]]};
searchIndex["bytes"]={"doc":"Provides abstractions for working with bytes.","i":[[8,R[671],"bytes",R[1530],N,N],[10,R[604],E,R[1531],0,[[],["u16"]]],[11,R[624],E,R[1532],0,[[],["u32"]]],[10,R[605],E,R[1533],0,[[],["u32"]]],[11,R[631],E,R[1534],0,[[],["u64"]]],[10,R[606],E,R[1535],0,[[],["u64"]]],[10,R[560],E,R[1536],0,[[],["u128"]]],[10,R[561],E,R[563],0,[[[R[9]]],["u64"]]],[10,R[562],E,R[563],0,[[[R[9]]],["u128"]]],[10,R[564],E,R[1537],0,[[["u16"]]]],[11,R[565],E,R[1538],0,[[["u32"]]]],[10,R[566],E,R[1539],0,[[["u32"]]]],[11,R[567],E,R[1540],0,[[["u64"]]]],[10,R[568],E,R[1541],0,[[["u64"]]]],[10,R[569],E,R[1542],0,[[["u128"]]]],[10,R[570],E,R[572],0,[[[R[9]],["u64"]]]],[10,R[571],E,R[572],0,[[["u128"],[R[9]]]]],[11,R[622],E,R[1543],0,[[],["i16"]]],[11,R[626],E,R[1544],0,[[],["i32"]]],[11,R[629],E,R[1545],0,[[],["i32"]]],[11,R[633],E,R[1546],0,[[],["i64"]]],[11,R[636],E,R[1547],0,[[],["i64"]]],[11,R[573],E,R[1548],0,[[],["i128"]]],[11,R[640],E,R[575],0,[[[R[9]]],["i64"]]],[11,R[574],E,R[575],0,[[[R[9]]],["i128"]]],[11,R[641],E,R[576],0,[[],["f32"]]],[11,R[642],E,R[577],0,[[],["f64"]]],[11,R[578],E,R[1549],0,[[["i16"]]]],[11,R[579],E,R[1550],0,[[["i32"]]]],[11,R[580],E,R[1551],0,[[["i32"]]]],[11,R[581],E,R[1552],0,[[["i64"]]]],[11,R[582],E,R[1553],0,[[["i64"]]]],[11,R[583],E,R[1554],0,[[["i128"]]]],[11,R[584],E,R[586],0,[[["i64"],[R[9]]]]],[11,R[585],E,R[586],0,[[["i128"],[R[9]]]]],[11,R[587],E,R[588],0,[[["f32"]]]],[11,R[589],E,R[590],0,[[["f64"]]]],[10,R[591],E,R[1555],0,[[]]],[10,R[592],E,R[1556],0,[[]]],[10,R[593],E,R[1557],0,[[]]],[10,R[594],E,R[1558],0,[[]]],[11,R[595],E,R[1559],0,[[]]],[11,R[596],E,R[1560],0,[[]]],[11,R[597],E,R[1561],0,[[]]],[11,R[598],E,R[1562],0,[[]]],[11,R[599],E,R[602],0,[[]]],[11,R[600],E,R[557],0,[[]]],[11,R[601],E,R[602],0,[[]]],[11,R[603],E,R[557],0,[[]]],[10,R[607],E,R[1563],0,[[]]],[10,R[608],E,R[1564],0,[[]]],[10,R[609],E,R[1565],0,[[]]],[10,R[610],E,R[1566],0,[[]]],[11,R[1567],E,R[1568],0,[[]]],[11,R[1569],E,R[1570],0,[[]]],[11,R[1571],E,R[1572],0,[[]]],[11,R[1573],E,R[1574],0,[[]]],[11,R[1575],E,R[1576],0,[[]]],[11,R[1577],E,R[1578],0,[[]]],[10,R[611],E,R[1579],0,[[]]],[10,R[612],E,R[1580],0,[[]]],[10,R[613],E,R[1581],0,[[]]],[10,R[614],E,R[1582],0,[[]]],[11,R[1583],E,R[1584],0,[[]]],[11,R[1585],E,R[1586],0,[[]]],[11,R[1587],E,R[1588],0,[[]]],[11,R[1589],E,R[1590],0,[[]]],[10,R[615],E,R[1591],0,[[]]],[10,R[616],E,R[1592],0,[[]]],[4,R[672],E,R[1593],N,N],[4,R[673],E,R[1594],N,N],[3,"Bytes",E,"A reference counted contiguous slice of memory.",N,N],[3,"BytesMut",E,"A unique reference to a contiguous slice of memory.",N,N],[0,"buf",E,"Utilities for working with buffers.",N,N],[3,"Chain",R[1615],"A `Chain` sequences two buffers.",N,N],[3,"Iter",E,"Iterator over the bytes contained by the buffer.",N,N],[3,"Reader",E,"A `Buf` adapter which implements `io::Read` for the inner…",N,N],[3,"Take",E,"A `Buf` adapter which limits the bytes read from an…",N,N],[3,"Writer",E,"A `BufMut` adapter which implements `io::Write` for the…",N,N],[11,"new",E,"Creates a new `Chain` sequencing the provided values.",1,[[[U],[T]],["chain"]]],[11,"first_ref",E,"Gets a reference to the first underlying `Buf`.",1,[[["self"]],[T]]],[11,"first_mut",E,"Gets a mutable reference to the first underlying `Buf`.",1,[[["self"]],[T]]],[11,"last_ref",E,"Gets a reference to the last underlying `Buf`.",1,[[["self"]],[U]]],[11,"last_mut",E,"Gets a mutable reference to the last underlying `Buf`.",1,[[["self"]],[U]]],[11,R[118],E,"Consumes this `Chain`, returning the underlying values.",1,[[]]],[11,R[118],E,"Consumes this `Iter`, returning the underlying value.",2,[[],[T]]],[11,R[120],E,R[1595],2,[[["self"]],[T]]],[11,R[121],E,R[1596],2,[[["self"]],[T]]],[11,R[120],E,R[1595],3,[[["self"]],["b"]]],[11,R[121],E,R[1596],3,[[["self"]],["b"]]],[11,R[118],E,"Consumes this `Reader`, returning the underlying value.",3,[[],["b"]]],[11,R[118],E,"Consumes this `Take`, returning the underlying value.",4,[[],[T]]],[11,R[120],E,R[1595],4,[[["self"]],[T]]],[11,R[121],E,R[1596],4,[[["self"]],[T]]],[11,"limit",E,"Returns the maximum number of bytes that can be read.",4,[[["self"]],[R[9]]]],[11,"set_limit",E,"Sets the maximum number of bytes that can be read.",4,[[["self"],[R[9]]]]],[11,R[120],E,"Gets a reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,R[121],E,"Gets a mutable reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,R[118],E,"Consumes this `Writer`, returning the underlying value.",5,[[],["b"]]],[8,"Buf",E,R[1609],N,N],[10,R[1678],E,R[1610],6,[[["self"]],[R[9]]]],[10,"bytes",E,R[1611],6,[[["self"]]]],[11,R[1680],E,R[1612],6,[[["self"]],[R[9]]]],[10,"advance",E,R[1613],6,[[["self"],[R[9]]]]],[11,R[1614],E,R[1616],6,[[["self"]],["bool"]]],[11,R[1617],E,R[1618],6,[[["self"]]]],[11,"get_u8",E,R[1619],6,[[["self"]],["u8"]]],[11,"get_i8",E,R[1620],6,[[["self"]],["i8"]]],[11,R[1681],E,R[1621],6,[[["self"]],["u16"]]],[11,R[1682],E,R[1622],6,[[["self"]],["u16"]]],[11,R[1683],E,R[1623],6,[[["self"]],["i16"]]],[11,R[1684],E,R[1624],6,[[["self"]],["i16"]]],[11,R[1685],E,R[1597],6,[[["self"]],["u32"]]],[11,R[1686],E,R[1597],6,[[["self"]],["u32"]]],[11,R[1687],E,R[1625],6,[[["self"]],["i32"]]],[11,R[1688],E,R[1626],6,[[["self"]],["i32"]]],[11,R[1689],E,R[1627],6,[[["self"]],["u64"]]],[11,R[1690],E,R[1628],6,[[["self"]],["u64"]]],[11,R[1691],E,R[1629],6,[[["self"]],["i64"]]],[11,R[1692],E,R[1630],6,[[["self"]],["i64"]]],[11,R[1631],E,R[1632],6,[[["self"],[R[9]]],["u64"]]],[11,R[1633],E,R[1634],6,[[["self"],[R[9]]],["u64"]]],[11,R[1693],E,R[1635],6,[[["self"],[R[9]]],["i64"]]],[11,R[1694],E,R[1636],6,[[["self"],[R[9]]],["i64"]]],[11,R[1695],E,R[1598],6,[[["self"]],["f32"]]],[11,R[1696],E,R[1598],6,[[["self"]],["f32"]]],[11,R[1697],E,R[1599],6,[[["self"]],["f64"]]],[11,R[1698],E,R[1599],6,[[["self"]],["f64"]]],[11,"collect",E,R[1637],6,[[],["b"]]],[11,"take",E,R[1638],6,[[[R[9]]],["take"]]],[11,"chain",E,R[1639],6,[[[U]],["chain"]]],[11,"by_ref",E,R[1640],6,[[["self"]],["self"]]],[11,"reader",E,R[1641],6,[[],["reader"]]],[11,"iter",E,R[1642],6,[[],["iter"]]],[8,"BufMut",E,R[1643],N,N],[10,R[1644],E,R[1645],7,[[["self"]],[R[9]]]],[10,R[1646],E,R[1647],7,[[["self"],[R[9]]]]],[11,R[1648],E,R[1649],7,[[["self"]],["bool"]]],[10,R[1679],E,R[1650],7,[[["self"]]]],[11,R[1651],E,R[1652],7,[[["self"]],[R[9]]]],[11,"put",E,R[1600],7,[[["self"],["intobuf"]]]],[11,R[1699],E,R[1600],7,[[["self"]]]],[11,"put_u8",E,R[1653],7,[[["self"],["u8"]]]],[11,"put_i8",E,R[1654],7,[[["self"],["i8"]]]],[11,R[1700],E,R[1655],7,[[["self"],["u16"]]]],[11,R[1701],E,R[1656],7,[[["self"],["u16"]]]],[11,R[1702],E,R[1657],7,[[["self"],["i16"]]]],[11,R[1703],E,R[1658],7,[[["self"],["i16"]]]],[11,R[1704],E,R[1659],7,[[["self"],["u32"]]]],[11,R[1705],E,R[1660],7,[[["self"],["u32"]]]],[11,R[1706],E,R[1661],7,[[["self"],["i32"]]]],[11,R[1707],E,R[1662],7,[[["self"],["i32"]]]],[11,R[1708],E,R[1663],7,[[["self"],["u64"]]]],[11,R[1709],E,R[1664],7,[[["self"],["u64"]]]],[11,R[1710],E,R[1665],7,[[["self"],["i64"]]]],[11,R[1711],E,R[1666],7,[[["self"],["i64"]]]],[11,R[1667],E,R[1668],7,[[["self"],["u64"],[R[9]]]]],[11,R[1669],E,R[1670],7,[[["self"],["u64"],[R[9]]]]],[11,R[1712],E,R[1671],7,[[["self"],["i64"],[R[9]]]]],[11,R[1713],E,R[1672],7,[[["self"],["i64"],[R[9]]]]],[11,R[1714],E,R[1601],7,[[["self"],["f32"]]]],[11,R[1715],E,R[1601],7,[[["self"],["f32"]]]],[11,R[1716],E,R[1602],7,[[["self"],["f64"]]]],[11,R[1717],E,R[1602],7,[[["self"],["f64"]]]],[11,"by_ref",E,R[1673],7,[[["self"]],["self"]]],[11,"writer",E,R[1674],7,[[],["writer"]]],[8,"FromBuf",E,"Conversion from a [`Buf`]",N,N],[10,"from_buf",E,"Creates a value from a buffer.",8,[[[T]],["self"]]],[8,"IntoBuf",E,R[1675],N,N],[16,"Buf",E,R[1676],9,N],[10,"into_buf",E,R[1677],9,[[]]],[11,R[72],"bytes","Creates a new `Bytes` with the specified capacity.",10,[[[R[9]]],["bytes"]]],[11,"new",E,"Creates a new empty `Bytes`.",10,[[],["bytes"]]],[11,"from_static",E,"Creates a new `Bytes` from a static slice.",10,[[],["bytes"]]],[11,"len",E,"Returns the number of bytes contained in this `Bytes`.",10,[[["self"]],[R[9]]]],[11,R[73],E,"Returns true if the `Bytes` has a length of 0.",10,[[["self"]],["bool"]]],[11,"slice",E,"Returns a slice of self for the index range `[begin..end)`.",10,[[["self"],[R[9]]],["bytes"]]],[11,"slice_from",E,"Returns a slice of self for the index range…",10,[[["self"],[R[9]]],["bytes"]]],[11,"slice_to",E,"Returns a slice of self for the index range `[0..end)`.",10,[[["self"],[R[9]]],["bytes"]]],[11,"slice_ref",E,"Returns a slice of self that is equivalent to the given…",10,[[["self"]],["bytes"]]],[11,"split_off",E,R[1603],10,[[["self"],[R[9]]],["bytes"]]],[11,"split_to",E,R[1603],10,[[["self"],[R[9]]],["bytes"]]],[11,R[2724],E,R[1605],10,[[["self"],[R[9]]]]],[11,"advance",E,R[1606],10,[[["self"],[R[9]]]]],[11,"clear",E,R[1607],10,[[["self"]]]],[11,"try_mut",E,"Attempts to convert into a `BytesMut` handle.",10,[[],[[R[13],[R[1604],"bytes"]],["bytes"],[R[1604]]]]],[11,R[40],E,R[1608],10,[[["self"]]]],[11,R[72],E,"Creates a new `BytesMut` with the specified capacity.",11,[[[R[9]]],[R[1604]]]],[11,"new",E,"Creates a new `BytesMut` with default capacity.",11,[[],[R[1604]]]],[11,"len",E,"Returns the number of bytes contained in this `BytesMut`.",11,[[["self"]],[R[9]]]],[11,R[73],E,"Returns true if the `BytesMut` has a length of 0.",11,[[["self"]],["bool"]]],[11,R[74],E,"Returns the number of bytes the `BytesMut` can hold…",11,[[["self"]],[R[9]]]],[11,"freeze",E,"Converts `self` into an immutable `Bytes`.",11,[[],["bytes"]]],[11,"split_off",E,R[1603],11,[[["self"],[R[9]]],[R[1604]]]],[11,"take",E,"Removes the bytes from the current view, returning them in…",11,[[["self"]],[R[1604]]]],[11,"split_to",E,"Splits the buffer into two at the given index.",11,[[["self"],[R[9]]],[R[1604]]]],[11,R[2724],E,R[1605],11,[[["self"],[R[9]]]]],[11,"advance",E,R[1606],11,[[["self"],[R[9]]]]],[11,"clear",E,R[1607],11,[[["self"]]]],[11,"resize",E,"Resizes the buffer so that `len` is equal to `new_len`.",11,[[["self"],[R[9]],["u8"]]]],[11,"set_len",E,"Sets the length of the buffer.",11,[[["self"],[R[9]]]]],[11,"reserve",E,"Reserves capacity for at least `additional` more bytes to…",11,[[["self"],[R[9]]]]],[11,R[40],E,R[1608],11,[[["self"]]]],[11,"unsplit",E,"Combine splitted BytesMut objects back as contiguous.",11,[[["self"],[R[1604]]]]],[8,"Buf",E,R[1609],N,N],[10,R[1678],E,R[1610],6,[[["self"]],[R[9]]]],[10,"bytes",E,R[1611],6,[[["self"]]]],[11,R[1680],R[1615],R[1612],6,[[["self"]],[R[9]]]],[10,"advance","bytes",R[1613],6,[[["self"],[R[9]]]]],[11,R[1614],R[1615],R[1616],6,[[["self"]],["bool"]]],[11,R[1617],E,R[1618],6,[[["self"]]]],[11,"get_u8",E,R[1619],6,[[["self"]],["u8"]]],[11,"get_i8",E,R[1620],6,[[["self"]],["i8"]]],[11,R[1681],E,R[1621],6,[[["self"]],["u16"]]],[11,R[1682],E,R[1622],6,[[["self"]],["u16"]]],[11,R[1683],E,R[1623],6,[[["self"]],["i16"]]],[11,R[1684],E,R[1624],6,[[["self"]],["i16"]]],[11,R[1685],E,R[1597],6,[[["self"]],["u32"]]],[11,R[1686],E,R[1597],6,[[["self"]],["u32"]]],[11,R[1687],E,R[1625],6,[[["self"]],["i32"]]],[11,R[1688],E,R[1626],6,[[["self"]],["i32"]]],[11,R[1689],E,R[1627],6,[[["self"]],["u64"]]],[11,R[1690],E,R[1628],6,[[["self"]],["u64"]]],[11,R[1691],E,R[1629],6,[[["self"]],["i64"]]],[11,R[1692],E,R[1630],6,[[["self"]],["i64"]]],[11,R[1631],E,R[1632],6,[[["self"],[R[9]]],["u64"]]],[11,R[1633],E,R[1634],6,[[["self"],[R[9]]],["u64"]]],[11,R[1693],E,R[1635],6,[[["self"],[R[9]]],["i64"]]],[11,R[1694],E,R[1636],6,[[["self"],[R[9]]],["i64"]]],[11,R[1695],E,R[1598],6,[[["self"]],["f32"]]],[11,R[1696],E,R[1598],6,[[["self"]],["f32"]]],[11,R[1697],E,R[1599],6,[[["self"]],["f64"]]],[11,R[1698],E,R[1599],6,[[["self"]],["f64"]]],[11,"collect",E,R[1637],6,[[],["b"]]],[11,"take",E,R[1638],6,[[[R[9]]],["take"]]],[11,"chain",E,R[1639],6,[[[U]],["chain"]]],[11,"by_ref",E,R[1640],6,[[["self"]],["self"]]],[11,"reader",E,R[1641],6,[[],["reader"]]],[11,"iter",E,R[1642],6,[[],["iter"]]],[8,"BufMut","bytes",R[1643],N,N],[10,R[1644],E,R[1645],7,[[["self"]],[R[9]]]],[10,R[1646],E,R[1647],7,[[["self"],[R[9]]]]],[11,R[1648],R[1615],R[1649],7,[[["self"]],["bool"]]],[10,R[1679],"bytes",R[1650],7,[[["self"]]]],[11,R[1651],R[1615],R[1652],7,[[["self"]],[R[9]]]],[11,"put",E,R[1600],7,[[["self"],["intobuf"]]]],[11,R[1699],E,R[1600],7,[[["self"]]]],[11,"put_u8",E,R[1653],7,[[["self"],["u8"]]]],[11,"put_i8",E,R[1654],7,[[["self"],["i8"]]]],[11,R[1700],E,R[1655],7,[[["self"],["u16"]]]],[11,R[1701],E,R[1656],7,[[["self"],["u16"]]]],[11,R[1702],E,R[1657],7,[[["self"],["i16"]]]],[11,R[1703],E,R[1658],7,[[["self"],["i16"]]]],[11,R[1704],E,R[1659],7,[[["self"],["u32"]]]],[11,R[1705],E,R[1660],7,[[["self"],["u32"]]]],[11,R[1706],E,R[1661],7,[[["self"],["i32"]]]],[11,R[1707],E,R[1662],7,[[["self"],["i32"]]]],[11,R[1708],E,R[1663],7,[[["self"],["u64"]]]],[11,R[1709],E,R[1664],7,[[["self"],["u64"]]]],[11,R[1710],E,R[1665],7,[[["self"],["i64"]]]],[11,R[1711],E,R[1666],7,[[["self"],["i64"]]]],[11,R[1667],E,R[1668],7,[[["self"],["u64"],[R[9]]]]],[11,R[1669],E,R[1670],7,[[["self"],["u64"],[R[9]]]]],[11,R[1712],E,R[1671],7,[[["self"],["i64"],[R[9]]]]],[11,R[1713],E,R[1672],7,[[["self"],["i64"],[R[9]]]]],[11,R[1714],E,R[1601],7,[[["self"],["f32"]]]],[11,R[1715],E,R[1601],7,[[["self"],["f32"]]]],[11,R[1716],E,R[1602],7,[[["self"],["f64"]]]],[11,R[1717],E,R[1602],7,[[["self"],["f64"]]]],[11,"by_ref",E,R[1673],7,[[["self"]],["self"]]],[11,"writer",E,R[1674],7,[[],["writer"]]],[8,"IntoBuf","bytes",R[1675],N,N],[16,"Buf",E,R[1676],9,N],[10,"into_buf",E,R[1677],9,[[]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[43],E,E,10,[[],["i"]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[43],E,E,11,[[],["i"]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",R[1615],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[43],E,E,2,[[],["i"]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"cmp","bytes",E,12,[[["self"],[R[617]]],[R[47]]]],[11,"cmp",E,E,13,[[["self"],[R[618]]],[R[47]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"eq",E,E,12,[[["self"],[R[617]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[618]]],["bool"]]],[11,R[77],E,E,12,[[],[R[617]]]],[11,R[77],E,E,13,[[],[R[618]]]],[11,R[63],E,E,12,[[["self"],[R[617]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,13,[[["self"],[R[618]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[604],E,E,12,[[],["u16"]]],[11,R[605],E,E,12,[[],["u32"]]],[11,R[606],E,E,12,[[],["u64"]]],[11,R[560],E,E,12,[[],["u128"]]],[11,R[561],E,E,12,[[[R[9]]],["u64"]]],[11,R[562],E,E,12,[[[R[9]]],["u128"]]],[11,R[564],E,E,12,[[["u16"]]]],[11,R[566],E,E,12,[[["u32"]]]],[11,R[568],E,E,12,[[["u64"]]]],[11,R[569],E,E,12,[[["u128"]]]],[11,R[570],E,E,12,[[[R[9]],["u64"]]]],[11,R[571],E,E,12,[[["u128"],[R[9]]]]],[11,R[591],E,E,12,[[]]],[11,R[592],E,E,12,[[]]],[11,R[593],E,E,12,[[]]],[11,R[594],E,E,12,[[]]],[11,R[607],E,E,12,[[]]],[11,R[608],E,E,12,[[]]],[11,R[609],E,E,12,[[]]],[11,R[610],E,E,12,[[]]],[11,R[611],E,E,12,[[]]],[11,R[612],E,E,12,[[]]],[11,R[613],E,E,12,[[]]],[11,R[614],E,E,12,[[]]],[11,R[615],E,E,12,[[]]],[11,R[616],E,E,12,[[]]],[11,R[604],E,E,13,[[],["u16"]]],[11,R[605],E,E,13,[[],["u32"]]],[11,R[606],E,E,13,[[],["u64"]]],[11,R[560],E,E,13,[[],["u128"]]],[11,R[561],E,E,13,[[[R[9]]],["u64"]]],[11,R[562],E,E,13,[[[R[9]]],["u128"]]],[11,R[564],E,E,13,[[["u16"]]]],[11,R[566],E,E,13,[[["u32"]]]],[11,R[568],E,E,13,[[["u64"]]]],[11,R[569],E,E,13,[[["u128"]]]],[11,R[570],E,E,13,[[[R[9]],["u64"]]]],[11,R[571],E,E,13,[[["u128"],[R[9]]]]],[11,R[591],E,E,13,[[]]],[11,R[592],E,E,13,[[]]],[11,R[593],E,E,13,[[]]],[11,R[594],E,E,13,[[]]],[11,R[607],E,E,13,[[]]],[11,R[608],E,E,13,[[]]],[11,R[609],E,E,13,[[]]],[11,R[610],E,E,13,[[]]],[11,R[611],E,E,13,[[]]],[11,R[612],E,E,13,[[]]],[11,R[613],E,E,13,[[]]],[11,R[614],E,E,13,[[]]],[11,R[615],E,E,13,[[]]],[11,R[616],E,E,13,[[]]],[11,"clone",E,E,13,[[["self"]],[R[618]]]],[11,"clone",E,E,12,[[["self"]],[R[617]]]],[11,R[1678],R[1615],E,1,[[["self"]],[R[9]]]],[11,"bytes",E,E,1,[[["self"]]]],[11,"advance",E,E,1,[[["self"],[R[9]]]]],[11,R[1680],E,E,1,[[["self"]],[R[9]]]],[11,R[1678],E,E,4,[[["self"]],[R[9]]]],[11,"bytes",E,E,4,[[["self"]]]],[11,"advance",E,E,4,[[["self"],[R[9]]]]],[11,R[1644],E,E,1,[[["self"]],[R[9]]]],[11,R[1679],E,E,1,[[["self"]]]],[11,R[1646],E,E,1,[[["self"],[R[9]]]]],[11,R[1651],E,E,1,[[["self"]],[R[9]]]],[11,R[1644],"bytes",E,11,[[["self"]],[R[9]]]],[11,R[1646],E,E,11,[[["self"],[R[9]]]]],[11,R[1679],E,E,11,[[["self"]]]],[11,R[1699],E,E,11,[[["self"]]]],[11,"put_u8",E,E,11,[[["self"],["u8"]]]],[11,"put_i8",E,E,11,[[["self"],["i8"]]]],[11,"from_buf",E,E,10,[[[T]],["self"]]],[11,"from_buf",E,E,11,[[[T]],["self"]]],[11,"into_buf",E,E,10,[[]]],[11,"into_buf",E,E,11,[[]]],[11,"extend",E,E,10,[[["self"],[T]]]],[11,"extend",E,E,10,[[["self"],[T]]]],[11,"extend",E,E,11,[[["self"],[T]]]],[11,"extend",E,E,11,[[["self"],[T]]]],[11,R[77],E,E,10,[[],["bytes"]]],[11,R[77],E,E,11,[[],[R[1604]]]],[11,"next",R[1615],E,2,[[["self"]],[[R[45],["u8"]],["u8"]]]],[11,R[46],E,E,2,[[["self"]]]],[11,"clone","bytes",E,10,[[["self"]],["bytes"]]],[11,"clone",E,E,11,[[["self"]],[R[1604]]]],[11,"cmp",E,E,10,[[["self"],["bytes"]],[R[47]]]],[11,"cmp",E,E,11,[[[R[1604]],["self"]],[R[47]]]],[11,"from",E,E,10,[[[R[1604]]],["bytes"]]],[11,"from",E,E,10,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from",E,E,10,[[["string"]],["bytes"]]],[11,"from",E,E,10,[[],["bytes"]]],[11,"from",E,E,10,[[["str"]],["bytes"]]],[11,"from",E,E,11,[[["vec",["u8"]],["u8"]],[R[1604]]]],[11,"from",E,E,11,[[["string"]],[R[1604]]]],[11,"from",E,E,11,[[],[R[1604]]]],[11,"from",E,E,11,[[["str"]],[R[1604]]]],[11,"from",E,E,11,[[["bytes"]],[R[1604]]]],[11,R[43],E,E,10,[[]]],[11,R[43],E,E,11,[[]]],[11,R[63],E,E,10,[[["self"],["bytes"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,11,[[[R[1604]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,11,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,11,[[["self"],["str"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,11,[[["vec"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,11,[[["string"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,11,[[["self"],[T]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,10,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,10,[[["self"],["str"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,10,[[["vec"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,10,[[["string"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,10,[[["self"],[T]],[[R[45],[R[47]]],[R[47]]]]],[11,"as_mut",E,E,11,[[["self"]]]],[11,"eq",E,E,10,[[["self"],["bytes"]],["bool"]]],[11,"eq",E,E,11,[[[R[1604]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,11,[[["vec"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["string"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[T]],["bool"]]],[11,"eq",E,E,10,[[["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,10,[[["vec"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["string"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[T]],["bool"]]],[11,"eq",E,E,10,[[[R[1604]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["bytes"]],["bool"]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"as_ref",E,E,11,[[["self"]]]],[11,R[60],E,E,11,[[["self"]]]],[11,"fmt",R[1615],E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","bytes",E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"write_str",E,E,11,[[["self"],["str"]],[R[13]]]],[11,R[3169],E,E,11,[[["self"],[R[3034]]],[R[13]]]],[11,"deref",E,E,10,[[["self"]]]],[11,"deref",E,E,11,[[["self"]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,11,[[["self"],["h"]]]],[11,R[196],E,E,11,[[[R[44]]],["self"]]],[11,R[196],E,E,10,[[[R[44]]],["self"]]],[11,R[196],E,E,11,[[[R[44]]],["self"]]],[11,R[196],E,E,10,[[[R[44]]],["self"]]],[11,R[15],E,E,11,[[["self"]]]],[11,R[41],E,E,10,[[["self"]]]],[11,R[41],E,E,11,[[["self"]]]],[11,"write",R[1615],E,5,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,5,[[["self"]],[R[13]]]],[11,"fill_buf",E,E,3,[[["self"]],[R[13]]]],[11,"consume",E,E,3,[[["self"],[R[9]]]]],[11,"read",E,E,3,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[1680],E,R[1612],6,[[["self"]],[R[9]]]],[11,R[1614],E,R[1616],6,[[["self"]],["bool"]]],[11,R[1617],E,R[1618],6,[[["self"]]]],[11,"get_u8",E,R[1619],6,[[["self"]],["u8"]]],[11,"get_i8",E,R[1620],6,[[["self"]],["i8"]]],[11,R[1681],E,R[1621],6,[[["self"]],["u16"]]],[11,R[1682],E,R[1622],6,[[["self"]],["u16"]]],[11,R[1683],E,R[1623],6,[[["self"]],["i16"]]],[11,R[1684],E,R[1624],6,[[["self"]],["i16"]]],[11,R[1685],E,R[1597],6,[[["self"]],["u32"]]],[11,R[1686],E,R[1597],6,[[["self"]],["u32"]]],[11,R[1687],E,R[1625],6,[[["self"]],["i32"]]],[11,R[1688],E,R[1626],6,[[["self"]],["i32"]]],[11,R[1689],E,R[1627],6,[[["self"]],["u64"]]],[11,R[1690],E,R[1628],6,[[["self"]],["u64"]]],[11,R[1691],E,R[1629],6,[[["self"]],["i64"]]],[11,R[1692],E,R[1630],6,[[["self"]],["i64"]]],[11,R[1631],E,R[1632],6,[[["self"],[R[9]]],["u64"]]],[11,R[1633],E,R[1634],6,[[["self"],[R[9]]],["u64"]]],[11,R[1693],E,R[1635],6,[[["self"],[R[9]]],["i64"]]],[11,R[1694],E,R[1636],6,[[["self"],[R[9]]],["i64"]]],[11,R[1695],E,R[1598],6,[[["self"]],["f32"]]],[11,R[1696],E,R[1598],6,[[["self"]],["f32"]]],[11,R[1697],E,R[1599],6,[[["self"]],["f64"]]],[11,R[1698],E,R[1599],6,[[["self"]],["f64"]]],[11,"collect",E,R[1637],6,[[],["b"]]],[11,"take",E,R[1638],6,[[[R[9]]],["take"]]],[11,"chain",E,R[1639],6,[[[U]],["chain"]]],[11,"by_ref",E,R[1640],6,[[["self"]],["self"]]],[11,"reader",E,R[1641],6,[[],["reader"]]],[11,"iter",E,R[1642],6,[[],["iter"]]],[11,R[1648],E,R[1649],7,[[["self"]],["bool"]]],[11,R[1651],E,R[1652],7,[[["self"]],[R[9]]]],[11,"put",E,R[1600],7,[[["self"],["intobuf"]]]],[11,R[1699],E,R[1600],7,[[["self"]]]],[11,"put_u8",E,R[1653],7,[[["self"],["u8"]]]],[11,"put_i8",E,R[1654],7,[[["self"],["i8"]]]],[11,R[1700],E,R[1655],7,[[["self"],["u16"]]]],[11,R[1701],E,R[1656],7,[[["self"],["u16"]]]],[11,R[1702],E,R[1657],7,[[["self"],["i16"]]]],[11,R[1703],E,R[1658],7,[[["self"],["i16"]]]],[11,R[1704],E,R[1659],7,[[["self"],["u32"]]]],[11,R[1705],E,R[1660],7,[[["self"],["u32"]]]],[11,R[1706],E,R[1661],7,[[["self"],["i32"]]]],[11,R[1707],E,R[1662],7,[[["self"],["i32"]]]],[11,R[1708],E,R[1663],7,[[["self"],["u64"]]]],[11,R[1709],E,R[1664],7,[[["self"],["u64"]]]],[11,R[1710],E,R[1665],7,[[["self"],["i64"]]]],[11,R[1711],E,R[1666],7,[[["self"],["i64"]]]],[11,R[1667],E,R[1668],7,[[["self"],["u64"],[R[9]]]]],[11,R[1669],E,R[1670],7,[[["self"],["u64"],[R[9]]]]],[11,R[1712],E,R[1671],7,[[["self"],["i64"],[R[9]]]]],[11,R[1713],E,R[1672],7,[[["self"],["i64"],[R[9]]]]],[11,R[1714],E,R[1601],7,[[["self"],["f32"]]]],[11,R[1715],E,R[1601],7,[[["self"],["f32"]]]],[11,R[1716],E,R[1602],7,[[["self"],["f64"]]]],[11,R[1717],E,R[1602],7,[[["self"],["f64"]]]],[11,"by_ref",E,R[1673],7,[[["self"]],["self"]]],[11,"writer",E,R[1674],7,[[],["writer"]]]],"p":[[8,R[671]],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[3,"Bytes"],[3,"BytesMut"],[4,R[672]],[4,R[673]]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["cgmath"]={"doc":"A low-dimensional linear algebra library, targeted at…","i":[[8,R[94],"cgmath",R[2515],N,N],[16,"Epsilon",E,R[2516],0,N],[10,R[2517],E,R[2518],0,[[]]],[10,R[2519],E,R[2520],0,[[]]],[10,R[2521],E,R[2522],0,[[],["u32"]]],[10,R[89],E,R[2523],0,[[["self"]],["bool"]]],[11,R[90],E,R[2524],0,[[["self"]],["bool"]]],[10,"ulps_eq",E,R[2525],0,[[["self"],["u32"]],["bool"]]],[11,"ulps_ne",E,R[2526],0,[[["self"],["u32"]],["bool"]]],[3,R[93],E,R[78],N,N],[12,"lhs",E,R[79],1,N],[12,"rhs",E,R[80],1,N],[12,R[82],E,R[81],1,N],[12,R[84],E,R[2527],1,N],[3,"Ulps",E,R[78],N,N],[12,"lhs",E,R[79],2,N],[12,"rhs",E,R[80],2,N],[12,R[82],E,R[81],2,N],[12,R[86],E,R[2528],2,N],[14,"ulps_eq",E,R[91],N,N],[14,R[2529],E,E,N,N],[14,R[2530],E,E,N,N],[14,R[89],E,R[91],N,N],[14,R[90],E,R[92],N,N],[14,"ulps_ne",E,R[92],N,N],[14,R[2531],E,E,N,N],[14,R[2532],E,E,N,N],[8,"Bounded",E,R[2186],N,N],[10,R[958],E,R[2187],3,[[],["self"]]],[10,R[959],E,R[2188],3,[[],["self"]]],[8,"One",E,R[2144],N,N],[10,"one",E,R[2145],4,[[],["self"]]],[11,"set_one",E,R[2146],4,[[["self"]]]],[11,"is_one",E,R[2147],4,[[["self"]],["bool"]]],[8,"Zero",E,R[2140],N,N],[10,"zero",E,R[2141],5,[[],["self"]]],[11,"set_zero",E,R[2142],5,[[["self"]]]],[10,"is_zero",E,R[2143],5,[[["self"]],["bool"]]],[3,"Matrix2",E,"A 2 x 2, column major matrix",N,N],[12,"x",E,R[2533],6,N],[12,"y",E,R[2534],6,N],[3,"Matrix3",E,"A 3 x 3, column major matrix",N,N],[12,"x",E,R[2533],7,N],[12,"y",E,R[2534],7,N],[12,"z",E,R[2535],7,N],[3,"Matrix4",E,"A 4 x 4, column major matrix",N,N],[12,"x",E,R[2533],8,N],[12,"y",E,R[2534],8,N],[12,"z",E,R[2535],8,N],[12,"w",E,"The fourth column of the matrix.",8,N],[3,"Quaternion",E,"A quaternion in scalar/vector form.",N,N],[12,"s",E,"The scalar part of the quaternion.",9,N],[12,"v",E,"The vector part of the quaternion.",9,N],[3,"Vector1",E,"A 1-dimensional vector.",N,N],[12,"x",E,R[2536],10,N],[3,"Vector2",E,"A 2-dimensional vector.",N,N],[12,"x",E,R[2536],11,N],[12,"y",E,R[2537],11,N],[3,"Vector3",E,"A 3-dimensional vector.",N,N],[12,"x",E,R[2536],12,N],[12,"y",E,R[2537],12,N],[12,"z",E,R[2538],12,N],[3,"Vector4",E,"A 4-dimensional vector.",N,N],[12,"x",E,R[2536],13,N],[12,"y",E,R[2537],13,N],[12,"z",E,R[2538],13,N],[12,"w",E,"The w component of the vector.",13,N],[3,"Deg",E,"An angle, in degrees.",N,N],[12,"0",E,E,14,N],[3,"Rad",E,"An angle, in radians.",N,N],[12,"0",E,E,15,N],[3,"Euler",E,"A set of [Euler angles] representing a rotation in…",N,N],[12,"x",E,"The angle to apply around the x axis. Also known at the…",16,N],[12,"y",E,"The angle to apply around the y axis. Also known at the yaw.",16,N],[12,"z",E,"The angle to apply around the z axis. Also known at the…",16,N],[3,"Point1",E,"A point in 1-dimensional space.",N,N],[12,"x",E,E,17,N],[3,"Point2",E,"A point in 2-dimensional space.",N,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[3,"Point3",E,"A point in 3-dimensional space.",N,N],[12,"x",E,E,19,N],[12,"y",E,E,19,N],[12,"z",E,E,19,N],[3,"Basis2",E,"A two-dimensional rotation matrix.",N,N],[3,"Basis3",E,"A three-dimensional rotation matrix.",N,N],[3,"Decomposed",E,"A generic transformation consisting of a rotation,…",N,N],[12,"scale",E,E,20,N],[12,"rot",E,E,20,N],[12,"disp",E,E,20,N],[3,R[2720],E,"A perspective projection based on a vertical field-of-view…",N,N],[12,"fovy",E,E,21,N],[12,"aspect",E,E,21,N],[12,"near",E,E,21,N],[12,"far",E,E,21,N],[3,R[2721],E,"A perspective projection with arbitrary…",N,N],[12,"left",E,E,22,N],[12,"right",E,E,22,N],[12,"bottom",E,E,22,N],[12,"top",E,E,22,N],[12,"near",E,E,22,N],[12,"far",E,E,22,N],[3,"Ortho",E,"An orthographic projection with arbitrary…",N,N],[12,"left",E,E,23,N],[12,"right",E,E,23,N],[12,"bottom",E,E,23,N],[12,"top",E,E,23,N],[12,"near",E,E,23,N],[12,"far",E,E,23,N],[5,"dot",E,"Dot product of two vectors.",N,[[["innerspace"]]]],[5,"vec1",E,R[2539],N,[[["s"]],["vector1"]]],[5,"vec2",E,R[2539],N,[[["s"]],["vector2"]]],[5,"vec3",E,R[2539],N,[[["s"]],["vector3"]]],[5,"vec4",E,R[2539],N,[[["s"]],["vector4"]]],[5,R[2606],E,"Create a perspective projection matrix.",N,[[["into",["rad"]],["rad"],[R[2540]]],[[R[2540]],["matrix4"]]]],[5,"frustum",E,"Create a perspective matrix from a view frustum.",N,[[[R[2540]]],[[R[2540]],["matrix4"]]]],[5,"ortho",E,"Create an orthographic projection matrix.",N,[[[R[2540]]],[[R[2540]],["matrix4"]]]],[0,"conv",E,"Constrained conversion functions for assisting in…",N,N],[5,"array2","cgmath::conv","Force a conversion into a 2-element array.",N,[[["into"]]]],[5,"array3",E,"Force a conversion into a 3-element array.",N,[[["into"]]]],[5,"array4",E,"Force a conversion into a 4-element array.",N,[[["into"]]]],[5,"array2x2",E,"Force a conversion into a 2x2-element array.",N,[[["into"]]]],[5,"array3x3",E,"Force a conversion into a 3x3-element array.",N,[[["into"]]]],[5,"array4x4",E,"Force a conversion into a 4x4-element array.",N,[[["into"]]]],[0,"prelude","cgmath","This module contains the most common traits used in…",N,N],[8,"Bounded",R[2597],R[2186],N,N],[10,R[958],E,R[2187],3,[[],["self"]]],[10,R[959],E,R[2188],3,[[],["self"]]],[8,"One",E,R[2144],N,N],[10,"one",E,R[2145],4,[[],["self"]]],[11,"set_one",E,R[2146],4,[[["self"]]]],[11,"is_one",E,R[2147],4,[[["self"]],["bool"]]],[8,"Zero",E,R[2140],N,N],[10,"zero",E,R[2141],5,[[],["self"]]],[11,"set_zero",E,R[2142],5,[[["self"]]]],[10,"is_zero",E,R[2143],5,[[["self"]],["bool"]]],[8,"Array",E,R[2607],N,N],[16,"Element",E,E,24,N],[10,"len",E,R[2608],24,[[],[R[9]]]],[10,R[2609],E,R[2610],24,[[],["self"]]],[11,"as_ptr",E,R[2541],24,[[["self"]]]],[11,R[2544],E,R[2542],24,[[["self"]]]],[11,R[2543],E,R[2545],24,[[["self"],[R[9]]]]],[10,"sum",E,R[2611],24,[[]]],[10,"product",E,R[2612],24,[[]]],[8,R[2613],E,R[2614],N,N],[10,R[2615],E,E,25,[[["rhs"]],["self"]]],[10,R[2616],E,E,25,[[["rhs"]],["self"]]],[10,R[2617],E,E,25,[[["rhs"]],["self"]]],[10,R[2618],E,E,25,[[["rhs"]],["self"]]],[10,R[2619],E,E,25,[[["rhs"]],["self"]]],[10,R[2620],E,E,25,[[["self"],["rhs"]]]],[10,R[2621],E,E,25,[[["self"],["rhs"]]]],[10,R[2622],E,E,25,[[["self"],["rhs"]]]],[10,R[2623],E,E,25,[[["self"],["rhs"]]]],[10,R[2624],E,E,25,[[["self"],["rhs"]]]],[8,R[2625],E,R[2626],N,N],[16,"Scalar",E,R[2627],26,N],[8,R[2628],E,R[2629],N,N],[16,"Metric",E,R[2630],27,N],[10,R[2705],E,R[2631],27,[[]]],[11,"distance",E,R[2546],27,[[]]],[8,R[2722],E,R[2632],N,N],[10,"dot",E,R[2633],28,[[]]],[11,R[2547],E,R[2548],28,[[],["bool"]]],[11,R[2634],E,R[2549],28,[[]]],[11,R[2723],E,R[2550],28,[[]]],[11,"angle",E,R[2551],28,[[],["rad"]]],[11,R[2567],E,R[2552],28,[[],["self"]]],[11,R[2553],E,R[2554],28,[[],["self"]]],[11,"lerp",E,R[2555],28,[[],["self"]]],[11,R[2635],E,R[2556],28,[[],["self"]]],[8,R[2636],E,R[2637],N,N],[16,"Scalar",E,R[2638],29,N],[16,"Diff",E,R[2639],29,N],[10,"origin",E,R[2640],29,[[],["self"]]],[10,"from_vec",E,R[2641],29,[[],["self"]]],[10,"to_vec",E,R[2642],29,[[]]],[11,"midpoint",E,R[2557],29,[[],["self"]]],[11,"centroid",E,R[2558],29,[[],["self"]]],[10,"dot",E,R[2643],29,[[]]],[8,"Matrix",E,R[2644],N,N],[16,"Row",E,R[2645],30,N],[16,"Column",E,R[2646],30,N],[16,"Transpose",E,R[2647],30,N],[11,"as_ptr",E,R[2541],30,[[["self"]]]],[11,R[2544],E,R[2542],30,[[["self"]]]],[11,R[2559],E,R[2560],30,[[["self"],[R[9]]]]],[10,"row",E,R[2648],30,[[["self"],[R[9]]]]],[10,R[2706],E,R[2649],30,[[["self"],[R[9]]]]],[10,R[2650],E,R[2651],30,[[["self"],[R[9]]]]],[10,R[2543],E,R[2652],30,[[["self"]]]],[10,R[2707],E,R[2653],30,[[["self"]]]],[8,R[2654],E,R[2655],N,N],[16,"ColumnRow",E,R[2656],31,N],[10,R[2609],E,R[2657],31,[[],["self"]]],[10,R[2658],E,R[2659],31,[[],["self"]]],[11,"identity",E,R[2561],31,[[],["self"]]],[10,R[2660],E,R[2661],31,[[["self"]]]],[10,R[2662],E,R[2663],31,[[["self"]]]],[10,"diagonal",E,R[2664],31,[[["self"]]]],[11,"trace",E,R[2562],31,[[["self"]]]],[10,"invert",E,R[2665],31,[[["self"]],[R[45]]]],[11,R[2563],E,R[2564],31,[[["self"]],["bool"]]],[11,R[2565],E,R[2566],31,[[["self"]],["bool"]]],[10,R[2666],E,R[2667],31,[[["self"]],["bool"]]],[10,R[2668],E,R[2669],31,[[["self"]],["bool"]]],[8,"Angle",E,R[2670],N,N],[16,"Unitless",E,E,32,N],[11,R[2567],E,R[2568],32,[[],["self"]]],[11,"opposite",E,R[2569],32,[[],["self"]]],[11,"bisect",E,R[2570],32,[[],["self"]]],[10,R[2708],E,R[2671],32,[[],["self"]]],[11,R[2672],E,R[2571],32,[[],["self"]]],[11,R[2673],E,R[2572],32,[[],["self"]]],[11,R[2674],E,R[2573],32,[[],["self"]]],[11,R[2675],E,R[2574],32,[[],["self"]]],[10,"sin",E,R[2676],32,[[]]],[10,"cos",E,R[2677],32,[[]]],[10,"tan",E,R[2678],32,[[]]],[10,"sin_cos",E,R[2679],32,[[]]],[11,"csc",E,R[2575],32,[[]]],[11,"cot",E,R[2576],32,[[]]],[11,"sec",E,R[2577],32,[[]]],[10,"asin",E,R[2680],32,[[],["self"]]],[10,"acos",E,R[2681],32,[[],["self"]]],[10,"atan",E,R[2682],32,[[],["self"]]],[10,"atan2",E,E,32,[[],["self"]]],[8,"Rotation",E,R[2683],N,N],[10,"look_at",E,R[2684],33,[[],["self"]]],[10,R[2685],E,R[2686],33,[[],["self"]]],[10,R[2687],E,R[2688],33,[[["self"]]]],[11,R[2596],E,R[2598],33,[[["self"],["p"]],["p"]]],[10,"invert",E,R[2689],33,[[["self"]],["self"]]],[8,"Rotation2",E,R[2690],N,N],[10,R[2691],E,R[2692],34,[[["rad"],["into",["rad"]]],["self"]]],[8,"Rotation3",E,R[2693],N,N],[10,R[2583],E,R[2694],35,[[["rad"],["into",["rad"]],["vector3"]],["self"]]],[11,R[2580],E,R[2599],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2581],E,R[2600],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2582],E,R[2601],35,[[["rad"],["into",["rad"]]],["self"]]],[8,"Transform",E,R[2695],N,N],[10,"one",E,R[2696],36,[[],["self"]]],[10,"look_at",E,R[2697],36,[[["p"]],["self"]]],[10,R[2698],E,R[2699],36,[[["self"]]]],[11,R[2602],E,R[2603],36,[[["self"]],[R[45]]]],[10,R[2700],E,R[2701],36,[[["self"],["p"]],["p"]]],[10,"concat",E,R[2702],36,[[["self"]],["self"]]],[10,R[2703],E,R[2704],36,[[["self"]],[R[45]]]],[11,R[2604],E,R[2605],36,[[["self"],["self"]]]],[8,"Transform2",E,E,N,N],[8,"Transform3",E,E,N,N],[11,"set_one",E,R[2146],4,[[["self"]]]],[11,"is_one",E,R[2147],4,[[["self"]],["bool"]]],[11,"set_zero",E,R[2142],5,[[["self"]]]],[11,"as_ptr",E,R[2541],24,[[["self"]]]],[11,R[2544],E,R[2542],24,[[["self"]]]],[11,R[2543],E,R[2545],24,[[["self"],[R[9]]]]],[11,"distance",E,R[2546],27,[[]]],[11,R[2547],E,R[2548],28,[[],["bool"]]],[11,R[2634],E,R[2549],28,[[]]],[11,R[2723],E,R[2550],28,[[]]],[11,"angle",E,R[2551],28,[[],["rad"]]],[11,R[2567],E,R[2552],28,[[],["self"]]],[11,R[2553],E,R[2554],28,[[],["self"]]],[11,"lerp",E,R[2555],28,[[],["self"]]],[11,R[2635],E,R[2556],28,[[],["self"]]],[11,"midpoint",E,R[2557],29,[[],["self"]]],[11,"centroid",E,R[2558],29,[[],["self"]]],[11,"as_ptr",E,R[2541],30,[[["self"]]]],[11,R[2544],E,R[2542],30,[[["self"]]]],[11,R[2559],E,R[2560],30,[[["self"],[R[9]]]]],[11,"identity",E,R[2561],31,[[],["self"]]],[11,"trace",E,R[2562],31,[[["self"]]]],[11,R[2563],E,R[2564],31,[[["self"]],["bool"]]],[11,R[2565],E,R[2566],31,[[["self"]],["bool"]]],[11,R[2567],E,R[2568],32,[[],["self"]]],[11,"opposite",E,R[2569],32,[[],["self"]]],[11,"bisect",E,R[2570],32,[[],["self"]]],[11,R[2672],E,R[2571],32,[[],["self"]]],[11,R[2673],E,R[2572],32,[[],["self"]]],[11,R[2674],E,R[2573],32,[[],["self"]]],[11,R[2675],E,R[2574],32,[[],["self"]]],[11,"csc",E,R[2575],32,[[]]],[11,"cot",E,R[2576],32,[[]]],[11,"sec",E,R[2577],32,[[]]],[11,"new","cgmath",R[2578],6,[[["s"]],["matrix2"]]],[11,"from_cols",E,R[2579],6,[[["vector2"]],["matrix2"]]],[11,"look_at",E,"Create a transformation matrix that will cause a vector to…",6,[[["vector2"]],["matrix2"]]],[11,R[2691],E,E,6,[[["rad"],["into",["rad"]]],["matrix2"]]],[11,"new",E,R[2578],7,[[["s"]],["matrix3"]]],[11,"from_cols",E,R[2579],7,[[["vector3"]],["matrix3"]]],[11,"look_at",E,"Create a rotation matrix that will cause a vector to point…",7,[[["vector3"]],["matrix3"]]],[11,R[2580],E,"Create a rotation matrix from a rotation around the `x`…",7,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,R[2581],E,"Create a rotation matrix from a rotation around the `y`…",7,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,R[2582],E,"Create a rotation matrix from a rotation around the `z`…",7,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,R[2583],E,"Create a rotation matrix from an angle around an arbitrary…",7,[[["rad"],["into",["rad"]],["vector3"]],["matrix3"]]],[11,"new",E,R[2578],8,[[["s"]],["matrix4"]]],[11,"from_cols",E,R[2579],8,[[["vector4"]],["matrix4"]]],[11,"from_translation",E,"Create a homogeneous transformation matrix from a…",8,[[["vector3"]],["matrix4"]]],[11,"from_scale",E,"Create a homogeneous transformation matrix from a scale…",8,[[["s"]],["matrix4"]]],[11,"from_nonuniform_scale",E,"Create a homogeneous transformation matrix from a set of…",8,[[["s"]],["matrix4"]]],[11,"look_at_dir",E,R[2584],8,[[["point3"],["vector3"]],["matrix4"]]],[11,"look_at",E,R[2584],8,[[["point3"],["vector3"]],["matrix4"]]],[11,R[2580],E,R[2585],8,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,R[2581],E,R[2585],8,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,R[2582],E,R[2585],8,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,R[2583],E,"Create a homogeneous transformation matrix from an angle…",8,[[["rad"],["into",["rad"]],["vector3"]],["matrix4"]]],[11,"cast",E,R[2586],6,[[["self"]],[[R[45],["matrix2"]],["matrix2"]]]],[11,"cast",E,R[2586],7,[[["self"]],[[R[45],["matrix3"]],["matrix3"]]]],[11,"cast",E,R[2586],8,[[["self"]],[[R[45],["matrix4"]],["matrix4"]]]],[11,"new",E,"Construct a new quaternion from one scalar component and…",9,[[["s"]],[R[2587]]]],[11,"from_sv",E,"Construct a new quaternion from a scalar and a vector.",9,[[["s"],["vector3"]],[R[2587]]]],[11,"from_arc",E,"Construct a new quaternion as a closest arc between two…",9,[[[R[45],["vector3"]],["vector3"]],[R[2587]]]],[11,"conjugate",E,"The conjugate of the quaternion.",9,[[],[R[2587]]]],[11,"nlerp",E,"Do a normalized linear interpolation with `other`, by…",9,[[[R[2587]],["s"]],[R[2587]]]],[11,"slerp",E,"Spherical Linear Interpolation",9,[[[R[2587]],["s"]],[R[2587]]]],[11,"cast",E,R[2588],9,[[["self"]],[[R[45],[R[2587]]],[R[2587]]]]],[11,"new",E,R[2589],10,[[["s"]],["vector1"]]],[11,"map",E,R[2590],10,[[["f"]],["vector1"]]],[11,"cast",E,R[2588],10,[[["self"]],[[R[45],["vector1"]],["vector1"]]]],[11,"new",E,R[2589],11,[[["s"]],["vector2"]]],[11,"map",E,R[2590],11,[[["f"]],["vector2"]]],[11,"cast",E,R[2588],11,[[["self"]],[[R[45],["vector2"]],["vector2"]]]],[11,"new",E,R[2589],12,[[["s"]],["vector3"]]],[11,"map",E,R[2590],12,[[["f"]],["vector3"]]],[11,"cast",E,R[2588],12,[[["self"]],[[R[45],["vector3"]],["vector3"]]]],[11,"new",E,R[2589],13,[[["s"]],["vector4"]]],[11,"map",E,R[2590],13,[[["f"]],["vector4"]]],[11,"cast",E,R[2588],13,[[["self"]],[[R[45],["vector4"]],["vector4"]]]],[11,"unit_x",E,R[2591],10,[[],["vector1"]]],[11,"unit_x",E,R[2591],11,[[],["vector2"]]],[11,"unit_y",E,R[2592],11,[[],["vector2"]]],[11,"perp_dot",E,"The perpendicular dot product of the vector and `other`.",11,[[["vector2"]],["s"]]],[11,"extend",E,"Create a `Vector3`, using the `x` and `y` values from this…",11,[[["s"]],["vector3"]]],[11,"unit_x",E,R[2591],12,[[],["vector3"]]],[11,"unit_y",E,R[2592],12,[[],["vector3"]]],[11,"unit_z",E,R[2593],12,[[],["vector3"]]],[11,"cross",E,"Returns the cross product of the vector and `other`.",12,[[["vector3"]],["vector3"]]],[11,"extend",E,"Create a `Vector4`, using the `x`, `y` and `z` values from…",12,[[["s"]],["vector4"]]],[11,R[2724],E,"Create a `Vector2`, dropping the `z` value.",12,[[],["vector2"]]],[11,"unit_x",E,R[2591],13,[[],["vector4"]]],[11,"unit_y",E,R[2592],13,[[],["vector4"]]],[11,"unit_z",E,R[2593],13,[[],["vector4"]]],[11,"unit_w",E,"A unit vector in the `w` direction.",13,[[],["vector4"]]],[11,R[2724],E,"Create a `Vector3`, dropping the `w` value.",13,[[],["vector3"]]],[11,"truncate_n",E,"Create a `Vector3`, dropping the nth element.",13,[[["isize"],["self"]],["vector3"]]],[11,"new",E,"Construct a set of euler angles.",16,[[["a"]],["euler"]]],[11,"from_homogeneous",E,E,19,[[["vector4"]],["point3"]]],[11,"to_homogeneous",E,E,19,[[],["vector4"]]],[11,"new",E,R[2594],17,[[["s"]],["point1"]]],[11,"map",E,R[2595],17,[[["f"]],["point1"]]],[11,"cast",E,R[2586],17,[[["self"]],[["point1"],[R[45],["point1"]]]]],[11,"new",E,R[2594],18,[[["s"]],["point2"]]],[11,"map",E,R[2595],18,[[["f"]],["point2"]]],[11,"cast",E,R[2586],18,[[["self"]],[["point2"],[R[45],["point2"]]]]],[11,"new",E,R[2594],19,[[["s"]],["point3"]]],[11,"map",E,R[2595],19,[[["f"]],["point3"]]],[11,"cast",E,R[2586],19,[[["self"]],[["point3"],[R[45],["point3"]]]]],[11,R[2596],R[2597],R[2598],33,[[["self"],["p"]],["p"]]],[11,R[2580],E,R[2599],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2581],E,R[2600],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2582],E,R[2601],35,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_quaternion","cgmath","Create a new rotation matrix from a quaternion.",37,[[[R[2587]]],["basis3"]]],[11,R[2602],R[2597],R[2603],36,[[["self"]],[R[45]]]],[11,R[2604],E,R[2605],36,[[["self"],["self"]]]],[11,"to_perspective","cgmath",E,21,[[["self"]],[R[2606]]]],[8,"BaseNum",E,"Base numeric types with partial ordering",N,N],[8,"BaseFloat",E,"Base floating point types",N,N],[8,"Array",E,R[2607],N,N],[16,"Element",E,E,24,N],[10,"len",E,R[2608],24,[[],[R[9]]]],[10,R[2609],E,R[2610],24,[[],["self"]]],[11,"as_ptr",R[2597],R[2541],24,[[["self"]]]],[11,R[2544],E,R[2542],24,[[["self"]]]],[11,R[2543],E,R[2545],24,[[["self"],[R[9]]]]],[10,"sum","cgmath",R[2611],24,[[]]],[10,"product",E,R[2612],24,[[]]],[8,R[2613],E,R[2614],N,N],[10,R[2615],E,E,25,[[["rhs"]],["self"]]],[10,R[2616],E,E,25,[[["rhs"]],["self"]]],[10,R[2617],E,E,25,[[["rhs"]],["self"]]],[10,R[2618],E,E,25,[[["rhs"]],["self"]]],[10,R[2619],E,E,25,[[["rhs"]],["self"]]],[10,R[2620],E,E,25,[[["self"],["rhs"]]]],[10,R[2621],E,E,25,[[["self"],["rhs"]]]],[10,R[2622],E,E,25,[[["self"],["rhs"]]]],[10,R[2623],E,E,25,[[["self"],["rhs"]]]],[10,R[2624],E,E,25,[[["self"],["rhs"]]]],[8,R[2625],E,R[2626],N,N],[16,"Scalar",E,R[2627],26,N],[8,R[2628],E,R[2629],N,N],[16,"Metric",E,R[2630],27,N],[10,R[2705],E,R[2631],27,[[]]],[11,"distance",R[2597],R[2546],27,[[]]],[8,R[2722],"cgmath",R[2632],N,N],[10,"dot",E,R[2633],28,[[]]],[11,R[2547],R[2597],R[2548],28,[[],["bool"]]],[11,R[2634],E,R[2549],28,[[]]],[11,R[2723],E,R[2550],28,[[]]],[11,"angle",E,R[2551],28,[[],["rad"]]],[11,R[2567],E,R[2552],28,[[],["self"]]],[11,R[2553],E,R[2554],28,[[],["self"]]],[11,"lerp",E,R[2555],28,[[],["self"]]],[11,R[2635],E,R[2556],28,[[],["self"]]],[8,R[2636],"cgmath",R[2637],N,N],[16,"Scalar",E,R[2638],29,N],[16,"Diff",E,R[2639],29,N],[10,"origin",E,R[2640],29,[[],["self"]]],[10,"from_vec",E,R[2641],29,[[],["self"]]],[10,"to_vec",E,R[2642],29,[[]]],[11,"midpoint",R[2597],R[2557],29,[[],["self"]]],[11,"centroid",E,R[2558],29,[[],["self"]]],[10,"dot","cgmath",R[2643],29,[[]]],[8,"Matrix",E,R[2644],N,N],[16,"Row",E,R[2645],30,N],[16,"Column",E,R[2646],30,N],[16,"Transpose",E,R[2647],30,N],[11,"as_ptr",R[2597],R[2541],30,[[["self"]]]],[11,R[2544],E,R[2542],30,[[["self"]]]],[11,R[2559],E,R[2560],30,[[["self"],[R[9]]]]],[10,"row","cgmath",R[2648],30,[[["self"],[R[9]]]]],[10,R[2706],E,R[2649],30,[[["self"],[R[9]]]]],[10,R[2650],E,R[2651],30,[[["self"],[R[9]]]]],[10,R[2543],E,R[2652],30,[[["self"]]]],[10,R[2707],E,R[2653],30,[[["self"]]]],[8,R[2654],E,R[2655],N,N],[16,"ColumnRow",E,R[2656],31,N],[10,R[2609],E,R[2657],31,[[],["self"]]],[10,R[2658],E,R[2659],31,[[],["self"]]],[11,"identity",R[2597],R[2561],31,[[],["self"]]],[10,R[2660],"cgmath",R[2661],31,[[["self"]]]],[10,R[2662],E,R[2663],31,[[["self"]]]],[10,"diagonal",E,R[2664],31,[[["self"]]]],[11,"trace",R[2597],R[2562],31,[[["self"]]]],[10,"invert","cgmath",R[2665],31,[[["self"]],[R[45]]]],[11,R[2563],R[2597],R[2564],31,[[["self"]],["bool"]]],[11,R[2565],E,R[2566],31,[[["self"]],["bool"]]],[10,R[2666],"cgmath",R[2667],31,[[["self"]],["bool"]]],[10,R[2668],E,R[2669],31,[[["self"]],["bool"]]],[8,"Angle",E,R[2670],N,N],[16,"Unitless",E,E,32,N],[11,R[2567],R[2597],R[2568],32,[[],["self"]]],[11,"opposite",E,R[2569],32,[[],["self"]]],[11,"bisect",E,R[2570],32,[[],["self"]]],[10,R[2708],"cgmath",R[2671],32,[[],["self"]]],[11,R[2672],R[2597],R[2571],32,[[],["self"]]],[11,R[2673],E,R[2572],32,[[],["self"]]],[11,R[2674],E,R[2573],32,[[],["self"]]],[11,R[2675],E,R[2574],32,[[],["self"]]],[10,"sin","cgmath",R[2676],32,[[]]],[10,"cos",E,R[2677],32,[[]]],[10,"tan",E,R[2678],32,[[]]],[10,"sin_cos",E,R[2679],32,[[]]],[11,"csc",R[2597],R[2575],32,[[]]],[11,"cot",E,R[2576],32,[[]]],[11,"sec",E,R[2577],32,[[]]],[10,"asin","cgmath",R[2680],32,[[],["self"]]],[10,"acos",E,R[2681],32,[[],["self"]]],[10,"atan",E,R[2682],32,[[],["self"]]],[10,"atan2",E,E,32,[[],["self"]]],[8,"Rotation",E,R[2683],N,N],[10,"look_at",E,R[2684],33,[[],["self"]]],[10,R[2685],E,R[2686],33,[[],["self"]]],[10,R[2687],E,R[2688],33,[[["self"]]]],[11,R[2596],R[2597],R[2598],33,[[["self"],["p"]],["p"]]],[10,"invert","cgmath",R[2689],33,[[["self"]],["self"]]],[8,"Rotation2",E,R[2690],N,N],[10,R[2691],E,R[2692],34,[[["rad"],["into",["rad"]]],["self"]]],[8,"Rotation3",E,R[2693],N,N],[10,R[2583],E,R[2694],35,[[["rad"],["into",["rad"]],["vector3"]],["self"]]],[11,R[2580],R[2597],R[2599],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2581],E,R[2600],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2582],E,R[2601],35,[[["rad"],["into",["rad"]]],["self"]]],[8,"Transform","cgmath",R[2695],N,N],[10,"one",E,R[2696],36,[[],["self"]]],[10,"look_at",E,R[2697],36,[[["p"]],["self"]]],[10,R[2698],E,R[2699],36,[[["self"]]]],[11,R[2602],R[2597],R[2603],36,[[["self"]],[R[45]]]],[10,R[2700],"cgmath",R[2701],36,[[["self"],["p"]],["p"]]],[10,"concat",E,R[2702],36,[[["self"]],["self"]]],[10,R[2703],E,R[2704],36,[[["self"]],[R[45]]]],[11,R[2604],R[2597],R[2605],36,[[["self"],["self"]]]],[8,"Transform2","cgmath",E,N,N],[8,"Transform3",E,E,N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[[T],["self"]]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[[T],["self"]]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[[T],["self"]]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[[T],["self"]]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[[T],["self"]]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[[T],["self"]]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[[T],["self"]]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[[T],["self"]]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[[T],["self"]]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[[T],["self"]]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"len",E,E,10,[[],[R[9]]]],[11,R[2609],E,E,10,[[["s"]],["vector1"]]],[11,"sum",E,E,10,[[],["s"]]],[11,"product",E,E,10,[[],["s"]]],[11,"len",E,E,11,[[],[R[9]]]],[11,R[2609],E,E,11,[[["s"]],["vector2"]]],[11,"sum",E,E,11,[[],["s"]]],[11,"product",E,E,11,[[],["s"]]],[11,"len",E,E,12,[[],[R[9]]]],[11,R[2609],E,E,12,[[["s"]],["vector3"]]],[11,"sum",E,E,12,[[],["s"]]],[11,"product",E,E,12,[[],["s"]]],[11,"len",E,E,13,[[],[R[9]]]],[11,R[2609],E,E,13,[[["s"]],["vector4"]]],[11,"sum",E,E,13,[[],["s"]]],[11,"product",E,E,13,[[],["s"]]],[11,"len",E,E,17,[[],[R[9]]]],[11,R[2609],E,E,17,[[["s"]],["point1"]]],[11,"sum",E,E,17,[[],["s"]]],[11,"product",E,E,17,[[],["s"]]],[11,"len",E,E,18,[[],[R[9]]]],[11,R[2609],E,E,18,[[["s"]],["point2"]]],[11,"sum",E,E,18,[[],["s"]]],[11,"product",E,E,18,[[],["s"]]],[11,"len",E,E,19,[[],[R[9]]]],[11,R[2609],E,E,19,[[["s"]],["point3"]]],[11,"sum",E,E,19,[[],["s"]]],[11,"product",E,E,19,[[],["s"]]],[11,R[2615],E,E,10,[[["vector1"]],["vector1"]]],[11,R[2616],E,E,10,[[["vector1"]],["vector1"]]],[11,R[2617],E,E,10,[[["vector1"]],["vector1"]]],[11,R[2618],E,E,10,[[["vector1"]],["vector1"]]],[11,R[2619],E,E,10,[[["vector1"]],["vector1"]]],[11,R[2620],E,E,10,[[["self"],["vector1"]]]],[11,R[2621],E,E,10,[[["self"],["vector1"]]]],[11,R[2622],E,E,10,[[["self"],["vector1"]]]],[11,R[2623],E,E,10,[[["self"],["vector1"]]]],[11,R[2624],E,E,10,[[["self"],["vector1"]]]],[11,R[2615],E,E,10,[[["s"]],["vector1"]]],[11,R[2616],E,E,10,[[["s"]],["vector1"]]],[11,R[2617],E,E,10,[[["s"]],["vector1"]]],[11,R[2618],E,E,10,[[["s"]],["vector1"]]],[11,R[2619],E,E,10,[[["s"]],["vector1"]]],[11,R[2620],E,E,10,[[["self"],["s"]]]],[11,R[2621],E,E,10,[[["self"],["s"]]]],[11,R[2622],E,E,10,[[["self"],["s"]]]],[11,R[2623],E,E,10,[[["self"],["s"]]]],[11,R[2624],E,E,10,[[["self"],["s"]]]],[11,R[2615],E,E,11,[[["vector2"]],["vector2"]]],[11,R[2616],E,E,11,[[["vector2"]],["vector2"]]],[11,R[2617],E,E,11,[[["vector2"]],["vector2"]]],[11,R[2618],E,E,11,[[["vector2"]],["vector2"]]],[11,R[2619],E,E,11,[[["vector2"]],["vector2"]]],[11,R[2620],E,E,11,[[["self"],["vector2"]]]],[11,R[2621],E,E,11,[[["self"],["vector2"]]]],[11,R[2622],E,E,11,[[["self"],["vector2"]]]],[11,R[2623],E,E,11,[[["self"],["vector2"]]]],[11,R[2624],E,E,11,[[["self"],["vector2"]]]],[11,R[2615],E,E,11,[[["s"]],["vector2"]]],[11,R[2616],E,E,11,[[["s"]],["vector2"]]],[11,R[2617],E,E,11,[[["s"]],["vector2"]]],[11,R[2618],E,E,11,[[["s"]],["vector2"]]],[11,R[2619],E,E,11,[[["s"]],["vector2"]]],[11,R[2620],E,E,11,[[["self"],["s"]]]],[11,R[2621],E,E,11,[[["self"],["s"]]]],[11,R[2622],E,E,11,[[["self"],["s"]]]],[11,R[2623],E,E,11,[[["self"],["s"]]]],[11,R[2624],E,E,11,[[["self"],["s"]]]],[11,R[2615],E,E,12,[[["vector3"]],["vector3"]]],[11,R[2616],E,E,12,[[["vector3"]],["vector3"]]],[11,R[2617],E,E,12,[[["vector3"]],["vector3"]]],[11,R[2618],E,E,12,[[["vector3"]],["vector3"]]],[11,R[2619],E,E,12,[[["vector3"]],["vector3"]]],[11,R[2620],E,E,12,[[["self"],["vector3"]]]],[11,R[2621],E,E,12,[[["self"],["vector3"]]]],[11,R[2622],E,E,12,[[["self"],["vector3"]]]],[11,R[2623],E,E,12,[[["self"],["vector3"]]]],[11,R[2624],E,E,12,[[["self"],["vector3"]]]],[11,R[2615],E,E,12,[[["s"]],["vector3"]]],[11,R[2616],E,E,12,[[["s"]],["vector3"]]],[11,R[2617],E,E,12,[[["s"]],["vector3"]]],[11,R[2618],E,E,12,[[["s"]],["vector3"]]],[11,R[2619],E,E,12,[[["s"]],["vector3"]]],[11,R[2620],E,E,12,[[["self"],["s"]]]],[11,R[2621],E,E,12,[[["self"],["s"]]]],[11,R[2622],E,E,12,[[["self"],["s"]]]],[11,R[2623],E,E,12,[[["self"],["s"]]]],[11,R[2624],E,E,12,[[["self"],["s"]]]],[11,R[2615],E,E,13,[[["vector4"]],["vector4"]]],[11,R[2616],E,E,13,[[["vector4"]],["vector4"]]],[11,R[2617],E,E,13,[[["vector4"]],["vector4"]]],[11,R[2618],E,E,13,[[["vector4"]],["vector4"]]],[11,R[2619],E,E,13,[[["vector4"]],["vector4"]]],[11,R[2620],E,E,13,[[["self"],["vector4"]]]],[11,R[2621],E,E,13,[[["self"],["vector4"]]]],[11,R[2622],E,E,13,[[["self"],["vector4"]]]],[11,R[2623],E,E,13,[[["self"],["vector4"]]]],[11,R[2624],E,E,13,[[["self"],["vector4"]]]],[11,R[2615],E,E,13,[[["s"]],["vector4"]]],[11,R[2616],E,E,13,[[["s"]],["vector4"]]],[11,R[2617],E,E,13,[[["s"]],["vector4"]]],[11,R[2618],E,E,13,[[["s"]],["vector4"]]],[11,R[2619],E,E,13,[[["s"]],["vector4"]]],[11,R[2620],E,E,13,[[["self"],["s"]]]],[11,R[2621],E,E,13,[[["self"],["s"]]]],[11,R[2622],E,E,13,[[["self"],["s"]]]],[11,R[2623],E,E,13,[[["self"],["s"]]]],[11,R[2624],E,E,13,[[["self"],["s"]]]],[11,R[2615],E,E,17,[[["point1"]],["point1"]]],[11,R[2616],E,E,17,[[["point1"]],["point1"]]],[11,R[2617],E,E,17,[[["point1"]],["point1"]]],[11,R[2618],E,E,17,[[["point1"]],["point1"]]],[11,R[2619],E,E,17,[[["point1"]],["point1"]]],[11,R[2620],E,E,17,[[["self"],["point1"]]]],[11,R[2621],E,E,17,[[["self"],["point1"]]]],[11,R[2622],E,E,17,[[["self"],["point1"]]]],[11,R[2623],E,E,17,[[["self"],["point1"]]]],[11,R[2624],E,E,17,[[["self"],["point1"]]]],[11,R[2615],E,E,17,[[["s"]],["point1"]]],[11,R[2616],E,E,17,[[["s"]],["point1"]]],[11,R[2617],E,E,17,[[["s"]],["point1"]]],[11,R[2618],E,E,17,[[["s"]],["point1"]]],[11,R[2619],E,E,17,[[["s"]],["point1"]]],[11,R[2620],E,E,17,[[["self"],["s"]]]],[11,R[2621],E,E,17,[[["self"],["s"]]]],[11,R[2622],E,E,17,[[["self"],["s"]]]],[11,R[2623],E,E,17,[[["self"],["s"]]]],[11,R[2624],E,E,17,[[["self"],["s"]]]],[11,R[2615],E,E,18,[[["point2"]],["point2"]]],[11,R[2616],E,E,18,[[["point2"]],["point2"]]],[11,R[2617],E,E,18,[[["point2"]],["point2"]]],[11,R[2618],E,E,18,[[["point2"]],["point2"]]],[11,R[2619],E,E,18,[[["point2"]],["point2"]]],[11,R[2620],E,E,18,[[["self"],["point2"]]]],[11,R[2621],E,E,18,[[["self"],["point2"]]]],[11,R[2622],E,E,18,[[["self"],["point2"]]]],[11,R[2623],E,E,18,[[["self"],["point2"]]]],[11,R[2624],E,E,18,[[["self"],["point2"]]]],[11,R[2615],E,E,18,[[["s"]],["point2"]]],[11,R[2616],E,E,18,[[["s"]],["point2"]]],[11,R[2617],E,E,18,[[["s"]],["point2"]]],[11,R[2618],E,E,18,[[["s"]],["point2"]]],[11,R[2619],E,E,18,[[["s"]],["point2"]]],[11,R[2620],E,E,18,[[["self"],["s"]]]],[11,R[2621],E,E,18,[[["self"],["s"]]]],[11,R[2622],E,E,18,[[["self"],["s"]]]],[11,R[2623],E,E,18,[[["self"],["s"]]]],[11,R[2624],E,E,18,[[["self"],["s"]]]],[11,R[2615],E,E,19,[[["point3"]],["point3"]]],[11,R[2616],E,E,19,[[["point3"]],["point3"]]],[11,R[2617],E,E,19,[[["point3"]],["point3"]]],[11,R[2618],E,E,19,[[["point3"]],["point3"]]],[11,R[2619],E,E,19,[[["point3"]],["point3"]]],[11,R[2620],E,E,19,[[["self"],["point3"]]]],[11,R[2621],E,E,19,[[["self"],["point3"]]]],[11,R[2622],E,E,19,[[["self"],["point3"]]]],[11,R[2623],E,E,19,[[["self"],["point3"]]]],[11,R[2624],E,E,19,[[["self"],["point3"]]]],[11,R[2615],E,E,19,[[["s"]],["point3"]]],[11,R[2616],E,E,19,[[["s"]],["point3"]]],[11,R[2617],E,E,19,[[["s"]],["point3"]]],[11,R[2618],E,E,19,[[["s"]],["point3"]]],[11,R[2619],E,E,19,[[["s"]],["point3"]]],[11,R[2620],E,E,19,[[["self"],["s"]]]],[11,R[2621],E,E,19,[[["self"],["s"]]]],[11,R[2622],E,E,19,[[["self"],["s"]]]],[11,R[2623],E,E,19,[[["self"],["s"]]]],[11,R[2624],E,E,19,[[["self"],["s"]]]],[11,R[2705],E,E,9,[[],["s"]]],[11,R[2705],E,E,10,[[],["s"]]],[11,R[2705],E,E,11,[[],["s"]]],[11,R[2705],E,E,12,[[],["s"]]],[11,R[2705],E,E,13,[[],["s"]]],[11,R[2705],E,E,17,[[],["s"]]],[11,R[2705],E,E,18,[[],["s"]]],[11,R[2705],E,E,19,[[],["s"]]],[11,"dot",E,E,9,[[[R[2587]]],["s"]]],[11,"dot",E,E,10,[[["vector1"]],["s"]]],[11,"dot",E,E,11,[[["vector2"]],["s"]]],[11,"angle",E,E,11,[[["vector2"]],["rad"]]],[11,"dot",E,E,12,[[["vector3"]],["s"]]],[11,"angle",E,E,12,[[["vector3"]],["rad"]]],[11,"dot",E,E,13,[[["vector4"]],["s"]]],[11,"origin",E,E,17,[[],["point1"]]],[11,"from_vec",E,E,17,[[["vector1"]],["point1"]]],[11,"to_vec",E,E,17,[[],["vector1"]]],[11,"dot",E,E,17,[[["vector1"]],["s"]]],[11,"origin",E,E,18,[[],["point2"]]],[11,"from_vec",E,E,18,[[["vector2"]],["point2"]]],[11,"to_vec",E,E,18,[[],["vector2"]]],[11,"dot",E,E,18,[[["vector2"]],["s"]]],[11,"origin",E,E,19,[[],["point3"]]],[11,"from_vec",E,E,19,[[["vector3"]],["point3"]]],[11,"to_vec",E,E,19,[[],["vector3"]]],[11,"dot",E,E,19,[[["vector3"]],["s"]]],[11,"row",E,E,6,[[["self"],[R[9]]],["vector2"]]],[11,R[2706],E,E,6,[[["self"],[R[9]]]]],[11,R[2650],E,E,6,[[["self"],[R[9]]]]],[11,R[2543],E,E,6,[[["self"]]]],[11,R[2707],E,E,6,[[["self"]],["matrix2"]]],[11,"row",E,E,7,[[["self"],[R[9]]],["vector3"]]],[11,R[2706],E,E,7,[[["self"],[R[9]]]]],[11,R[2650],E,E,7,[[["self"],[R[9]]]]],[11,R[2543],E,E,7,[[["self"]]]],[11,R[2707],E,E,7,[[["self"]],["matrix3"]]],[11,"row",E,E,8,[[["self"],[R[9]]],["vector4"]]],[11,R[2706],E,E,8,[[["self"],[R[9]]]]],[11,R[2650],E,E,8,[[["self"],[R[9]]]]],[11,R[2543],E,E,8,[[["self"]]]],[11,R[2707],E,E,8,[[["self"]],["matrix4"]]],[11,R[2609],E,E,6,[[["s"]],["matrix2"]]],[11,R[2658],E,E,6,[[["vector2"]],["matrix2"]]],[11,R[2660],E,E,6,[[["self"]]]],[11,R[2662],E,E,6,[[["self"]],["s"]]],[11,"diagonal",E,E,6,[[["self"]],["vector2"]]],[11,"invert",E,E,6,[[["self"]],[["matrix2"],[R[45],["matrix2"]]]]],[11,R[2666],E,E,6,[[["self"]],["bool"]]],[11,R[2668],E,E,6,[[["self"]],["bool"]]],[11,R[2609],E,E,7,[[["s"]],["matrix3"]]],[11,R[2658],E,E,7,[[["vector3"]],["matrix3"]]],[11,R[2660],E,E,7,[[["self"]]]],[11,R[2662],E,E,7,[[["self"]],["s"]]],[11,"diagonal",E,E,7,[[["self"]],["vector3"]]],[11,"invert",E,E,7,[[["self"]],[[R[45],["matrix3"]],["matrix3"]]]],[11,R[2666],E,E,7,[[["self"]],["bool"]]],[11,R[2668],E,E,7,[[["self"]],["bool"]]],[11,R[2609],E,E,8,[[["s"]],["matrix4"]]],[11,R[2658],E,E,8,[[["vector4"]],["matrix4"]]],[11,R[2660],E,E,8,[[["self"]]]],[11,R[2662],E,E,8,[[["self"]],["s"]]],[11,"diagonal",E,E,8,[[["self"]],["vector4"]]],[11,"invert",E,E,8,[[["self"]],[[R[45],["matrix4"]],["matrix4"]]]],[11,R[2666],E,E,8,[[["self"]],["bool"]]],[11,R[2668],E,E,8,[[["self"]],["bool"]]],[11,R[2708],E,E,15,[[],["rad"]]],[11,"sin",E,E,15,[[],["s"]]],[11,"cos",E,E,15,[[],["s"]]],[11,"tan",E,E,15,[[],["s"]]],[11,"sin_cos",E,E,15,[[]]],[11,"asin",E,E,15,[[["s"]],["rad"]]],[11,"acos",E,E,15,[[["s"]],["rad"]]],[11,"atan",E,E,15,[[["s"]],["rad"]]],[11,"atan2",E,E,15,[[["s"]],["rad"]]],[11,R[2708],E,E,14,[[],["deg"]]],[11,"sin",E,E,14,[[],["s"]]],[11,"cos",E,E,14,[[],["s"]]],[11,"tan",E,E,14,[[],["s"]]],[11,"sin_cos",E,E,14,[[]]],[11,"asin",E,E,14,[[["s"]],["deg"]]],[11,"acos",E,E,14,[[["s"]],["deg"]]],[11,"atan",E,E,14,[[["s"]],["deg"]]],[11,"atan2",E,E,14,[[["s"]],["deg"]]],[11,"look_at",E,E,9,[[["vector3"]],[R[2587]]]],[11,R[2685],E,E,9,[[["vector3"]],[R[2587]]]],[11,R[2687],E,E,9,[[["self"],["vector3"]],["vector3"]]],[11,"invert",E,E,9,[[["self"]],[R[2587]]]],[11,"look_at",E,E,38,[[["vector2"]],["basis2"]]],[11,R[2685],E,E,38,[[["vector2"]],["basis2"]]],[11,R[2687],E,E,38,[[["self"],["vector2"]],["vector2"]]],[11,"invert",E,E,38,[[["self"]],["basis2"]]],[11,"look_at",E,E,37,[[["vector3"]],["basis3"]]],[11,R[2685],E,E,37,[[["vector3"]],["basis3"]]],[11,R[2687],E,E,37,[[["self"],["vector3"]],["vector3"]]],[11,"invert",E,E,37,[[["self"]],["basis3"]]],[11,R[2691],E,E,38,[[["rad"],["into",["rad"]]],["basis2"]]],[11,R[2583],E,E,9,[[["rad"],["into",["rad"]],["vector3"]],[R[2587]]]],[11,R[2583],E,E,37,[[["rad"],["into",["rad"]],["vector3"]],["basis3"]]],[11,R[2580],E,E,37,[[["rad"],["into",["rad"]]],["basis3"]]],[11,R[2581],E,E,37,[[["rad"],["into",["rad"]]],["basis3"]]],[11,R[2582],E,E,37,[[["rad"],["into",["rad"]]],["basis3"]]],[11,"one",E,E,7,[[],["matrix3"]]],[11,"look_at",E,E,7,[[["vector2"],["point2"]],["matrix3"]]],[11,R[2698],E,E,7,[[["self"],["vector2"]],["vector2"]]],[11,R[2700],E,E,7,[[["self"],["point2"]],["point2"]]],[11,"concat",E,E,7,[[["self"],["matrix3"]],["matrix3"]]],[11,R[2703],E,E,7,[[["self"]],[[R[45],["matrix3"]],["matrix3"]]]],[11,"one",E,E,7,[[],["matrix3"]]],[11,"look_at",E,E,7,[[["point3"],["vector3"]],["matrix3"]]],[11,R[2698],E,E,7,[[["self"],["vector3"]],["vector3"]]],[11,R[2700],E,E,7,[[["point3"],["self"]],["point3"]]],[11,"concat",E,E,7,[[["self"],["matrix3"]],["matrix3"]]],[11,R[2703],E,E,7,[[["self"]],[[R[45],["matrix3"]],["matrix3"]]]],[11,"one",E,E,8,[[],["matrix4"]]],[11,"look_at",E,E,8,[[["point3"],["vector3"]],["matrix4"]]],[11,R[2698],E,E,8,[[["self"],["vector3"]],["vector3"]]],[11,R[2700],E,E,8,[[["point3"],["self"]],["point3"]]],[11,"concat",E,E,8,[[["self"],["matrix4"]],["matrix4"]]],[11,R[2703],E,E,8,[[["self"]],[[R[45],["matrix4"]],["matrix4"]]]],[11,"one",E,E,20,[[],[R[2709]]]],[11,"look_at",E,E,20,[[["p"]],[R[2709]]]],[11,R[2698],E,E,20,[[["self"]]]],[11,R[2602],E,E,20,[[["self"]],[R[45]]]],[11,R[2700],E,E,20,[[["self"],["p"]],["p"]]],[11,"concat",E,E,20,[[["self"],[R[2709]]],[R[2709]]]],[11,R[2703],E,E,20,[[["self"]],[[R[45],[R[2709]]],[R[2709]]]]],[11,"clone",E,E,6,[[["self"]],["matrix2"]]],[11,"clone",E,E,7,[[["self"]],["matrix3"]]],[11,"clone",E,E,8,[[["self"]],["matrix4"]]],[11,"clone",E,E,9,[[["self"]],[R[2587]]]],[11,"clone",E,E,10,[[["self"]],["vector1"]]],[11,"clone",E,E,11,[[["self"]],["vector2"]]],[11,"clone",E,E,12,[[["self"]],["vector3"]]],[11,"clone",E,E,13,[[["self"]],["vector4"]]],[11,"clone",E,E,15,[[["self"]],["rad"]]],[11,"clone",E,E,14,[[["self"]],["deg"]]],[11,"clone",E,E,16,[[["self"]],["euler"]]],[11,"clone",E,E,17,[[["self"]],["point1"]]],[11,"clone",E,E,18,[[["self"]],["point2"]]],[11,"clone",E,E,19,[[["self"]],["point3"]]],[11,"clone",E,E,38,[[["self"]],["basis2"]]],[11,"clone",E,E,37,[[["self"]],["basis3"]]],[11,"clone",E,E,20,[[["self"]],[R[2709]]]],[11,"clone",E,E,21,[[["self"]],[R[2711]]]],[11,"clone",E,E,22,[[["self"]],[R[2606]]]],[11,"clone",E,E,23,[[["self"]],["ortho"]]],[11,"from",E,E,7,[[["euler"]],["matrix3"]]],[11,"from",E,E,8,[[["euler"]],["matrix4"]]],[11,"from",E,E,6,[[],["matrix2"]]],[11,"from",E,E,7,[[],["matrix3"]]],[11,"from",E,E,8,[[],["matrix4"]]],[11,"from",E,R[2710],7,[[["matrix2"]],["matrix3"]]],[11,"from",E,R[2710],8,[[["matrix2"]],["matrix4"]]],[11,"from",E,"Clone the elements of a 3-dimensional matrix into the…",8,[[["matrix3"]],["matrix4"]]],[11,"from",E,"Convert the matrix to a quaternion",9,[[["matrix3"]],[R[2587]]]],[11,"from",E,E,9,[[["euler"]],[R[2587]]]],[11,"from",E,"Convert the quaternion to a 3 x 3 rotation matrix.",7,[[[R[2587]]],["matrix3"]]],[11,"from",E,"Convert the quaternion to a 4 x 4 rotation matrix.",8,[[[R[2587]]],["matrix4"]]],[11,"from",E,E,37,[[[R[2587]]],["basis3"]]],[11,"from",E,E,9,[[],[R[2587]]]],[11,"from",E,E,9,[[],[R[2587]]]],[11,"from",E,E,10,[[],["vector1"]]],[11,"from",E,E,11,[[],["vector2"]]],[11,"from",E,E,12,[[],["vector3"]]],[11,"from",E,E,13,[[],["vector4"]]],[11,"from",E,E,10,[[],["vector1"]]],[11,"from",E,E,11,[[],["vector2"]]],[11,"from",E,E,12,[[],["vector3"]]],[11,"from",E,E,13,[[],["vector4"]]],[11,"from",E,E,14,[[["rad"]],["deg"]]],[11,"from",E,E,15,[[["deg"]],["rad"]]],[11,"from",E,E,16,[[[R[2587]]],[["rad"],["euler",["rad"]]]]],[11,"from",E,E,17,[[],["point1"]]],[11,"from",E,E,18,[[],["point2"]]],[11,"from",E,E,19,[[],["point3"]]],[11,"from",E,E,17,[[],["point1"]]],[11,"from",E,E,18,[[],["point2"]]],[11,"from",E,E,19,[[],["point3"]]],[11,"from",E,E,6,[[["basis2"]],["matrix2"]]],[11,"from",E,E,7,[[["basis3"]],["matrix3"]]],[11,"from",E,E,9,[[["basis3"]],[R[2587]]]],[11,"from",E,"Create a three-dimensional rotation matrix from a set of…",37,[[["euler"]],["basis3"]]],[11,"from",E,E,7,[[[R[2709],["vector2"]],["vector2"]],["matrix3"]]],[11,"from",E,E,8,[[[R[2709],["vector3"]],["vector3"]],["matrix4"]]],[11,"from",E,E,8,[[[R[2711]]],["matrix4"]]],[11,"from",E,E,8,[[[R[2606]]],["matrix4"]]],[11,"from",E,E,8,[[["ortho"]],["matrix4"]]],[11,"into",E,E,6,[[]]],[11,"into",E,E,7,[[]]],[11,"into",E,E,8,[[]]],[11,"into",E,E,9,[[]]],[11,"into",E,E,9,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,11,[[]]],[11,"into",E,E,12,[[]]],[11,"into",E,E,13,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,11,[[]]],[11,"into",E,E,12,[[]]],[11,"into",E,E,13,[[]]],[11,"into",E,E,17,[[]]],[11,"into",E,E,18,[[]]],[11,"into",E,E,19,[[]]],[11,"into",E,E,17,[[]]],[11,"into",E,E,18,[[]]],[11,"into",E,E,19,[[]]],[11,R[63],E,E,15,[[["self"],["rad"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"le",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"gt",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"ge",E,E,15,[[["self"],["rad"]],["bool"]]],[11,R[63],E,E,14,[[["deg"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,14,[[["deg"],["self"]],["bool"]]],[11,"le",E,E,14,[[["deg"],["self"]],["bool"]]],[11,"gt",E,E,14,[[["deg"],["self"]],["bool"]]],[11,"ge",E,E,14,[[["deg"],["self"]],["bool"]]],[11,"as_mut",E,E,6,[[["self"]]]],[11,"as_mut",E,E,6,[[["self"]]]],[11,"as_mut",E,E,7,[[["self"]]]],[11,"as_mut",E,E,7,[[["self"]]]],[11,"as_mut",E,E,8,[[["self"]]]],[11,"as_mut",E,E,8,[[["self"]]]],[11,"as_mut",E,E,9,[[["self"]]]],[11,"as_mut",E,E,9,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"as_mut",E,E,11,[[["self"]]]],[11,"as_mut",E,E,12,[[["self"]]]],[11,"as_mut",E,E,13,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"as_mut",E,E,11,[[["self"]]]],[11,"as_mut",E,E,12,[[["self"]]]],[11,"as_mut",E,E,13,[[["self"]]]],[11,"as_mut",E,E,17,[[["self"]]]],[11,"as_mut",E,E,18,[[["self"]]]],[11,"as_mut",E,E,19,[[["self"]]]],[11,"as_mut",E,E,17,[[["self"]]]],[11,"as_mut",E,E,18,[[["self"]]]],[11,"as_mut",E,E,19,[[["self"]]]],[11,"eq",E,E,6,[[["matrix2"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["matrix2"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["matrix3"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["matrix3"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["matrix4"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["matrix4"]],["bool"]]],[11,"eq",E,E,9,[[[R[2587]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[2587]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["vector1"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["vector1"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["vector2"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["vector2"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["vector3"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["vector3"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["vector4"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["vector4"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"eq",E,E,14,[[["deg"],["self"]],["bool"]]],[11,"ne",E,E,14,[[["deg"],["self"]],["bool"]]],[11,"eq",E,E,16,[[["euler"],["self"]],["bool"]]],[11,"ne",E,E,16,[[["euler"],["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["point1"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["point1"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["point2"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["point2"]],["bool"]]],[11,"eq",E,E,19,[[["point3"],["self"]],["bool"]]],[11,"ne",E,E,19,[[["point3"],["self"]],["bool"]]],[11,"eq",E,E,38,[[["self"],["basis2"]],["bool"]]],[11,"ne",E,E,38,[[["self"],["basis2"]],["bool"]]],[11,"eq",E,E,37,[[["self"],["basis3"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["basis3"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[2711]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[2711]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[2606]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[2606]]],["bool"]]],[11,"eq",E,E,23,[[["self"],["ortho"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["ortho"]],["bool"]]],[11,"as_ref",E,E,6,[[["self"]]]],[11,"as_ref",E,E,6,[[["self"]]]],[11,"as_ref",E,E,7,[[["self"]]]],[11,"as_ref",E,E,7,[[["self"]]]],[11,"as_ref",E,E,8,[[["self"]]]],[11,"as_ref",E,E,8,[[["self"]]]],[11,"as_ref",E,E,9,[[["self"]]]],[11,"as_ref",E,E,9,[[["self"]]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"as_ref",E,E,11,[[["self"]]]],[11,"as_ref",E,E,12,[[["self"]]]],[11,"as_ref",E,E,13,[[["self"]]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"as_ref",E,E,11,[[["self"]]]],[11,"as_ref",E,E,12,[[["self"]]]],[11,"as_ref",E,E,13,[[["self"]]]],[11,"as_ref",E,E,17,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]]]],[11,"as_ref",E,E,19,[[["self"]]]],[11,"as_ref",E,E,17,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]]]],[11,"as_ref",E,E,19,[[["self"]]]],[11,"as_ref",E,E,38,[[["self"]],["matrix2"]]],[11,"as_ref",E,E,37,[[["self"]],["matrix3"]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,21,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[R[13]]]],[11,"add",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"add",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"add",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"add",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"add",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"add",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"add",E,E,9,[[[R[2587]]],[R[2587]]]],[11,"add",E,E,9,[[[R[2587]]],[R[2587]]]],[11,"add",E,E,10,[[["vector1"]],["vector1"]]],[11,"add",E,E,10,[[["vector1"]],["vector1"]]],[11,"add",E,E,11,[[["vector2"]],["vector2"]]],[11,"add",E,E,11,[[["vector2"]],["vector2"]]],[11,"add",E,E,12,[[["vector3"]],["vector3"]]],[11,"add",E,E,12,[[["vector3"]],["vector3"]]],[11,"add",E,E,13,[[["vector4"]],["vector4"]]],[11,"add",E,E,13,[[["vector4"]],["vector4"]]],[11,"add",E,E,15,[[["rad"]],["rad"]]],[11,"add",E,E,15,[[["rad"]],["rad"]]],[11,"add",E,E,14,[[["deg"]],["deg"]]],[11,"add",E,E,14,[[["deg"]],["deg"]]],[11,"add",E,E,17,[[["vector1"]],["point1"]]],[11,"add",E,E,17,[[["vector1"]],["point1"]]],[11,"add",E,E,18,[[["vector2"]],["point2"]]],[11,"add",E,E,18,[[["vector2"]],["point2"]]],[11,"add",E,E,19,[[["vector3"]],["point3"]]],[11,"add",E,E,19,[[["vector3"]],["point3"]]],[11,"sub",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"sub",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"sub",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"sub",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"sub",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"sub",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"sub",E,E,9,[[[R[2587]]],[R[2587]]]],[11,"sub",E,E,9,[[[R[2587]]],[R[2587]]]],[11,"sub",E,E,10,[[["vector1"]],["vector1"]]],[11,"sub",E,E,10,[[["vector1"]],["vector1"]]],[11,"sub",E,E,11,[[["vector2"]],["vector2"]]],[11,"sub",E,E,11,[[["vector2"]],["vector2"]]],[11,"sub",E,E,12,[[["vector3"]],["vector3"]]],[11,"sub",E,E,12,[[["vector3"]],["vector3"]]],[11,"sub",E,E,13,[[["vector4"]],["vector4"]]],[11,"sub",E,E,13,[[["vector4"]],["vector4"]]],[11,"sub",E,E,15,[[["rad"]],["rad"]]],[11,"sub",E,E,15,[[["rad"]],["rad"]]],[11,"sub",E,E,14,[[["deg"]],["deg"]]],[11,"sub",E,E,14,[[["deg"]],["deg"]]],[11,"sub",E,E,17,[[["vector1"]],["point1"]]],[11,"sub",E,E,17,[[["vector1"]],["point1"]]],[11,"sub",E,E,17,[[["point1"]],["vector1"]]],[11,"sub",E,E,17,[[["point1"]],["vector1"]]],[11,"sub",E,E,18,[[["vector2"]],["point2"]]],[11,"sub",E,E,18,[[["vector2"]],["point2"]]],[11,"sub",E,E,18,[[["point2"]],["vector2"]]],[11,"sub",E,E,18,[[["point2"]],["vector2"]]],[11,"sub",E,E,19,[[["vector3"]],["point3"]]],[11,"sub",E,E,19,[[["vector3"]],["point3"]]],[11,"sub",E,E,19,[[["point3"]],["vector3"]]],[11,"sub",E,E,19,[[["point3"]],["vector3"]]],[11,"mul",E,E,6,[[["s"]],["matrix2"]]],[11,"mul",E,E,7,[[["s"]],["matrix3"]]],[11,"mul",E,E,8,[[["s"]],["matrix4"]]],[11,"mul",E,E,6,[[["vector2"]],["vector2"]]],[11,"mul",E,E,6,[[["vector2"]],["vector2"]]],[11,"mul",E,E,7,[[["vector3"]],["vector3"]]],[11,"mul",E,E,7,[[["vector3"]],["vector3"]]],[11,"mul",E,E,8,[[["vector4"]],["vector4"]]],[11,"mul",E,E,8,[[["vector4"]],["vector4"]]],[11,"mul",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"mul",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"mul",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"mul",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"mul",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"mul",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"mul",E,E,9,[[["s"]],[R[2587]]]],[11,"mul",E,E,9,[[["vector3"]],["vector3"]]],[11,"mul",E,E,9,[[["vector3"]],["vector3"]]],[11,"mul",E,E,9,[[[R[2587]]],[R[2587]]]],[11,"mul",E,E,9,[[[R[2587]]],[R[2587]]]],[11,"mul",E,E,10,[[["s"]],["vector1"]]],[11,"mul",E,E,11,[[["s"]],["vector2"]]],[11,"mul",E,E,12,[[["s"]],["vector3"]]],[11,"mul",E,E,13,[[["s"]],["vector4"]]],[11,"mul",E,E,15,[[["s"]],["rad"]]],[11,"mul",E,E,14,[[["s"]],["deg"]]],[11,"mul",E,E,17,[[["s"]],["point1"]]],[11,"mul",E,E,18,[[["s"]],["point2"]]],[11,"mul",E,E,19,[[["s"]],["point3"]]],[11,"mul",E,E,38,[[["basis2"]],["basis2"]]],[11,"mul",E,E,38,[[["basis2"]],["basis2"]]],[11,"mul",E,E,37,[[["basis3"]],["basis3"]]],[11,"mul",E,E,37,[[["basis3"]],["basis3"]]],[11,"div",E,E,6,[[["s"]],["matrix2"]]],[11,"div",E,E,7,[[["s"]],["matrix3"]]],[11,"div",E,E,8,[[["s"]],["matrix4"]]],[11,"div",E,E,9,[[["s"]],[R[2587]]]],[11,"div",E,E,10,[[["s"]],["vector1"]]],[11,"div",E,E,11,[[["s"]],["vector2"]]],[11,"div",E,E,12,[[["s"]],["vector3"]]],[11,"div",E,E,13,[[["s"]],["vector4"]]],[11,"div",E,E,15,[[["rad"]],["s"]]],[11,"div",E,E,15,[[["rad"]],["s"]]],[11,"div",E,E,15,[[["s"]],["rad"]]],[11,"div",E,E,14,[[["deg"]],["s"]]],[11,"div",E,E,14,[[["deg"]],["s"]]],[11,"div",E,E,14,[[["s"]],["deg"]]],[11,"div",E,E,17,[[["s"]],["point1"]]],[11,"div",E,E,18,[[["s"]],["point2"]]],[11,"div",E,E,19,[[["s"]],["point3"]]],[11,"rem",E,E,6,[[["s"]],["matrix2"]]],[11,"rem",E,E,7,[[["s"]],["matrix3"]]],[11,"rem",E,E,8,[[["s"]],["matrix4"]]],[11,"rem",E,E,9,[[["s"]],[R[2587]]]],[11,"rem",E,E,10,[[["s"]],["vector1"]]],[11,"rem",E,E,11,[[["s"]],["vector2"]]],[11,"rem",E,E,12,[[["s"]],["vector3"]]],[11,"rem",E,E,13,[[["s"]],["vector4"]]],[11,"rem",E,E,15,[[["rad"]],["rad"]]],[11,"rem",E,E,15,[[["rad"]],["rad"]]],[11,"rem",E,E,14,[[["deg"]],["deg"]]],[11,"rem",E,E,14,[[["deg"]],["deg"]]],[11,"rem",E,E,17,[[["s"]],["point1"]]],[11,"rem",E,E,18,[[["s"]],["point2"]]],[11,"rem",E,E,19,[[["s"]],["point3"]]],[11,"neg",E,E,6,[[],["matrix2"]]],[11,"neg",E,E,7,[[],["matrix3"]]],[11,"neg",E,E,8,[[],["matrix4"]]],[11,"neg",E,E,9,[[],[R[2587]]]],[11,"neg",E,E,10,[[],["vector1"]]],[11,"neg",E,E,11,[[],["vector2"]]],[11,"neg",E,E,12,[[],["vector3"]]],[11,"neg",E,E,13,[[],["vector4"]]],[11,"neg",E,E,15,[[],["rad"]]],[11,"neg",E,E,14,[[],["deg"]]],[11,R[2478],E,E,6,[[["self"],["matrix2"]]]],[11,R[2478],E,E,7,[[["self"],["matrix3"]]]],[11,R[2478],E,E,8,[[["self"],["matrix4"]]]],[11,R[2478],E,E,9,[[["self"],[R[2587]]]]],[11,R[2478],E,E,10,[[["self"],["vector1"]]]],[11,R[2478],E,E,11,[[["self"],["vector2"]]]],[11,R[2478],E,E,12,[[["self"],["vector3"]]]],[11,R[2478],E,E,13,[[["self"],["vector4"]]]],[11,R[2478],E,E,15,[[["self"],["rad"]]]],[11,R[2478],E,E,14,[[["self"],["deg"]]]],[11,R[2478],E,E,17,[[["self"],["vector1"]]]],[11,R[2478],E,E,18,[[["self"],["vector2"]]]],[11,R[2478],E,E,19,[[["self"],["vector3"]]]],[11,R[1432],E,E,6,[[["self"],["matrix2"]]]],[11,R[1432],E,E,7,[[["self"],["matrix3"]]]],[11,R[1432],E,E,8,[[["self"],["matrix4"]]]],[11,R[1432],E,E,9,[[["self"],[R[2587]]]]],[11,R[1432],E,E,10,[[["self"],["vector1"]]]],[11,R[1432],E,E,11,[[["self"],["vector2"]]]],[11,R[1432],E,E,12,[[["self"],["vector3"]]]],[11,R[1432],E,E,13,[[["self"],["vector4"]]]],[11,R[1432],E,E,15,[[["self"],["rad"]]]],[11,R[1432],E,E,14,[[["self"],["deg"]]]],[11,R[1432],E,E,17,[[["self"],["vector1"]]]],[11,R[1432],E,E,18,[[["self"],["vector2"]]]],[11,R[1432],E,E,19,[[["self"],["vector3"]]]],[11,R[2712],E,E,6,[[["self"],["s"]]]],[11,R[2712],E,E,7,[[["self"],["s"]]]],[11,R[2712],E,E,8,[[["self"],["s"]]]],[11,R[2712],E,E,9,[[["self"],["s"]]]],[11,R[2712],E,E,10,[[["self"],["s"]]]],[11,R[2712],E,E,11,[[["self"],["s"]]]],[11,R[2712],E,E,12,[[["self"],["s"]]]],[11,R[2712],E,E,13,[[["self"],["s"]]]],[11,R[2712],E,E,15,[[["self"],["s"]]]],[11,R[2712],E,E,14,[[["self"],["s"]]]],[11,R[2712],E,E,17,[[["self"],["s"]]]],[11,R[2712],E,E,18,[[["self"],["s"]]]],[11,R[2712],E,E,19,[[["self"],["s"]]]],[11,R[2713],E,E,6,[[["self"],["s"]]]],[11,R[2713],E,E,7,[[["self"],["s"]]]],[11,R[2713],E,E,8,[[["self"],["s"]]]],[11,R[2713],E,E,9,[[["self"],["s"]]]],[11,R[2713],E,E,10,[[["self"],["s"]]]],[11,R[2713],E,E,11,[[["self"],["s"]]]],[11,R[2713],E,E,12,[[["self"],["s"]]]],[11,R[2713],E,E,13,[[["self"],["s"]]]],[11,R[2713],E,E,15,[[["self"],["s"]]]],[11,R[2713],E,E,14,[[["self"],["s"]]]],[11,R[2713],E,E,17,[[["self"],["s"]]]],[11,R[2713],E,E,18,[[["self"],["s"]]]],[11,R[2713],E,E,19,[[["self"],["s"]]]],[11,R[2714],E,E,6,[[["self"],["s"]]]],[11,R[2714],E,E,7,[[["self"],["s"]]]],[11,R[2714],E,E,8,[[["self"],["s"]]]],[11,R[2714],E,E,9,[[["self"],["s"]]]],[11,R[2714],E,E,10,[[["self"],["s"]]]],[11,R[2714],E,E,11,[[["self"],["s"]]]],[11,R[2714],E,E,12,[[["self"],["s"]]]],[11,R[2714],E,E,13,[[["self"],["s"]]]],[11,R[2714],E,E,15,[[["self"],["rad"]]]],[11,R[2714],E,E,14,[[["self"],["deg"]]]],[11,R[2714],E,E,17,[[["self"],["s"]]]],[11,R[2714],E,E,18,[[["self"],["s"]]]],[11,R[2714],E,E,19,[[["self"],["s"]]]],[11,"index",E,E,6,[[[R[9]],["self"]],["vector2"]]],[11,"index",E,E,7,[[[R[9]],["self"]],["vector3"]]],[11,"index",E,E,8,[[[R[9]],["self"]],["vector4"]]],[11,"index",E,E,9,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,9,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,9,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,9,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,9,[[[R[51]],["self"]]]],[11,"index",E,E,10,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,10,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,10,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,10,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,10,[[[R[51]],["self"]]]],[11,"index",E,E,11,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,11,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,11,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,11,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,11,[[[R[51]],["self"]]]],[11,"index",E,E,12,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,12,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,12,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,12,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,12,[[[R[51]],["self"]]]],[11,"index",E,E,13,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,13,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,13,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,13,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,13,[[[R[51]],["self"]]]],[11,"index",E,E,17,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,17,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,17,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,17,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,17,[[[R[51]],["self"]]]],[11,"index",E,E,18,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,18,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,18,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,18,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,18,[[[R[51]],["self"]]]],[11,"index",E,E,19,[[[R[9]],["self"]],["s"]]],[11,"index",E,E,19,[[["range",[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,19,[[[R[9]],["rangeto",[R[9]]],["self"]]]],[11,"index",E,E,19,[[[R[50],[R[9]]],[R[9]],["self"]]]],[11,"index",E,E,19,[[[R[51]],["self"]]]],[11,R[49],E,E,6,[[["self"],[R[9]]],["vector2"]]],[11,R[49],E,E,7,[[["self"],[R[9]]],["vector3"]]],[11,R[49],E,E,8,[[["self"],[R[9]]],["vector4"]]],[11,R[49],E,E,9,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,9,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,9,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,9,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,9,[[["self"],[R[51]]]]],[11,R[49],E,E,10,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,10,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,10,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,10,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,10,[[["self"],[R[51]]]]],[11,R[49],E,E,11,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,11,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,11,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,11,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,11,[[["self"],[R[51]]]]],[11,R[49],E,E,12,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,12,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,12,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,12,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,12,[[["self"],[R[51]]]]],[11,R[49],E,E,13,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,13,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,13,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,13,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,13,[[["self"],[R[51]]]]],[11,R[49],E,E,17,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,17,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,17,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,17,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,17,[[["self"],[R[51]]]]],[11,R[49],E,E,18,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,18,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,18,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,18,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,18,[[["self"],[R[51]]]]],[11,R[49],E,E,19,[[["self"],[R[9]]],["s"]]],[11,R[49],E,E,19,[[["self"],["range",[R[9]]],[R[9]]]]],[11,R[49],E,E,19,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,19,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,19,[[["self"],[R[51]]]]],[11,"hash",E,E,10,[[["self"],["__hs"]]]],[11,"hash",E,E,11,[[["self"],["__hs"]]]],[11,"hash",E,E,12,[[["self"],["__hs"]]]],[11,"hash",E,E,13,[[["self"],["__hs"]]]],[11,"hash",E,E,17,[[["self"],["__hs"]]]],[11,"hash",E,E,18,[[["self"],["__hs"]]]],[11,"hash",E,E,19,[[["self"],["__hs"]]]],[11,"product",E,E,6,[[[R[2715]]],["matrix2"]]],[11,"product",E,E,6,[[[R[2715]]],["matrix2"]]],[11,"product",E,E,7,[[[R[2715]]],["matrix3"]]],[11,"product",E,E,7,[[[R[2715]]],["matrix3"]]],[11,"product",E,E,8,[[[R[2715]]],["matrix4"]]],[11,"product",E,E,8,[[[R[2715]]],["matrix4"]]],[11,"product",E,E,9,[[[R[2715]]],[R[2587]]]],[11,"product",E,E,9,[[[R[2715]]],[R[2587]]]],[11,"product",E,E,38,[[[R[2715]]],["basis2"]]],[11,"product",E,E,38,[[[R[2715]]],["basis2"]]],[11,"product",E,E,37,[[[R[2715]]],["basis3"]]],[11,"product",E,E,37,[[[R[2715]]],["basis3"]]],[11,"sum",E,E,6,[[[R[2715]]],["matrix2"]]],[11,"sum",E,E,6,[[[R[2715]]],["matrix2"]]],[11,"sum",E,E,7,[[[R[2715]]],["matrix3"]]],[11,"sum",E,E,7,[[[R[2715]]],["matrix3"]]],[11,"sum",E,E,8,[[[R[2715]]],["matrix4"]]],[11,"sum",E,E,8,[[[R[2715]]],["matrix4"]]],[11,"sum",E,E,9,[[[R[2715]]],[R[2587]]]],[11,"sum",E,E,9,[[[R[2715]]],[R[2587]]]],[11,"sum",E,E,10,[[[R[2715]]],["vector1"]]],[11,"sum",E,E,10,[[[R[2715]]],["vector1"]]],[11,"sum",E,E,11,[[[R[2715]]],["vector2"]]],[11,"sum",E,E,11,[[[R[2715]]],["vector2"]]],[11,"sum",E,E,12,[[[R[2715]]],["vector3"]]],[11,"sum",E,E,12,[[[R[2715]]],["vector3"]]],[11,"sum",E,E,13,[[[R[2715]]],["vector4"]]],[11,"sum",E,E,13,[[[R[2715]]],["vector4"]]],[11,"sum",E,E,15,[[[R[2715]]],["rad"]]],[11,"sum",E,E,15,[[[R[2715]]],["rad"]]],[11,"sum",E,E,14,[[[R[2715]]],["deg"]]],[11,"sum",E,E,14,[[[R[2715]]],["deg"]]],[11,R[2517],E,E,6,[[]]],[11,R[2519],E,E,6,[[]]],[11,R[2521],E,E,6,[[],["u32"]]],[11,R[89],E,E,6,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,6,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,7,[[]]],[11,R[2519],E,E,7,[[]]],[11,R[2521],E,E,7,[[],["u32"]]],[11,R[89],E,E,7,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,7,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,8,[[]]],[11,R[2519],E,E,8,[[]]],[11,R[2521],E,E,8,[[],["u32"]]],[11,R[89],E,E,8,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,8,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,9,[[]]],[11,R[2519],E,E,9,[[]]],[11,R[2521],E,E,9,[[],["u32"]]],[11,R[89],E,E,9,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,9,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,10,[[]]],[11,R[2519],E,E,10,[[]]],[11,R[2521],E,E,10,[[],["u32"]]],[11,R[89],E,E,10,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,10,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,11,[[]]],[11,R[2519],E,E,11,[[]]],[11,R[2521],E,E,11,[[],["u32"]]],[11,R[89],E,E,11,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,11,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,12,[[]]],[11,R[2519],E,E,12,[[]]],[11,R[2521],E,E,12,[[],["u32"]]],[11,R[89],E,E,12,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,12,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,13,[[]]],[11,R[2519],E,E,13,[[]]],[11,R[2521],E,E,13,[[],["u32"]]],[11,R[89],E,E,13,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,13,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,15,[[]]],[11,R[2519],E,E,15,[[]]],[11,R[2521],E,E,15,[[],["u32"]]],[11,R[89],E,E,15,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,15,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,14,[[]]],[11,R[2519],E,E,14,[[]]],[11,R[2521],E,E,14,[[],["u32"]]],[11,R[89],E,E,14,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,14,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,16,[[]]],[11,R[2519],E,E,16,[[]]],[11,R[2521],E,E,16,[[],["u32"]]],[11,R[89],E,E,16,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,16,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,17,[[]]],[11,R[2519],E,E,17,[[]]],[11,R[2521],E,E,17,[[],["u32"]]],[11,R[89],E,E,17,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,17,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,18,[[]]],[11,R[2519],E,E,18,[[]]],[11,R[2521],E,E,18,[[],["u32"]]],[11,R[89],E,E,18,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,18,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,19,[[]]],[11,R[2519],E,E,19,[[]]],[11,R[2521],E,E,19,[[],["u32"]]],[11,R[89],E,E,19,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,19,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,38,[[]]],[11,R[2519],E,E,38,[[]]],[11,R[2521],E,E,38,[[],["u32"]]],[11,R[89],E,E,38,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,38,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,37,[[]]],[11,R[2519],E,E,37,[[]]],[11,R[2521],E,E,37,[[],["u32"]]],[11,R[89],E,E,37,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,37,[[["self"],["u32"]],["bool"]]],[11,R[2517],E,E,20,[[],["e"]]],[11,R[2519],E,E,20,[[],["e"]]],[11,R[2521],E,E,20,[[],["u32"]]],[11,R[89],E,E,20,[[["self"],["e"]],["bool"]]],[11,"ulps_eq",E,E,20,[[["self"],["u32"],["e"]],["bool"]]],[11,"rand",E,E,6,[[["r"]],["matrix2"]]],[11,"rand",E,E,7,[[["r"]],["matrix3"]]],[11,"rand",E,E,8,[[["r"]],["matrix4"]]],[11,"rand",E,E,9,[[["r"]],[R[2587]]]],[11,"rand",E,E,10,[[["r"]],["vector1"]]],[11,"rand",E,E,11,[[["r"]],["vector2"]]],[11,"rand",E,E,12,[[["r"]],["vector3"]]],[11,"rand",E,E,13,[[["r"]],["vector4"]]],[11,"rand",E,E,15,[[["r"]],["rad"]]],[11,"rand",E,E,14,[[["r"]],["deg"]]],[11,"rand",E,E,16,[[["r"]],["euler"]]],[11,"one",E,E,6,[[],["matrix2"]]],[11,"one",E,E,7,[[],["matrix3"]]],[11,"one",E,E,8,[[],["matrix4"]]],[11,"one",E,E,9,[[],[R[2587]]]],[11,"one",E,E,38,[[],["basis2"]]],[11,"one",E,E,37,[[],["basis3"]]],[11,"zero",E,E,6,[[],["matrix2"]]],[11,"is_zero",E,E,6,[[["self"]],["bool"]]],[11,"zero",E,E,7,[[],["matrix3"]]],[11,"is_zero",E,E,7,[[["self"]],["bool"]]],[11,"zero",E,E,8,[[],["matrix4"]]],[11,"is_zero",E,E,8,[[["self"]],["bool"]]],[11,"zero",E,E,9,[[],[R[2587]]]],[11,"is_zero",E,E,9,[[["self"]],["bool"]]],[11,"zero",E,E,10,[[],["vector1"]]],[11,"is_zero",E,E,10,[[["self"]],["bool"]]],[11,"zero",E,E,11,[[],["vector2"]]],[11,"is_zero",E,E,11,[[["self"]],["bool"]]],[11,"zero",E,E,12,[[],["vector3"]]],[11,"is_zero",E,E,12,[[["self"]],["bool"]]],[11,"zero",E,E,13,[[],["vector4"]]],[11,"is_zero",E,E,13,[[["self"]],["bool"]]],[11,"zero",E,E,15,[[],["rad"]]],[11,"is_zero",E,E,15,[[["self"]],["bool"]]],[11,"zero",E,E,14,[[],["deg"]]],[11,"is_zero",E,E,14,[[["self"]],["bool"]]],[11,R[958],E,E,10,[[],["vector1"]]],[11,R[959],E,E,10,[[],["vector1"]]],[11,R[958],E,E,11,[[],["vector2"]]],[11,R[959],E,E,11,[[],["vector2"]]],[11,R[958],E,E,12,[[],["vector3"]]],[11,R[959],E,E,12,[[],["vector3"]]],[11,R[958],E,E,13,[[],["vector4"]]],[11,R[959],E,E,13,[[],["vector4"]]],[11,R[958],E,E,15,[[],["rad"]]],[11,R[959],E,E,15,[[],["rad"]]],[11,R[958],E,E,14,[[],["deg"]]],[11,R[959],E,E,14,[[],["deg"]]],[11,R[958],E,E,17,[[],["point1"]]],[11,R[959],E,E,17,[[],["point1"]]],[11,R[958],E,E,18,[[],["point2"]]],[11,R[959],E,E,18,[[],["point2"]]],[11,R[958],E,E,19,[[],["point3"]]],[11,R[959],E,E,19,[[],["point3"]]],[11,"new",E,R[2716],1,[[[T]],[R[83]]]],[11,R[82],E,R[85],1,[[],[R[83]]]],[11,R[84],E,R[2717],1,[[],[R[83]]]],[11,"eq",E,R[87],1,[[],["bool"]]],[11,"ne",E,R[88],1,[[],["bool"]]],[11,"new",E,R[2718],2,[[[T]],["ulps"]]],[11,R[82],E,R[85],2,[[],["ulps"]]],[11,R[86],E,R[2719],2,[[["u32"]],["ulps"]]],[11,"eq",E,R[87],2,[[],["bool"]]],[11,"ne",E,R[88],2,[[],["bool"]]]],"p":[[8,R[94]],[3,R[93]],[3,"Ulps"],[8,"Bounded"],[8,"One"],[8,"Zero"],[3,"Matrix2"],[3,"Matrix3"],[3,"Matrix4"],[3,"Quaternion"],[3,"Vector1"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Deg"],[3,"Rad"],[3,"Euler"],[3,"Point1"],[3,"Point2"],[3,"Point3"],[3,"Decomposed"],[3,R[2720]],[3,R[2721]],[3,"Ortho"],[8,"Array"],[8,R[2613]],[8,R[2625]],[8,R[2628]],[8,R[2722]],[8,R[2636]],[8,"Matrix"],[8,R[2654]],[8,"Angle"],[8,"Rotation"],[8,"Rotation2"],[8,"Rotation3"],[8,"Transform"],[3,"Basis3"],[3,"Basis2"]]};
searchIndex["chrono"]={"doc":"Chrono: Date and Time for Rust","i":[[3,R[735],"chrono",R[2489],N,N],[3,"Date",E,"ISO 8601 calendar date with time zone.",N,N],[3,"DateTime",E,"ISO 8601 combined date and time with time zone.",N,N],[3,R[2486],E,"An error resulting from reading `Weekday` value with…",N,N],[4,R[2479],E,"Specific formatting options for seconds. This may be…",N,N],[13,"Secs",E,"Format whole seconds only, with no decimal point nor…",0,N],[13,"Millis",E,"Use fixed 3 subsecond digits. This corresponds to…",0,N],[13,"Micros",E,"Use fixed 6 subsecond digits. This corresponds to…",0,N],[13,"Nanos",E,"Use fixed 9 subsecond digits. This corresponds to…",0,N],[13,"AutoSi",E,"Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,N],[4,"Weekday",E,"The day of week.",N,N],[13,"Mon",E,"Monday.",1,N],[13,"Tue",E,"Tuesday.",1,N],[13,"Wed",E,"Wednesday.",1,N],[13,"Thu",E,"Thursday.",1,N],[13,"Fri",E,"Friday.",1,N],[13,"Sat",E,"Saturday.",1,N],[13,"Sun",E,"Sunday.",1,N],[0,"prelude",E,"A convenience module appropriate for glob imports (`use…",N,N],[0,"offset",E,"The time zone, which calculates offsets from the local…",N,N],[3,R[2481],R[2429],"The time zone with fixed offset, from UTC-23:59:59 to…",N,N],[3,"Local",E,"The local timescale. This is implemented via the standard…",N,N],[3,"Utc",E,"The UTC time zone. This is the most efficient time zone…",N,N],[4,R[2480],E,"The conversion result from the local time to the…",N,N],[13,"None",E,"Given local time representation is invalid. This can occur…",2,N],[13,"Single",E,"Given local time representation has a single unique result.",2,N],[13,"Ambiguous",E,"Given local time representation has multiple results and…",2,N],[11,"east",E,R[2358],3,[[["i32"]],[R[2359]]]],[11,"east_opt",E,R[2358],3,[[["i32"]],[[R[45],[R[2359]]],[R[2359]]]]],[11,"west",E,R[2360],3,[[["i32"]],[R[2359]]]],[11,"west_opt",E,R[2360],3,[[["i32"]],[[R[45],[R[2359]]],[R[2359]]]]],[11,"local_minus_utc",E,"Returns the number of seconds to add to convert from UTC…",3,[[["self"]],["i32"]]],[11,"utc_minus_local",E,"Returns the number of seconds to add to convert from the…",3,[[["self"]],["i32"]]],[11,"today",E,R[2361],4,[[],[["date",["local"]],["local"]]]],[11,"now",E,R[2362],4,[[],[[R[2369],["local"]],["local"]]]],[11,"today",E,R[2361],5,[[],[["date",["utc"]],["utc"]]]],[11,"now",E,R[2362],5,[[],[[R[2369],["utc"]],["utc"]]]],[8,"Offset",E,"The offset from the local time to UTC.",N,N],[10,"fix",E,"Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],[R[2359]]]],[8,"TimeZone",E,"The time zone.",N,N],[16,"Offset",E,"An associated offset type. This type is used to store the…",7,N],[11,"ymd",E,R[2363],7,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt",E,R[2363],7,[[["u32"],["i32"],["self"]],[[R[2365],["date"]],["date"]]]],[11,"yo",E,R[2364],7,[[["self"],["u32"],["i32"]],["date"]]],[11,"yo_opt",E,R[2364],7,[[["self"],["u32"],["i32"]],[[R[2365],["date"]],["date"]]]],[11,"isoywd",E,R[2366],7,[[["u32"],["weekday"],["i32"],["self"]],["date"]]],[11,"isoywd_opt",E,R[2366],7,[[["u32"],["weekday"],["i32"],["self"]],[[R[2365],["date"]],["date"]]]],[11,R[416],E,R[2367],7,[[["i64"],["self"],["u32"]],[R[2369]]]],[11,"timestamp_opt",E,R[2367],7,[[["i64"],["self"],["u32"]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,R[2397],E,R[2368],7,[[["i64"],["self"]],[R[2369]]]],[11,"timestamp_millis_opt",E,R[2368],7,[[["i64"],["self"]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,R[2398],E,R[2368],7,[[["i64"],["self"]],[R[2369]]]],[11,"datetime_from_str",E,R[2377],7,[[["self"],["str"]],[[R[2369]],[R[2378],[R[2369]]]]]],[10,R[2432],E,"Reconstructs the time zone from the offset.",7,[[],["self"]]],[10,R[2433],E,"Creates the offset(s) for given local `NaiveDate` if…",7,[[["self"],[R[2371]]],[R[2365]]]],[10,R[2434],E,"Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["self"],[R[2370]]],[R[2365]]]],[11,R[2437],E,"Converts the local `NaiveDate` to the timezone-aware…",7,[[["self"],[R[2371]]],[[R[2365],["date"]],["date"]]]],[11,R[2438],E,"Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["self"],[R[2370]]],[[R[2369]],[R[2365],[R[2369]]]]]],[10,R[2435],E,"Creates the offset for given UTC `NaiveDate`. This cannot…",7,[[["self"],[R[2371]]]]],[10,R[2436],E,"Creates the offset for given UTC `NaiveDateTime`. This…",7,[[["self"],[R[2370]]]]],[11,R[2439],E,"Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["self"],[R[2371]]],["date"]]],[11,R[2440],E,"Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["self"],[R[2370]]],[R[2369]]]],[11,"single",E,"Returns `Some` only when the conversion result is unique,…",2,[[],[R[45]]]],[11,"earliest",E,"Returns `Some` for the earliest possible conversion…",2,[[],[R[45]]]],[11,"latest",E,"Returns `Some` for the latest possible conversion result,…",2,[[],[R[45]]]],[11,"map",E,"Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["fnmut"]],[R[2365]]]],[11,"and_time",E,R[2402],2,[[[R[2390]]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,R[2379],E,R[2403],2,[[["u32"]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,R[2381],E,R[2372],2,[[["u32"]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,R[2382],E,R[2372],2,[[["u32"]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,R[2383],E,R[2372],2,[[["u32"]],[[R[2369]],[R[2365],[R[2369]]]]]],[11,"unwrap",E,"Returns the single unique conversion result, or panics…",2,[[],[T]]],[0,"naive","chrono","Date and time types unconcerned with timezones.",N,N],[3,"NaiveDate",R[2430],"ISO 8601 calendar date without timezone. Allows for every…",N,N],[3,"IsoWeek",E,"ISO 8601 week.",N,N],[3,"NaiveTime",E,"ISO 8601 time without timezone. Allows for the nanosecond…",N,N],[3,R[2482],E,"ISO 8601 combined date and time without timezone.",N,N],[11,"from_ymd",E,R[2373],8,[[["u32"],["i32"]],[R[2371]]]],[11,"from_ymd_opt",E,R[2373],8,[[["u32"],["i32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,"from_yo",E,R[2374],8,[[["u32"],["i32"]],[R[2371]]]],[11,"from_yo_opt",E,R[2374],8,[[["u32"],["i32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,"from_isoywd",E,R[2375],8,[[["u32"],["weekday"],["i32"]],[R[2371]]]],[11,"from_isoywd_opt",E,R[2375],8,[[["u32"],["weekday"],["i32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,"from_num_days_from_ce",E,R[2376],8,[[["i32"]],[R[2371]]]],[11,"from_num_days_from_ce_opt",E,R[2376],8,[[["i32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2393],E,R[2377],8,[[["str"]],[[R[2378],[R[2371]]],[R[2371]]]]],[11,"and_time",E,"Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],[R[2390]]],[R[2370]]]],[11,"and_hms",E,R[2380],8,[[["self"],["u32"]],[R[2370]]]],[11,R[2379],E,R[2380],8,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2404],E,R[2380],8,[[["self"],["u32"]],[R[2370]]]],[11,R[2381],E,R[2380],8,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2405],E,R[2380],8,[[["self"],["u32"]],[R[2370]]]],[11,R[2382],E,R[2380],8,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2406],E,R[2380],8,[[["self"],["u32"]],[R[2370]]]],[11,R[2383],E,R[2380],8,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,"succ",E,R[2384],8,[[["self"]],[R[2371]]]],[11,"succ_opt",E,R[2384],8,[[["self"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,"pred",E,R[2385],8,[[["self"]],[R[2371]]]],[11,"pred_opt",E,R[2385],8,[[["self"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2399],E,"Adds the `days` part of given `Duration` to the current…",8,[[[R[2386]]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2400],E,"Subtracts the `days` part of given `Duration` from the…",8,[[[R[2386]]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2394],E,"Subtracts another `NaiveDate` from the current date.…",8,[[[R[2371]]],[R[2386]]]],[11,R[2395],E,"Formats the date with the specified formatting items.…",8,[[["self"],["i"]],[R[2387]]]],[11,"format",E,R[2409],8,[[["str"],["self"]],[[R[2388]],[R[2387],[R[2388]]]]]],[11,"year",E,"Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week",E,"Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0",E,"Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms",E,R[2389],10,[[["u32"]],[R[2390]]]],[11,"from_hms_opt",E,R[2389],10,[[["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,"from_hms_milli",E,R[2391],10,[[["u32"]],[R[2390]]]],[11,"from_hms_milli_opt",E,R[2391],10,[[["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,"from_hms_micro",E,R[2391],10,[[["u32"]],[R[2390]]]],[11,"from_hms_micro_opt",E,R[2391],10,[[["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,"from_hms_nano",E,R[2391],10,[[["u32"]],[R[2390]]]],[11,"from_hms_nano_opt",E,R[2391],10,[[["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,"from_num_seconds_from_midnight",E,R[2392],10,[[["u32"]],[R[2390]]]],[11,"from_num_seconds_from_midnight_opt",E,R[2392],10,[[["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,R[2393],E,R[2377],10,[[["str"]],[[R[2378],[R[2390]]],[R[2390]]]]],[11,"overflowing_add_signed",E,"Adds given `Duration` to the current time, and also…",10,[[["self"],[R[2386]]]]],[11,"overflowing_sub_signed",E,"Subtracts given `Duration` from the current time, and also…",10,[[["self"],[R[2386]]]]],[11,R[2394],E,"Subtracts another `NaiveTime` from the current time.…",10,[[[R[2390]]],[R[2386]]]],[11,R[2395],E,"Formats the time with the specified formatting items.…",10,[[["self"],["i"]],[R[2387]]]],[11,"format",E,"Formats the time with the specified format string. See the…",10,[[["str"],["self"]],[[R[2388]],[R[2387],[R[2388]]]]]],[11,"new",E,"Makes a new `NaiveDateTime` from date and time components.…",11,[[[R[2371]],[R[2390]]],[R[2370]]]],[11,"from_timestamp",E,R[2396],11,[[["i64"],["u32"]],[R[2370]]]],[11,"from_timestamp_opt",E,R[2396],11,[[["i64"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2393],E,R[2377],11,[[["str"]],[[R[2378],[R[2370]]],[R[2370]]]]],[11,"date",E,R[2410],11,[[["self"]],[R[2371]]]],[11,"time",E,"Retrieves a time component.",11,[[["self"]],[R[2390]]]],[11,R[416],E,"Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,R[2397],E,"Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,R[2398],E,"Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,R[2411],E,"Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[2412],E,"Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[2413],E,"Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,R[2399],E,R[2418],11,[[[R[2386]]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2400],E,R[2419],11,[[[R[2386]]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2394],E,"Subtracts another `NaiveDateTime` from the current date…",11,[[[R[2370]]],[R[2386]]]],[11,R[2395],E,R[2401],11,[[["self"],["i"]],[R[2387]]]],[11,"format",E,R[2401],11,[[["str"],["self"]],[[R[2388]],[R[2387],[R[2388]]]]]],[17,"MIN_DATE",E,"The minimum possible `NaiveDate` (January 1, 262145 BCE).",N,N],[17,"MAX_DATE",E,"The maximum possible `NaiveDate` (December 31, 262143 CE).",N,N],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,[[[R[2371]]],["date"]]],[11,"and_time",E,R[2402],12,[[["self"],[R[2390]]],[[R[45],[R[2369]]],[R[2369]]]]],[11,"and_hms",E,R[2403],12,[[["self"],["u32"]],[R[2369]]]],[11,R[2379],E,R[2403],12,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2404],E,R[2372],12,[[["self"],["u32"]],[R[2369]]]],[11,R[2381],E,R[2372],12,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2405],E,R[2372],12,[[["self"],["u32"]],[R[2369]]]],[11,R[2382],E,R[2372],12,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2406],E,R[2372],12,[[["self"],["u32"]],[R[2369]]]],[11,R[2383],E,R[2372],12,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,"succ",E,R[2407],12,[[["self"]],["date"]]],[11,"succ_opt",E,R[2407],12,[[["self"]],[["date"],[R[45],["date"]]]]],[11,"pred",E,R[2408],12,[[["self"]],["date"]]],[11,"pred_opt",E,R[2408],12,[[["self"]],[["date"],[R[45],["date"]]]]],[11,"offset",E,R[2414],12,[[["self"]]]],[11,R[540],E,R[2415],12,[[["self"]],["tz"]]],[11,R[2416],E,R[2417],12,[[["self"],["tz2"]],[[R[540]],["date"]]]],[11,R[2399],E,"Adds given `Duration` to the current date.",12,[[[R[2386]]],[["date"],[R[45],["date"]]]]],[11,R[2400],E,"Subtracts given `Duration` from the current date.",12,[[[R[2386]]],[["date"],[R[45],["date"]]]]],[11,R[2394],E,"Subtracts another `Date` from the current date. Returns a…",12,[[[R[540]],["date"]],[R[2386]]]],[11,"naive_utc",E,"Returns a view to the naive UTC date.",12,[[["self"]],[R[2371]]]],[11,R[2420],E,"Returns a view to the naive local date.",12,[[["self"]],[R[2371]]]],[11,R[2395],E,"Formats the date with the specified formatting items.",12,[[["self"],["i"]],[R[2387]]]],[11,"format",E,R[2409],12,[[["str"],["self"]],[[R[2388]],[R[2387],[R[2388]]]]]],[11,"from_utc",E,"Makes a new `DateTime` with given UTC datetime and offset.…",13,[[[R[2370]]],[R[2369]]]],[11,"date",E,R[2410],13,[[["self"]],["date"]]],[11,"time",E,"Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],[R[2390]]]],[11,R[416],E,"Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,R[2397],E,"Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,R[2398],E,"Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,R[2411],E,"Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,R[2412],E,"Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,R[2413],E,"Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset",E,R[2414],13,[[["self"]]]],[11,R[540],E,R[2415],13,[[["self"]],["tz"]]],[11,R[2416],E,R[2417],13,[[["self"],["tz2"]],[[R[2369]],[R[540]]]]],[11,R[2399],E,R[2418],13,[[[R[2386]]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2400],E,R[2419],13,[[[R[2386]]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2394],E,"Subtracts another `DateTime` from the current date and…",13,[[[R[2369]],[R[540]]],[R[2386]]]],[11,"naive_utc",E,"Returns a view to the naive UTC datetime.",13,[[["self"]],[R[2370]]]],[11,R[2420],E,"Returns a view to the naive local datetime.",13,[[["self"]],[R[2370]]]],[11,"parse_from_rfc2822",E,"Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],[[R[2378],[R[2369]]],[R[2369],[R[2359]]]]]],[11,"parse_from_rfc3339",E,"Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],[[R[2378],[R[2369]]],[R[2369],[R[2359]]]]]],[11,R[2393],E,R[2377],13,[[["str"]],[[R[2378],[R[2369]]],[R[2369],[R[2359]]]]]],[11,"to_rfc2822",E,"Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339",E,"Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts",E,"Return an RFC 3339 and ISO 8601 date and time string with…",13,[[[R[2472]],["self"],["bool"]],["string"]]],[11,R[2395],E,R[2401],13,[[["self"],["i"]],[R[2387]]]],[11,"format",E,R[2401],13,[[["str"],["self"]],[[R[2388]],[R[2387],[R[2388]]]]]],[0,"format",E,"Formatting (and parsing) utilities for date and time.",N,N],[3,"Parsed",R[2427],"Parsed parts of date and time. There are two classes of…",N,N],[12,"year",E,"Year.",14,N],[12,"year_div_100",E,"Year divided by 100. Implies that the year is >= 1 BCE…",14,N],[12,"year_mod_100",E,"Year modulo 100. Implies that the year is >= 1 BCE when set.",14,N],[12,"isoyear",E,"Year in the ISO week date.",14,N],[12,"isoyear_div_100",E,"Year in the ISO week date, divided by 100. Implies that…",14,N],[12,"isoyear_mod_100",E,"Year in the ISO week date, modulo 100. Implies that the…",14,N],[12,"month",E,"Month (1--12).",14,N],[12,"week_from_sun",E,R[2421],14,N],[12,"week_from_mon",E,R[2422],14,N],[12,"isoweek",E,"ISO week number (1--52 or 1--53 depending on the year).",14,N],[12,"weekday",E,"Day of the week.",14,N],[12,"ordinal",E,"Day of the year (1--365 or 1--366 depending on the year).",14,N],[12,"day",E,"Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,N],[12,"hour_div_12",E,"Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,N],[12,"hour_mod_12",E,"Hour number modulo 12 (0--11).",14,N],[12,"minute",E,"Minute number (0--59).",14,N],[12,"second",E,"Second number (0--60, accounting for leap seconds).",14,N],[12,R[2464],E,"The number of nanoseconds since the whole second…",14,N],[12,R[416],E,R[2423],14,N],[12,"offset",E,"Offset from the local time to UTC, in seconds.",14,N],[3,R[2487],E,"An opaque type representing numeric item types for…",N,N],[3,R[2488],E,"An opaque type representing fixed-format item types for…",N,N],[3,R[937],E,"An error from the `parse` function.",N,N],[3,R[2484],E,"A temporary object which can be used as an argument to…",N,N],[4,"Pad",E,"Padding characters for numeric items.",N,N],[13,"None",E,"No padding.",15,N],[13,"Zero",E,"Zero (`0`) padding.",15,N],[13,"Space",E,"Space padding.",15,N],[4,"Numeric",E,"Numeric item types. They have associated formatting width…",N,N],[13,"Year",E,"Full Gregorian year (FW=4, PW=∞). May accept years before…",16,N],[13,"YearDiv100",E,"Gregorian year divided by 100 (century number; FW=PW=2).…",16,N],[13,"YearMod100",E,"Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,N],[13,"IsoYear",E,"Year in the ISO week date (FW=4, PW=∞). May accept years…",16,N],[13,"IsoYearDiv100",E,"Year in the ISO week date, divided by 100 (FW=PW=2).…",16,N],[13,"IsoYearMod100",E,"Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,N],[13,"Month",E,"Month (FW=PW=2).",16,N],[13,"Day",E,"Day of the month (FW=PW=2).",16,N],[13,"WeekFromSun",E,R[2421],16,N],[13,"WeekFromMon",E,R[2422],16,N],[13,"IsoWeek",E,"Week number in the ISO week date (FW=PW=2).",16,N],[13,"NumDaysFromSun",E,"Day of the week, where Sunday = 0 and Saturday = 6…",16,N],[13,"WeekdayFromMon",E,"Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,N],[13,"Ordinal",E,"Day of the year (FW=PW=3).",16,N],[13,"Hour",E,"Hour number in the 24-hour clocks (FW=PW=2).",16,N],[13,"Hour12",E,"Hour number in the 12-hour clocks (FW=PW=2).",16,N],[13,"Minute",E,"The number of minutes since the last whole hour (FW=PW=2).",16,N],[13,"Second",E,"The number of seconds since the last whole minute (FW=PW=2).",16,N],[13,"Nanosecond",E,"The number of nanoseconds since the last whole second…",16,N],[13,R[421],E,R[2423],16,N],[13,"Internal",E,R[2425],16,N],[4,"Fixed",E,"Fixed-format item types.",N,N],[13,"ShortMonthName",E,"Abbreviated month names.",17,N],[13,"LongMonthName",E,"Full month names.",17,N],[13,"ShortWeekdayName",E,"Abbreviated day of the week names.",17,N],[13,"LongWeekdayName",E,"Full day of the week names.",17,N],[13,"LowerAmPm",E,"AM/PM.",17,N],[13,"UpperAmPm",E,"AM/PM.",17,N],[13,"Nanosecond",E,"An optional dot plus one or more digits for left-aligned…",17,N],[13,"Nanosecond3",E,"Same to `Nanosecond` but the accuracy is fixed to 3.",17,N],[13,"Nanosecond6",E,"Same to `Nanosecond` but the accuracy is fixed to 6.",17,N],[13,"Nanosecond9",E,"Same to `Nanosecond` but the accuracy is fixed to 9.",17,N],[13,"TimezoneName",E,"Timezone name.",17,N],[13,"TimezoneOffsetColon",E,R[2424],17,N],[13,"TimezoneOffsetColonZ",E,R[2424],17,N],[13,"TimezoneOffset",E,"Same to `TimezoneOffsetColon` but prints no colon. Parsing…",17,N],[13,"TimezoneOffsetZ",E,"Same to `TimezoneOffsetColonZ` but prints no colon.…",17,N],[13,"RFC2822",E,"RFC 2822 date and time syntax. Commonly used for email and…",17,N],[13,"RFC3339",E,"RFC 3339 & ISO 8601 date and time syntax.",17,N],[13,"Internal",E,R[2425],17,N],[4,"Item",E,"A single formatting item. This is used for both formatting…",N,N],[13,"Literal",E,"A literally printed and parsed text.",18,N],[13,"OwnedLiteral",E,"Same to `Literal` but with the string owned by the item.",18,N],[13,"Space",E,"Whitespace. Prints literally but reads zero or more…",18,N],[13,"OwnedSpace",E,"Same to `Space` but with the string owned by the item.",18,N],[13,"Numeric",E,"Numeric item. Can be optionally padded to the maximal…",18,N],[13,"Fixed",E,"Fixed-format item.",18,N],[13,"Error",E,"Issues a formatting error. Used to signal an invalid…",18,N],[5,"parse",E,"Tries to parse given string into `parsed` with given…",N,[[["parsed"],["i"],["str"]],[R[2378]]]],[5,"format",E,"Tries to format given arguments with given formatting…",N,[[[R[2390]],[R[45]],[R[30]],[R[45],[R[2371]]],[R[45],[R[2390]]],[R[2371]],["i"]],[R[13]]]],[11,"new",E,"Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year",E,"Tries to set the `year` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_year_div_100",E,"Tries to set the `year_div_100` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_year_mod_100",E,"Tries to set the `year_mod_100` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_isoyear",E,"Tries to set the `isoyear` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_isoyear_div_100",E,"Tries to set the `isoyear_div_100` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_isoyear_mod_100",E,"Tries to set the `isoyear_mod_100` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_month",E,"Tries to set the `month` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_week_from_sun",E,"Tries to set the `week_from_sun` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_week_from_mon",E,"Tries to set the `week_from_mon` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_isoweek",E,"Tries to set the `isoweek` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_weekday",E,"Tries to set the `weekday` field from given value.",14,[[["self"],["weekday"]],[R[2378]]]],[11,"set_ordinal",E,"Tries to set the `ordinal` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_day",E,"Tries to set the `day` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_ampm",E,"Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],[R[2378]]]],[11,"set_hour12",E,"Tries to set the `hour_mod_12` field from given hour…",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_hour",E,"Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_minute",E,"Tries to set the `minute` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_second",E,"Tries to set the `second` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_nanosecond",E,"Tries to set the `nanosecond` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_timestamp",E,"Tries to set the `timestamp` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"set_offset",E,"Tries to set the `offset` field from given value.",14,[[["self"],["i64"]],[R[2378]]]],[11,"to_naive_date",E,"Returns a parsed naive date out of given fields.",14,[[["self"]],[[R[2378],[R[2371]]],[R[2371]]]]],[11,"to_naive_time",E,"Returns a parsed naive time out of given fields.",14,[[["self"]],[[R[2378],[R[2390]]],[R[2390]]]]],[11,"to_naive_datetime_with_offset",E,"Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],[[R[2378],[R[2370]]],[R[2370]]]]],[11,"to_fixed_offset",E,"Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],[[R[2378],[R[2359]]],[R[2359]]]]],[11,"to_datetime",E,R[2426],14,[[["self"]],[[R[2378],[R[2369]]],[R[2369],[R[2359]]]]]],[11,"to_datetime_with_timezone",E,R[2426],14,[[["tz"],["self"]],[[R[2369]],[R[2378],[R[2369]]]]]],[0,"strftime",E,"`strftime`/`strptime`-inspired date and time formatting…",N,N],[3,R[2483],R[2431],"Parsing iterator for `strftime`-like format strings.",N,N],[11,"new",E,"Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],[R[2388]]]],[6,"ParseResult",R[2427],"Same to `Result<T, ParseError>`.",N,N],[11,"new",E,R[2428],20,[[[R[45],[R[2371]]],[R[2390]],[R[2371]],["i"],[R[45],[R[2390]]]],[R[2387]]]],[11,"new_with_offset",E,R[2428],20,[[["off"],[R[45],[R[2371]]],[R[2390]],[R[2371]],["i"],[R[45],[R[2390]]]],[R[2387]]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",N,N],[17,"MAX_DATE",E,"The maximum possible `Date`.",N,N],[8,R[2485],E,"Extension trait for subsecond rounding or truncation to a…",N,N],[10,"round_subsecs",E,"Return a copy rounded to the specified number of subsecond…",21,[[["u16"]],["self"]]],[10,"trunc_subsecs",E,"Return a copy truncated to the specified number of…",21,[[["u16"]],["self"]]],[8,"Datelike",E,"The common set of methods for date component.",N,N],[10,"year",E,R[2441],22,[[["self"]],["i32"]]],[11,"year_ce",E,"Returns the absolute year number starting from 1 with a…",22,[[["self"]]]],[10,"month",E,R[2442],22,[[["self"]],["u32"]]],[10,"month0",E,R[2443],22,[[["self"]],["u32"]]],[10,"day",E,R[2444],22,[[["self"]],["u32"]]],[10,"day0",E,R[2445],22,[[["self"]],["u32"]]],[10,"ordinal",E,R[2446],22,[[["self"]],["u32"]]],[10,"ordinal0",E,R[2447],22,[[["self"]],["u32"]]],[10,"weekday",E,R[2448],22,[[["self"]],["weekday"]]],[10,"iso_week",E,"Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,R[2459],E,"Makes a new value with the year number changed.",22,[[["self"],["i32"]],[R[45]]]],[10,R[2455],E,"Makes a new value with the month number (starting from 1)…",22,[[["self"],["u32"]],[R[45]]]],[10,R[2449],E,"Makes a new value with the month number (starting from 0)…",22,[[["self"],["u32"]],[R[45]]]],[10,"with_day",E,"Makes a new value with the day of month (starting from 1)…",22,[[["self"],["u32"]],[R[45]]]],[10,R[2460],E,"Makes a new value with the day of month (starting from 0)…",22,[[["self"],["u32"]],[R[45]]]],[10,R[2452],E,"Makes a new value with the day of year (starting from 1)…",22,[[["self"],["u32"]],[R[45]]]],[10,R[2453],E,"Makes a new value with the day of year (starting from 0)…",22,[[["self"],["u32"]],[R[45]]]],[11,"num_days_from_ce",E,"Returns the number of days since January 1, Year 1 (aka…",22,[[["self"]],["i32"]]],[8,"Timelike",E,"The common set of methods for time component.",N,N],[10,"hour",E,R[2461],23,[[["self"]],["u32"]]],[11,"hour12",E,"Returns the hour number from 1 to 12 with a boolean flag,…",23,[[["self"]]]],[10,"minute",E,R[2462],23,[[["self"]],["u32"]]],[10,"second",E,R[2463],23,[[["self"]],["u32"]]],[10,R[2464],E,R[2465],23,[[["self"]],["u32"]]],[10,R[2471],E,"Makes a new value with the hour number changed.",23,[[["self"],["u32"]],[R[45]]]],[10,R[2466],E,"Makes a new value with the minute number changed.",23,[[["self"],["u32"]],[R[45]]]],[10,R[2467],E,"Makes a new value with the second number changed.",23,[[["self"],["u32"]],[R[45]]]],[10,R[2468],E,"Makes a new value with nanoseconds since the whole…",23,[[["self"],["u32"]],[R[45]]]],[11,R[2469],E,R[2470],23,[[["self"]],["u32"]]],[11,"succ",E,"The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred",E,"The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday",E,"Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday",E,"Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday",E,"Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday",E,"Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,R[62],E,E,24,[[["self"]],["string"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[[T],["self"]]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,R[62],E,E,12,[[["self"]],["string"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,R[62],E,E,13,[[["self"]],["string"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[[T],["self"]]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],R[2429],E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],R[2430],E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,R[62],E,E,10,[[["self"]],["string"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,R[62],E,E,11,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",R[2427],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[[T],["self"]]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[[T],["self"]]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,R[62],E,E,28,[[["self"]],["string"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[[T],["self"]]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,R[62],E,E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[[T],["self"]]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[[T],["self"]]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[[T],["self"]]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",R[2431],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[43],E,E,19,[[],["i"]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[[T],["self"]]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"cmp","chrono",E,24,[[[R[411]],["self"]],[R[47]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"fmt",E,E,24,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"eq",E,E,24,[[[R[411]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[411]],["self"]],["bool"]]],[11,R[63],E,E,24,[[[R[411]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,24,[[[R[411]],["self"]],["bool"]]],[11,"le",E,E,24,[[[R[411]],["self"]],["bool"]]],[11,"gt",E,E,24,[[[R[411]],["self"]],["bool"]]],[11,"ge",E,E,24,[[[R[411]],["self"]],["bool"]]],[11,"div",E,E,24,[[["i32"]],[R[411]]]],[11,"add",E,E,24,[[[R[411]]],[R[411]]]],[11,"sub",E,E,24,[[[R[411]]],[R[411]]]],[11,"fmt",E,E,24,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"mul",E,E,24,[[["i32"]],[R[411]]]],[11,"neg",E,E,24,[[],[R[411]]]],[11,"clone",E,E,24,[[["self"]],[R[411]]]],[11,"fix",R[2429],E,3,[[["self"]],[R[2359]]]],[11,"fix",E,E,5,[[["self"]],[R[2359]]]],[11,R[2432],E,E,3,[[[R[2359]]],[R[2359]]]],[11,R[2433],E,E,3,[[["self"],[R[2371]]],[[R[2365],[R[2359]]],[R[2359]]]]],[11,R[2434],E,E,3,[[["self"],[R[2370]]],[[R[2365],[R[2359]]],[R[2359]]]]],[11,R[2435],E,E,3,[[["self"],[R[2371]]],[R[2359]]]],[11,R[2436],E,E,3,[[["self"],[R[2370]]],[R[2359]]]],[11,R[2432],E,E,4,[[[R[2359]]],["local"]]],[11,R[2433],E,E,4,[[["self"],[R[2371]]],[[R[2365],[R[2359]]],[R[2359]]]]],[11,R[2434],E,E,4,[[["self"],[R[2370]]],[[R[2365],[R[2359]]],[R[2359]]]]],[11,R[2435],E,E,4,[[["self"],[R[2371]]],[R[2359]]]],[11,R[2436],E,E,4,[[["self"],[R[2370]]],[R[2359]]]],[11,R[2437],E,E,4,[[["self"],[R[2371]]],[[R[2365],["date"]],["date",["local"]]]]],[11,R[2438],E,E,4,[[["self"],[R[2370]]],[[R[2365],[R[2369]]],[R[2369],["local"]]]]],[11,R[2439],E,E,4,[[["self"],[R[2371]]],[["date",["local"]],["local"]]]],[11,R[2440],E,E,4,[[["self"],[R[2370]]],[[R[2369],["local"]],["local"]]]],[11,R[2432],E,E,5,[[["utc"]],["utc"]]],[11,R[2433],E,E,5,[[["self"],[R[2371]]],[["utc"],[R[2365],["utc"]]]]],[11,R[2434],E,E,5,[[["self"],[R[2370]]],[["utc"],[R[2365],["utc"]]]]],[11,R[2435],E,E,5,[[["self"],[R[2371]]],["utc"]]],[11,R[2436],E,E,5,[[["self"],[R[2370]]],["utc"]]],[11,"year",R[2430],R[2441],8,[[["self"]],["i32"]]],[11,"month",E,R[2442],8,[[["self"]],["u32"]]],[11,"month0",E,R[2443],8,[[["self"]],["u32"]]],[11,"day",E,R[2444],8,[[["self"]],["u32"]]],[11,"day0",E,R[2445],8,[[["self"]],["u32"]]],[11,"ordinal",E,R[2446],8,[[["self"]],["u32"]]],[11,"ordinal0",E,R[2447],8,[[["self"]],["u32"]]],[11,"weekday",E,R[2448],8,[[["self"]],["weekday"]]],[11,"iso_week",E,E,8,[[["self"]],["isoweek"]]],[11,R[2459],E,"Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2455],E,R[2450],8,[[["self"],["u32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2449],E,R[2450],8,[[["self"],["u32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,"with_day",E,R[2451],8,[[["self"],["u32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2460],E,R[2451],8,[[["self"],["u32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2452],E,R[2454],8,[[["self"],["u32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,R[2453],E,R[2454],8,[[["self"],["u32"]],[[R[2371]],[R[45],[R[2371]]]]]],[11,"year",E,R[2441],11,[[["self"]],["i32"]]],[11,"month",E,R[2442],11,[[["self"]],["u32"]]],[11,"month0",E,R[2443],11,[[["self"]],["u32"]]],[11,"day",E,R[2444],11,[[["self"]],["u32"]]],[11,"day0",E,R[2445],11,[[["self"]],["u32"]]],[11,"ordinal",E,R[2446],11,[[["self"]],["u32"]]],[11,"ordinal0",E,R[2447],11,[[["self"]],["u32"]]],[11,"weekday",E,R[2448],11,[[["self"]],["weekday"]]],[11,"iso_week",E,E,11,[[["self"]],["isoweek"]]],[11,R[2459],E,"Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2455],E,R[2456],11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2449],E,R[2456],11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,"with_day",E,R[2457],11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2460],E,R[2457],11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2452],E,R[2458],11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2453],E,R[2458],11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,"year","chrono",E,12,[[["self"]],["i32"]]],[11,"month",E,E,12,[[["self"]],["u32"]]],[11,"month0",E,E,12,[[["self"]],["u32"]]],[11,"day",E,E,12,[[["self"]],["u32"]]],[11,"day0",E,E,12,[[["self"]],["u32"]]],[11,"ordinal",E,E,12,[[["self"]],["u32"]]],[11,"ordinal0",E,E,12,[[["self"]],["u32"]]],[11,"weekday",E,E,12,[[["self"]],["weekday"]]],[11,"iso_week",E,E,12,[[["self"]],["isoweek"]]],[11,R[2459],E,E,12,[[["self"],["i32"]],[["date"],[R[45],["date"]]]]],[11,R[2455],E,E,12,[[["self"],["u32"]],[["date"],[R[45],["date"]]]]],[11,R[2449],E,E,12,[[["self"],["u32"]],[["date"],[R[45],["date"]]]]],[11,"with_day",E,E,12,[[["self"],["u32"]],[["date"],[R[45],["date"]]]]],[11,R[2460],E,E,12,[[["self"],["u32"]],[["date"],[R[45],["date"]]]]],[11,R[2452],E,E,12,[[["self"],["u32"]],[["date"],[R[45],["date"]]]]],[11,R[2453],E,E,12,[[["self"],["u32"]],[["date"],[R[45],["date"]]]]],[11,"year",E,E,13,[[["self"]],["i32"]]],[11,"month",E,E,13,[[["self"]],["u32"]]],[11,"month0",E,E,13,[[["self"]],["u32"]]],[11,"day",E,E,13,[[["self"]],["u32"]]],[11,"day0",E,E,13,[[["self"]],["u32"]]],[11,"ordinal",E,E,13,[[["self"]],["u32"]]],[11,"ordinal0",E,E,13,[[["self"]],["u32"]]],[11,"weekday",E,E,13,[[["self"]],["weekday"]]],[11,"iso_week",E,E,13,[[["self"]],["isoweek"]]],[11,R[2459],E,E,13,[[["self"],["i32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2455],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2449],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,"with_day",E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2460],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2452],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2453],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,"hour",R[2430],R[2461],10,[[["self"]],["u32"]]],[11,"minute",E,R[2462],10,[[["self"]],["u32"]]],[11,"second",E,R[2463],10,[[["self"]],["u32"]]],[11,R[2464],E,R[2465],10,[[["self"]],["u32"]]],[11,R[2471],E,"Makes a new `NaiveTime` with the hour number changed.",10,[[["self"],["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,R[2466],E,"Makes a new `NaiveTime` with the minute number changed.",10,[[["self"],["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,R[2467],E,"Makes a new `NaiveTime` with the second number changed.",10,[[["self"],["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,R[2468],E,"Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["self"],["u32"]],[[R[2390]],[R[45],[R[2390]]]]]],[11,R[2469],E,R[2470],10,[[["self"]],["u32"]]],[11,"hour",E,R[2461],11,[[["self"]],["u32"]]],[11,"minute",E,R[2462],11,[[["self"]],["u32"]]],[11,"second",E,R[2463],11,[[["self"]],["u32"]]],[11,R[2464],E,R[2465],11,[[["self"]],["u32"]]],[11,R[2471],E,"Makes a new `NaiveDateTime` with the hour number changed.",11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2466],E,"Makes a new `NaiveDateTime` with the minute number changed.",11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2467],E,"Makes a new `NaiveDateTime` with the second number changed.",11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,R[2468],E,"Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["self"],["u32"]],[[R[2370]],[R[45],[R[2370]]]]]],[11,"hour","chrono",E,13,[[["self"]],["u32"]]],[11,"minute",E,E,13,[[["self"]],["u32"]]],[11,"second",E,E,13,[[["self"]],["u32"]]],[11,R[2464],E,E,13,[[["self"]],["u32"]]],[11,R[2471],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2466],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2467],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[2468],E,E,13,[[["self"],["u32"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,R[77],R[2427],E,14,[[],["parsed"]]],[11,"next",R[2431],E,19,[[["self"]],[["item"],[R[45],["item"]]]]],[11,"clone",R[2429],E,2,[[["self"]],[R[2365]]]],[11,"clone",E,E,3,[[["self"]],[R[2359]]]],[11,"clone",E,E,4,[[["self"]],["local"]]],[11,"clone",E,E,5,[[["self"]],["utc"]]],[11,"clone",R[2430],E,8,[[["self"]],[R[2371]]]],[11,"clone",E,E,9,[[["self"]],["isoweek"]]],[11,"clone",E,E,10,[[["self"]],[R[2390]]]],[11,"clone",E,E,11,[[["self"]],[R[2370]]]],[11,"clone","chrono",E,12,[[["self"]],["date"]]],[11,"clone",E,E,0,[[["self"]],[R[2472]]]],[11,"clone",E,E,13,[[["self"]],[R[2369]]]],[11,"clone",R[2427],E,15,[[["self"]],["pad"]]],[11,"clone",E,E,16,[[["self"]],["numeric"]]],[11,"clone",E,E,26,[[["self"]],["self"]]],[11,"clone",E,E,17,[[["self"]],["fixed"]]],[11,"clone",E,E,27,[[["self"]],[R[2476]]]],[11,"clone",E,E,18,[[["self"]],["item"]]],[11,"clone",E,E,28,[[["self"]],[R[929]]]],[11,"clone",E,E,14,[[["self"]],["parsed"]]],[11,"clone",R[2431],E,19,[[["self"]],[R[2388]]]],[11,"clone","chrono",E,1,[[["self"]],["weekday"]]],[11,"clone",E,E,25,[[["self"]],[R[2477]]]],[11,"cmp",R[2430],E,8,[[["self"],[R[2371]]],[R[47]]]],[11,"cmp",E,E,9,[[["self"],["isoweek"]],[R[47]]]],[11,"cmp",E,E,10,[[[R[2390]],["self"]],[R[47]]]],[11,"cmp",E,E,11,[[["self"],[R[2370]]],[R[47]]]],[11,"cmp","chrono",E,12,[[["self"],["date"]],[R[47]]]],[11,"cmp",E,E,13,[[["self"],[R[2369]]],[R[47]]]],[11,"from",E,R[2473],13,[[[R[2369],["utc"]],["utc"]],["self"]]],[11,"from",E,R[2473],13,[[[R[2369],["utc"]],["utc"]],["self"]]],[11,"from",E,R[2474],13,[[[R[2369],[R[2359]]],[R[2359]]],["self"]]],[11,"from",E,R[2474],13,[[[R[2369],[R[2359]]],[R[2359]]],["self"]]],[11,"from",E,R[2475],13,[[[R[2369],["local"]],["local"]],["self"]]],[11,"from",E,R[2475],13,[[[R[2369],["local"]],["local"]],["self"]]],[11,"from",E,E,13,[[[R[412]]],[[R[2369],["utc"]],["utc"]]]],[11,"from",E,E,13,[[[R[412]]],[[R[2369],["local"]],["local"]]]],[11,R[63],R[2430],E,8,[[["self"],[R[2371]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,8,[[["self"],[R[2371]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[2371]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[2371]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[2371]]],["bool"]]],[11,R[63],E,E,9,[[["self"],["isoweek"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"le",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,R[63],E,E,10,[[[R[2390]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,10,[[[R[2390]],["self"]],["bool"]]],[11,"le",E,E,10,[[[R[2390]],["self"]],["bool"]]],[11,"gt",E,E,10,[[[R[2390]],["self"]],["bool"]]],[11,"ge",E,E,10,[[[R[2390]],["self"]],["bool"]]],[11,R[63],E,E,11,[[["self"],[R[2370]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,11,[[["self"],[R[2370]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[2370]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[2370]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[2370]]],["bool"]]],[11,R[63],"chrono",E,12,[[["self"],["date"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,13,[[["self"],[R[2369]]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",R[2429],E,2,[[["self"],[R[2365]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2365]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2359]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[2359]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["utc"]],["bool"]]],[11,"eq",R[2430],E,8,[[["self"],[R[2371]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[2371]]],["bool"]]],[11,"eq",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["isoweek"]],["bool"]]],[11,"eq",E,E,10,[[[R[2390]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[2390]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[2370]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[2370]]],["bool"]]],[11,"eq","chrono",E,12,[[["date"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2472]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[2369]]],["bool"]]],[11,"eq",R[2427],E,15,[[["self"],["pad"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["numeric"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["numeric"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq",E,E,17,[[["fixed"],["self"]],["bool"]]],[11,"ne",E,E,17,[[["fixed"],["self"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[2476]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[2476]]],["bool"]]],[11,"eq",E,E,18,[[["item"],["self"]],["bool"]]],[11,"ne",E,E,18,[[["item"],["self"]],["bool"]]],[11,"eq",E,E,28,[[[R[929]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[929]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["parsed"],["self"]],["bool"]]],[11,"ne",E,E,14,[[["parsed"],["self"]],["bool"]]],[11,"eq","chrono",E,1,[[["self"],["weekday"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[2477]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[2477]]],["bool"]]],[11,"fmt",R[2429],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2430],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","chrono",E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2427],E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,26,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2431],E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2427],E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","chrono",E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,25,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2429],E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2430],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","chrono",E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2427],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,R[551],R[2430],E,8,[[["str"]],[[R[2378],[R[2371]]],[R[2371]]]]],[11,R[551],E,E,10,[[["str"]],[[R[2378],[R[2390]]],[R[2390]]]]],[11,R[551],E,E,11,[[["str"]],[[R[2378],[R[2370]]],[R[2370]]]]],[11,R[551],"chrono",E,13,[[["str"]],[[R[2378],[R[2369]]],[R[2369],[R[2359]]]]]],[11,R[551],E,E,13,[[["str"]],[[R[2378],[R[2369]]],[R[2369],["utc"]]]]],[11,R[551],E,E,13,[[["str"]],[[R[2378],[R[2369]]],[R[2369],["local"]]]]],[11,R[551],E,E,1,[[["str"]],[R[13]]]],[11,"add",R[2430],E,10,[[[R[2359]]],[R[2390]]]],[11,"add",E,E,11,[[[R[2359]]],[R[2370]]]],[11,"add","chrono",E,13,[[[R[2359]]],[R[2369]]]],[11,"add",R[2430],E,8,[[[R[2386]]],[R[2371]]]],[11,"add",E,E,10,[[[R[2386]]],[R[2390]]]],[11,"add",E,E,11,[[[R[2386]]],[R[2370]]]],[11,"add","chrono",E,12,[[[R[2386]]],["date"]]],[11,"add",E,E,13,[[[R[2386]]],[R[2369]]]],[11,"sub",R[2430],E,10,[[[R[2359]]],[R[2390]]]],[11,"sub",E,E,11,[[[R[2359]]],[R[2370]]]],[11,"sub","chrono",E,13,[[[R[2359]]],[R[2369]]]],[11,"sub",R[2430],E,8,[[[R[2386]]],[R[2371]]]],[11,"sub",E,E,8,[[[R[2371]]],[R[2386]]]],[11,"sub",E,E,10,[[[R[2386]]],[R[2390]]]],[11,"sub",E,E,10,[[[R[2390]]],[R[2386]]]],[11,"sub",E,E,11,[[[R[2386]]],[R[2370]]]],[11,"sub",E,E,11,[[[R[2370]]],[R[2386]]]],[11,"sub","chrono",E,12,[[[R[2386]]],["date"]]],[11,"sub",E,E,12,[[["date"]],[R[2386]]]],[11,"sub",E,E,13,[[[R[2386]]],[R[2369]]]],[11,"sub",E,E,13,[[[R[2369]]],[R[2386]]]],[11,R[2478],R[2430],E,8,[[["self"],[R[2386]]]]],[11,R[2478],E,E,10,[[["self"],[R[2386]]]]],[11,R[2478],E,E,11,[[["self"],[R[2386]]]]],[11,R[1432],E,E,8,[[["self"],[R[2386]]]]],[11,R[1432],E,E,10,[[["self"],[R[2386]]]]],[11,R[1432],E,E,11,[[["self"],[R[2386]]]]],[11,"hash",R[2429],E,2,[[["self"],["__ht"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",R[2430],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,11,[[["self"],["h"]]]],[11,"hash","chrono",E,12,[[["self"],["h"]]]],[11,"hash",E,E,13,[[["self"],["h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[31],R[2427],E,28,[[["self"]],["str"]]],[11,"from_i64","chrono",E,1,[[["i64"]],[["weekday"],[R[45],["weekday"]]]]],[11,"from_u64",E,E,1,[[["u64"]],[["weekday"],[R[45],["weekday"]]]]],[11,"weeks",E,R[2490],24,[[["i64"]],[R[411]]]],[11,"days",E,R[2491],24,[[["i64"]],[R[411]]]],[11,"hours",E,R[2492],24,[[["i64"]],[R[411]]]],[11,"minutes",E,R[2493],24,[[["i64"]],[R[411]]]],[11,"seconds",E,R[2494],24,[[["i64"]],[R[411]]]],[11,R[1400],E,R[2495],24,[[["i64"]],[R[411]]]],[11,R[1401],E,R[2496],24,[[["i64"]],[R[411]]]],[11,R[1402],E,R[2497],24,[[["i64"]],[R[411]]]],[11,"span",E,R[2498],24,[[["f"]],[R[411]]]],[11,"num_weeks",E,R[2499],24,[[["self"]],["i64"]]],[11,"num_days",E,R[2500],24,[[["self"]],["i64"]]],[11,"num_hours",E,R[2501],24,[[["self"]],["i64"]]],[11,R[1496],E,R[2502],24,[[["self"]],["i64"]]],[11,R[1403],E,R[2503],24,[[["self"]],["i64"]]],[11,R[1404],E,R[2504],24,[[["self"]],["i64"]]],[11,R[1405],E,R[2505],24,[[["self"]],[["i64"],[R[45],["i64"]]]]],[11,R[1406],E,R[2506],24,[[["self"]],[["i64"],[R[45],["i64"]]]]],[11,R[1040],E,R[2507],24,[[[R[411]],["self"]],[[R[411]],[R[45],[R[411]]]]]],[11,R[1041],E,R[2508],24,[[[R[411]],["self"]],[[R[411]],[R[45],[R[411]]]]]],[11,R[958],E,R[2509],24,[[],[R[411]]]],[11,R[959],E,R[2510],24,[[],[R[411]]]],[11,"zero",E,R[2511],24,[[],[R[411]]]],[11,"is_zero",E,R[2512],24,[[["self"]],["bool"]]],[11,R[3118],E,R[2513],24,[[[R[411]]],[[R[931]],[R[411]],[R[13],[R[411],R[931]]]]]],[11,"to_std",E,R[2514],24,[[["self"]],[[R[411]],[R[931]],[R[13],[R[411],R[931]]]]]]],"p":[[4,R[2479]],[4,"Weekday"],[4,R[2480]],[3,R[2481]],[3,"Local"],[3,"Utc"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,R[2482]],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,R[2483]],[3,R[2484]],[8,R[2485]],[8,"Datelike"],[8,"Timelike"],[3,R[735]],[3,R[2486]],[3,R[2487]],[3,R[2488]],[3,R[937]]]};
searchIndex["colored"]={"doc":"Coloring terminal so simple, you already know how to do it !","i":[[3,R[2795],"colored","A string that may have color and/or style applied to it.",N,N],[4,"Color",E,"The 8 standard colors.",N,N],[13,"Black",E,E,0,N],[13,"Red",E,E,0,N],[13,"Green",E,E,0,N],[13,"Yellow",E,E,0,N],[13,"Blue",E,E,0,N],[13,"Magenta",E,E,0,N],[13,"Cyan",E,E,0,N],[13,"White",E,E,0,N],[13,"BrightBlack",E,E,0,N],[13,"BrightRed",E,E,0,N],[13,"BrightGreen",E,E,0,N],[13,"BrightYellow",E,E,0,N],[13,"BrightBlue",E,E,0,N],[13,"BrightMagenta",E,E,0,N],[13,"BrightCyan",E,E,0,N],[13,"BrightWhite",E,E,0,N],[11,"to_fg_str",E,E,0,[[["self"]],["str"]]],[11,"to_bg_str",E,E,0,[[["self"]],["str"]]],[0,"control",E,"A couple of functions to enable and disable coloring.",N,N],[3,R[2794],R[2774],E,N,N],[3,R[2796],E,E,N,N],[5,R[2771],E,"Use this to force colored to ignore the environment and…",N,[[["bool"]]]],[5,R[2772],E,"Remove the manual override and let the environment decide…",N,[[]]],[11,"from_env",E,"Reads environment variables to determine whether…",1,[[],["self"]]],[11,"should_colorize",E,E,1,[[["self"]],["bool"]]],[11,R[2771],E,E,1,[[["self"],["bool"]]]],[11,R[2772],E,E,1,[[["self"]]]],[8,"Colorize","colored","The trait that enables something to be given color.",N,N],[10,"black",E,E,2,[[],[R[2773]]]],[10,"red",E,E,2,[[],[R[2773]]]],[10,"green",E,E,2,[[],[R[2773]]]],[10,"yellow",E,E,2,[[],[R[2773]]]],[10,"blue",E,E,2,[[],[R[2773]]]],[10,"magenta",E,E,2,[[],[R[2773]]]],[10,"purple",E,E,2,[[],[R[2773]]]],[10,"cyan",E,E,2,[[],[R[2773]]]],[10,"white",E,E,2,[[],[R[2773]]]],[10,R[2775],E,E,2,[[],[R[2773]]]],[10,"bright_red",E,E,2,[[],[R[2773]]]],[10,R[2776],E,E,2,[[],[R[2773]]]],[10,R[2777],E,E,2,[[],[R[2773]]]],[10,R[2778],E,E,2,[[],[R[2773]]]],[10,R[2779],E,E,2,[[],[R[2773]]]],[10,R[2780],E,E,2,[[],[R[2773]]]],[10,R[2781],E,E,2,[[],[R[2773]]]],[10,R[2782],E,E,2,[[],[R[2773]]]],[10,"color",E,E,2,[[["color"],["into",["color"]]],[R[2773]]]],[10,"on_black",E,E,2,[[],[R[2773]]]],[10,"on_red",E,E,2,[[],[R[2773]]]],[10,"on_green",E,E,2,[[],[R[2773]]]],[10,"on_yellow",E,E,2,[[],[R[2773]]]],[10,"on_blue",E,E,2,[[],[R[2773]]]],[10,"on_magenta",E,E,2,[[],[R[2773]]]],[10,"on_purple",E,E,2,[[],[R[2773]]]],[10,"on_cyan",E,E,2,[[],[R[2773]]]],[10,"on_white",E,E,2,[[],[R[2773]]]],[10,R[2783],E,E,2,[[],[R[2773]]]],[10,R[2784],E,E,2,[[],[R[2773]]]],[10,R[2785],E,E,2,[[],[R[2773]]]],[10,R[2786],E,E,2,[[],[R[2773]]]],[10,R[2787],E,E,2,[[],[R[2773]]]],[10,R[2788],E,E,2,[[],[R[2773]]]],[10,R[2789],E,E,2,[[],[R[2773]]]],[10,R[2790],E,E,2,[[],[R[2773]]]],[10,R[2791],E,E,2,[[],[R[2773]]]],[10,"on_color",E,E,2,[[["color"],["into",["color"]]],[R[2773]]]],[10,"clear",E,E,2,[[],[R[2773]]]],[10,"normal",E,E,2,[[],[R[2773]]]],[10,"bold",E,E,2,[[],[R[2773]]]],[10,"dimmed",E,E,2,[[],[R[2773]]]],[10,"italic",E,E,2,[[],[R[2773]]]],[10,"underline",E,E,2,[[],[R[2773]]]],[10,"blink",E,E,2,[[],[R[2773]]]],[10,"reverse",E,"Historical name of `Colorize::reversed`. May be removed in…",2,[[],[R[2773]]]],[10,"reversed",E,"This should be preferred to `Colorize::reverse`.",2,[[],[R[2773]]]],[10,"hidden",E,E,2,[[],[R[2773]]]],[10,R[2792],E,E,2,[[],[R[2773]]]],[11,"is_plain",E,E,3,[[["self"]],["bool"]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",R[2774],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"black","colored",E,3,[[],[R[2773]]]],[11,"red",E,E,3,[[],[R[2773]]]],[11,"green",E,E,3,[[],[R[2773]]]],[11,"yellow",E,E,3,[[],[R[2773]]]],[11,"blue",E,E,3,[[],[R[2773]]]],[11,"magenta",E,E,3,[[],[R[2773]]]],[11,"purple",E,E,3,[[],[R[2773]]]],[11,"cyan",E,E,3,[[],[R[2773]]]],[11,"white",E,E,3,[[],[R[2773]]]],[11,R[2775],E,E,3,[[],[R[2773]]]],[11,"bright_red",E,E,3,[[],[R[2773]]]],[11,R[2776],E,E,3,[[],[R[2773]]]],[11,R[2777],E,E,3,[[],[R[2773]]]],[11,R[2778],E,E,3,[[],[R[2773]]]],[11,R[2779],E,E,3,[[],[R[2773]]]],[11,R[2780],E,E,3,[[],[R[2773]]]],[11,R[2781],E,E,3,[[],[R[2773]]]],[11,R[2782],E,E,3,[[],[R[2773]]]],[11,"color",E,E,3,[[["color"],["into",["color"]]],[R[2773]]]],[11,"on_black",E,E,3,[[],[R[2773]]]],[11,"on_red",E,E,3,[[],[R[2773]]]],[11,"on_green",E,E,3,[[],[R[2773]]]],[11,"on_yellow",E,E,3,[[],[R[2773]]]],[11,"on_blue",E,E,3,[[],[R[2773]]]],[11,"on_magenta",E,E,3,[[],[R[2773]]]],[11,"on_purple",E,E,3,[[],[R[2773]]]],[11,"on_cyan",E,E,3,[[],[R[2773]]]],[11,"on_white",E,E,3,[[],[R[2773]]]],[11,R[2783],E,E,3,[[],[R[2773]]]],[11,R[2784],E,E,3,[[],[R[2773]]]],[11,R[2785],E,E,3,[[],[R[2773]]]],[11,R[2786],E,E,3,[[],[R[2773]]]],[11,R[2787],E,E,3,[[],[R[2773]]]],[11,R[2788],E,E,3,[[],[R[2773]]]],[11,R[2789],E,E,3,[[],[R[2773]]]],[11,R[2790],E,E,3,[[],[R[2773]]]],[11,R[2791],E,E,3,[[],[R[2773]]]],[11,"on_color",E,E,3,[[["color"],["into",["color"]]],[R[2773]]]],[11,"clear",E,E,3,[[],[R[2773]]]],[11,"normal",E,E,3,[[],[R[2773]]]],[11,"bold",E,E,3,[[],[R[2773]]]],[11,"dimmed",E,E,3,[[],[R[2773]]]],[11,"italic",E,E,3,[[],[R[2773]]]],[11,"underline",E,E,3,[[],[R[2773]]]],[11,"blink",E,E,3,[[],[R[2773]]]],[11,"reverse",E,E,3,[[],[R[2773]]]],[11,"reversed",E,E,3,[[],[R[2773]]]],[11,"hidden",E,E,3,[[],[R[2773]]]],[11,R[2792],E,E,3,[[],[R[2773]]]],[11,R[77],R[2774],E,1,[[],[R[2793]]]],[11,R[77],"colored",E,3,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],["color"]]],[11,"clone",E,E,3,[[["self"]],[R[2773]]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[["string"]],["self"]]],[11,"from",E,E,3,[[["str"]],["self"]]],[11,"eq",E,E,0,[[["self"],["color"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2773]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[2773]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,R[551],E,E,0,[[["str"]],[R[13]]]],[11,"deref",R[2774],E,4,[[["self"]],[R[2793]]]],[11,"deref","colored",E,3,[[["self"]],["str"]]],[11,R[3321],R[2774],E,4,[[["self"]]]]],"p":[[4,"Color"],[3,R[2794]],[8,"Colorize"],[3,R[2795]],[3,R[2796]]]};
searchIndex["crossbeam_deque"]={"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",N,N],[3,"Stealer",E,"A stealer handle of a worker queue.",N,N],[3,"Injector",E,"An injector queue.",N,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The queue was empty at the time of stealing.",0,N],[13,"Success",E,"At least one task was successfully stolen.",0,N],[13,"Retry",E,"The steal operation needs to be retried.",0,N],[11,"new_fifo",E,"Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo",E,"Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer",E,"Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,R[73],E,R[3365],1,[[["self"]],["bool"]]],[11,"push",E,R[3423],1,[[["self"],[T]]]],[11,"pop",E,"Pops a task from the queue.",1,[[["self"]],[R[45]]]],[11,R[73],E,R[3365],2,[[["self"]],["bool"]]],[11,"steal",E,R[3424],2,[[["self"]],["steal"]]],[11,R[3425],E,"Steals a batch of tasks and pushes them into another worker.",2,[[["self"],["worker"]],["steal"]]],[11,R[3426],E,"Steals a batch of tasks, pushes them into another worker,…",2,[[["self"],["worker"]],["steal"]]],[11,"new",E,"Creates a new injector queue.",3,[[],["injector"]]],[11,"push",E,R[3423],3,[[["self"],[T]]]],[11,"steal",E,R[3424],3,[[["self"]],["steal"]]],[11,R[3425],E,"Steals a batch of tasks and pushes them into a worker.",3,[[["self"],["worker"]],["steal"]]],[11,R[3426],E,"Steals a batch of tasks, pushes them into a worker, and…",3,[[["self"],["worker"]],["steal"]]],[11,R[73],E,R[3365],3,[[["self"]],["bool"]]],[11,R[73],E,"Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success",E,"Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry",E,"Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success",E,"Returns the result of the operation, if successful.",0,[[],[R[45]]]],[11,"or_else",E,"If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"clone",E,E,2,[[["self"]],["stealer"]]],[11,"clone",E,E,0,[[["self"]],["steal"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"eq",E,E,0,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["steal"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,R[196],E,"Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,R[3419],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,"Collector",E,"An epoch-based garbage collector.",N,N],[3,R[3420],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[3416]]]],[5,"is_pinned",E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["guard"],["self"],[R[47]]],["shared"]]],[11,R[3422],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store",E,R[3409],1,[[["pointer"],["self"],[R[47]]]]],[11,"swap",E,R[3409],1,[[["pointer"],["guard"],["self"],[R[47]]],["shared"]]],[11,"compare_and_set",E,R[3411],1,[[["shared"],["o"],["guard"],["p"],["self"]],[[R[13],["shared",R[3410]]],["shared"],[R[3410]]]]],[11,"compare_and_set_weak",E,R[3411],1,[[["shared"],["o"],["guard"],["p"],["self"]],[[R[13],["shared",R[3410]]],["shared"],[R[3410]]]]],[11,R[339],E,"Bitwise \"and\" with the current tag.",1,[[["guard"],[R[9]],["self"],[R[47]]],["shared"]]],[11,R[344],E,"Bitwise \"or\" with the current tag.",1,[[["guard"],[R[9]],["self"],[R[47]]],["shared"]]],[11,R[342],E,"Bitwise \"xor\" with the current tag.",1,[[["guard"],[R[9]],["self"],[R[47]]],["shared"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared",E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[3413],2,[[["self"]],[R[9]]]],[11,"with_tag",E,R[3414],2,[[[R[9]]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[3412],3,[[["self"]],[T]]],[11,R[60],E,R[3412],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[T],[R[45]]]]],[11,"into_owned",E,"Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag",E,R[3413],3,[[["self"]],[R[9]]]],[11,"with_tag",E,R[3414],3,[[["self"],[R[9]]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,R[3081],E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned",E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[3416],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[3416]]]],[11,"defer",E,R[3415],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[3415],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["shared"],["self"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[3416],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[3416]],[R[45],[R[3416]]]]]],[8,R[3421],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[47]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[47]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[3418],E,"Returns the machine representation of the pointer.",8,[[],[R[9]]]],[10,R[2293],E,R[3417],8,[[[R[9]]],["self"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[3418],E,E,2,[[],[R[9]]]],[11,R[2293],E,R[3417],2,[[[R[9]]],["self"]]],[11,R[3418],E,E,3,[[],[R[9]]]],[11,R[2293],E,E,3,[[[R[9]]],["self"]]],[11,R[77],E,E,1,[[],["self"]]],[11,R[77],E,E,3,[[],["self"]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[47]]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[63],E,E,3,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[3416]]],["bool"]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,R[60],E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]]],"p":[[3,R[3419]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,R[3420]],[3,"Guard"],[8,R[3421]],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,"PushError",E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[[R[9]]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[13],[R[3367]]],[R[3367]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[13],["poperror"]],["poperror"]]]],[11,R[74],E,"Returns the capacity of the queue.",1,[[["self"]],[R[9]]]],[11,R[73],E,R[3365],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[3366],1,[[["self"]],[R[9]]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[13],["poperror"]],["poperror"]]]],[11,R[73],E,R[3365],2,[[["self"]],["bool"]]],[11,"len",E,R[3366],2,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[77],E,E,2,[[],["segqueue"]]],[11,"clone",E,E,3,[[["self"]],["poperror"]]],[11,"clone",E,E,0,[[["self"]],[R[3367]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"eq",E,E,3,[[["self"],["poperror"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[3367]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3367]]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,3,[[["self"]],["str"]]],[11,R[31],E,E,0,[[["self"]],["str"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[363],R[345],R[346],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[361],R[353],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[356]]]],[11,R[121],E,R[3372],0,[[["self"]],[T]]],[11,R[118],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,R[333],E,R[334],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[334],0,[[["self"],[T]],[R[13]]]],[11,R[335],E,R[336],0,[[["self"],["u8"]],["u8"]]],[11,R[337],E,R[338],0,[[["self"],["u8"]],["u8"]]],[11,R[339],E,R[340],0,[[["self"],["u8"]],["u8"]]],[11,R[344],E,R[341],0,[[["self"],["u8"]],["u8"]]],[11,R[342],E,R[343],0,[[["self"],["u8"]],["u8"]]],[11,R[335],E,R[336],0,[[["self"],["i8"]],["i8"]]],[11,R[337],E,R[338],0,[[["self"],["i8"]],["i8"]]],[11,R[339],E,R[340],0,[[["self"],["i8"]],["i8"]]],[11,R[344],E,R[341],0,[[["self"],["i8"]],["i8"]]],[11,R[342],E,R[343],0,[[["self"],["i8"]],["i8"]]],[11,R[335],E,R[336],0,[[["u16"],["self"]],["u16"]]],[11,R[337],E,R[338],0,[[["u16"],["self"]],["u16"]]],[11,R[339],E,R[340],0,[[["u16"],["self"]],["u16"]]],[11,R[344],E,R[341],0,[[["u16"],["self"]],["u16"]]],[11,R[342],E,R[343],0,[[["u16"],["self"]],["u16"]]],[11,R[335],E,R[336],0,[[["self"],["i16"]],["i16"]]],[11,R[337],E,R[338],0,[[["self"],["i16"]],["i16"]]],[11,R[339],E,R[340],0,[[["self"],["i16"]],["i16"]]],[11,R[344],E,R[341],0,[[["self"],["i16"]],["i16"]]],[11,R[342],E,R[343],0,[[["self"],["i16"]],["i16"]]],[11,R[335],E,R[336],0,[[["self"],["u32"]],["u32"]]],[11,R[337],E,R[338],0,[[["self"],["u32"]],["u32"]]],[11,R[339],E,R[340],0,[[["self"],["u32"]],["u32"]]],[11,R[344],E,R[341],0,[[["self"],["u32"]],["u32"]]],[11,R[342],E,R[343],0,[[["self"],["u32"]],["u32"]]],[11,R[335],E,R[336],0,[[["self"],["i32"]],["i32"]]],[11,R[337],E,R[338],0,[[["self"],["i32"]],["i32"]]],[11,R[339],E,R[340],0,[[["self"],["i32"]],["i32"]]],[11,R[344],E,R[341],0,[[["self"],["i32"]],["i32"]]],[11,R[342],E,R[343],0,[[["self"],["i32"]],["i32"]]],[11,R[335],E,R[336],0,[[["self"],["u64"]],["u64"]]],[11,R[337],E,R[338],0,[[["self"],["u64"]],["u64"]]],[11,R[339],E,R[340],0,[[["self"],["u64"]],["u64"]]],[11,R[344],E,R[341],0,[[["self"],["u64"]],["u64"]]],[11,R[342],E,R[343],0,[[["self"],["u64"]],["u64"]]],[11,R[335],E,R[336],0,[[["i64"],["self"]],["i64"]]],[11,R[337],E,R[338],0,[[["i64"],["self"]],["i64"]]],[11,R[339],E,R[340],0,[[["i64"],["self"]],["i64"]]],[11,R[344],E,R[341],0,[[["i64"],["self"]],["i64"]]],[11,R[342],E,R[343],0,[[["i64"],["self"]],["i64"]]],[11,R[335],E,R[336],0,[[["self"],["u128"]],["u128"]]],[11,R[337],E,R[338],0,[[["self"],["u128"]],["u128"]]],[11,R[339],E,R[340],0,[[["self"],["u128"]],["u128"]]],[11,R[344],E,R[341],0,[[["self"],["u128"]],["u128"]]],[11,R[342],E,R[343],0,[[["self"],["u128"]],["u128"]]],[11,R[335],E,R[336],0,[[["self"],["i128"]],["i128"]]],[11,R[337],E,R[338],0,[[["self"],["i128"]],["i128"]]],[11,R[339],E,R[340],0,[[["self"],["i128"]],["i128"]]],[11,R[344],E,R[341],0,[[["self"],["i128"]],["i128"]]],[11,R[342],E,R[343],0,[[["self"],["i128"]],["i128"]]],[11,R[335],E,R[336],0,[[["self"],[R[9]]],[R[9]]]],[11,R[337],E,R[338],0,[[["self"],[R[9]]],[R[9]]]],[11,R[339],E,R[340],0,[[["self"],[R[9]]],[R[9]]]],[11,R[344],E,R[341],0,[[["self"],[R[9]]],[R[9]]]],[11,R[342],E,R[343],0,[[["self"],[R[9]]],[R[9]]]],[11,R[335],E,R[336],0,[[["isize"],["self"]],["isize"]]],[11,R[337],E,R[338],0,[[["isize"],["self"]],["isize"]]],[11,R[339],E,R[340],0,[[["isize"],["self"]],["isize"]]],[11,R[344],E,R[341],0,[[["isize"],["self"]],["isize"]]],[11,R[342],E,R[343],0,[[["isize"],["self"]],["isize"]]],[11,R[339],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[344],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[342],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[362],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[3422],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[345],R[346],2,[[[T]],[R[357]]]],[11,R[118],E,"Returns the value value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[364],R[354],"A sharded reader-writer lock.",N,N],[3,R[368],E,"A guard used to release the shared read access of a…",N,N],[3,R[369],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[365],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,R[788],E,"Blocks the current thread until the token is made…",4,[[["self"],[R[411]]]]],[11,R[359],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[359]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[358]]]],[11,R[118],E,"Consumes this lock, returning the underlying data.",6,[[],[R[347]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,R[121],E,R[689],6,[[["self"]],[[R[347]],[T]]]],[11,R[713],E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[281],[R[348]]],[R[348]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[347],[R[348]]],[R[348]]]]],[11,R[349],E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[281],[R[350]]],[R[350]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[350]],[R[347],[R[350]]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[360]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[345],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[355],"A scope for spawning threads.",N,N],[3,R[366],E,"Configures the properties of a new thread.",N,N],[3,R[367],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[13]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["f"],["self"]],[R[352]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[351]]]],[11,"name",E,"Sets the name for the new thread.",9,[[["string"]],[R[351]]]],[11,R[4135],E,"Sets the size of the stack for the new thread.",9,[[[R[9]]],[R[351]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[352]],[R[13],[R[352]]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[13]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from",R[345],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",R[353],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",R[354],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[62],E,E,11,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,R[62],E,E,12,[[["self"]],["string"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",R[355],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,R[77],R[353],E,0,[[],[R[356]]]],[11,R[77],R[345],E,2,[[],[R[357]]]],[11,R[77],E,E,3,[[],["backoff"]]],[11,R[77],R[354],E,6,[[],[R[358]]]],[11,"clone",R[345],E,2,[[["self"]],[R[357]]]],[11,"clone",R[354],E,5,[[["self"]],[R[359]]]],[11,"clone",E,E,7,[[["self"]],[R[360]]]],[11,"from",R[345],E,2,[[[T]],["self"]]],[11,"from",R[354],E,6,[[[T]],["self"]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"eq",R[345],E,2,[[["self"],[R[357]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[357]]],["bool"]]],[11,R[60],E,E,2,[[["self"]],[T]]],[11,R[60],R[354],E,12,[[["self"]],[T]]],[11,"fmt",R[353],E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[345],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[354],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[355],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[354],E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"deref",R[345],E,2,[[["self"]],[T]]],[11,"deref",R[354],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,"hash",R[345],E,2,[[["self"],["__ht"]]]]],"p":[[3,R[361]],[8,R[362]],[3,R[363]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[364]],[3,R[365]],[3,"Scope"],[3,R[366]],[3,R[367]],[3,R[368]],[3,R[369]]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","i":[[3,R[2806],"failure","A `Backtrace`.",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,"Context",E,"An error with context around it.",N,N],[3,R[2807],E,"Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[5,"err_msg",E,"Constructs a `Fail` type from a string.",N,[[["display"],["debug"],["send"],["sync"]],["error"]]],[11,"new",E,"Constructs a new backtrace. This will only create a real…",0,[[],[R[2305]]]],[11,R[118],E,"Unwraps this into the inner error.",1,[[],["e"]]],[11,R[120],E,"Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context",E,"Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],["context"]]],[11,"new",E,"Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",4,[[[R[32]],["box",[R[32]]]],["error"]]],[11,"as_fail",E,"Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",4,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,R[2798],4,[[["self"]],["fail"]]],[11,R[2305],E,"Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],[R[2305]]]],[11,"context",E,"Provides context for this `Error`.",4,[[["sync"],["display"],["send"]],[["context"],["send"],["display"],["sync"]]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",4,[[],[["compat",["error"]],["error"]]]],[11,"downcast",E,R[2797],4,[[],[["fail"],[R[13],["error"]],["error"]]]],[11,R[2802],E,"Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,R[2803],E,"Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain",E,R[2804],4,[[["self"]],["causes"]]],[11,R[2799],E,R[2797],4,[[["self"]],[[T],[R[45]]]]],[11,R[2800],E,R[2797],4,[[["self"]],[[R[45]],[T]]]],[11,"root_cause",E,R[2805],4,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible",E,"A common result with an `Error`.",N,N],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,"as_fail",E,"Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,R[242],E,"Extension methods for `Result`.",N,N],[10,"compat",E,"Wraps the error in `Compat` to make it compatible with…",6,[[],[["compat"],[R[13],["compat"]]]]],[10,"context",E,"Wraps the error type in a context type.",6,[[["d"]],[[R[13],["context"]],["context"]]]],[10,"with_context",E,"Wraps the error type in a context type generated by…",6,[[["f"]],[[R[13],["context"]],["context"]]]],[8,"Fail",E,"The `Fail` trait.",N,N],[11,"name",E,"Returns the \"name\" of the error.",7,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,R[2798],7,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,"Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[[R[45],[R[2305]]],[R[2305]]]]],[11,"context",E,"Provides context for this failure.",7,[[["d"]],["context"]]],[11,"compat",E,"Wraps this failure in a compatibility wrapper that…",7,[[],["compat"]]],[11,R[2799],E,R[2801],7,[[["self"]],[[T],[R[45]]]]],[11,R[2800],E,R[2801],7,[[["self"]],[[R[45]],[T]]]],[11,R[2802],E,"Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,R[2803],E,"Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain",E,R[2804],7,[[["self"]],["causes"]]],[11,"root_cause",E,R[2805],7,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail",E,"Exits a function early with an `Error`.",N,N],[14,"ensure",E,"Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err",E,"Constructs an `Error` using the standard string…",N,N],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[62],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[43],E,E,8,[[],["i"]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"as_fail",E,E,7,[[["self"]],["fail"]]],[11,"as_fail",E,E,4,[[["self"]],["fail"]]],[11,"name",E,E,2,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,2,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,2,[[["self"]],[[R[45],[R[2305]]],[R[2305]]]]],[11,R[77],E,E,0,[[],[R[2305]]]],[11,R[77],E,E,1,[[],["compat"]]],[11,"next",E,E,8,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,"clone",E,E,1,[[["self"]],["compat"]]],[11,"from",E,E,2,[[["d"]],["context"]]],[11,"from",E,E,4,[[["f"]],["error"]]],[11,"eq",E,E,1,[[["compat"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["compat"],["self"]],["bool"]]],[11,"as_ref",E,E,4,[[["self"]],["fail"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,1,[[["self"],["__he"]]]],[11,R[31],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[2806]],[3,"Compat"],[3,"Context"],[3,R[2807]],[3,"Error"],[8,"AsFail"],[8,R[242]],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":E,"i":[[24,"Fail","failure_derive",E,N,N]],"p":[]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","i":[[3,R[67],"fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher",E,"A builder for default FNV hashers.",N,N],[6,"FnvHashMap",E,"A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet",E,"A `HashSet` using a default FNV hasher.",N,N],[11,"with_key",E,"Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],[R[66]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[77],E,E,0,[[],[R[66]]]],[11,"finish",E,E,0,[[["self"]],["u64"]]],[11,"write",E,E,0,[[["self"]]]]],"p":[[3,R[67]]]};
searchIndex["futures"]={"doc":"Zero-cost Futures in Rust","i":[[4,"Async",R[138],R[3739],N,N],[13,"Ready",E,R[3740],0,N],[13,R[99],E,R[3741],0,N],[4,R[204],E,R[3742],N,N],[13,"Ready",E,R[3743],1,N],[13,R[99],E,R[3744],1,N],[11,"map",E,R[3862],0,[[["f"]],["async"]]],[11,"is_ready",E,R[3863],0,[[["self"]],["bool"]]],[11,R[100],E,R[3864],0,[[["self"]],["bool"]]],[11,"map",E,R[3865],1,[[["f"]],[R[193]]]],[11,"is_ready",E,R[3866],1,[[["self"]],["bool"]]],[11,R[100],E,R[3867],1,[[["self"]],["bool"]]],[0,"future",E,"Futures",N,N],[3,"Empty",R[179],R[3606],N,N],[3,"Lazy",E,R[3630],N,N],[3,"PollFn",E,R[3612],N,N],[3,R[227],E,R[3593],N,N],[3,"LoopFn",E,R[3614],N,N],[3,"AndThen",E,R[3622],N,N],[3,"Flatten",E,R[3617],N,N],[3,R[228],E,R[3634],N,N],[3,"Fuse",E,R[3607],N,N],[3,R[229],E,R[3624],N,N],[3,"Join",E,R[3599],N,N],[3,"Join3",E,R[3615],N,N],[3,"Join4",E,R[3608],N,N],[3,"Join5",E,R[3603],N,N],[3,"Map",E,R[3621],N,N],[3,"MapErr",E,R[3616],N,N],[3,"FromErr",E,R[3635],N,N],[3,"OrElse",E,R[3609],N,N],[3,"Select",E,R[3629],N,N],[3,R[230],E,R[3623],N,N],[3,"Select2",E,R[3604],N,N],[3,"Then",E,R[3598],N,N],[3,"Inspect",E,R[105],N,N],[3,R[113],E,R[3600],N,N],[3,"JoinAll",E,R[3594],N,N],[3,R[231],E,R[3602],N,N],[3,"SelectOk",E,R[3610],N,N],[3,"Shared",E,R[3628],N,N],[3,R[232],E,R[3601],N,N],[3,R[233],E,R[3596],N,N],[3,R[208],E,R[3589],N,N],[4,"Loop",E,R[3618],N,N],[13,"Break",E,R[3619],2,N],[13,"Continue",E,R[3620],2,N],[4,"Either",E,R[3625],N,N],[13,"A",E,R[3626],3,N],[13,"B",E,R[3627],3,N],[4,R[205],E,R[3590],N,N],[13,R[3282],E,R[3591],4,N],[13,"NoCapacity",E,R[3592],4,N],[5,"empty",E,R[3632],N,[[],["empty"]]],[5,"lazy",E,R[3633],N,[[["f"]],["lazy"]]],[5,"poll_fn",E,R[3611],N,[[["f"]],["pollfn"]]],[5,R[13],E,R[3597],N,[[[R[13]]],[R[101]]]],[5,"ok",E,R[102],N,[[[T]],[R[101]]]],[5,"err",E,R[102],N,[[["e"]],[R[101]]]],[5,"loop_fn",E,R[3613],N,[[["s"],["f"]],["loopfn"]]],[5,"join_all",E,R[3605],N,[[["i"]],["joinall"]]],[5,"select_all",E,R[3595],N,[[["i"]],["selectall"]]],[5,"select_ok",E,R[3631],N,[[["i"]],["selectok"]]],[11,"is_done",E,R[3815],5,[[["self"]],["bool"]]],[11,"split",E,R[3816],3,[[]]],[11,"peek",E,R[3817],6,[[["self"]],[[R[13],[R[197],R[198]]],[R[45],[R[13]]]]]],[8,"Future",E,R[3556],N,N],[16,"Item",E,R[3557],7,N],[16,"Error",E,R[3558],7,N],[10,"poll",E,R[3559],7,[[["self"]],["poll"]]],[11,"wait",E,R[3560],7,[[],[R[13]]]],[11,"map",E,R[3561],7,[[["f"]],["map"]]],[11,"map_err",E,R[3562],7,[[["f"]],["maperr"]]],[11,"from_err",E,R[3563],7,[[],[["from"],["fromerr"]]]],[11,"then",E,R[3564],7,[[["f"]],["then"]]],[11,"and_then",E,R[3565],7,[[["f"]],["andthen"]]],[11,"or_else",E,R[3566],7,[[["f"]],["orelse"]]],[11,"select",E,R[3567],7,[[["b"]],["select"]]],[11,"select2",E,R[3568],7,[[["b"]],["select2"]]],[11,"join",E,R[3569],7,[[["b"]],["join"]]],[11,"join3",E,R[103],7,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[103],7,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[103],7,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[3570],E,R[3571],7,[[],[R[3745]]]],[11,"flatten",E,R[104],7,[[],["flatten"]]],[11,R[3572],E,R[104],7,[[],[R[3573]]]],[11,"fuse",E,R[3574],7,[[],["fuse"]]],[11,"inspect",E,R[105],7,[[["f"]],["inspect"]]],[11,R[131],E,R[3575],7,[[],[R[132]]]],[11,"shared",E,R[3576],7,[[],["shared"]]],[8,R[206],E,R[3577],N,N],[16,"Future",E,R[3578],8,N],[16,"Item",E,R[3579],8,N],[16,"Error",E,R[3580],8,N],[10,R[108],E,R[3581],8,[[]]],[8,R[207],E,R[3582],N,N],[16,"Future",E,R[3583],9,N],[16,"Error",E,R[3584],9,N],[10,R[3585],E,R[3586],9,[[[T]]]],[8,R[789],E,R[3587],N,N],[10,"execute",E,R[3588],10,[[["self"],["f"]],[[R[13],[R[106]]],[R[106]]]]],[11,"new",E,R[3812],11,[[[R[107]],["f"]],[R[106]]]],[11,"kind",E,R[3813],11,[[["self"]],[R[107]]]],[11,R[108],E,R[3814],11,[[],["f"]]],[0,"stream",R[138],R[3637],N,N],[3,"Iter",R[127],R[109],N,N],[3,R[3872],E,R[109],N,N],[3,"IterOk",E,R[109],N,N],[3,R[234],E,R[109],N,N],[3,"Repeat",E,R[3684],N,N],[3,"AndThen",E,R[3697],N,N],[3,"Chain",E,R[3683],N,N],[3,"Concat",E,R[110],N,N],[3,"Concat2",E,R[110],N,N],[3,"Empty",E,R[3710],N,N],[3,"Filter",E,R[3678],N,N],[3,R[211],E,R[3691],N,N],[3,"Flatten",E,R[3718],N,N],[3,"Fold",E,R[3720],N,N],[3,"ForEach",E,R[3681],N,N],[3,"FromErr",E,R[3704],N,N],[3,"Fuse",E,R[3711],N,N],[3,R[212],E,R[3694],N,N],[3,"Inspect",E,R[3705],N,N],[3,R[213],E,R[3688],N,N],[3,"Map",E,R[3695],N,N],[3,"MapErr",E,R[3717],N,N],[3,"Merge",E,R[111],N,N],[3,"Once",E,R[3707],N,N],[3,"OrElse",E,R[3712],N,N],[3,"Peekable",E,R[3714],N,N],[3,"PollFn",E,R[3690],N,N],[3,"Select",E,R[111],N,N],[3,"Skip",E,R[3722],N,N],[3,R[214],E,R[3685],N,N],[3,"Take",E,R[3696],N,N],[3,R[215],E,R[3677],N,N],[3,"Then",E,R[3679],N,N],[3,"Unfold",E,R[3687],N,N],[3,"Zip",E,R[111],N,N],[3,"Forward",E,R[3709],N,N],[3,"Buffered",E,R[112],N,N],[3,R[216],E,R[112],N,N],[3,R[113],E,R[3708],N,N],[3,"Chunks",E,R[3680],N,N],[3,"Collect",E,R[3693],N,N],[3,"Wait",E,R[3692],N,N],[3,R[217],E,R[3686],N,N],[3,R[218],E,R[3702],N,N],[3,R[209],E,R[3719],N,N],[12,"0",E,E,12,N],[12,"1",E,E,12,N],[3,R[220],E,R[3703],N,N],[4,R[210],E,R[3698],N,N],[13,"First",E,R[3699],13,N],[13,"Second",E,R[3700],13,N],[13,"Both",E,R[3701],13,N],[5,"iter",E,R[114],N,[[["j"]],["iter"]]],[5,"iter_ok",E,R[3706],N,[[["i"]],["iterok"]]],[5,R[3682],E,R[114],N,[[["j"]],["iterresult"]]],[5,"repeat",E,R[3689],N,[[[T]],["repeat"]]],[5,"empty",E,R[3723],N,[[],["empty"]]],[5,"once",E,R[3715],N,[[[R[13]]],["once"]]],[5,"poll_fn",E,R[3716],N,[[["f"]],["pollfn"]]],[5,"unfold",E,R[3721],N,[[[T],["f"]],["unfold"]]],[5,R[3713],E,R[115],N,[[["i"]],[R[128]]]],[5,R[124],E,R[115],N,[[["i"]],[R[126]]]],[11,R[120],E,R[116],14,[[["self"]],["s"]]],[11,R[121],E,R[117],14,[[["self"]],["s"]]],[11,R[118],E,R[119],14,[[],["s"]]],[11,R[120],E,R[116],15,[[["self"]],["s"]]],[11,R[121],E,R[117],15,[[["self"]],["s"]]],[11,R[118],E,R[119],15,[[],["s"]]],[11,R[120],E,R[116],16,[[["self"]],["s"]]],[11,R[121],E,R[117],16,[[["self"]],["s"]]],[11,R[118],E,R[119],16,[[],["s"]]],[11,R[120],E,R[116],17,[[["self"]],["s"]]],[11,R[121],E,R[117],17,[[["self"]],["s"]]],[11,R[118],E,R[119],17,[[],["s"]]],[11,R[120],E,R[116],18,[[["self"]],["s"]]],[11,R[121],E,R[117],18,[[["self"]],["s"]]],[11,R[118],E,R[119],18,[[],["s"]]],[11,"is_done",E,R[3832],19,[[["self"]],["bool"]]],[11,R[120],E,R[116],19,[[["self"]],["s"]]],[11,R[121],E,R[117],19,[[["self"]],["s"]]],[11,R[118],E,R[119],19,[[],["s"]]],[11,R[120],E,R[116],20,[[["self"]],[[R[45]],["s"]]]],[11,R[121],E,R[117],20,[[["self"]],[[R[45]],["s"]]]],[11,R[118],E,R[119],20,[[],[R[45]]]],[11,R[120],E,R[116],21,[[["self"]],["s"]]],[11,R[121],E,R[117],21,[[["self"]],["s"]]],[11,R[118],E,R[119],21,[[],["s"]]],[11,R[120],E,R[116],22,[[["self"]],["s"]]],[11,R[121],E,R[117],22,[[["self"]],["s"]]],[11,R[118],E,R[119],22,[[],["s"]]],[11,R[120],E,R[116],23,[[["self"]],["s"]]],[11,R[121],E,R[117],23,[[["self"]],["s"]]],[11,R[118],E,R[119],23,[[],["s"]]],[11,R[120],E,R[116],24,[[["self"]],["s"]]],[11,R[121],E,R[117],24,[[["self"]],["s"]]],[11,R[118],E,R[119],24,[[],["s"]]],[11,"peek",E,R[3833],25,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,R[120],E,R[116],26,[[["self"]],["s"]]],[11,R[121],E,R[117],26,[[["self"]],["s"]]],[11,R[118],E,R[119],26,[[],["s"]]],[11,R[120],E,R[116],27,[[["self"]],["s"]]],[11,R[121],E,R[117],27,[[["self"]],["s"]]],[11,R[118],E,R[119],27,[[],["s"]]],[11,R[120],E,R[116],28,[[["self"]],["s"]]],[11,R[121],E,R[117],28,[[["self"]],["s"]]],[11,R[118],E,R[119],28,[[],["s"]]],[11,R[120],E,R[116],29,[[["self"]],["s"]]],[11,R[121],E,R[117],29,[[["self"]],["s"]]],[11,R[118],E,R[119],29,[[],["s"]]],[11,"sink_ref",E,R[3828],30,[[["self"]],[[R[45]],[U]]]],[11,"sink_mut",E,R[3829],30,[[["self"]],[[R[45]],[U]]]],[11,"stream_ref",E,R[3830],30,[[["self"]],[[T],[R[45]]]]],[11,"stream_mut",E,R[3831],30,[[["self"]],[[T],[R[45]]]]],[11,R[120],E,R[116],31,[[["self"]],["s"]]],[11,R[121],E,R[117],31,[[["self"]],["s"]]],[11,R[118],E,R[119],31,[[],["s"]]],[11,R[120],E,R[116],32,[[["self"]],["s"]]],[11,R[121],E,R[117],32,[[["self"]],["s"]]],[11,R[118],E,R[119],32,[[],["s"]]],[11,R[120],E,R[116],33,[[["self"]],["s"]]],[11,R[121],E,R[117],33,[[["self"]],["s"]]],[11,R[118],E,R[119],33,[[],["s"]]],[11,R[120],E,R[116],34,[[["self"]],["s"]]],[11,R[121],E,R[117],34,[[["self"]],["s"]]],[11,R[118],E,R[119],34,[[],["s"]]],[11,"reunite",E,R[123],35,[[["splitsink"]],[[R[13],[R[122]]],[R[122]]]]],[11,"reunite",E,R[123],36,[[[R[3823]]],[[R[13],[R[122]]],[R[122]]]]],[0,R[124],E,R[125],N,N],[3,R[219],R[180],R[125],N,N],[3,"IterMut",E,R[3638],N,N],[11,"new",E,R[3818],37,[[],[R[126]]]],[11,"len",E,R[3819],37,[[["self"]],[R[9]]]],[11,R[73],E,R[3820],37,[[["self"]],["bool"]]],[11,"push",E,R[3821],37,[[["self"],[T]]]],[11,"iter_mut",E,R[3822],37,[[["self"]],["itermut"]]],[11,"new",R[127],R[3824],38,[[],[R[128]]]],[11,"len",E,R[3825],38,[[["self"]],[R[9]]]],[11,R[73],E,R[3826],38,[[["self"]],["bool"]]],[11,"push",E,R[3827],38,[[["self"],[T]]]],[8,"Stream",E,R[3640],N,N],[16,"Item",E,R[3641],39,N],[16,"Error",E,R[3642],39,N],[10,"poll",E,R[3643],39,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"wait",E,R[3644],39,[[],["wait"]]],[11,R[108],E,R[3645],39,[[],[R[3646]]]],[11,"map",E,R[3647],39,[[["f"]],["map"]]],[11,"map_err",E,R[3648],39,[[["f"]],["maperr"]]],[11,"filter",E,R[3649],39,[[["f"]],["filter"]]],[11,R[3764],E,R[3650],39,[[["f"]],["filtermap"]]],[11,"then",E,R[129],39,[[["f"]],["then"]]],[11,"and_then",E,R[129],39,[[["f"]],["andthen"]]],[11,"or_else",E,R[3651],39,[[["f"]],["orelse"]]],[11,"collect",E,R[3652],39,[[],["collect"]]],[11,"concat2",E,R[130],39,[[],["concat2"]]],[11,"concat",E,R[130],39,[[],["concat"]]],[11,"fold",E,R[3653],39,[[[T],["f"]],["fold"]]],[11,"flatten",E,R[3654],39,[[],["flatten"]]],[11,R[3765],E,R[3655],39,[[["p"]],["skipwhile"]]],[11,R[3766],E,R[3656],39,[[["p"]],["takewhile"]]],[11,"for_each",E,R[3657],39,[[["f"]],["foreach"]]],[11,"from_err",E,R[3658],39,[[],[["fromerr"],["from"]]]],[11,"take",E,R[3659],39,[[["u64"]],["take"]]],[11,"skip",E,R[3660],39,[[["u64"]],["skip"]]],[11,"fuse",E,R[3661],39,[[],["fuse"]]],[11,"by_ref",E,R[3662],39,[[["self"]],["self"]]],[11,R[131],E,R[3663],39,[[],[R[132]]]],[11,"buffered",E,R[3664],39,[[[R[9]]],["buffered"]]],[11,R[3665],E,R[3666],39,[[[R[9]]],[R[3667]]]],[11,"merge",E,R[111],39,[[["s"]],["merge"]]],[11,"zip",E,R[3668],39,[[["s"]],["zip"]]],[11,"chain",E,R[3669],39,[[["s"]],["chain"]]],[11,"peekable",E,R[3670],39,[[],["peekable"]]],[11,"chunks",E,R[3671],39,[[[R[9]]],["chunks"]]],[11,"select",E,R[3672],39,[[["s"]],["select"]]],[11,"forward",E,R[137],39,[[["s"]],["forward"]]],[11,"split",E,R[3673],39,[[]]],[11,"inspect",E,R[3674],39,[[["f"]],["inspect"]]],[11,R[3675],E,R[3676],39,[[["f"]],[R[3767]]]],[0,"sink",R[138],"Asynchronous sinks",N,N],[3,"Buffer",R[181],"Sink for the `Sink::buffer` combinator, which buffers up…",N,N],[3,"Wait",E,"A sink combinator which converts an asynchronous sink to a…",N,N],[3,"With",E,"Sink for the `Sink::with` combinator, chaining a…",N,N],[3,R[221],E,"Sink for the `Sink::with_flat_map` combinator, chaining a…",N,N],[3,"Flush",E,"Future for the `Sink::flush` combinator, which polls the…",N,N],[3,"Send",E,"Future for the `Sink::send` combinator, which sends a…",N,N],[3,"SendAll",E,"Future for the `Sink::send_all` combinator, which sends a…",N,N],[3,R[223],E,"Sink for the `Sink::sink_map_err` combinator.",N,N],[3,R[222],E,"A sink combinator to change the error type of a sink.",N,N],[3,"Fanout",E,"Sink that clones incoming items and forwards them to two…",N,N],[11,R[120],E,R[133],40,[[["self"]],["s"]]],[11,R[121],E,R[134],40,[[["self"]],["s"]]],[11,R[118],E,R[135],40,[[],["s"]]],[11,R[120],E,R[133],41,[[["self"]],["s"]]],[11,R[121],E,R[134],41,[[["self"]],["s"]]],[11,R[118],E,R[135],41,[[],["s"]]],[11,R[120],E,R[133],42,[[["self"]],["s"]]],[11,R[121],E,R[134],42,[[["self"]],["s"]]],[11,R[118],E,"Consume the `Flush` and return the inner sink.",42,[[],["s"]]],[11,R[120],E,R[133],43,[[["self"]],["s"]]],[11,R[121],E,R[134],43,[[["self"]],["s"]]],[11,R[118],E,R[135],43,[[],["s"]]],[11,R[120],E,R[133],44,[[["self"]],["s"]]],[11,R[121],E,R[134],44,[[["self"]],["s"]]],[11,R[120],E,R[133],45,[[["self"]],["s"]]],[11,R[121],E,R[134],45,[[["self"]],["s"]]],[11,R[118],E,R[135],45,[[],["s"]]],[11,R[118],E,"Consumes this combinator, returning the underlying sinks.",46,[[]]],[11,R[120],E,R[133],47,[[["self"]],["s"]]],[11,R[121],E,R[134],47,[[["self"]],["s"]]],[11,R[118],E,R[135],47,[[],["s"]]],[11,"send",E,"Sends a value to this sink, blocking the current thread…",48,[[["self"]],[R[13]]]],[11,"flush",E,"Flushes any buffered data in this sink, blocking the…",48,[[["self"]],[R[13]]]],[11,"close",E,"Close this sink, blocking the current thread until it's…",48,[[["self"]],[R[13]]]],[6,"BoxSink",E,"A type alias for `Box<Sink + Send>`",N,N],[8,"Sink",E,R[3747],N,N],[16,"SinkItem",E,R[3748],49,N],[16,"SinkError",E,R[3749],49,N],[10,R[190],E,R[3750],49,[[["self"]],[R[191]]]],[10,R[192],E,R[3751],49,[[["self"]],["poll"]]],[11,"close",E,R[3752],49,[[["self"]],["poll"]]],[11,"wait",E,R[3753],49,[[],["wait"]]],[11,"with",E,R[136],49,[[["f"]],["with"]]],[11,R[3754],E,R[136],49,[[["f"]],[R[3755]]]],[11,R[3756],E,R[3757],49,[[["f"]],[R[200]]]],[11,R[3758],E,R[3759],49,[[],[[R[199]],["from"]]]],[11,"buffer",E,R[3760],49,[[[R[9]]],["buffer"]]],[11,"fanout",E,R[3761],49,[[["s"]],["fanout"]]],[11,"flush",E,R[3762],49,[[],["flush"]]],[11,"send",E,R[3763],49,[[],["send"]]],[11,"send_all",E,R[137],49,[[["s"]],["sendall"]]],[0,"task",R[138],R[3724],N,N],[3,"Task",R[182],R[3726],N,N],[3,R[236],E,R[385],N,N],[3,"LocalKey",E,R[3731],N,N],[3,R[237],E,R[3738],N,N],[5,"current",E,R[3734],N,[[],["task"]]],[5,"init",E,R[3737],N,[[],["bool"]]],[5,"is_in_task",E,R[3725],N,[[],["bool"]]],[5,R[3735],E,R[3736],N,[[[R[201]],["f"]],["r"]]],[8,"EventSet",E,R[3732],N,N],[10,"insert",E,R[3733],50,[[["self"],[R[9]]]]],[0,"executor",R[138],"Executors",N,N],[3,"Spawn",R[183],R[3727],N,N],[3,R[235],E,"A `NotifyHandle` is the core value through which…",N,N],[5,"spawn",E,R[3730],N,[[[T]],["spawn"]]],[5,"with_notify",E,"Sets the `NotifyHandle` of the current task for the…",N,[[[T],[R[9]],["f"]],["r"]]],[8,"Notify",E,R[3728],N,N],[10,"notify",E,R[3729],51,[[["self"],[R[9]]]]],[11,"clone_id",E,R[202],51,[[["self"],[R[9]]],[R[9]]]],[11,"drop_id",E,R[203],51,[[["self"],[R[9]]]]],[8,R[224],E,"An unsafe trait for implementing custom forms of memory…",N,N],[10,"clone_raw",E,"Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],[R[194]]]],[10,"drop_raw",E,"Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync",R[138],R[3768],N,N],[3,"BiLock",R[140],"A type of futures-powered synchronization primitive which…",N,N],[3,R[238],E,"Returned RAII guard from the `poll_lock` method.",N,N],[3,R[239],E,"Future returned by `BiLock::lock` which will resolve when…",N,N],[3,R[226],E,"Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot",E,R[166],N,N],[3,R[155],R[184],R[168],N,N],[3,"Sender",E,R[167],N,N],[3,"Canceled",E,"Error returned from a `Receiver<T>` whenever the…",N,N],[3,R[143],E,R[144],N,N],[3,R[240],E,"Type of future which `Execute` instances below must be…",N,N],[5,R[377],E,R[169],N,[[]]],[5,"spawn",E,R[170],N,[[["f"],["e"]],[R[139]]]],[5,"spawn_fn",E,R[171],N,[[["f"],["e"]],[R[139]]]],[11,"send",E,R[172],53,[[[T]],[R[13]]]],[11,R[173],E,R[174],53,[[["self"]],["poll"]]],[11,R[175],E,R[176],53,[[["self"]],["bool"]]],[11,"close",E,R[177],54,[[["self"]]]],[11,"try_recv",E,"Attempts to receive a message outside of the context of a…",54,[[["self"]],[[R[45]],[R[13],[R[45],R[188]]],[R[188]]]]],[11,"forget",E,R[178],55,[[]]],[0,"mpsc",R[140],R[154],N,N],[3,"Sender",R[185],R[141],N,N],[3,R[156],E,R[141],N,N],[3,R[155],E,R[142],N,N],[3,R[157],E,R[142],N,N],[3,R[158],E,R[159],N,N],[3,R[225],E,"Error type returned from `try_send`",N,N],[3,R[143],E,R[144],N,N],[3,R[240],E,R[160],N,N],[5,R[377],E,R[145],N,[[[R[9]]]]],[5,R[161],E,R[145],N,[[]]],[5,"spawn",E,R[146],N,[[["s"],[R[9]],["e"]],[R[139]]]],[5,R[162],E,R[146],N,[[["s"],["e"]],[R[139]]]],[11,R[118],E,R[147],56,[[],[T]]],[11,"is_full",E,"Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected",E,"Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,R[118],E,R[147],57,[[],[T]]],[11,R[375],E,"Attempts to send a message on this `Sender<T>` without…",58,[[["self"],[T]],[[R[148]],[R[13],[R[148]]]]]],[11,R[373],E,"Polls the channel to determine if there is guaranteed to…",58,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,R[150],E,R[151],58,[[["self"]],["bool"]]],[11,R[150],E,R[151],59,[[["self"]],["bool"]]],[11,R[163],E,R[164],59,[[["self"],[T]],[[R[149]],[R[13],[R[149]]]]]],[11,"close",E,R[152],60,[[["self"]]]],[11,"close",E,R[152],61,[[["self"]]]],[11,"new",R[140],"Creates a new `BiLock` protecting the provided data.",62,[[[T]]]],[11,R[370],E,"Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],[[R[153]],["async",[R[153]]]]]],[11,"lock",E,"Perform a \"blocking lock\" of this lock, consuming this…",62,[[],["bilockacquire"]]],[11,"reunite",E,"Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[],[[R[13],[R[122]]],[R[122]]]]],[11,"unlock",E,"Recovers the original `BiLock<T>`, unlocking this lock.",63,[[],["bilock"]]],[0,"unsync",R[138],"Future-aware single-threaded synchronization",N,N],[0,"mpsc",R[165],R[154],N,N],[3,"Sender",R[186],"The transmission end of a channel.",N,N],[3,R[155],E,R[142],N,N],[3,R[156],E,"The transmission end of an unbounded channel.",N,N],[3,R[157],E,"The receiving end of an unbounded channel.",N,N],[3,R[158],E,R[159],N,N],[3,R[143],E,R[144],N,N],[3,R[240],E,R[160],N,N],[5,R[377],E,"Creates a bounded in-memory channel with buffered storage.",N,[[[R[9]]]]],[5,R[161],E,"Creates an unbounded in-memory channel with buffered…",N,[[]]],[5,"spawn",E,R[146],N,[[["s"],[R[9]],["e"]],[R[139]]]],[5,R[162],E,R[146],N,[[["s"],["e"]],[R[139]]]],[11,"close",E,R[152],64,[[["self"]]]],[11,R[163],E,R[164],65,[[["self"],[T]],[[R[149]],[R[13],[R[149]]]]]],[11,"close",E,R[152],66,[[["self"]]]],[11,R[118],E,R[147],67,[[],[T]]],[0,"oneshot",R[165],R[166],N,N],[3,"Sender",R[187],R[167],N,N],[3,R[155],E,R[168],N,N],[3,R[143],E,R[144],N,N],[3,R[240],E,"Type of future which `Spawn` instances below must be able…",N,N],[5,R[377],E,R[169],N,[[]]],[5,"spawn",E,R[170],N,[[["f"],["e"]],[R[139]]]],[5,"spawn_fn",E,R[171],N,[[["f"],["e"]],[R[139]]]],[11,"send",E,R[172],68,[[[T]],[R[13]]]],[11,R[173],E,R[174],68,[[["self"]],["poll"]]],[11,R[175],E,R[176],68,[[["self"]],["bool"]]],[11,"close",E,R[177],69,[[["self"]]]],[11,"forget",E,R[178],70,[[]]],[0,"prelude",R[138],"A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll",E,R[3746],N,N],[6,"StartSend",E,"Return type of the `Sink::start_send` method, indicating…",N,N],[14,"try_ready",E,"A macro for extracting the successful type of a `Poll<T,…",N,N],[14,"task_local",E,"A macro to create a `static` of type `LocalKey`",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[108],R[179],E,71,[[],["f"]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[12],E,E,71,[[[U]],[R[13]]]],[11,"into",E,E,71,[[],[U]]],[11,R[14],E,E,71,[[],[R[13]]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[15],E,E,71,[[["self"]],[T]]],[11,R[19],E,E,71,[[["self"]],[R[42]]]],[11,R[108],E,E,72,[[],["f"]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[12],E,E,72,[[[U]],[R[13]]]],[11,"into",E,E,72,[[],[U]]],[11,R[14],E,E,72,[[],[R[13]]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[15],E,E,72,[[["self"]],[T]]],[11,R[19],E,E,72,[[["self"]],[R[42]]]],[11,R[108],E,E,73,[[],["f"]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[12],E,E,73,[[[U]],[R[13]]]],[11,"into",E,E,73,[[],[U]]],[11,R[14],E,E,73,[[],[R[13]]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[15],E,E,73,[[["self"]],[T]]],[11,R[19],E,E,73,[[["self"]],[R[42]]]],[11,R[108],E,E,74,[[],["f"]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[12],E,E,74,[[[U]],[R[13]]]],[11,"into",E,E,74,[[],[U]]],[11,R[14],E,E,74,[[],[R[13]]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[15],E,E,74,[[["self"]],[T]]],[11,R[19],E,E,74,[[["self"]],[R[42]]]],[11,R[17],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[[T],["self"]]]],[11,R[108],E,E,75,[[],["f"]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[12],E,E,75,[[[U]],[R[13]]]],[11,"into",E,E,75,[[],[U]]],[11,R[14],E,E,75,[[],[R[13]]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[15],E,E,75,[[["self"]],[T]]],[11,R[19],E,E,75,[[["self"]],[R[42]]]],[11,R[108],E,E,76,[[],["f"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[12],E,E,76,[[[U]],[R[13]]]],[11,"into",E,E,76,[[],[U]]],[11,R[14],E,E,76,[[],[R[13]]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[15],E,E,76,[[["self"]],[T]]],[11,R[19],E,E,76,[[["self"]],[R[42]]]],[11,R[108],E,E,77,[[],["f"]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[12],E,E,77,[[[U]],[R[13]]]],[11,"into",E,E,77,[[],[U]]],[11,R[14],E,E,77,[[],[R[13]]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[15],E,E,77,[[["self"]],[T]]],[11,R[19],E,E,77,[[["self"]],[R[42]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[12],E,E,78,[[[U]],[R[13]]]],[11,"into",E,E,78,[[],[U]]],[11,R[14],E,E,78,[[],[R[13]]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[15],E,E,78,[[["self"]],[T]]],[11,R[19],E,E,78,[[["self"]],[R[42]]]],[11,R[108],E,E,5,[[],["f"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[12],E,E,79,[[[U]],[R[13]]]],[11,"into",E,E,79,[[],[U]]],[11,R[14],E,E,79,[[],[R[13]]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[15],E,E,79,[[["self"]],[T]]],[11,R[19],E,E,79,[[["self"]],[R[42]]]],[11,R[108],E,E,80,[[],["f"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[12],E,E,80,[[[U]],[R[13]]]],[11,"into",E,E,80,[[],[U]]],[11,R[14],E,E,80,[[],[R[13]]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[15],E,E,80,[[["self"]],[T]]],[11,R[19],E,E,80,[[["self"]],[R[42]]]],[11,R[108],E,E,81,[[],["f"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[12],E,E,81,[[[U]],[R[13]]]],[11,"into",E,E,81,[[],[U]]],[11,R[14],E,E,81,[[],[R[13]]]],[11,R[41],E,E,81,[[["self"]],[T]]],[11,R[15],E,E,81,[[["self"]],[T]]],[11,R[19],E,E,81,[[["self"]],[R[42]]]],[11,R[108],E,E,82,[[],["f"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[12],E,E,82,[[[U]],[R[13]]]],[11,"into",E,E,82,[[],[U]]],[11,R[14],E,E,82,[[],[R[13]]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[15],E,E,82,[[["self"]],[T]]],[11,R[19],E,E,82,[[["self"]],[R[42]]]],[11,R[108],E,E,83,[[],["f"]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[12],E,E,83,[[[U]],[R[13]]]],[11,"into",E,E,83,[[],[U]]],[11,R[14],E,E,83,[[],[R[13]]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[15],E,E,83,[[["self"]],[T]]],[11,R[19],E,E,83,[[["self"]],[R[42]]]],[11,R[108],E,E,84,[[],["f"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[12],E,E,84,[[[U]],[R[13]]]],[11,"into",E,E,84,[[],[U]]],[11,R[14],E,E,84,[[],[R[13]]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[15],E,E,84,[[["self"]],[T]]],[11,R[19],E,E,84,[[["self"]],[R[42]]]],[11,R[108],E,E,85,[[],["f"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[12],E,E,85,[[[U]],[R[13]]]],[11,"into",E,E,85,[[],[U]]],[11,R[14],E,E,85,[[],[R[13]]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[15],E,E,85,[[["self"]],[T]]],[11,R[19],E,E,85,[[["self"]],[R[42]]]],[11,R[108],E,E,86,[[],["f"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[12],E,E,86,[[[U]],[R[13]]]],[11,"into",E,E,86,[[],[U]]],[11,R[14],E,E,86,[[],[R[13]]]],[11,R[41],E,E,86,[[["self"]],[T]]],[11,R[15],E,E,86,[[["self"]],[T]]],[11,R[19],E,E,86,[[["self"]],[R[42]]]],[11,R[108],E,E,87,[[],["f"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[12],E,E,87,[[[U]],[R[13]]]],[11,"into",E,E,87,[[],[U]]],[11,R[14],E,E,87,[[],[R[13]]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[15],E,E,87,[[["self"]],[T]]],[11,R[19],E,E,87,[[["self"]],[R[42]]]],[11,R[108],E,E,88,[[],["f"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[12],E,E,88,[[[U]],[R[13]]]],[11,"into",E,E,88,[[],[U]]],[11,R[14],E,E,88,[[],[R[13]]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[15],E,E,88,[[["self"]],[T]]],[11,R[19],E,E,88,[[["self"]],[R[42]]]],[11,R[108],E,E,89,[[],["f"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[12],E,E,89,[[[U]],[R[13]]]],[11,"into",E,E,89,[[],[U]]],[11,R[14],E,E,89,[[],[R[13]]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[15],E,E,89,[[["self"]],[T]]],[11,R[19],E,E,89,[[["self"]],[R[42]]]],[11,R[108],E,E,90,[[],["f"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[12],E,E,90,[[[U]],[R[13]]]],[11,"into",E,E,90,[[],[U]]],[11,R[14],E,E,90,[[],[R[13]]]],[11,R[41],E,E,90,[[["self"]],[T]]],[11,R[15],E,E,90,[[["self"]],[T]]],[11,R[19],E,E,90,[[["self"]],[R[42]]]],[11,R[108],E,E,91,[[],["f"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[12],E,E,91,[[[U]],[R[13]]]],[11,"into",E,E,91,[[],[U]]],[11,R[14],E,E,91,[[],[R[13]]]],[11,R[41],E,E,91,[[["self"]],[T]]],[11,R[15],E,E,91,[[["self"]],[T]]],[11,R[19],E,E,91,[[["self"]],[R[42]]]],[11,R[108],E,E,92,[[],["f"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[12],E,E,92,[[[U]],[R[13]]]],[11,"into",E,E,92,[[],[U]]],[11,R[14],E,E,92,[[],[R[13]]]],[11,R[41],E,E,92,[[["self"]],[T]]],[11,R[15],E,E,92,[[["self"]],[T]]],[11,R[19],E,E,92,[[["self"]],[R[42]]]],[11,R[108],E,E,93,[[],["f"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[12],E,E,93,[[[U]],[R[13]]]],[11,"into",E,E,93,[[],[U]]],[11,R[14],E,E,93,[[],[R[13]]]],[11,R[41],E,E,93,[[["self"]],[T]]],[11,R[15],E,E,93,[[["self"]],[T]]],[11,R[19],E,E,93,[[["self"]],[R[42]]]],[11,R[108],E,E,94,[[],["f"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[12],E,E,94,[[[U]],[R[13]]]],[11,"into",E,E,94,[[],[U]]],[11,R[14],E,E,94,[[],[R[13]]]],[11,R[41],E,E,94,[[["self"]],[T]]],[11,R[15],E,E,94,[[["self"]],[T]]],[11,R[19],E,E,94,[[["self"]],[R[42]]]],[11,R[108],E,E,95,[[],["f"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[12],E,E,95,[[[U]],[R[13]]]],[11,"into",E,E,95,[[],[U]]],[11,R[14],E,E,95,[[],[R[13]]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[15],E,E,95,[[["self"]],[T]]],[11,R[19],E,E,95,[[["self"]],[R[42]]]],[11,R[108],E,E,96,[[],["f"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[12],E,E,96,[[[U]],[R[13]]]],[11,"into",E,E,96,[[],[U]]],[11,R[14],E,E,96,[[],[R[13]]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[15],E,E,96,[[["self"]],[T]]],[11,R[19],E,E,96,[[["self"]],[R[42]]]],[11,R[108],E,E,6,[[],["f"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[12],E,E,97,[[[U]],[R[13]]]],[11,"into",E,E,97,[[],[U]]],[11,R[14],E,E,97,[[],[R[13]]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[15],E,E,97,[[["self"]],[T]]],[11,R[19],E,E,97,[[["self"]],[R[42]]]],[11,R[17],E,E,97,[[["self"]],[T]]],[11,R[18],E,E,97,[[[T],["self"]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[12],E,E,98,[[[U]],[R[13]]]],[11,"into",E,E,98,[[],[U]]],[11,R[14],E,E,98,[[],[R[13]]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[15],E,E,98,[[["self"]],[T]]],[11,R[19],E,E,98,[[["self"]],[R[42]]]],[11,R[62],E,E,98,[[["self"]],["string"]]],[11,R[17],E,E,98,[[["self"]],[T]]],[11,R[18],E,E,98,[[[T],["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,"into",E,E,11,[[],[U]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[108],E,E,3,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,"from",R[127],E,99,[[[T]],[T]]],[11,R[12],E,E,99,[[[U]],[R[13]]]],[11,"into",E,E,99,[[],[U]]],[11,R[14],E,E,99,[[],[R[13]]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[15],E,E,99,[[["self"]],[T]]],[11,R[19],E,E,99,[[["self"]],[R[42]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[12],E,E,100,[[[U]],[R[13]]]],[11,"into",E,E,100,[[],[U]]],[11,R[14],E,E,100,[[],[R[13]]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[15],E,E,100,[[["self"]],[T]]],[11,R[19],E,E,100,[[["self"]],[R[42]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[12],E,E,101,[[[U]],[R[13]]]],[11,"into",E,E,101,[[],[U]]],[11,R[14],E,E,101,[[],[R[13]]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[15],E,E,101,[[["self"]],[T]]],[11,R[19],E,E,101,[[["self"]],[R[42]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[12],E,E,102,[[[U]],[R[13]]]],[11,"into",E,E,102,[[],[U]]],[11,R[14],E,E,102,[[],[R[13]]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[15],E,E,102,[[["self"]],[T]]],[11,R[19],E,E,102,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,"into",E,E,14,[[],[U]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[12],E,E,103,[[[U]],[R[13]]]],[11,"into",E,E,103,[[],[U]]],[11,R[14],E,E,103,[[],[R[13]]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[15],E,E,103,[[["self"]],[T]]],[11,R[19],E,E,103,[[["self"]],[R[42]]]],[11,R[108],E,E,104,[[],["f"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[12],E,E,104,[[[U]],[R[13]]]],[11,"into",E,E,104,[[],[U]]],[11,R[14],E,E,104,[[],[R[13]]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[15],E,E,104,[[["self"]],[T]]],[11,R[19],E,E,104,[[["self"]],[R[42]]]],[11,R[108],E,E,105,[[],["f"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[12],E,E,105,[[[U]],[R[13]]]],[11,"into",E,E,105,[[],[U]]],[11,R[14],E,E,105,[[],[R[13]]]],[11,R[41],E,E,105,[[["self"]],[T]]],[11,R[15],E,E,105,[[["self"]],[T]]],[11,R[19],E,E,105,[[["self"]],[R[42]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[12],E,E,106,[[[U]],[R[13]]]],[11,"into",E,E,106,[[],[U]]],[11,R[14],E,E,106,[[],[R[13]]]],[11,R[41],E,E,106,[[["self"]],[T]]],[11,R[15],E,E,106,[[["self"]],[T]]],[11,R[19],E,E,106,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,"into",E,E,15,[[],[U]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,"into",E,E,16,[[],[U]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,"into",E,E,17,[[],[U]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,R[108],E,E,107,[[],["f"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[12],E,E,107,[[[U]],[R[13]]]],[11,"into",E,E,107,[[],[U]]],[11,R[14],E,E,107,[[],[R[13]]]],[11,R[41],E,E,107,[[["self"]],[T]]],[11,R[15],E,E,107,[[["self"]],[T]]],[11,R[19],E,E,107,[[["self"]],[R[42]]]],[11,R[108],E,E,108,[[],["f"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[12],E,E,108,[[[U]],[R[13]]]],[11,"into",E,E,108,[[],[U]]],[11,R[14],E,E,108,[[],[R[13]]]],[11,R[41],E,E,108,[[["self"]],[T]]],[11,R[15],E,E,108,[[["self"]],[T]]],[11,R[19],E,E,108,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,"into",E,E,18,[[],[U]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,"into",E,E,19,[[],[U]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,R[108],E,E,20,[[],["f"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,"into",E,E,20,[[],[U]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,"into",E,E,21,[[],[U]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,"into",E,E,22,[[],[U]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,"into",E,E,23,[[],[U]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,"into",E,E,24,[[],[U]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[12],E,E,109,[[[U]],[R[13]]]],[11,"into",E,E,109,[[],[U]]],[11,R[14],E,E,109,[[],[R[13]]]],[11,R[41],E,E,109,[[["self"]],[T]]],[11,R[15],E,E,109,[[["self"]],[T]]],[11,R[19],E,E,109,[[["self"]],[R[42]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[12],E,E,110,[[[U]],[R[13]]]],[11,"into",E,E,110,[[],[U]]],[11,R[14],E,E,110,[[],[R[13]]]],[11,R[41],E,E,110,[[["self"]],[T]]],[11,R[15],E,E,110,[[["self"]],[T]]],[11,R[19],E,E,110,[[["self"]],[R[42]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[12],E,E,111,[[[U]],[R[13]]]],[11,"into",E,E,111,[[],[U]]],[11,R[14],E,E,111,[[],[R[13]]]],[11,R[41],E,E,111,[[["self"]],[T]]],[11,R[15],E,E,111,[[["self"]],[T]]],[11,R[19],E,E,111,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,"into",E,E,25,[[],[U]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[12],E,E,112,[[[U]],[R[13]]]],[11,"into",E,E,112,[[],[U]]],[11,R[14],E,E,112,[[],[R[13]]]],[11,R[41],E,E,112,[[["self"]],[T]]],[11,R[15],E,E,112,[[["self"]],[T]]],[11,R[19],E,E,112,[[["self"]],[R[42]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[12],E,E,113,[[[U]],[R[13]]]],[11,"into",E,E,113,[[],[U]]],[11,R[14],E,E,113,[[],[R[13]]]],[11,R[41],E,E,113,[[["self"]],[T]]],[11,R[15],E,E,113,[[["self"]],[T]]],[11,R[19],E,E,113,[[["self"]],[R[42]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,"into",E,E,26,[[],[U]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,"into",E,E,27,[[],[U]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,"into",E,E,28,[[],[U]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,"into",E,E,29,[[],[U]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[12],E,E,114,[[[U]],[R[13]]]],[11,"into",E,E,114,[[],[U]]],[11,R[14],E,E,114,[[],[R[13]]]],[11,R[41],E,E,114,[[["self"]],[T]]],[11,R[15],E,E,114,[[["self"]],[T]]],[11,R[19],E,E,114,[[["self"]],[R[42]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[12],E,E,115,[[[U]],[R[13]]]],[11,"into",E,E,115,[[],[U]]],[11,R[14],E,E,115,[[],[R[13]]]],[11,R[41],E,E,115,[[["self"]],[T]]],[11,R[15],E,E,115,[[["self"]],[T]]],[11,R[19],E,E,115,[[["self"]],[R[42]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[12],E,E,116,[[[U]],[R[13]]]],[11,"into",E,E,116,[[],[U]]],[11,R[14],E,E,116,[[],[R[13]]]],[11,R[41],E,E,116,[[["self"]],[T]]],[11,R[15],E,E,116,[[["self"]],[T]]],[11,R[19],E,E,116,[[["self"]],[R[42]]]],[11,R[108],E,E,30,[[],["f"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,"into",E,E,30,[[],[U]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,"into",E,E,31,[[],[U]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,"into",E,E,32,[[],[U]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[12],E,E,117,[[[U]],[R[13]]]],[11,"into",E,E,117,[[],[U]]],[11,R[14],E,E,117,[[],[R[13]]]],[11,R[41],E,E,117,[[["self"]],[T]]],[11,R[15],E,E,117,[[["self"]],[T]]],[11,R[19],E,E,117,[[["self"]],[R[42]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,"into",E,E,33,[[],[U]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,R[108],E,E,118,[[],["f"]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[12],E,E,118,[[[U]],[R[13]]]],[11,"into",E,E,118,[[],[U]]],[11,R[14],E,E,118,[[],[R[13]]]],[11,R[41],E,E,118,[[["self"]],[T]]],[11,R[15],E,E,118,[[["self"]],[T]]],[11,R[19],E,E,118,[[["self"]],[R[42]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[43],E,E,34,[[],["i"]]],[11,"into",E,E,34,[[],[U]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,"into",E,E,35,[[],[U]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,"into",E,E,36,[[],[U]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,"into",E,E,12,[[],[U]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,R[62],E,E,12,[[["self"]],["string"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,"into",E,E,38,[[],[U]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,"into",E,E,13,[[],[U]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",R[180],E,37,[[[T]],[T]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,"into",E,E,37,[[],[U]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[12],E,E,119,[[[U]],[R[13]]]],[11,R[43],E,E,119,[[],["i"]]],[11,"into",E,E,119,[[],[U]]],[11,R[14],E,E,119,[[],[R[13]]]],[11,R[41],E,E,119,[[["self"]],[T]]],[11,R[15],E,E,119,[[["self"]],[T]]],[11,R[19],E,E,119,[[["self"]],[R[42]]]],[11,"from",R[181],E,47,[[[T]],[T]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,"into",E,E,47,[[],[U]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,"into",E,E,48,[[],[U]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,"into",E,E,40,[[],[U]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[[T],["self"]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,"into",E,E,41,[[],[U]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,R[108],E,E,42,[[],["f"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,"into",E,E,42,[[],[U]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,R[108],E,E,44,[[],["f"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,"into",E,E,44,[[],[U]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,R[108],E,E,120,[[],["f"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[12],E,E,120,[[[U]],[R[13]]]],[11,"into",E,E,120,[[],[U]]],[11,R[14],E,E,120,[[],[R[13]]]],[11,R[41],E,E,120,[[["self"]],[T]]],[11,R[15],E,E,120,[[["self"]],[T]]],[11,R[19],E,E,120,[[["self"]],[R[42]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,"into",E,E,45,[[],[U]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[[T],["self"]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,"into",E,E,43,[[],[U]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,"into",E,E,46,[[],[U]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,"from",R[182],E,121,[[[T]],[T]]],[11,R[12],E,E,121,[[[U]],[R[13]]]],[11,"into",E,E,121,[[],[U]]],[11,R[14],E,E,121,[[],[R[13]]]],[11,R[41],E,E,121,[[["self"]],[T]]],[11,R[15],E,E,121,[[["self"]],[T]]],[11,R[19],E,E,121,[[["self"]],[R[42]]]],[11,R[17],E,E,121,[[["self"]],[T]]],[11,R[18],E,E,121,[[[T],["self"]]]],[11,"from",R[183],E,122,[[[T]],[T]]],[11,R[12],E,E,122,[[[U]],[R[13]]]],[11,"into",E,E,122,[[],[U]]],[11,R[14],E,E,122,[[],[R[13]]]],[11,R[41],E,E,122,[[["self"]],[T]]],[11,R[15],E,E,122,[[["self"]],[T]]],[11,R[19],E,E,122,[[["self"]],[R[42]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[12],E,E,123,[[[U]],[R[13]]]],[11,"into",E,E,123,[[],[U]]],[11,R[14],E,E,123,[[],[R[13]]]],[11,R[41],E,E,123,[[["self"]],[T]]],[11,R[15],E,E,123,[[["self"]],[T]]],[11,R[19],E,E,123,[[["self"]],[R[42]]]],[11,R[17],E,E,123,[[["self"]],[T]]],[11,R[18],E,E,123,[[[T],["self"]]]],[11,"from",R[182],E,124,[[[T]],[T]]],[11,R[12],E,E,124,[[[U]],[R[13]]]],[11,"into",E,E,124,[[],[U]]],[11,R[14],E,E,124,[[],[R[13]]]],[11,R[41],E,E,124,[[["self"]],[T]]],[11,R[15],E,E,124,[[["self"]],[T]]],[11,R[19],E,E,124,[[["self"]],[R[42]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[12],E,E,125,[[[U]],[R[13]]]],[11,"into",E,E,125,[[],[U]]],[11,R[14],E,E,125,[[],[R[13]]]],[11,R[41],E,E,125,[[["self"]],[T]]],[11,R[15],E,E,125,[[["self"]],[T]]],[11,R[19],E,E,125,[[["self"]],[R[42]]]],[11,R[17],E,E,125,[[["self"]],[T]]],[11,R[18],E,E,125,[[[T],["self"]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[12],E,E,126,[[[U]],[R[13]]]],[11,"into",E,E,126,[[],[U]]],[11,R[14],E,E,126,[[],[R[13]]]],[11,R[41],E,E,126,[[["self"]],[T]]],[11,R[15],E,E,126,[[["self"]],[T]]],[11,R[19],E,E,126,[[["self"]],[R[42]]]],[11,"from",R[140],E,62,[[[T]],[T]]],[11,R[12],E,E,62,[[[U]],[R[13]]]],[11,"into",E,E,62,[[],[U]]],[11,R[14],E,E,62,[[],[R[13]]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[15],E,E,62,[[["self"]],[T]]],[11,R[19],E,E,62,[[["self"]],[R[42]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[12],E,E,127,[[[U]],[R[13]]]],[11,"into",E,E,127,[[],[U]]],[11,R[14],E,E,127,[[],[R[13]]]],[11,R[41],E,E,127,[[["self"]],[T]]],[11,R[15],E,E,127,[[["self"]],[T]]],[11,R[19],E,E,127,[[["self"]],[R[42]]]],[11,R[108],E,E,128,[[],["f"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[12],E,E,128,[[[U]],[R[13]]]],[11,"into",E,E,128,[[],[U]]],[11,R[14],E,E,128,[[],[R[13]]]],[11,R[41],E,E,128,[[["self"]],[T]]],[11,R[15],E,E,128,[[["self"]],[T]]],[11,R[19],E,E,128,[[["self"]],[R[42]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[12],E,E,63,[[[U]],[R[13]]]],[11,"into",E,E,63,[[],[U]]],[11,R[14],E,E,63,[[],[R[13]]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[15],E,E,63,[[["self"]],[T]]],[11,R[19],E,E,63,[[["self"]],[R[42]]]],[11,R[108],R[184],E,54,[[],["f"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[12],E,E,54,[[[U]],[R[13]]]],[11,"into",E,E,54,[[],[U]]],[11,R[14],E,E,54,[[],[R[13]]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[R[42]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[12],E,E,53,[[[U]],[R[13]]]],[11,"into",E,E,53,[[],[U]]],[11,R[14],E,E,53,[[],[R[13]]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[R[42]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[12],E,E,129,[[[U]],[R[13]]]],[11,"into",E,E,129,[[],[U]]],[11,R[14],E,E,129,[[],[R[13]]]],[11,R[41],E,E,129,[[["self"]],[T]]],[11,R[15],E,E,129,[[["self"]],[T]]],[11,R[19],E,E,129,[[["self"]],[R[42]]]],[11,R[62],E,E,129,[[["self"]],["string"]]],[11,R[17],E,E,129,[[["self"]],[T]]],[11,R[18],E,E,129,[[[T],["self"]]]],[11,R[108],E,E,55,[[],["f"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[12],E,E,55,[[[U]],[R[13]]]],[11,"into",E,E,55,[[],[U]]],[11,R[14],E,E,55,[[],[R[13]]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[R[42]]]],[11,R[108],E,E,130,[[],["f"]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[12],E,E,130,[[[U]],[R[13]]]],[11,"into",E,E,130,[[],[U]]],[11,R[14],E,E,130,[[],[R[13]]]],[11,R[41],E,E,130,[[["self"]],[T]]],[11,R[15],E,E,130,[[["self"]],[T]]],[11,R[19],E,E,130,[[["self"]],[R[42]]]],[11,"from",R[185],E,58,[[[T]],[T]]],[11,R[12],E,E,58,[[[U]],[R[13]]]],[11,"into",E,E,58,[[],[U]]],[11,R[14],E,E,58,[[],[R[13]]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[15],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[R[42]]]],[11,R[17],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[[T],["self"]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[12],E,E,59,[[[U]],[R[13]]]],[11,"into",E,E,59,[[],[U]]],[11,R[14],E,E,59,[[],[R[13]]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[15],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[R[42]]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[[T],["self"]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[12],E,E,60,[[[U]],[R[13]]]],[11,"into",E,E,60,[[],[U]]],[11,R[14],E,E,60,[[],[R[13]]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[15],E,E,60,[[["self"]],[T]]],[11,R[19],E,E,60,[[["self"]],[R[42]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[12],E,E,61,[[[U]],[R[13]]]],[11,"into",E,E,61,[[],[U]]],[11,R[14],E,E,61,[[],[R[13]]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[15],E,E,61,[[["self"]],[T]]],[11,R[19],E,E,61,[[["self"]],[R[42]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[12],E,E,56,[[[U]],[R[13]]]],[11,"into",E,E,56,[[],[U]]],[11,R[14],E,E,56,[[],[R[13]]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[R[42]]]],[11,R[62],E,E,56,[[["self"]],["string"]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[[T],["self"]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[12],E,E,57,[[[U]],[R[13]]]],[11,"into",E,E,57,[[],[U]]],[11,R[14],E,E,57,[[],[R[13]]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[15],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[R[42]]]],[11,R[62],E,E,57,[[["self"]],["string"]]],[11,R[17],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[[T],["self"]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[12],E,E,131,[[[U]],[R[13]]]],[11,"into",E,E,131,[[],[U]]],[11,R[14],E,E,131,[[],[R[13]]]],[11,R[41],E,E,131,[[["self"]],[T]]],[11,R[15],E,E,131,[[["self"]],[T]]],[11,R[19],E,E,131,[[["self"]],[R[42]]]],[11,R[108],E,E,132,[[],["f"]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[12],E,E,132,[[[U]],[R[13]]]],[11,"into",E,E,132,[[],[U]]],[11,R[14],E,E,132,[[],[R[13]]]],[11,R[41],E,E,132,[[["self"]],[T]]],[11,R[15],E,E,132,[[["self"]],[T]]],[11,R[19],E,E,132,[[["self"]],[R[42]]]],[11,"from",R[186],E,133,[[[T]],[T]]],[11,R[12],E,E,133,[[[U]],[R[13]]]],[11,"into",E,E,133,[[],[U]]],[11,R[14],E,E,133,[[],[R[13]]]],[11,R[41],E,E,133,[[["self"]],[T]]],[11,R[15],E,E,133,[[["self"]],[T]]],[11,R[19],E,E,133,[[["self"]],[R[42]]]],[11,R[17],E,E,133,[[["self"]],[T]]],[11,R[18],E,E,133,[[[T],["self"]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[12],E,E,64,[[[U]],[R[13]]]],[11,"into",E,E,64,[[],[U]]],[11,R[14],E,E,64,[[],[R[13]]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[15],E,E,64,[[["self"]],[T]]],[11,R[19],E,E,64,[[["self"]],[R[42]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[12],E,E,65,[[[U]],[R[13]]]],[11,"into",E,E,65,[[],[U]]],[11,R[14],E,E,65,[[],[R[13]]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[15],E,E,65,[[["self"]],[T]]],[11,R[19],E,E,65,[[["self"]],[R[42]]]],[11,R[17],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[[T],["self"]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[12],E,E,66,[[[U]],[R[13]]]],[11,"into",E,E,66,[[],[U]]],[11,R[14],E,E,66,[[],[R[13]]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[15],E,E,66,[[["self"]],[T]]],[11,R[19],E,E,66,[[["self"]],[R[42]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[12],E,E,67,[[[U]],[R[13]]]],[11,"into",E,E,67,[[],[U]]],[11,R[14],E,E,67,[[],[R[13]]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[15],E,E,67,[[["self"]],[T]]],[11,R[19],E,E,67,[[["self"]],[R[42]]]],[11,R[62],E,E,67,[[["self"]],["string"]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[12],E,E,134,[[[U]],[R[13]]]],[11,"into",E,E,134,[[],[U]]],[11,R[14],E,E,134,[[],[R[13]]]],[11,R[41],E,E,134,[[["self"]],[T]]],[11,R[15],E,E,134,[[["self"]],[T]]],[11,R[19],E,E,134,[[["self"]],[R[42]]]],[11,R[108],E,E,135,[[],["f"]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[12],E,E,135,[[[U]],[R[13]]]],[11,"into",E,E,135,[[],[U]]],[11,R[14],E,E,135,[[],[R[13]]]],[11,R[41],E,E,135,[[["self"]],[T]]],[11,R[15],E,E,135,[[["self"]],[T]]],[11,R[19],E,E,135,[[["self"]],[R[42]]]],[11,"from",R[187],E,68,[[[T]],[T]]],[11,R[12],E,E,68,[[[U]],[R[13]]]],[11,"into",E,E,68,[[],[U]]],[11,R[14],E,E,68,[[],[R[13]]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[15],E,E,68,[[["self"]],[T]]],[11,R[19],E,E,68,[[["self"]],[R[42]]]],[11,R[108],E,E,69,[[],["f"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[12],E,E,69,[[[U]],[R[13]]]],[11,"into",E,E,69,[[],[U]]],[11,R[14],E,E,69,[[],[R[13]]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[15],E,E,69,[[["self"]],[T]]],[11,R[19],E,E,69,[[["self"]],[R[42]]]],[11,R[108],E,E,70,[[],["f"]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[12],E,E,70,[[[U]],[R[13]]]],[11,"into",E,E,70,[[],[U]]],[11,R[14],E,E,70,[[],[R[13]]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[15],E,E,70,[[["self"]],[T]]],[11,R[19],E,E,70,[[["self"]],[R[42]]]],[11,R[108],E,E,136,[[],["f"]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[12],E,E,136,[[[U]],[R[13]]]],[11,"into",E,E,136,[[],[U]]],[11,R[14],E,E,136,[[],[R[13]]]],[11,R[41],E,E,136,[[["self"]],[T]]],[11,R[15],E,E,136,[[["self"]],[T]]],[11,R[19],E,E,136,[[["self"]],[R[42]]]],[11,"poll",R[179],E,71,[[["self"]],["poll"]]],[11,"poll",E,E,72,[[["self"]],["poll"]]],[11,"poll",E,E,73,[[["self"]],["poll"]]],[11,"poll",E,E,74,[[["self"]],["poll"]]],[11,"poll",E,E,75,[[["self"]],["poll"]]],[11,"poll",E,E,76,[[["self"]],["poll"]]],[11,"poll",E,E,77,[[["self"]],["poll"]]],[11,"poll",E,E,5,[[["self"]],["poll"]]],[11,"poll",E,E,80,[[["self"]],["poll"]]],[11,"poll",E,E,81,[[["self"]],["poll"]]],[11,"poll",E,E,82,[[["self"]],["poll"]]],[11,"poll",E,E,83,[[["self"]],["poll"]]],[11,"poll",E,E,84,[[["self"]],["poll"]]],[11,"poll",E,E,85,[[["self"]],["poll"]]],[11,"poll",E,E,86,[[["self"]],["poll"]]],[11,"poll",E,E,87,[[["self"]],["poll"]]],[11,"poll",E,E,88,[[["self"]],["poll"]]],[11,"poll",E,E,89,[[["self"]],["poll"]]],[11,"poll",E,E,90,[[["self"]],["poll"]]],[11,"poll",E,E,91,[[["self"]],["poll"]]],[11,"poll",E,E,3,[[["self"]],["poll"]]],[11,"poll",E,E,92,[[["self"]],["poll"]]],[11,"poll",E,E,93,[[["self"]],["poll"]]],[11,"poll",E,E,94,[[["self"]],["poll"]]],[11,"poll",E,E,95,[[["self"]],["poll"]]],[11,"poll",E,E,96,[[["self"]],["poll"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",R[127],E,105,[[["self"]],["poll"]]],[11,"poll",E,E,104,[[["self"]],["poll"]]],[11,"poll",E,E,107,[[["self"]],["poll"]]],[11,"poll",E,E,108,[[["self"]],["poll"]]],[11,"poll",E,E,20,[[["self"]],["poll"]]],[11,"poll",E,E,30,[[["self"]],["poll"]]],[11,"poll",E,E,118,[[["self"]],[["vec"],["poll",["vec"]]]]],[11,"poll",R[181],E,42,[[["self"]],["poll"]]],[11,"poll",E,E,44,[[["self"]],["poll"]]],[11,"poll",E,E,120,[[["self"]],["poll"]]],[11,"poll",R[184],E,54,[[["self"]],[[R[188]],["poll",[R[188]]]]]],[11,"poll",E,E,55,[[["self"]],["poll"]]],[11,"poll",E,E,130,[[["self"]],["poll"]]],[11,"poll",R[185],E,132,[[["self"]],["poll"]]],[11,"poll",R[140],E,128,[[["self"]],[[R[189]],["poll",[R[189]]]]]],[11,"poll",R[186],E,135,[[["self"]],["poll"]]],[11,"poll",R[187],E,69,[[["self"]],["poll"]]],[11,"poll",E,E,70,[[["self"]],["poll"]]],[11,"poll",E,E,136,[[["self"]],["poll"]]],[11,"poll",R[179],E,78,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,79,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,3,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",R[127],E,99,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,100,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,101,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,102,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,14,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,103,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,106,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,15,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,16,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,17,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,18,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,19,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,21,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,22,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,23,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,24,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,109,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,110,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,111,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,25,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,112,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,113,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,26,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,27,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,28,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,29,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,114,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,115,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",E,E,116,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,31,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,32,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,117,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,33,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,35,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[180],E,37,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[127],E,38,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[181],E,40,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,41,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,43,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,45,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,47,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[185],E,60,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,61,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,131,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,"poll",R[186],E,64,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,66,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,134,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,R[190],R[127],E,14,[[["self"]],[R[191]]]],[11,R[192],E,E,14,[[["self"]],["poll"]]],[11,"close",E,E,14,[[["self"]],["poll"]]],[11,R[190],E,E,15,[[["self"]],[R[191]]]],[11,R[192],E,E,15,[[["self"]],["poll"]]],[11,"close",E,E,15,[[["self"]],["poll"]]],[11,R[190],E,E,16,[[["self"]],[R[191]]]],[11,R[192],E,E,16,[[["self"]],["poll"]]],[11,"close",E,E,16,[[["self"]],["poll"]]],[11,R[190],E,E,17,[[["self"]],[R[191]]]],[11,R[192],E,E,17,[[["self"]],["poll"]]],[11,"close",E,E,17,[[["self"]],["poll"]]],[11,R[190],E,E,18,[[["self"]],[R[191]]]],[11,R[192],E,E,18,[[["self"]],["poll"]]],[11,"close",E,E,18,[[["self"]],["poll"]]],[11,R[190],E,E,19,[[["self"]],[R[191]]]],[11,R[192],E,E,19,[[["self"]],["poll"]]],[11,"close",E,E,19,[[["self"]],["poll"]]],[11,R[190],E,E,21,[[["self"]],[R[191]]]],[11,R[192],E,E,21,[[["self"]],["poll"]]],[11,"close",E,E,21,[[["self"]],["poll"]]],[11,R[190],E,E,22,[[["self"]],[R[191]]]],[11,R[192],E,E,22,[[["self"]],["poll"]]],[11,"close",E,E,22,[[["self"]],["poll"]]],[11,R[190],E,E,23,[[["self"]],[R[191]]]],[11,R[192],E,E,23,[[["self"]],["poll"]]],[11,"close",E,E,23,[[["self"]],["poll"]]],[11,R[190],E,E,24,[[["self"]],[R[191]]]],[11,R[192],E,E,24,[[["self"]],["poll"]]],[11,"close",E,E,24,[[["self"]],["poll"]]],[11,R[190],E,E,111,[[["self"]],[R[191]]]],[11,R[192],E,E,111,[[["self"]],["poll"]]],[11,"close",E,E,111,[[["self"]],["poll"]]],[11,R[190],E,E,25,[[["self"]],[R[191]]]],[11,R[192],E,E,25,[[["self"]],["poll"]]],[11,"close",E,E,25,[[["self"]],["poll"]]],[11,R[190],E,E,26,[[["self"]],[R[191]]]],[11,R[192],E,E,26,[[["self"]],["poll"]]],[11,"close",E,E,26,[[["self"]],["poll"]]],[11,R[190],E,E,27,[[["self"]],[R[191]]]],[11,R[192],E,E,27,[[["self"]],["poll"]]],[11,"close",E,E,27,[[["self"]],["poll"]]],[11,R[190],E,E,28,[[["self"]],[R[191]]]],[11,R[192],E,E,28,[[["self"]],["poll"]]],[11,"close",E,E,28,[[["self"]],["poll"]]],[11,R[190],E,E,29,[[["self"]],[R[191]]]],[11,R[192],E,E,29,[[["self"]],["poll"]]],[11,"close",E,E,29,[[["self"]],["poll"]]],[11,R[190],E,E,114,[[["self"]],[R[191]]]],[11,R[192],E,E,114,[[["self"]],["poll"]]],[11,"close",E,E,114,[[["self"]],["poll"]]],[11,R[190],E,E,31,[[["self"]],[R[191]]]],[11,R[192],E,E,31,[[["self"]],["poll"]]],[11,"close",E,E,31,[[["self"]],["poll"]]],[11,R[190],E,E,32,[[["self"]],[R[191]]]],[11,R[192],E,E,32,[[["self"]],["poll"]]],[11,"close",E,E,32,[[["self"]],["poll"]]],[11,R[190],E,E,33,[[["self"]],[R[191]]]],[11,R[192],E,E,33,[[["self"]],["poll"]]],[11,"close",E,E,33,[[["self"]],["poll"]]],[11,R[190],E,E,36,[[["self"]],[R[191]]]],[11,R[192],E,E,36,[[["self"]],["poll"]]],[11,"close",E,E,36,[[["self"]],["poll"]]],[11,R[190],R[181],E,40,[[["self"]],[R[191]]]],[11,R[192],E,E,40,[[["self"]],["poll"]]],[11,"close",E,E,40,[[["self"]],["poll"]]],[11,R[190],E,E,41,[[["self"]],[R[191]]]],[11,R[192],E,E,41,[[["self"]],["poll"]]],[11,"close",E,E,41,[[["self"]],["poll"]]],[11,R[190],E,E,43,[[["self"]],[R[191]]]],[11,R[192],E,E,43,[[["self"]],["poll"]]],[11,"close",E,E,43,[[["self"]],["poll"]]],[11,R[190],E,E,45,[[["self"]],[R[191]]]],[11,R[192],E,E,45,[[["self"]],["poll"]]],[11,"close",E,E,45,[[["self"]],["poll"]]],[11,R[190],E,E,46,[[["self"]],[R[191]]]],[11,R[192],E,E,46,[[["self"]],["poll"]]],[11,"close",E,E,46,[[["self"]],["poll"]]],[11,R[190],E,E,47,[[["self"]],[R[191]]]],[11,R[192],E,E,47,[[["self"]],["poll"]]],[11,"close",E,E,47,[[["self"]],["poll"]]],[11,R[190],R[185],E,58,[[["self"],[T]],[[R[149]],[R[191],[R[149]]]]]],[11,R[192],E,E,58,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,"close",E,E,58,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,R[190],E,E,59,[[["self"],[T]],[[R[149]],[R[191],[R[149]]]]]],[11,R[192],E,E,59,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,"close",E,E,59,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,R[190],R[186],E,133,[[["self"],[T]],[[R[191],[R[149]]],[R[149]]]]],[11,R[192],E,E,133,[[["self"]],[[R[149]],["poll",[R[149]]]]]],[11,"close",E,E,133,[[["self"]],[[R[149]],["poll",[R[149]]]]]],[11,R[190],E,E,65,[[["self"],[T]],[[R[191],[R[149]]],[R[149]]]]],[11,R[192],E,E,65,[[["self"]],[[R[149]],["poll",[R[149]]]]]],[11,"close",E,E,65,[[["self"]],[[R[149]],["poll",[R[149]]]]]],[11,"eq",R[138],E,0,[[["self"],["async"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["async"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[193]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[193]]],["bool"]]],[11,"eq",R[179],E,4,[[["self"],[R[107]]],["bool"]]],[11,"eq",R[184],E,129,[[[R[188]],["self"]],["bool"]]],[11,"eq",R[185],E,56,[[[R[149]],["self"]],["bool"]]],[11,"ne",E,E,56,[[[R[149]],["self"]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[148]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[148]]],["bool"]]],[11,"from",R[138],E,0,[[[T]],["async"]]],[11,"from",R[179],E,74,[[[R[13]]],["self"]]],[11,"from",R[183],E,123,[[["arc"]],[R[194]]]],[11,"from",E,E,123,[[[T]],[R[194]]]],[11,"fmt",R[138],E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",R[179],E,71,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,72,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,73,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,74,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,2,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,75,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,76,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,77,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,78,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,79,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,80,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,81,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,82,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,83,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,84,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,85,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,86,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,87,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,88,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,89,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,90,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,91,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,3,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,92,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,93,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,94,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,95,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,96,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,97,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,98,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,4,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[127],E,99,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,100,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,101,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,102,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,14,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,103,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",E,E,104,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",E,E,106,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,15,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,16,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,17,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,107,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,108,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,18,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,19,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,20,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,21,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,22,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,23,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,24,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,109,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,13,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,110,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,111,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,25,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,112,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,113,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,26,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,27,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,28,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,29,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,114,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,115,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,116,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,30,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,31,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,33,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,118,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,34,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,35,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,36,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[180],E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,119,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",R[127],E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[181],E,40,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,41,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,42,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,43,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,44,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,120,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,45,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",E,E,47,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,48,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",R[182],E,124,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,126,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,125,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,121,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[183],E,122,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,123,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[184],E,54,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,53,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,129,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,55,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,130,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[185],E,58,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,59,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,60,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,61,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,56,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,57,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,131,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,132,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[140],E,62,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,127,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,128,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,63,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",R[186],E,133,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,64,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,65,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,66,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,67,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,134,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,135,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[187],E,68,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,69,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,70,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,136,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[179],E,98,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[127],E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[184],E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[185],E,56,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,57,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[186],E,67,[[["self"],[R[30]]],[R[13]]]],[11,"deref",R[179],E,97,[[["self"]],[T]]],[11,"deref",E,E,98,[[["self"]],["e"]]],[11,"deref",R[140],E,127,[[["self"]],[T]]],[11,"deref",E,E,63,[[["self"]],[T]]],[11,R[60],E,E,127,[[["self"]],[T]]],[11,R[60],E,E,63,[[["self"]],[T]]],[11,"drop",R[179],E,6,[[["self"]]]],[11,"drop",R[180],E,37,[[["self"]]]],[11,"drop",R[183],E,123,[[["self"]]]],[11,"drop",R[184],E,53,[[["self"]]]],[11,"drop",E,E,54,[[["self"]]]],[11,"drop",E,E,55,[[["self"]]]],[11,"drop",E,E,130,[[["self"]]]],[11,"drop",R[185],E,58,[[["self"]]]],[11,"drop",E,E,60,[[["self"]]]],[11,"drop",R[140],E,127,[[["self"]]]],[11,"drop",E,E,63,[[["self"]]]],[11,"drop",R[186],E,133,[[["self"]]]],[11,"drop",E,E,64,[[["self"]]]],[11,"drop",R[187],E,68,[[["self"]]]],[11,"drop",E,E,69,[[["self"]]]],[11,R[196],R[180],E,37,[[[T]],["self"]]],[11,R[196],R[127],E,38,[[[T]],["self"]]],[11,"next",E,E,34,[[["self"]],[R[45]]]],[11,"next",R[180],E,119,[[["self"]],[["f"],[R[45]]]]],[11,R[46],E,E,119,[[["self"]]]],[11,"clone",R[138],E,0,[[["self"]],["async"]]],[11,"clone",E,E,1,[[["self"]],[R[193]]]],[11,"clone",R[179],E,74,[[["self"]],[R[101]]]],[11,"clone",E,E,6,[[["self"]],["self"]]],[11,"clone",E,E,97,[[["self"]],[R[197]]]],[11,"clone",E,E,98,[[["self"]],[R[198]]]],[11,"clone",E,E,4,[[["self"]],[R[107]]]],[11,"clone",R[181],E,40,[[["self"]],["with"]]],[11,"clone",E,E,43,[[["self"]],[R[199]]]],[11,"clone",E,E,45,[[["self"]],[R[200]]]],[11,"clone",R[182],E,125,[[["self"]],[R[201]]]],[11,"clone",E,E,121,[[["self"]],["task"]]],[11,"clone",R[183],E,123,[[["self"]],["self"]]],[11,"clone",R[184],E,129,[[["self"]],[R[188]]]],[11,"clone",R[185],E,56,[[["self"]],[R[149]]]],[11,"clone",E,E,57,[[["self"]],[R[148]]]],[11,"clone",E,E,59,[[["self"]],[R[3810]]]],[11,"clone",E,E,58,[[["self"]],["sender"]]],[11,"clone",R[186],E,133,[[["self"]],["self"]]],[11,"clone",E,E,65,[[["self"]],["self"]]],[11,R[77],R[180],E,37,[[],["self"]]],[11,R[77],R[127],E,38,[[],["self"]]],[11,R[77],R[182],E,124,[[],["self"]]],[11,R[31],R[179],E,98,[[["self"]],["str"]]],[11,"cause",E,E,98,[[["self"]],[["error"],[R[45],["error"]]]]],[11,R[31],R[127],E,12,[[["self"]],["str"]]],[11,R[31],R[184],E,129,[[["self"]],["str"]]],[11,R[31],R[185],E,56,[[["self"]],["str"]]],[11,R[31],E,E,57,[[["self"]],["str"]]],[11,R[31],R[186],E,67,[[["self"]],["str"]]],[11,"new",R[182],R[386],124,[[],[R[387]]]],[11,R[3081],E,R[388],124,[[["self"]]]],[11,R[389],E,R[390],124,[[["self"],["task"]]]],[11,"notify",E,R[391],124,[[["self"]]]],[11,"with",E,R[3860],126,[[["self"],["f"]],["r"]]],[11,R[3838],R[183],R[3839],122,[[["self"]],[R[13]]]],[11,R[3840],E,R[3841],122,[[["self"]],[[R[13]],[R[45],[R[13]]]]]],[11,"wait_send",E,R[3842],122,[[["self"]],[R[13]]]],[11,"wait_flush",E,R[3843],122,[[["self"]],[R[13]]]],[11,"wait_close",E,R[3844],122,[[["self"]],[R[13]]]],[11,"new",R[182],R[3861],125,[[[R[9]],["arc",["eventset"]],["eventset"]],[R[201]]]],[11,"clone_id",R[183],R[202],51,[[["self"],[R[9]]],[R[9]]]],[11,"drop_id",E,R[203],51,[[["self"],[R[9]]]]],[11,"notify",R[182],R[3834],121,[[["self"]]]],[11,"is_current",E,R[3835],121,[[["self"]],["bool"]]],[11,R[3836],E,R[3837],121,[[["self"]],["bool"]]],[11,R[120],R[183],R[3845],122,[[["self"]],[T]]],[11,R[121],E,R[3846],122,[[["self"]],[T]]],[11,R[118],E,R[3847],122,[[],[T]]],[11,R[3848],E,R[3849],122,[[["self"],["n"],[R[9]],["f"]],["r"]]],[11,R[3850],E,R[3851],122,[[["self"],["n"],[R[9]]],["poll"]]],[11,R[3852],E,R[3853],122,[[["self"],["n"],[R[9]]],[["poll",[R[45]]],[R[45]]]]],[11,R[3854],E,R[3855],122,[[["self"],["n"],[R[9]]],[R[191]]]],[11,R[3856],E,R[3857],122,[[["self"],["n"],[R[9]]],["poll"]]],[11,R[3858],E,R[3859],122,[[["self"],["n"],[R[9]]],["poll"]]],[11,"new",E,"Constructs a new `NotifyHandle` directly.",123,[[],[R[194]]]],[11,"notify",E,"Invokes the underlying instance of `Notify` with the…",123,[[["self"],[R[9]]]]]],"p":[[4,"Async"],[4,R[204]],[4,"Loop"],[4,"Either"],[4,R[205]],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,R[206]],[8,R[207]],[8,R[789]],[3,R[208]],[3,R[209]],[4,R[210]],[3,"AndThen"],[3,"Filter"],[3,R[211]],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,R[212]],[3,"Inspect"],[3,R[213]],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,R[214]],[3,"Take"],[3,R[215]],[3,"Forward"],[3,"Buffered"],[3,R[216]],[3,"Chunks"],[3,"Wait"],[3,R[217]],[3,R[218]],[3,R[219]],[3,R[220]],[8,"Stream"],[3,"With"],[3,R[221]],[3,"Flush"],[3,R[222]],[3,"Send"],[3,R[223]],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,R[224]],[3,"Sender"],[3,R[155]],[3,R[143]],[3,R[158]],[3,R[225]],[3,"Sender"],[3,R[156]],[3,R[155]],[3,R[157]],[3,"BiLock"],[3,R[226]],[3,R[155]],[3,R[156]],[3,R[157]],[3,R[158]],[3,"Sender"],[3,R[155]],[3,R[143]],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,R[227]],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,R[228]],[3,R[229]],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,R[230]],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,R[113]],[3,"JoinAll"],[3,R[231]],[3,"SelectOk"],[3,R[232]],[3,R[233]],[3,"Iter"],[3,"IterOk"],[3,R[234]],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,R[113]],[3,"Collect"],[3,"IterMut"],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,R[235]],[3,R[236]],[3,R[237]],[3,"LocalKey"],[3,R[238]],[3,R[239]],[3,"Canceled"],[3,R[240]],[3,R[143]],[3,R[240]],[3,"Sender"],[3,R[143]],[3,R[240]],[3,R[240]]]};
searchIndex["humantime"]={"doc":"Human-friendly time parser and formatter","i":[[3,R[420],"humantime","A wrapper type that allows you to Display a Duration",N,N],[3,R[735],E,"A wrapper for duration that has `FromStr` implementation",N,N],[3,R[421],E,"A wrapper for SystemTime that has `FromStr` implementation",N,N],[3,R[422],E,"A wrapper type that allows you to Display a SystemTime",N,N],[4,R[418],E,"Error parsing human-friendly duration",N,N],[13,"InvalidCharacter",E,"Invalid character during parsing",0,N],[13,"NumberExpected",E,"Non-numeric value where number is expected",0,N],[13,"UnknownUnit",E,"Unit in the number is not one of allowed units",0,N],[13,"NumberOverflow",E,"The numeric value is too large",0,N],[13,"Empty",E,"The value was an empty string (or consists only whitespace)",0,N],[4,R[419],E,"Error parsing datetime (timestamp)",N,N],[13,"OutOfRange",E,"Numeric component is out of range",1,N],[13,"InvalidDigit",E,"Bad character where digit is expected",1,N],[13,"InvalidFormat",E,"Other formatting errors",1,N],[5,"parse_duration",E,"Parse duration object `1hour 12min 5s`",N,[[["str"]],[["error"],[R[411]],[R[13],[R[411],"error"]]]]],[5,"format_duration",E,"Formats duration into a human-readable string",N,[[[R[411]]],[R[415]]]],[5,"parse_rfc3339",E,"Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["str"]],[[R[13],[R[412],"error"]],["error"],[R[412]]]]],[5,"parse_rfc3339_weak",E,"Parse RFC3339-like timestamp `2018-02-14 00:28:07`",N,[[["str"]],[[R[13],[R[412],"error"]],["error"],[R[412]]]]],[5,"format_rfc3339",E,R[413],N,[[[R[412]]],[R[414]]]],[5,"format_rfc3339_seconds",E,R[413],N,[[[R[412]]],[R[414]]]],[5,"format_rfc3339_nanos",E,"Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",N,[[[R[412]]],[R[414]]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[62],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"clone",E,E,0,[[["self"]],["error"]]],[11,"clone",E,E,2,[[["self"]],[R[415]]]],[11,"clone",E,E,3,[[["self"]],[R[411]]]],[11,"clone",E,E,4,[[["self"]],[R[416]]]],[11,"clone",E,E,1,[[["self"]],["error"]]],[11,"clone",E,E,5,[[["self"]],[R[414]]]],[11,"from",E,E,3,[[[R[417]]],[R[411]]]],[11,"from",E,E,4,[[[R[412]]],[R[416]]]],[11,"into",E,E,3,[[],[R[417]]]],[11,"into",E,E,4,[[],[R[412]]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[416]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[416]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["error"]],["bool"]]],[11,"as_ref",E,E,3,[[["self"]],[R[417]]]],[11,"as_ref",E,E,4,[[["self"]],[R[412]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,R[551],E,E,3,[[["str"]],[[R[13],[R[411]]],[R[411]]]]],[11,R[551],E,E,4,[[["str"]],[[R[416]],[R[13],[R[416]]]]]],[11,"deref",E,E,3,[[["self"]],[R[417]]]],[11,"deref",E,E,4,[[["self"]],[R[412]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,R[31],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[31],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[45],["error"]],["error"]]]]],"p":[[4,R[418]],[4,R[419]],[3,R[420]],[3,R[735]],[3,R[421]],[3,R[422]]]};
searchIndex["iovec"]={"doc":R[802],"i":[[3,"IoVec","iovec",R[802],N,N],[0,"unix",E,"IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,[[]]],[5,"as_os_slice_mut",E,"Convert a mutable slice of `IoVec` refs to a mutable slice…",N,[[]]],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes",E,E,0,[[],[["iovec"],[R[45],["iovec"]]]]],[11,"from_bytes_mut",E,E,0,[[],[["iovec"],[R[45],["iovec"]]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[60],E,E,0,[[["self"]]]],[11,"deref",E,E,0,[[["self"]]]]],"p":[[3,"IoVec"]]};
searchIndex["launcher"]={"doc":"Balloon software launcher.","i":[[5,"main","launcher","Program entry point.",N,[[]]]],"p":[]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,R[3321],R[55],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[55],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[513],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[451],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[452],E,E,N,N],[12,R[425],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[514],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,18,N],[12,"imr_interface",E,E,18,N],[3,R[515],E,E,N,N],[12,"sa_family",E,E,19,N],[12,"sa_data",E,E,19,N],[3,R[453],E,E,N,N],[12,"sin_family",E,E,20,N],[12,"sin_port",E,E,20,N],[12,"sin_addr",E,E,20,N],[12,"sin_zero",E,E,20,N],[3,R[454],E,E,N,N],[12,R[1307],E,E,21,N],[12,"sin6_port",E,E,21,N],[12,R[1308],E,E,21,N],[12,"sin6_addr",E,E,21,N],[12,R[1309],E,E,21,N],[3,R[516],E,E,N,N],[12,"ai_flags",E,E,22,N],[12,"ai_family",E,E,22,N],[12,"ai_socktype",E,E,22,N],[12,"ai_protocol",E,E,22,N],[12,"ai_addrlen",E,E,22,N],[12,"ai_addr",E,E,22,N],[12,"ai_canonname",E,E,22,N],[12,"ai_next",E,E,22,N],[3,R[455],E,E,N,N],[12,"sll_family",E,E,23,N],[12,"sll_protocol",E,E,23,N],[12,"sll_ifindex",E,E,23,N],[12,"sll_hatype",E,E,23,N],[12,"sll_pkttype",E,E,23,N],[12,"sll_halen",E,E,23,N],[12,"sll_addr",E,E,23,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,24,N],[12,"tm_min",E,E,24,N],[12,"tm_hour",E,E,24,N],[12,"tm_mday",E,E,24,N],[12,"tm_mon",E,E,24,N],[12,"tm_year",E,E,24,N],[12,"tm_wday",E,E,24,N],[12,"tm_yday",E,E,24,N],[12,"tm_isdst",E,E,24,N],[12,"tm_gmtoff",E,E,24,N],[12,"tm_zone",E,E,24,N],[3,R[456],E,E,N,N],[12,"sched_priority",E,E,25,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,26,N],[12,"dli_fbase",E,E,26,N],[12,"dli_sname",E,E,26,N],[12,"dli_saddr",E,E,26,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,27,N],[12,"thousands_sep",E,E,27,N],[12,"grouping",E,E,27,N],[12,"int_curr_symbol",E,E,27,N],[12,"currency_symbol",E,E,27,N],[12,"mon_decimal_point",E,E,27,N],[12,"mon_thousands_sep",E,E,27,N],[12,"mon_grouping",E,E,27,N],[12,"positive_sign",E,E,27,N],[12,"negative_sign",E,E,27,N],[12,"int_frac_digits",E,E,27,N],[12,"frac_digits",E,E,27,N],[12,"p_cs_precedes",E,E,27,N],[12,"p_sep_by_space",E,E,27,N],[12,"n_cs_precedes",E,E,27,N],[12,"n_sep_by_space",E,E,27,N],[12,"p_sign_posn",E,E,27,N],[12,"n_sign_posn",E,E,27,N],[12,"int_p_cs_precedes",E,E,27,N],[12,"int_p_sep_by_space",E,E,27,N],[12,"int_n_cs_precedes",E,E,27,N],[12,"int_n_sep_by_space",E,E,27,N],[12,"int_p_sign_posn",E,E,27,N],[12,"int_n_sign_posn",E,E,27,N],[3,R[457],E,E,N,N],[12,"ipi_ifindex",E,E,28,N],[12,"ipi_spec_dst",E,E,28,N],[12,"ipi_addr",E,E,28,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,29,N],[12,"ifa_name",E,E,29,N],[12,"ifa_flags",E,E,29,N],[12,"ifa_addr",E,E,29,N],[12,"ifa_netmask",E,E,29,N],[12,"ifa_ifu",E,E,29,N],[12,"ifa_data",E,E,29,N],[3,R[458],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,30,N],[12,"arp_ha",E,E,30,N],[12,R[423],E,E,30,N],[12,R[424],E,E,30,N],[12,"arp_dev",E,E,30,N],[3,R[459],E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[423],E,E,31,N],[12,R[424],E,E,31,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,32,N],[12,"ar_pro",E,E,32,N],[12,"ar_hln",E,E,32,N],[12,"ar_pln",E,E,32,N],[12,"ar_op",E,E,32,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,33,N],[12,"msg_len",E,E,33,N],[3,R[460],E,E,N,N],[12,"events",E,E,34,N],[12,"u64",E,E,34,N],[3,R[461],E,E,N,N],[12,"sun_family",E,E,35,N],[12,"sun_path",E,E,35,N],[3,R[462],E,E,N,N],[12,"ss_family",E,E,36,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,37,N],[12,"nodename",E,E,37,N],[12,"release",E,E,37,N],[12,"version",E,E,37,N],[12,"machine",E,E,37,N],[12,"domainname",E,E,37,N],[3,R[517],E,E,N,N],[12,"sigev_value",E,E,38,N],[12,"sigev_signo",E,E,38,N],[12,"sigev_notify",E,E,38,N],[12,"sigev_notify_thread_id",E,E,38,N],[3,R[518],E,E,N,N],[12,"rlim_cur",E,E,39,N],[12,"rlim_max",E,E,39,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,40,N],[12,"gl_pathv",E,E,40,N],[12,"gl_offs",E,E,40,N],[12,"gl_flags",E,E,40,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,41,N],[12,"pw_passwd",E,E,41,N],[12,"pw_uid",E,E,41,N],[12,"pw_gid",E,E,41,N],[12,"pw_gecos",E,E,41,N],[12,"pw_dir",E,E,41,N],[12,"pw_shell",E,E,41,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,42,N],[12,"sp_pwdp",E,E,42,N],[12,"sp_lstchg",E,E,42,N],[12,"sp_min",E,E,42,N],[12,"sp_max",E,E,42,N],[12,"sp_warn",E,E,42,N],[12,"sp_inact",E,E,42,N],[12,"sp_expire",E,E,42,N],[12,"sp_flag",E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[463],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,R[1295],E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[12,R[1296],E,E,44,N],[12,R[1297],E,E,44,N],[12,R[1298],E,E,44,N],[12,"ssi_arch",E,E,44,N],[3,R[464],E,E,N,N],[12,R[425],E,E,45,N],[12,"it_value",E,E,45,N],[3,"fsid_t",E,E,N,N],[3,R[465],E,E,N,N],[12,"mr_ifindex",E,E,46,N],[12,"mr_type",E,E,46,N],[12,"mr_alen",E,E,46,N],[12,"mr_address",E,E,46,N],[3,R[447],E,E,N,N],[3,R[450],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,49,N],[12,"sem_op",E,E,49,N],[12,"sem_flg",E,E,49,N],[3,R[466],E,E,N,N],[12,"time",E,E,50,N],[12,"type_",E,E,50,N],[12,"code",E,E,50,N],[12,"value",E,E,50,N],[3,R[519],E,E,N,N],[12,"bustype",E,E,51,N],[12,"vendor",E,E,51,N],[12,"product",E,E,51,N],[12,"version",E,E,51,N],[3,R[467],E,E,N,N],[12,"value",E,E,52,N],[12,"minimum",E,E,52,N],[12,"maximum",E,E,52,N],[12,"fuzz",E,E,52,N],[12,"flat",E,E,52,N],[12,"resolution",E,E,52,N],[3,R[468],E,E,N,N],[12,"flags",E,E,53,N],[12,"len",E,E,53,N],[12,"index",E,E,53,N],[12,"keycode",E,E,53,N],[12,"scancode",E,E,53,N],[3,R[469],E,E,N,N],[12,"type_",E,E,54,N],[12,"codes_size",E,E,54,N],[12,"codes_ptr",E,E,54,N],[3,R[470],E,E,N,N],[12,"length",E,E,55,N],[12,"delay",E,E,55,N],[3,R[471],E,E,N,N],[12,"button",E,E,56,N],[12,R[3386],E,E,56,N],[3,R[472],E,E,N,N],[12,"attack_length",E,E,57,N],[12,"attack_level",E,E,57,N],[12,"fade_length",E,E,57,N],[12,"fade_level",E,E,57,N],[3,R[473],E,E,N,N],[12,"level",E,E,58,N],[12,R[426],E,E,58,N],[3,R[474],E,E,N,N],[12,"start_level",E,E,59,N],[12,"end_level",E,E,59,N],[12,R[426],E,E,59,N],[3,R[475],E,E,N,N],[12,"right_saturation",E,E,60,N],[12,"left_saturation",E,E,60,N],[12,"right_coeff",E,E,60,N],[12,"left_coeff",E,E,60,N],[12,"deadband",E,E,60,N],[12,"center",E,E,60,N],[3,R[476],E,E,N,N],[12,"waveform",E,E,61,N],[12,"period",E,E,61,N],[12,R[2723],E,E,61,N],[12,"offset",E,E,61,N],[12,"phase",E,E,61,N],[12,R[426],E,E,61,N],[12,"custom_len",E,E,61,N],[12,"custom_data",E,E,61,N],[3,R[477],E,E,N,N],[12,"strong_magnitude",E,E,62,N],[12,"weak_magnitude",E,E,62,N],[3,R[478],E,E,N,N],[12,"type_",E,E,63,N],[12,"id",E,E,63,N],[12,R[2299],E,E,63,N],[12,"trigger",E,E,63,N],[12,"replay",E,E,63,N],[12,U,E,E,63,N],[3,R[479],E,E,N,N],[12,"dlpi_addr",E,E,64,N],[12,"dlpi_name",E,E,64,N],[12,"dlpi_phdr",E,E,64,N],[12,"dlpi_phnum",E,E,64,N],[12,"dlpi_adds",E,E,64,N],[12,"dlpi_subs",E,E,64,N],[12,"dlpi_tls_modid",E,E,64,N],[12,"dlpi_tls_data",E,E,64,N],[3,R[520],E,E,N,N],[12,"e_ident",E,E,65,N],[12,"e_type",E,E,65,N],[12,R[427],E,E,65,N],[12,R[428],E,E,65,N],[12,"e_entry",E,E,65,N],[12,"e_phoff",E,E,65,N],[12,"e_shoff",E,E,65,N],[12,"e_flags",E,E,65,N],[12,"e_ehsize",E,E,65,N],[12,R[429],E,E,65,N],[12,"e_phnum",E,E,65,N],[12,R[430],E,E,65,N],[12,"e_shnum",E,E,65,N],[12,R[431],E,E,65,N],[3,R[521],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[427],E,E,66,N],[12,R[428],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[429],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[430],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[431],E,E,66,N],[3,R[522],E,E,N,N],[12,"st_name",E,E,67,N],[12,"st_value",E,E,67,N],[12,"st_size",E,E,67,N],[12,"st_info",E,E,67,N],[12,"st_other",E,E,67,N],[12,"st_shndx",E,E,67,N],[3,R[523],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[3,R[524],E,E,N,N],[12,"p_type",E,E,69,N],[12,"p_offset",E,E,69,N],[12,"p_vaddr",E,E,69,N],[12,"p_paddr",E,E,69,N],[12,"p_filesz",E,E,69,N],[12,"p_memsz",E,E,69,N],[12,"p_flags",E,E,69,N],[12,"p_align",E,E,69,N],[3,R[525],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[526],E,E,N,N],[12,"sh_name",E,E,71,N],[12,"sh_type",E,E,71,N],[12,"sh_flags",E,E,71,N],[12,"sh_addr",E,E,71,N],[12,R[432],E,E,71,N],[12,"sh_size",E,E,71,N],[12,"sh_link",E,E,71,N],[12,"sh_info",E,E,71,N],[12,R[433],E,E,71,N],[12,R[434],E,E,71,N],[3,R[527],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[432],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[433],E,E,72,N],[12,R[434],E,E,72,N],[3,R[528],E,E,N,N],[12,"ch_type",E,E,73,N],[12,"ch_size",E,E,73,N],[12,R[435],E,E,73,N],[3,R[529],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_reserved",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[435],E,E,74,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,75,N],[12,"uid",E,E,75,N],[12,"gid",E,E,75,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,76,N],[12,"mnt_dir",E,E,76,N],[12,"mnt_type",E,E,76,N],[12,"mnt_opts",E,E,76,N],[12,"mnt_freq",E,E,76,N],[12,"mnt_passno",E,E,76,N],[3,R[480],E,E,N,N],[3,R[481],E,E,N,N],[3,R[482],E,E,N,N],[12,"cmd",E,E,77,N],[12,"version",E,E,77,N],[12,"reserved",E,E,77,N],[3,R[483],E,E,N,N],[12,"ipi6_addr",E,E,78,N],[12,"ipi6_ifindex",E,E,78,N],[3,R[484],E,E,N,N],[12,"req",E,E,79,N],[12,"ip",E,E,79,N],[12,"dev",E,E,79,N],[12,"stamp",E,E,79,N],[12,"updated",E,E,79,N],[12,"ha",E,E,79,N],[3,R[485],E,E,N,N],[12,"wd",E,E,80,N],[12,"mask",E,E,80,N],[12,"cookie",E,E,80,N],[12,"len",E,E,80,N],[3,R[486],E,E,N,N],[12,"svm_family",E,E,81,N],[12,"svm_reserved1",E,E,81,N],[12,"svm_port",E,E,81,N],[12,"svm_cid",E,E,81,N],[12,"svm_zero",E,E,81,N],[3,R[487],E,E,N,N],[12,"nl_family",E,E,82,N],[12,"nl_pid",E,E,82,N],[12,"nl_groups",E,E,82,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,83,N],[12,"d_off",E,E,83,N],[12,"d_reclen",E,E,83,N],[12,"d_type",E,E,83,N],[12,"d_name",E,E,83,N],[3,R[530],E,E,N,N],[12,"d_ino",E,E,84,N],[12,"d_off",E,E,84,N],[12,"d_reclen",E,E,84,N],[12,"d_type",E,E,84,N],[12,"d_name",E,E,84,N],[3,R[488],E,E,N,N],[12,"salg_family",E,E,85,N],[12,"salg_type",E,E,85,N],[12,"salg_feat",E,E,85,N],[12,"salg_mask",E,E,85,N],[12,"salg_name",E,E,85,N],[3,R[489],E,E,N,N],[12,"ivlen",E,E,86,N],[12,"iv",E,E,86,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,87,N],[12,"mq_maxmsg",E,E,87,N],[12,"mq_msgsize",E,E,87,N],[12,"mq_curmsgs",E,E,87,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,88,N],[12,"stx_blksize",E,E,88,N],[12,"stx_attributes",E,E,88,N],[12,"stx_nlink",E,E,88,N],[12,"stx_uid",E,E,88,N],[12,"stx_gid",E,E,88,N],[12,"stx_mode",E,E,88,N],[12,"__statx_pad1",E,E,88,N],[12,"stx_ino",E,E,88,N],[12,"stx_size",E,E,88,N],[12,"stx_blocks",E,E,88,N],[12,"stx_attributes_mask",E,E,88,N],[12,"stx_atime",E,E,88,N],[12,"stx_btime",E,E,88,N],[12,"stx_ctime",E,E,88,N],[12,"stx_mtime",E,E,88,N],[12,"stx_rdev_major",E,E,88,N],[12,"stx_rdev_minor",E,E,88,N],[12,"stx_dev_major",E,E,88,N],[12,"stx_dev_minor",E,E,88,N],[12,"__statx_pad2",E,E,88,N],[3,R[490],E,E,N,N],[12,"tv_sec",E,E,89,N],[12,"tv_nsec",E,E,89,N],[12,"__statx_timestamp_pad1",E,E,89,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,90,N],[12,"aio_lio_opcode",E,E,90,N],[12,"aio_reqprio",E,E,90,N],[12,"aio_buf",E,E,90,N],[12,"aio_nbytes",E,E,90,N],[12,"aio_sigevent",E,E,90,N],[12,"aio_offset",E,E,90,N],[3,R[491],E,E,N,N],[12,"e_termination",E,E,91,N],[12,"e_exit",E,E,91,N],[3,R[492],E,E,N,N],[12,"tv_sec",E,E,92,N],[12,"tv_usec",E,E,92,N],[3,R[531],E,E,N,N],[12,"gl_pathc",E,E,93,N],[12,"gl_pathv",E,E,93,N],[12,"gl_offs",E,E,93,N],[12,"gl_flags",E,E,93,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,94,N],[12,R[1303],E,E,94,N],[12,"msg_iov",E,E,94,N],[12,"msg_iovlen",E,E,94,N],[12,R[1304],E,E,94,N],[12,R[1305],E,E,94,N],[12,"msg_flags",E,E,94,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,95,N],[12,"cmsg_level",E,E,95,N],[12,"cmsg_type",E,E,95,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,96,N],[12,"c_oflag",E,E,96,N],[12,"c_cflag",E,E,96,N],[12,"c_lflag",E,E,96,N],[12,"c_line",E,E,96,N],[12,"c_cc",E,E,96,N],[12,"c_ispeed",E,E,96,N],[12,"c_ospeed",E,E,96,N],[3,R[493],E,E,N,N],[12,"arena",E,E,97,N],[12,"ordblks",E,E,97,N],[12,"smblks",E,E,97,N],[12,"hblks",E,E,97,N],[12,"hblkhd",E,E,97,N],[12,"usmblks",E,E,97,N],[12,"fsmblks",E,E,97,N],[12,"uordblks",E,E,97,N],[12,"fordblks",E,E,97,N],[12,"keepcost",E,E,97,N],[3,R[532],E,E,N,N],[12,"nlmsg_len",E,E,98,N],[12,"nlmsg_type",E,E,98,N],[12,"nlmsg_flags",E,E,98,N],[12,"nlmsg_seq",E,E,98,N],[12,"nlmsg_pid",E,E,98,N],[3,R[533],E,E,N,N],[12,"error",E,E,99,N],[12,"msg",E,E,99,N],[3,R[494],E,E,N,N],[12,"group",E,E,100,N],[3,R[495],E,E,N,N],[12,"nm_block_size",E,E,101,N],[12,"nm_block_nr",E,E,101,N],[12,"nm_frame_size",E,E,101,N],[12,"nm_frame_nr",E,E,101,N],[3,R[496],E,E,N,N],[12,"nm_status",E,E,102,N],[12,"nm_len",E,E,102,N],[12,"nm_group",E,E,102,N],[12,"nm_pid",E,E,102,N],[12,"nm_uid",E,E,102,N],[12,"nm_gid",E,E,102,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,103,N],[12,"nla_type",E,E,103,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,104,N],[12,"rt_dst",E,E,104,N],[12,"rt_gateway",E,E,104,N],[12,"rt_genmask",E,E,104,N],[12,"rt_flags",E,E,104,N],[12,"rt_pad2",E,E,104,N],[12,"rt_pad3",E,E,104,N],[12,"rt_tos",E,E,104,N],[12,"rt_class",E,E,104,N],[12,"rt_pad4",E,E,104,N],[12,"rt_metric",E,E,104,N],[12,"rt_dev",E,E,104,N],[12,"rt_mtu",E,E,104,N],[12,"rt_window",E,E,104,N],[12,"rt_irtt",E,E,104,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,105,N],[12,"ut_pid",E,E,105,N],[12,"ut_line",E,E,105,N],[12,"ut_id",E,E,105,N],[12,"ut_user",E,E,105,N],[12,"ut_host",E,E,105,N],[12,"ut_exit",E,E,105,N],[12,"ut_session",E,E,105,N],[12,"ut_tv",E,E,105,N],[12,"ut_addr_v6",E,E,105,N],[3,R[539],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,106,N],[12,"loads",E,E,106,N],[12,"totalram",E,E,106,N],[12,"freeram",E,E,106,N],[12,"sharedram",E,E,106,N],[12,"bufferram",E,E,106,N],[12,"totalswap",E,E,106,N],[12,"freeswap",E,E,106,N],[12,"procs",E,E,106,N],[12,"pad",E,E,106,N],[12,"totalhigh",E,E,106,N],[12,"freehigh",E,E,106,N],[12,"mem_unit",E,E,106,N],[12,"_f",E,E,106,N],[3,R[534],E,E,N,N],[12,"msg_perm",E,E,107,N],[12,"msg_stime",E,E,107,N],[12,"msg_rtime",E,E,107,N],[12,"msg_ctime",E,E,107,N],[12,"msg_qnum",E,E,107,N],[12,"msg_qbytes",E,E,107,N],[12,"msg_lspid",E,E,107,N],[12,"msg_lrpid",E,E,107,N],[3,R[448],E,E,N,N],[12,"sa_sigaction",E,E,108,N],[12,"sa_mask",E,E,108,N],[12,"sa_flags",E,E,108,N],[12,"sa_restorer",E,E,108,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,109,N],[12,"f_bsize",E,E,109,N],[12,R[443],E,E,109,N],[12,"f_bfree",E,E,109,N],[12,R[444],E,E,109,N],[12,"f_files",E,E,109,N],[12,"f_ffree",E,E,109,N],[12,"f_fsid",E,E,109,N],[12,R[441],E,E,109,N],[12,R[442],E,E,109,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,110,N],[12,"l_whence",E,E,110,N],[12,"l_start",E,E,110,N],[12,"l_len",E,E,110,N],[12,"l_pid",E,E,110,N],[3,R[497],E,E,N,N],[12,"si_signo",E,E,111,N],[12,"si_errno",E,E,111,N],[12,"si_code",E,E,111,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,112,N],[12,"ss_flags",E,E,112,N],[12,"ss_size",E,E,112,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,113,N],[12,"st_ino",E,E,113,N],[12,"st_nlink",E,E,113,N],[12,"st_mode",E,E,113,N],[12,"st_uid",E,E,113,N],[12,"st_gid",E,E,113,N],[12,"st_rdev",E,E,113,N],[12,"st_size",E,E,113,N],[12,R[436],E,E,113,N],[12,R[437],E,E,113,N],[12,"st_atime",E,E,113,N],[12,R[438],E,E,113,N],[12,"st_mtime",E,E,113,N],[12,R[439],E,E,113,N],[12,"st_ctime",E,E,113,N],[12,R[440],E,E,113,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,114,N],[12,"st_ino",E,E,114,N],[12,"st_nlink",E,E,114,N],[12,"st_mode",E,E,114,N],[12,"st_uid",E,E,114,N],[12,"st_gid",E,E,114,N],[12,"st_rdev",E,E,114,N],[12,"st_size",E,E,114,N],[12,R[436],E,E,114,N],[12,R[437],E,E,114,N],[12,"st_atime",E,E,114,N],[12,R[438],E,E,114,N],[12,"st_mtime",E,E,114,N],[12,R[439],E,E,114,N],[12,"st_ctime",E,E,114,N],[12,R[440],E,E,114,N],[3,R[498],E,E,N,N],[12,"f_type",E,E,115,N],[12,"f_bsize",E,E,115,N],[12,R[443],E,E,115,N],[12,"f_bfree",E,E,115,N],[12,R[444],E,E,115,N],[12,"f_files",E,E,115,N],[12,"f_ffree",E,E,115,N],[12,"f_fsid",E,E,115,N],[12,R[441],E,E,115,N],[12,R[442],E,E,115,N],[12,"f_flags",E,E,115,N],[12,"f_spare",E,E,115,N],[3,R[449],E,E,N,N],[12,"f_bsize",E,E,116,N],[12,R[442],E,E,116,N],[12,R[443],E,E,116,N],[12,"f_bfree",E,E,116,N],[12,R[444],E,E,116,N],[12,"f_files",E,E,116,N],[12,"f_ffree",E,E,116,N],[12,"f_favail",E,E,116,N],[12,"f_fsid",E,E,116,N],[12,"f_flag",E,E,116,N],[12,R[446],E,E,116,N],[3,R[499],E,E,N,N],[3,R[500],E,E,N,N],[12,"significand",E,E,117,N],[12,"exponent",E,E,117,N],[3,R[501],E,E,N,N],[12,"element",E,E,118,N],[3,R[502],E,E,N,N],[12,"cwd",E,E,119,N],[12,"swd",E,E,119,N],[12,"ftw",E,E,119,N],[12,"fop",E,E,119,N],[12,"rip",E,E,119,N],[12,"rdp",E,E,119,N],[12,"mxcsr",E,E,119,N],[12,R[445],E,E,119,N],[12,"_st",E,E,119,N],[12,"_xmm",E,E,119,N],[3,R[503],E,E,N,N],[12,"r15",E,E,120,N],[12,"r14",E,E,120,N],[12,"r13",E,E,120,N],[12,"r12",E,E,120,N],[12,"rbp",E,E,120,N],[12,"rbx",E,E,120,N],[12,"r11",E,E,120,N],[12,"r10",E,E,120,N],[12,"r9",E,E,120,N],[12,"r8",E,E,120,N],[12,"rax",E,E,120,N],[12,"rcx",E,E,120,N],[12,"rdx",E,E,120,N],[12,"rsi",E,E,120,N],[12,"rdi",E,E,120,N],[12,"orig_rax",E,E,120,N],[12,"rip",E,E,120,N],[12,"cs",E,E,120,N],[12,"eflags",E,E,120,N],[12,"rsp",E,E,120,N],[12,"ss",E,E,120,N],[12,"fs_base",E,E,120,N],[12,"gs_base",E,E,120,N],[12,"ds",E,E,120,N],[12,"es",E,E,120,N],[12,"fs",E,E,120,N],[12,"gs",E,E,120,N],[3,"user",E,E,N,N],[12,"regs",E,E,121,N],[12,"u_fpvalid",E,E,121,N],[12,"i387",E,E,121,N],[12,"u_tsize",E,E,121,N],[12,"u_dsize",E,E,121,N],[12,"u_ssize",E,E,121,N],[12,"start_code",E,E,121,N],[12,"start_stack",E,E,121,N],[12,"signal",E,E,121,N],[12,"u_ar0",E,E,121,N],[12,"u_fpstate",E,E,121,N],[12,"magic",E,E,121,N],[12,"u_comm",E,E,121,N],[12,"u_debugreg",E,E,121,N],[3,R[504],E,E,N,N],[12,"gregs",E,E,122,N],[12,"fpregs",E,E,122,N],[3,R[535],E,E,N,N],[12,"__key",E,E,123,N],[12,"uid",E,E,123,N],[12,"gid",E,E,123,N],[12,"cuid",E,E,123,N],[12,"cgid",E,E,123,N],[12,"mode",E,E,123,N],[12,"__seq",E,E,123,N],[3,R[536],E,E,N,N],[12,"shm_perm",E,E,124,N],[12,"shm_segsz",E,E,124,N],[12,"shm_atime",E,E,124,N],[12,"shm_dtime",E,E,124,N],[12,"shm_ctime",E,E,124,N],[12,"shm_cpid",E,E,124,N],[12,"shm_lpid",E,E,124,N],[12,"shm_nattch",E,E,124,N],[3,R[537],E,E,N,N],[12,"c_iflag",E,E,125,N],[12,"c_oflag",E,E,125,N],[12,"c_cflag",E,E,125,N],[12,"c_lflag",E,E,125,N],[12,"c_line",E,E,125,N],[12,"c_cc",E,E,125,N],[12,"c_ispeed",E,E,125,N],[12,"c_ospeed",E,E,125,N],[3,R[505],E,E,N,N],[12,"cwd",E,E,126,N],[12,"swd",E,E,126,N],[12,"ftw",E,E,126,N],[12,"fop",E,E,126,N],[12,"rip",E,E,126,N],[12,"rdp",E,E,126,N],[12,"mxcsr",E,E,126,N],[12,R[445],E,E,126,N],[12,"st_space",E,E,126,N],[12,"xmm_space",E,E,126,N],[3,R[506],E,E,N,N],[12,"uc_flags",E,E,127,N],[12,"uc_link",E,E,127,N],[12,"uc_stack",E,E,127,N],[12,"uc_mcontext",E,E,127,N],[12,"uc_sigmask",E,E,127,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,128,N],[12,R[442],E,E,128,N],[12,R[443],E,E,128,N],[12,"f_bfree",E,E,128,N],[12,R[444],E,E,128,N],[12,"f_files",E,E,128,N],[12,"f_ffree",E,E,128,N],[12,"f_favail",E,E,128,N],[12,"f_fsid",E,E,128,N],[12,"f_flag",E,E,128,N],[12,R[446],E,E,128,N],[3,"sem_t",E,E,N,N],[3,R[507],E,E,N,N],[3,R[508],E,E,N,N],[3,R[509],E,E,N,N],[3,R[510],E,E,N,N],[3,R[511],E,E,N,N],[3,R[512],E,E,N,N],[3,R[538],E,E,N,N],[12,"s6_addr",E,E,129,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[540],E,E,N,N],[4,R[541],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[447]]]]],[5,"CPU_SET",E,E,N,[[[R[9]],[R[447]]]]],[5,"CPU_CLR",E,E,N,[[[R[9]],[R[447]]]]],[5,"CPU_ISSET",E,E,N,[[[R[447]],[R[9]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[447]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,R[1315],E,E,N,N],[5,R[1316],E,E,N,N],[5,R[1314],E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,R[3116],E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"openat",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pause",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,R[1126],E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,R[2724],E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,R[1225],E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,R[1500],E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,R[1313],E,E,N,N],[5,"raise",E,E,N,N],[5,R[448],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,R[1366],E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,R[1290],E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"getsid",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,R[1340],E,E,N,N],[5,R[1341],E,E,N,N],[5,R[1342],E,E,N,N],[5,R[1343],E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,R[1344],E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,R[1142],E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[498],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[449],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,R[1172],E,E,N,N],[5,R[1169],E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,R[1302],E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_timedreceive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_timedsend",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,R[1352],E,E,N,N],[5,R[1351],E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[450],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,R[1146],E,E,N,N],[5,R[1173],E,E,N,N],[5,R[1174],E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,R[1365],E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,R[1289],E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,R[1369],E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,"getrandom",E,E,N,N],[5,"ioctl",E,E,N,N],[5,R[2305],E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[493],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,111,[[["self"]]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,R[1306],E,E,N,N],[6,"speed_t",E,E,N,N],[6,R[1347],E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,R[1337],E,E,N,N],[6,R[1338],E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,R[1350],E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,R[1125],E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,R[1063],E,E,N,N],[17,R[1067],E,E,N,N],[17,R[1066],E,E,N,N],[17,R[1064],E,E,N,N],[17,R[1065],E,E,N,N],[17,R[1088],E,E,N,N],[17,R[1089],E,E,N,N],[17,R[1090],E,E,N,N],[17,R[1091],E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,R[1320],E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,R[1211],E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,R[1222],E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,R[1113],E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,R[1114],E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,R[1115],E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,R[1116],E,E,N,N],[17,R[1117],E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,R[1118],E,E,N,N],[17,R[1119],E,E,N,N],[17,R[1120],E,E,N,N],[17,R[1121],E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,R[1061],E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,R[1208],E,E,N,N],[17,R[1209],E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,R[1192],E,E,N,N],[17,R[1193],E,E,N,N],[17,R[1194],E,E,N,N],[17,R[1195],E,E,N,N],[17,R[1196],E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,R[1197],E,E,N,N],[17,R[1198],E,E,N,N],[17,R[1199],E,E,N,N],[17,R[1201],E,E,N,N],[17,R[1202],E,E,N,N],[17,R[1204],E,E,N,N],[17,R[1205],E,E,N,N],[17,R[1206],E,E,N,N],[17,R[1207],E,E,N,N],[17,R[1200],E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,R[1127],E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,R[1128],E,E,N,N],[17,R[1129],E,E,N,N],[17,R[1130],E,E,N,N],[17,R[1131],E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,R[1132],E,E,N,N],[17,R[1133],E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,R[1134],E,E,N,N],[17,R[1135],E,E,N,N],[17,R[1136],E,E,N,N],[17,R[1137],E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,R[1322],E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,R[1323],E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,R[1324],E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,R[1175],E,E,N,N],[17,R[1176],E,E,N,N],[17,R[1177],E,E,N,N],[17,R[1178],E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,R[1277],E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,R[1278],E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,R[1148],E,E,N,N],[17,R[1149],E,E,N,N],[17,R[1150],E,E,N,N],[17,R[1151],E,E,N,N],[17,R[1152],E,E,N,N],[17,R[1153],E,E,N,N],[17,R[1154],E,E,N,N],[17,R[1155],E,E,N,N],[17,R[1156],E,E,N,N],[17,R[1157],E,E,N,N],[17,R[1158],E,E,N,N],[17,R[1159],E,E,N,N],[17,R[1160],E,E,N,N],[17,R[1161],E,E,N,N],[17,R[1163],E,E,N,N],[17,R[1164],E,E,N,N],[17,R[1165],E,E,N,N],[17,R[1166],E,E,N,N],[17,R[1167],E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,R[1162],E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,R[1264],E,E,N,N],[17,R[1265],E,E,N,N],[17,R[1266],E,E,N,N],[17,R[1267],E,E,N,N],[17,R[1268],E,E,N,N],[17,R[1269],E,E,N,N],[17,R[1270],E,E,N,N],[17,R[1271],E,E,N,N],[17,R[1272],E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,R[1256],E,E,N,N],[17,R[1257],E,E,N,N],[17,R[1258],E,E,N,N],[17,R[1259],E,E,N,N],[17,R[1260],E,E,N,N],[17,R[1261],E,E,N,N],[17,R[1262],E,E,N,N],[17,R[1356],E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,R[1095],E,E,N,N],[17,R[1096],E,E,N,N],[17,R[1097],E,E,N,N],[17,R[1098],E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,R[1069],E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,R[1070],E,E,N,N],[17,R[1071],E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,R[1138],E,E,N,N],[17,R[1139],E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,R[1331],E,E,N,N],[17,R[1332],E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,R[1333],E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,R[1334],E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,R[1179],E,E,N,N],[17,R[1181],E,E,N,N],[17,R[1273],E,E,N,N],[17,R[1274],E,E,N,N],[17,R[1275],E,E,N,N],[17,R[1187],E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,R[1282],E,E,N,N],[17,R[1280],E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,R[1281],E,E,N,N],[17,R[1283],E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,R[1339],E,E,N,N],[17,R[1099],E,E,N,N],[17,R[1100],E,E,N,N],[17,R[1101],E,E,N,N],[17,R[1102],E,E,N,N],[17,R[1103],E,E,N,N],[17,R[1104],E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,R[1189],E,E,N,N],[17,R[1190],E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_NEWLINK",E,E,N,N],[17,"RTM_DELLINK",E,E,N,N],[17,"RTM_GETLINK",E,E,N,N],[17,"RTM_SETLINK",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_GETADDR",E,E,N,N],[17,"RTM_NEWROUTE",E,E,N,N],[17,"RTM_DELROUTE",E,E,N,N],[17,"RTM_GETROUTE",E,E,N,N],[17,"RTM_NEWNEIGH",E,E,N,N],[17,"RTM_DELNEIGH",E,E,N,N],[17,"RTM_GETNEIGH",E,E,N,N],[17,"RTM_NEWRULE",E,E,N,N],[17,"RTM_DELRULE",E,E,N,N],[17,"RTM_GETRULE",E,E,N,N],[17,"RTM_NEWQDISC",E,E,N,N],[17,"RTM_DELQDISC",E,E,N,N],[17,"RTM_GETQDISC",E,E,N,N],[17,"RTM_NEWTCLASS",E,E,N,N],[17,"RTM_DELTCLASS",E,E,N,N],[17,"RTM_GETTCLASS",E,E,N,N],[17,"RTM_NEWTFILTER",E,E,N,N],[17,"RTM_DELTFILTER",E,E,N,N],[17,"RTM_GETTFILTER",E,E,N,N],[17,"RTM_NEWACTION",E,E,N,N],[17,"RTM_DELACTION",E,E,N,N],[17,"RTM_GETACTION",E,E,N,N],[17,"RTM_NEWPREFIX",E,E,N,N],[17,"RTM_GETMULTICAST",E,E,N,N],[17,"RTM_GETANYCAST",E,E,N,N],[17,"RTM_NEWNEIGHTBL",E,E,N,N],[17,"RTM_GETNEIGHTBL",E,E,N,N],[17,"RTM_SETNEIGHTBL",E,E,N,N],[17,"RTM_NEWNDUSEROPT",E,E,N,N],[17,"RTM_NEWADDRLABEL",E,E,N,N],[17,"RTM_DELADDRLABEL",E,E,N,N],[17,"RTM_GETADDRLABEL",E,E,N,N],[17,"RTM_GETDCB",E,E,N,N],[17,"RTM_SETDCB",E,E,N,N],[17,"RTM_NEWNETCONF",E,E,N,N],[17,"RTM_GETNETCONF",E,E,N,N],[17,"RTM_NEWMDB",E,E,N,N],[17,"RTM_DELMDB",E,E,N,N],[17,"RTM_GETMDB",E,E,N,N],[17,"RTM_NEWNSID",E,E,N,N],[17,"RTM_DELNSID",E,E,N,N],[17,"RTM_GETNSID",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,R[1107],E,E,N,N],[17,R[1108],E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"VMADDR_CID_ANY",E,E,N,N],[17,"VMADDR_CID_HYPERVISOR",E,E,N,N],[17,"VMADDR_CID_RESERVED",E,E,N,N],[17,"VMADDR_CID_HOST",E,E,N,N],[17,"VMADDR_PORT_ANY",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,R[1504],E,E,N,N],[17,R[1505],E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,R[1506],E,E,N,N],[17,R[1507],E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,R[1508],E,E,N,N],[17,R[1509],E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,R[1510],E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,R[1511],E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,R[1512],E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,R[1514],E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,R[1122],E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,R[1319],E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,R[1336],E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,R[1227],E,E,N,N],[17,R[1228],E,E,N,N],[17,R[1229],E,E,N,N],[17,R[1230],E,E,N,N],[17,R[1231],E,E,N,N],[17,R[1232],E,E,N,N],[17,R[1233],E,E,N,N],[17,R[1234],E,E,N,N],[17,R[1235],E,E,N,N],[17,R[1236],E,E,N,N],[17,R[1241],E,E,N,N],[17,R[1245],E,E,N,N],[17,R[1246],E,E,N,N],[17,R[1247],E,E,N,N],[17,R[1248],E,E,N,N],[17,R[1249],E,E,N,N],[17,R[1250],E,E,N,N],[17,R[1251],E,E,N,N],[17,R[1252],E,E,N,N],[17,R[1253],E,E,N,N],[17,R[1254],E,E,N,N],[17,R[1255],E,E,N,N],[17,R[1180],E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_DELNETCONF",E,E,N,N],[17,"RTM_NEWSTATS",E,E,N,N],[17,"RTM_GETSTATS",E,E,N,N],[17,"RTM_NEWCACHEREPORT",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,R[1361],E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,R[1073],E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,R[1111],E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,R[1203],E,E,N,N],[17,R[1213],E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,R[1042],E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,R[1043],E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,R[1044],E,E,N,N],[17,R[1045],E,E,N,N],[17,R[1046],E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,R[1047],E,E,N,N],[17,R[1048],E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,R[1049],E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,R[1050],E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,R[1051],E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,R[1052],E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,R[1053],E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,R[1054],E,E,N,N],[17,"EALREADY",E,E,N,N],[17,R[1055],E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,R[1056],E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,R[1057],E,E,N,N],[17,R[1058],E,E,N,N],[17,R[1059],E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,R[1060],E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,R[1292],E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,R[1285],E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,R[1284],E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,R[1242],E,E,N,N],[17,R[1186],E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,R[1299],E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,R[1300],E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,R[1293],E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,R[1291],E,E,N,N],[17,R[1183],E,E,N,N],[17,R[1185],E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,R[1072],E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,R[1220],E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,R[1217],E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,R[1212],E,E,N,N],[17,R[1214],E,E,N,N],[17,R[1216],E,E,N,N],[17,R[1218],E,E,N,N],[17,R[1219],E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,R[1239],E,E,N,N],[17,R[1240],E,E,N,N],[17,R[1243],E,E,N,N],[17,R[1244],E,E,N,N],[17,R[1237],E,E,N,N],[17,R[1238],E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,R[1223],E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,"from",E,E,130,[[[T]],[T]]],[11,R[12],E,E,130,[[[U]],[R[13]]]],[11,"into",E,E,130,[[],[U]]],[11,R[14],E,E,130,[[],[R[13]]]],[11,R[41],E,E,130,[[["self"]],[T]]],[11,R[15],E,E,130,[[["self"]],[T]]],[11,R[19],E,E,130,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,"into",E,E,7,[[],[U]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,"into",E,E,8,[[],[U]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,"into",E,E,9,[[],[U]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,"into",E,E,10,[[],[U]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,"into",E,E,11,[[],[U]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,"into",E,E,12,[[],[U]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,"into",E,E,13,[[],[U]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,"into",E,E,14,[[],[U]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,"into",E,E,15,[[],[U]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,"into",E,E,16,[[],[U]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,"into",E,E,17,[[],[U]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,"into",E,E,18,[[],[U]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,"into",E,E,19,[[],[U]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,"into",E,E,20,[[],[U]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,"into",E,E,21,[[],[U]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,"into",E,E,22,[[],[U]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,"into",E,E,23,[[],[U]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[12],E,E,131,[[[U]],[R[13]]]],[11,"into",E,E,131,[[],[U]]],[11,R[14],E,E,131,[[],[R[13]]]],[11,R[41],E,E,131,[[["self"]],[T]]],[11,R[15],E,E,131,[[["self"]],[T]]],[11,R[19],E,E,131,[[["self"]],[R[42]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,"into",E,E,24,[[],[U]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,"into",E,E,25,[[],[U]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,"into",E,E,26,[[],[U]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,"into",E,E,27,[[],[U]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,"into",E,E,28,[[],[U]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,"into",E,E,29,[[],[U]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[12],E,E,132,[[[U]],[R[13]]]],[11,"into",E,E,132,[[],[U]]],[11,R[14],E,E,132,[[],[R[13]]]],[11,R[41],E,E,132,[[["self"]],[T]]],[11,R[15],E,E,132,[[["self"]],[T]]],[11,R[19],E,E,132,[[["self"]],[R[42]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,"into",E,E,30,[[],[U]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,"into",E,E,31,[[],[U]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,"into",E,E,32,[[],[U]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,"into",E,E,33,[[],[U]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,"into",E,E,34,[[],[U]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,"into",E,E,35,[[],[U]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,"into",E,E,36,[[],[U]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,"into",E,E,37,[[],[U]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,"into",E,E,38,[[],[U]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,"into",E,E,39,[[],[U]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,"into",E,E,40,[[],[U]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,"into",E,E,41,[[],[U]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,"into",E,E,42,[[],[U]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,"into",E,E,43,[[],[U]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,"into",E,E,44,[[],[U]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,"into",E,E,45,[[],[U]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[12],E,E,133,[[[U]],[R[13]]]],[11,"into",E,E,133,[[],[U]]],[11,R[14],E,E,133,[[],[R[13]]]],[11,R[41],E,E,133,[[["self"]],[T]]],[11,R[15],E,E,133,[[["self"]],[T]]],[11,R[19],E,E,133,[[["self"]],[R[42]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,"into",E,E,46,[[],[U]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[12],E,E,134,[[[U]],[R[13]]]],[11,"into",E,E,134,[[],[U]]],[11,R[14],E,E,134,[[],[R[13]]]],[11,R[41],E,E,134,[[["self"]],[T]]],[11,R[15],E,E,134,[[["self"]],[T]]],[11,R[19],E,E,134,[[["self"]],[R[42]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,"into",E,E,47,[[],[U]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,"into",E,E,48,[[],[U]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[12],E,E,49,[[[U]],[R[13]]]],[11,"into",E,E,49,[[],[U]]],[11,R[14],E,E,49,[[],[R[13]]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[R[42]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[12],E,E,50,[[[U]],[R[13]]]],[11,"into",E,E,50,[[],[U]]],[11,R[14],E,E,50,[[],[R[13]]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[R[42]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[12],E,E,51,[[[U]],[R[13]]]],[11,"into",E,E,51,[[],[U]]],[11,R[14],E,E,51,[[],[R[13]]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[["self"]],[R[42]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[12],E,E,52,[[[U]],[R[13]]]],[11,"into",E,E,52,[[],[U]]],[11,R[14],E,E,52,[[],[R[13]]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[["self"]],[R[42]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[12],E,E,53,[[[U]],[R[13]]]],[11,"into",E,E,53,[[],[U]]],[11,R[14],E,E,53,[[],[R[13]]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[R[42]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[12],E,E,54,[[[U]],[R[13]]]],[11,"into",E,E,54,[[],[U]]],[11,R[14],E,E,54,[[],[R[13]]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[R[42]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[12],E,E,55,[[[U]],[R[13]]]],[11,"into",E,E,55,[[],[U]]],[11,R[14],E,E,55,[[],[R[13]]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[R[42]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[12],E,E,56,[[[U]],[R[13]]]],[11,"into",E,E,56,[[],[U]]],[11,R[14],E,E,56,[[],[R[13]]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[R[42]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[12],E,E,57,[[[U]],[R[13]]]],[11,"into",E,E,57,[[],[U]]],[11,R[14],E,E,57,[[],[R[13]]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[15],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[R[42]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[12],E,E,58,[[[U]],[R[13]]]],[11,"into",E,E,58,[[],[U]]],[11,R[14],E,E,58,[[],[R[13]]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[15],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[R[42]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[12],E,E,59,[[[U]],[R[13]]]],[11,"into",E,E,59,[[],[U]]],[11,R[14],E,E,59,[[],[R[13]]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[15],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[R[42]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[12],E,E,60,[[[U]],[R[13]]]],[11,"into",E,E,60,[[],[U]]],[11,R[14],E,E,60,[[],[R[13]]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[15],E,E,60,[[["self"]],[T]]],[11,R[19],E,E,60,[[["self"]],[R[42]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[12],E,E,61,[[[U]],[R[13]]]],[11,"into",E,E,61,[[],[U]]],[11,R[14],E,E,61,[[],[R[13]]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[15],E,E,61,[[["self"]],[T]]],[11,R[19],E,E,61,[[["self"]],[R[42]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[12],E,E,62,[[[U]],[R[13]]]],[11,"into",E,E,62,[[],[U]]],[11,R[14],E,E,62,[[],[R[13]]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[15],E,E,62,[[["self"]],[T]]],[11,R[19],E,E,62,[[["self"]],[R[42]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[12],E,E,63,[[[U]],[R[13]]]],[11,"into",E,E,63,[[],[U]]],[11,R[14],E,E,63,[[],[R[13]]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[15],E,E,63,[[["self"]],[T]]],[11,R[19],E,E,63,[[["self"]],[R[42]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[12],E,E,64,[[[U]],[R[13]]]],[11,"into",E,E,64,[[],[U]]],[11,R[14],E,E,64,[[],[R[13]]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[15],E,E,64,[[["self"]],[T]]],[11,R[19],E,E,64,[[["self"]],[R[42]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[12],E,E,65,[[[U]],[R[13]]]],[11,"into",E,E,65,[[],[U]]],[11,R[14],E,E,65,[[],[R[13]]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[15],E,E,65,[[["self"]],[T]]],[11,R[19],E,E,65,[[["self"]],[R[42]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[12],E,E,66,[[[U]],[R[13]]]],[11,"into",E,E,66,[[],[U]]],[11,R[14],E,E,66,[[],[R[13]]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[15],E,E,66,[[["self"]],[T]]],[11,R[19],E,E,66,[[["self"]],[R[42]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[12],E,E,67,[[[U]],[R[13]]]],[11,"into",E,E,67,[[],[U]]],[11,R[14],E,E,67,[[],[R[13]]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[15],E,E,67,[[["self"]],[T]]],[11,R[19],E,E,67,[[["self"]],[R[42]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[12],E,E,68,[[[U]],[R[13]]]],[11,"into",E,E,68,[[],[U]]],[11,R[14],E,E,68,[[],[R[13]]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[15],E,E,68,[[["self"]],[T]]],[11,R[19],E,E,68,[[["self"]],[R[42]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[12],E,E,69,[[[U]],[R[13]]]],[11,"into",E,E,69,[[],[U]]],[11,R[14],E,E,69,[[],[R[13]]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[15],E,E,69,[[["self"]],[T]]],[11,R[19],E,E,69,[[["self"]],[R[42]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[12],E,E,70,[[[U]],[R[13]]]],[11,"into",E,E,70,[[],[U]]],[11,R[14],E,E,70,[[],[R[13]]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[15],E,E,70,[[["self"]],[T]]],[11,R[19],E,E,70,[[["self"]],[R[42]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[12],E,E,71,[[[U]],[R[13]]]],[11,"into",E,E,71,[[],[U]]],[11,R[14],E,E,71,[[],[R[13]]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[15],E,E,71,[[["self"]],[T]]],[11,R[19],E,E,71,[[["self"]],[R[42]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[12],E,E,72,[[[U]],[R[13]]]],[11,"into",E,E,72,[[],[U]]],[11,R[14],E,E,72,[[],[R[13]]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[15],E,E,72,[[["self"]],[T]]],[11,R[19],E,E,72,[[["self"]],[R[42]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[12],E,E,73,[[[U]],[R[13]]]],[11,"into",E,E,73,[[],[U]]],[11,R[14],E,E,73,[[],[R[13]]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[15],E,E,73,[[["self"]],[T]]],[11,R[19],E,E,73,[[["self"]],[R[42]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[12],E,E,74,[[[U]],[R[13]]]],[11,"into",E,E,74,[[],[U]]],[11,R[14],E,E,74,[[],[R[13]]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[15],E,E,74,[[["self"]],[T]]],[11,R[19],E,E,74,[[["self"]],[R[42]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[12],E,E,75,[[[U]],[R[13]]]],[11,"into",E,E,75,[[],[U]]],[11,R[14],E,E,75,[[],[R[13]]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[15],E,E,75,[[["self"]],[T]]],[11,R[19],E,E,75,[[["self"]],[R[42]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[12],E,E,76,[[[U]],[R[13]]]],[11,"into",E,E,76,[[],[U]]],[11,R[14],E,E,76,[[],[R[13]]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[15],E,E,76,[[["self"]],[T]]],[11,R[19],E,E,76,[[["self"]],[R[42]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[12],E,E,135,[[[U]],[R[13]]]],[11,"into",E,E,135,[[],[U]]],[11,R[14],E,E,135,[[],[R[13]]]],[11,R[41],E,E,135,[[["self"]],[T]]],[11,R[15],E,E,135,[[["self"]],[T]]],[11,R[19],E,E,135,[[["self"]],[R[42]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[12],E,E,136,[[[U]],[R[13]]]],[11,"into",E,E,136,[[],[U]]],[11,R[14],E,E,136,[[],[R[13]]]],[11,R[41],E,E,136,[[["self"]],[T]]],[11,R[15],E,E,136,[[["self"]],[T]]],[11,R[19],E,E,136,[[["self"]],[R[42]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[12],E,E,77,[[[U]],[R[13]]]],[11,"into",E,E,77,[[],[U]]],[11,R[14],E,E,77,[[],[R[13]]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[15],E,E,77,[[["self"]],[T]]],[11,R[19],E,E,77,[[["self"]],[R[42]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[12],E,E,78,[[[U]],[R[13]]]],[11,"into",E,E,78,[[],[U]]],[11,R[14],E,E,78,[[],[R[13]]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[15],E,E,78,[[["self"]],[T]]],[11,R[19],E,E,78,[[["self"]],[R[42]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[12],E,E,79,[[[U]],[R[13]]]],[11,"into",E,E,79,[[],[U]]],[11,R[14],E,E,79,[[],[R[13]]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[15],E,E,79,[[["self"]],[T]]],[11,R[19],E,E,79,[[["self"]],[R[42]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[12],E,E,80,[[[U]],[R[13]]]],[11,"into",E,E,80,[[],[U]]],[11,R[14],E,E,80,[[],[R[13]]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[15],E,E,80,[[["self"]],[T]]],[11,R[19],E,E,80,[[["self"]],[R[42]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[12],E,E,81,[[[U]],[R[13]]]],[11,"into",E,E,81,[[],[U]]],[11,R[14],E,E,81,[[],[R[13]]]],[11,R[41],E,E,81,[[["self"]],[T]]],[11,R[15],E,E,81,[[["self"]],[T]]],[11,R[19],E,E,81,[[["self"]],[R[42]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[12],E,E,82,[[[U]],[R[13]]]],[11,"into",E,E,82,[[],[U]]],[11,R[14],E,E,82,[[],[R[13]]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[15],E,E,82,[[["self"]],[T]]],[11,R[19],E,E,82,[[["self"]],[R[42]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[12],E,E,83,[[[U]],[R[13]]]],[11,"into",E,E,83,[[],[U]]],[11,R[14],E,E,83,[[],[R[13]]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[15],E,E,83,[[["self"]],[T]]],[11,R[19],E,E,83,[[["self"]],[R[42]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[12],E,E,84,[[[U]],[R[13]]]],[11,"into",E,E,84,[[],[U]]],[11,R[14],E,E,84,[[],[R[13]]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[15],E,E,84,[[["self"]],[T]]],[11,R[19],E,E,84,[[["self"]],[R[42]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[12],E,E,85,[[[U]],[R[13]]]],[11,"into",E,E,85,[[],[U]]],[11,R[14],E,E,85,[[],[R[13]]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[15],E,E,85,[[["self"]],[T]]],[11,R[19],E,E,85,[[["self"]],[R[42]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[12],E,E,86,[[[U]],[R[13]]]],[11,"into",E,E,86,[[],[U]]],[11,R[14],E,E,86,[[],[R[13]]]],[11,R[41],E,E,86,[[["self"]],[T]]],[11,R[15],E,E,86,[[["self"]],[T]]],[11,R[19],E,E,86,[[["self"]],[R[42]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[12],E,E,87,[[[U]],[R[13]]]],[11,"into",E,E,87,[[],[U]]],[11,R[14],E,E,87,[[],[R[13]]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[15],E,E,87,[[["self"]],[T]]],[11,R[19],E,E,87,[[["self"]],[R[42]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[12],E,E,88,[[[U]],[R[13]]]],[11,"into",E,E,88,[[],[U]]],[11,R[14],E,E,88,[[],[R[13]]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[15],E,E,88,[[["self"]],[T]]],[11,R[19],E,E,88,[[["self"]],[R[42]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[12],E,E,89,[[[U]],[R[13]]]],[11,"into",E,E,89,[[],[U]]],[11,R[14],E,E,89,[[],[R[13]]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[15],E,E,89,[[["self"]],[T]]],[11,R[19],E,E,89,[[["self"]],[R[42]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[12],E,E,90,[[[U]],[R[13]]]],[11,"into",E,E,90,[[],[U]]],[11,R[14],E,E,90,[[],[R[13]]]],[11,R[41],E,E,90,[[["self"]],[T]]],[11,R[15],E,E,90,[[["self"]],[T]]],[11,R[19],E,E,90,[[["self"]],[R[42]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[12],E,E,91,[[[U]],[R[13]]]],[11,"into",E,E,91,[[],[U]]],[11,R[14],E,E,91,[[],[R[13]]]],[11,R[41],E,E,91,[[["self"]],[T]]],[11,R[15],E,E,91,[[["self"]],[T]]],[11,R[19],E,E,91,[[["self"]],[R[42]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[12],E,E,92,[[[U]],[R[13]]]],[11,"into",E,E,92,[[],[U]]],[11,R[14],E,E,92,[[],[R[13]]]],[11,R[41],E,E,92,[[["self"]],[T]]],[11,R[15],E,E,92,[[["self"]],[T]]],[11,R[19],E,E,92,[[["self"]],[R[42]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[12],E,E,93,[[[U]],[R[13]]]],[11,"into",E,E,93,[[],[U]]],[11,R[14],E,E,93,[[],[R[13]]]],[11,R[41],E,E,93,[[["self"]],[T]]],[11,R[15],E,E,93,[[["self"]],[T]]],[11,R[19],E,E,93,[[["self"]],[R[42]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[12],E,E,94,[[[U]],[R[13]]]],[11,"into",E,E,94,[[],[U]]],[11,R[14],E,E,94,[[],[R[13]]]],[11,R[41],E,E,94,[[["self"]],[T]]],[11,R[15],E,E,94,[[["self"]],[T]]],[11,R[19],E,E,94,[[["self"]],[R[42]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[12],E,E,95,[[[U]],[R[13]]]],[11,"into",E,E,95,[[],[U]]],[11,R[14],E,E,95,[[],[R[13]]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[15],E,E,95,[[["self"]],[T]]],[11,R[19],E,E,95,[[["self"]],[R[42]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[12],E,E,96,[[[U]],[R[13]]]],[11,"into",E,E,96,[[],[U]]],[11,R[14],E,E,96,[[],[R[13]]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[15],E,E,96,[[["self"]],[T]]],[11,R[19],E,E,96,[[["self"]],[R[42]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[12],E,E,97,[[[U]],[R[13]]]],[11,"into",E,E,97,[[],[U]]],[11,R[14],E,E,97,[[],[R[13]]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[15],E,E,97,[[["self"]],[T]]],[11,R[19],E,E,97,[[["self"]],[R[42]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[12],E,E,98,[[[U]],[R[13]]]],[11,"into",E,E,98,[[],[U]]],[11,R[14],E,E,98,[[],[R[13]]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[15],E,E,98,[[["self"]],[T]]],[11,R[19],E,E,98,[[["self"]],[R[42]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[12],E,E,99,[[[U]],[R[13]]]],[11,"into",E,E,99,[[],[U]]],[11,R[14],E,E,99,[[],[R[13]]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[15],E,E,99,[[["self"]],[T]]],[11,R[19],E,E,99,[[["self"]],[R[42]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[12],E,E,100,[[[U]],[R[13]]]],[11,"into",E,E,100,[[],[U]]],[11,R[14],E,E,100,[[],[R[13]]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[15],E,E,100,[[["self"]],[T]]],[11,R[19],E,E,100,[[["self"]],[R[42]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[12],E,E,101,[[[U]],[R[13]]]],[11,"into",E,E,101,[[],[U]]],[11,R[14],E,E,101,[[],[R[13]]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[15],E,E,101,[[["self"]],[T]]],[11,R[19],E,E,101,[[["self"]],[R[42]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[12],E,E,102,[[[U]],[R[13]]]],[11,"into",E,E,102,[[],[U]]],[11,R[14],E,E,102,[[],[R[13]]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[15],E,E,102,[[["self"]],[T]]],[11,R[19],E,E,102,[[["self"]],[R[42]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[12],E,E,103,[[[U]],[R[13]]]],[11,"into",E,E,103,[[],[U]]],[11,R[14],E,E,103,[[],[R[13]]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[15],E,E,103,[[["self"]],[T]]],[11,R[19],E,E,103,[[["self"]],[R[42]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[12],E,E,104,[[[U]],[R[13]]]],[11,"into",E,E,104,[[],[U]]],[11,R[14],E,E,104,[[],[R[13]]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[15],E,E,104,[[["self"]],[T]]],[11,R[19],E,E,104,[[["self"]],[R[42]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[12],E,E,105,[[[U]],[R[13]]]],[11,"into",E,E,105,[[],[U]]],[11,R[14],E,E,105,[[],[R[13]]]],[11,R[41],E,E,105,[[["self"]],[T]]],[11,R[15],E,E,105,[[["self"]],[T]]],[11,R[19],E,E,105,[[["self"]],[R[42]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[12],E,E,137,[[[U]],[R[13]]]],[11,"into",E,E,137,[[],[U]]],[11,R[14],E,E,137,[[],[R[13]]]],[11,R[41],E,E,137,[[["self"]],[T]]],[11,R[15],E,E,137,[[["self"]],[T]]],[11,R[19],E,E,137,[[["self"]],[R[42]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[12],E,E,106,[[[U]],[R[13]]]],[11,"into",E,E,106,[[],[U]]],[11,R[14],E,E,106,[[],[R[13]]]],[11,R[41],E,E,106,[[["self"]],[T]]],[11,R[15],E,E,106,[[["self"]],[T]]],[11,R[19],E,E,106,[[["self"]],[R[42]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[12],E,E,107,[[[U]],[R[13]]]],[11,"into",E,E,107,[[],[U]]],[11,R[14],E,E,107,[[],[R[13]]]],[11,R[41],E,E,107,[[["self"]],[T]]],[11,R[15],E,E,107,[[["self"]],[T]]],[11,R[19],E,E,107,[[["self"]],[R[42]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[12],E,E,108,[[[U]],[R[13]]]],[11,"into",E,E,108,[[],[U]]],[11,R[14],E,E,108,[[],[R[13]]]],[11,R[41],E,E,108,[[["self"]],[T]]],[11,R[15],E,E,108,[[["self"]],[T]]],[11,R[19],E,E,108,[[["self"]],[R[42]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[12],E,E,109,[[[U]],[R[13]]]],[11,"into",E,E,109,[[],[U]]],[11,R[14],E,E,109,[[],[R[13]]]],[11,R[41],E,E,109,[[["self"]],[T]]],[11,R[15],E,E,109,[[["self"]],[T]]],[11,R[19],E,E,109,[[["self"]],[R[42]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[12],E,E,110,[[[U]],[R[13]]]],[11,"into",E,E,110,[[],[U]]],[11,R[14],E,E,110,[[],[R[13]]]],[11,R[41],E,E,110,[[["self"]],[T]]],[11,R[15],E,E,110,[[["self"]],[T]]],[11,R[19],E,E,110,[[["self"]],[R[42]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[12],E,E,111,[[[U]],[R[13]]]],[11,"into",E,E,111,[[],[U]]],[11,R[14],E,E,111,[[],[R[13]]]],[11,R[41],E,E,111,[[["self"]],[T]]],[11,R[15],E,E,111,[[["self"]],[T]]],[11,R[19],E,E,111,[[["self"]],[R[42]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[12],E,E,112,[[[U]],[R[13]]]],[11,"into",E,E,112,[[],[U]]],[11,R[14],E,E,112,[[],[R[13]]]],[11,R[41],E,E,112,[[["self"]],[T]]],[11,R[15],E,E,112,[[["self"]],[T]]],[11,R[19],E,E,112,[[["self"]],[R[42]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[12],E,E,113,[[[U]],[R[13]]]],[11,"into",E,E,113,[[],[U]]],[11,R[14],E,E,113,[[],[R[13]]]],[11,R[41],E,E,113,[[["self"]],[T]]],[11,R[15],E,E,113,[[["self"]],[T]]],[11,R[19],E,E,113,[[["self"]],[R[42]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[12],E,E,114,[[[U]],[R[13]]]],[11,"into",E,E,114,[[],[U]]],[11,R[14],E,E,114,[[],[R[13]]]],[11,R[41],E,E,114,[[["self"]],[T]]],[11,R[15],E,E,114,[[["self"]],[T]]],[11,R[19],E,E,114,[[["self"]],[R[42]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[12],E,E,115,[[[U]],[R[13]]]],[11,"into",E,E,115,[[],[U]]],[11,R[14],E,E,115,[[],[R[13]]]],[11,R[41],E,E,115,[[["self"]],[T]]],[11,R[15],E,E,115,[[["self"]],[T]]],[11,R[19],E,E,115,[[["self"]],[R[42]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[12],E,E,116,[[[U]],[R[13]]]],[11,"into",E,E,116,[[],[U]]],[11,R[14],E,E,116,[[],[R[13]]]],[11,R[41],E,E,116,[[["self"]],[T]]],[11,R[15],E,E,116,[[["self"]],[T]]],[11,R[19],E,E,116,[[["self"]],[R[42]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[12],E,E,138,[[[U]],[R[13]]]],[11,"into",E,E,138,[[],[U]]],[11,R[14],E,E,138,[[],[R[13]]]],[11,R[41],E,E,138,[[["self"]],[T]]],[11,R[15],E,E,138,[[["self"]],[T]]],[11,R[19],E,E,138,[[["self"]],[R[42]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[12],E,E,117,[[[U]],[R[13]]]],[11,"into",E,E,117,[[],[U]]],[11,R[14],E,E,117,[[],[R[13]]]],[11,R[41],E,E,117,[[["self"]],[T]]],[11,R[15],E,E,117,[[["self"]],[T]]],[11,R[19],E,E,117,[[["self"]],[R[42]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[12],E,E,118,[[[U]],[R[13]]]],[11,"into",E,E,118,[[],[U]]],[11,R[14],E,E,118,[[],[R[13]]]],[11,R[41],E,E,118,[[["self"]],[T]]],[11,R[15],E,E,118,[[["self"]],[T]]],[11,R[19],E,E,118,[[["self"]],[R[42]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[12],E,E,119,[[[U]],[R[13]]]],[11,"into",E,E,119,[[],[U]]],[11,R[14],E,E,119,[[],[R[13]]]],[11,R[41],E,E,119,[[["self"]],[T]]],[11,R[15],E,E,119,[[["self"]],[T]]],[11,R[19],E,E,119,[[["self"]],[R[42]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[12],E,E,120,[[[U]],[R[13]]]],[11,"into",E,E,120,[[],[U]]],[11,R[14],E,E,120,[[],[R[13]]]],[11,R[41],E,E,120,[[["self"]],[T]]],[11,R[15],E,E,120,[[["self"]],[T]]],[11,R[19],E,E,120,[[["self"]],[R[42]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[12],E,E,121,[[[U]],[R[13]]]],[11,"into",E,E,121,[[],[U]]],[11,R[14],E,E,121,[[],[R[13]]]],[11,R[41],E,E,121,[[["self"]],[T]]],[11,R[15],E,E,121,[[["self"]],[T]]],[11,R[19],E,E,121,[[["self"]],[R[42]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[12],E,E,122,[[[U]],[R[13]]]],[11,"into",E,E,122,[[],[U]]],[11,R[14],E,E,122,[[],[R[13]]]],[11,R[41],E,E,122,[[["self"]],[T]]],[11,R[15],E,E,122,[[["self"]],[T]]],[11,R[19],E,E,122,[[["self"]],[R[42]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[12],E,E,123,[[[U]],[R[13]]]],[11,"into",E,E,123,[[],[U]]],[11,R[14],E,E,123,[[],[R[13]]]],[11,R[41],E,E,123,[[["self"]],[T]]],[11,R[15],E,E,123,[[["self"]],[T]]],[11,R[19],E,E,123,[[["self"]],[R[42]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[12],E,E,124,[[[U]],[R[13]]]],[11,"into",E,E,124,[[],[U]]],[11,R[14],E,E,124,[[],[R[13]]]],[11,R[41],E,E,124,[[["self"]],[T]]],[11,R[15],E,E,124,[[["self"]],[T]]],[11,R[19],E,E,124,[[["self"]],[R[42]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[12],E,E,125,[[[U]],[R[13]]]],[11,"into",E,E,125,[[],[U]]],[11,R[14],E,E,125,[[],[R[13]]]],[11,R[41],E,E,125,[[["self"]],[T]]],[11,R[15],E,E,125,[[["self"]],[T]]],[11,R[19],E,E,125,[[["self"]],[R[42]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[12],E,E,126,[[[U]],[R[13]]]],[11,"into",E,E,126,[[],[U]]],[11,R[14],E,E,126,[[],[R[13]]]],[11,R[41],E,E,126,[[["self"]],[T]]],[11,R[15],E,E,126,[[["self"]],[T]]],[11,R[19],E,E,126,[[["self"]],[R[42]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[12],E,E,127,[[[U]],[R[13]]]],[11,"into",E,E,127,[[],[U]]],[11,R[14],E,E,127,[[],[R[13]]]],[11,R[41],E,E,127,[[["self"]],[T]]],[11,R[15],E,E,127,[[["self"]],[T]]],[11,R[19],E,E,127,[[["self"]],[R[42]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[12],E,E,128,[[[U]],[R[13]]]],[11,"into",E,E,128,[[],[U]]],[11,R[14],E,E,128,[[],[R[13]]]],[11,R[41],E,E,128,[[["self"]],[T]]],[11,R[15],E,E,128,[[["self"]],[T]]],[11,R[19],E,E,128,[[["self"]],[R[42]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[12],E,E,139,[[[U]],[R[13]]]],[11,"into",E,E,139,[[],[U]]],[11,R[14],E,E,139,[[],[R[13]]]],[11,R[41],E,E,139,[[["self"]],[T]]],[11,R[15],E,E,139,[[["self"]],[T]]],[11,R[19],E,E,139,[[["self"]],[R[42]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[12],E,E,140,[[[U]],[R[13]]]],[11,"into",E,E,140,[[],[U]]],[11,R[14],E,E,140,[[],[R[13]]]],[11,R[41],E,E,140,[[["self"]],[T]]],[11,R[15],E,E,140,[[["self"]],[T]]],[11,R[19],E,E,140,[[["self"]],[R[42]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[12],E,E,141,[[[U]],[R[13]]]],[11,"into",E,E,141,[[],[U]]],[11,R[14],E,E,141,[[],[R[13]]]],[11,R[41],E,E,141,[[["self"]],[T]]],[11,R[15],E,E,141,[[["self"]],[T]]],[11,R[19],E,E,141,[[["self"]],[R[42]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[12],E,E,142,[[[U]],[R[13]]]],[11,"into",E,E,142,[[],[U]]],[11,R[14],E,E,142,[[],[R[13]]]],[11,R[41],E,E,142,[[["self"]],[T]]],[11,R[15],E,E,142,[[["self"]],[T]]],[11,R[19],E,E,142,[[["self"]],[R[42]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[12],E,E,143,[[[U]],[R[13]]]],[11,"into",E,E,143,[[],[U]]],[11,R[14],E,E,143,[[],[R[13]]]],[11,R[41],E,E,143,[[["self"]],[T]]],[11,R[15],E,E,143,[[["self"]],[T]]],[11,R[19],E,E,143,[[["self"]],[R[42]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[12],E,E,144,[[[U]],[R[13]]]],[11,"into",E,E,144,[[],[U]]],[11,R[14],E,E,144,[[],[R[13]]]],[11,R[41],E,E,144,[[["self"]],[T]]],[11,R[15],E,E,144,[[["self"]],[T]]],[11,R[19],E,E,144,[[["self"]],[R[42]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[12],E,E,145,[[[U]],[R[13]]]],[11,"into",E,E,145,[[],[U]]],[11,R[14],E,E,145,[[],[R[13]]]],[11,R[41],E,E,145,[[["self"]],[T]]],[11,R[15],E,E,145,[[["self"]],[T]]],[11,R[19],E,E,145,[[["self"]],[R[42]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[12],E,E,129,[[[U]],[R[13]]]],[11,"into",E,E,129,[[],[U]]],[11,R[14],E,E,129,[[],[R[13]]]],[11,R[41],E,E,129,[[["self"]],[T]]],[11,R[15],E,E,129,[[["self"]],[T]]],[11,R[19],E,E,129,[[["self"]],[R[42]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[12],E,E,146,[[[U]],[R[13]]]],[11,"into",E,E,146,[[],[U]]],[11,R[14],E,E,146,[[],[R[13]]]],[11,R[41],E,E,146,[[["self"]],[T]]],[11,R[15],E,E,146,[[["self"]],[T]]],[11,R[19],E,E,146,[[["self"]],[R[42]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[12],E,E,147,[[[U]],[R[13]]]],[11,"into",E,E,147,[[],[U]]],[11,R[14],E,E,147,[[],[R[13]]]],[11,R[41],E,E,147,[[["self"]],[T]]],[11,R[15],E,E,147,[[["self"]],[T]]],[11,R[19],E,E,147,[[["self"]],[R[42]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[12],E,E,148,[[[U]],[R[13]]]],[11,"into",E,E,148,[[],[U]]],[11,R[14],E,E,148,[[],[R[13]]]],[11,R[41],E,E,148,[[["self"]],[T]]],[11,R[15],E,E,148,[[["self"]],[T]]],[11,R[19],E,E,148,[[["self"]],[R[42]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[12],E,E,149,[[[U]],[R[13]]]],[11,"into",E,E,149,[[],[U]]],[11,R[14],E,E,149,[[],[R[13]]]],[11,R[41],E,E,149,[[["self"]],[T]]],[11,R[15],E,E,149,[[["self"]],[T]]],[11,R[19],E,E,149,[[["self"]],[R[42]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[12],E,E,150,[[[U]],[R[13]]]],[11,"into",E,E,150,[[],[U]]],[11,R[14],E,E,150,[[],[R[13]]]],[11,R[41],E,E,150,[[["self"]],[T]]],[11,R[15],E,E,150,[[["self"]],[T]]],[11,R[19],E,E,150,[[["self"]],[R[42]]]],[11,"fmt",E,E,130,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,146,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[513]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[451]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[452]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[514]]]],[11,"clone",E,E,147,[[["self"]],["file"]]],[11,"clone",E,E,148,[[["self"]],["fpos_t"]]],[11,"clone",E,E,149,[[["self"]],[R[540]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[515]]]],[11,"clone",E,E,20,[[["self"]],[R[453]]]],[11,"clone",E,E,21,[[["self"]],[R[454]]]],[11,"clone",E,E,22,[[["self"]],[R[516]]]],[11,"clone",E,E,23,[[["self"]],[R[455]]]],[11,"clone",E,E,131,[[["self"]],["fd_set"]]],[11,"clone",E,E,24,[[["self"]],["tm"]]],[11,"clone",E,E,25,[[["self"]],[R[456]]]],[11,"clone",E,E,26,[[["self"]],["dl_info"]]],[11,"clone",E,E,27,[[["self"]],["lconv"]]],[11,"clone",E,E,28,[[["self"]],[R[457]]]],[11,"clone",E,E,29,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,132,[[["self"]],[R[458]]]],[11,"clone",E,E,30,[[["self"]],["arpreq"]]],[11,"clone",E,E,31,[[["self"]],[R[459]]]],[11,"clone",E,E,32,[[["self"]],["arphdr"]]],[11,"clone",E,E,33,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,34,[[["self"]],[R[460]]]],[11,"clone",E,E,35,[[["self"]],[R[461]]]],[11,"clone",E,E,36,[[["self"]],[R[462]]]],[11,"clone",E,E,37,[[["self"]],["utsname"]]],[11,"clone",E,E,38,[[["self"]],[R[517]]]],[11,"clone",E,E,150,[[["self"]],[R[541]]]],[11,"clone",E,E,39,[[["self"]],[R[518]]]],[11,"clone",E,E,40,[[["self"]],["glob_t"]]],[11,"clone",E,E,41,[[["self"]],["passwd"]]],[11,"clone",E,E,42,[[["self"]],["spwd"]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[463]]]],[11,"clone",E,E,45,[[["self"]],[R[464]]]],[11,"clone",E,E,133,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],[R[465]]]],[11,"clone",E,E,134,[[["self"]],[R[447]]]],[11,"clone",E,E,47,[[["self"]],[R[450]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["sembuf"]]],[11,"clone",E,E,50,[[["self"]],[R[466]]]],[11,"clone",E,E,51,[[["self"]],[R[519]]]],[11,"clone",E,E,52,[[["self"]],[R[467]]]],[11,"clone",E,E,53,[[["self"]],[R[468]]]],[11,"clone",E,E,54,[[["self"]],[R[469]]]],[11,"clone",E,E,55,[[["self"]],[R[470]]]],[11,"clone",E,E,56,[[["self"]],[R[471]]]],[11,"clone",E,E,57,[[["self"]],[R[472]]]],[11,"clone",E,E,58,[[["self"]],[R[473]]]],[11,"clone",E,E,59,[[["self"]],[R[474]]]],[11,"clone",E,E,60,[[["self"]],[R[475]]]],[11,"clone",E,E,61,[[["self"]],[R[476]]]],[11,"clone",E,E,62,[[["self"]],[R[477]]]],[11,"clone",E,E,63,[[["self"]],[R[478]]]],[11,"clone",E,E,64,[[["self"]],[R[479]]]],[11,"clone",E,E,65,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,66,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,68,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,70,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,72,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,74,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,75,[[["self"]],["ucred"]]],[11,"clone",E,E,76,[[["self"]],["mntent"]]],[11,"clone",E,E,135,[[["self"]],[R[480]]]],[11,"clone",E,E,136,[[["self"]],[R[481]]]],[11,"clone",E,E,77,[[["self"]],[R[482]]]],[11,"clone",E,E,78,[[["self"]],[R[483]]]],[11,"clone",E,E,79,[[["self"]],[R[484]]]],[11,"clone",E,E,80,[[["self"]],[R[485]]]],[11,"clone",E,E,81,[[["self"]],[R[486]]]],[11,"clone",E,E,82,[[["self"]],[R[487]]]],[11,"clone",E,E,83,[[["self"]],["dirent"]]],[11,"clone",E,E,84,[[["self"]],[R[530]]]],[11,"clone",E,E,85,[[["self"]],[R[488]]]],[11,"clone",E,E,86,[[["self"]],[R[489]]]],[11,"clone",E,E,87,[[["self"]],["mq_attr"]]],[11,"clone",E,E,88,[[["self"]],["statx"]]],[11,"clone",E,E,89,[[["self"]],[R[490]]]],[11,"clone",E,E,90,[[["self"]],["aiocb"]]],[11,"clone",E,E,91,[[["self"]],[R[491]]]],[11,"clone",E,E,92,[[["self"]],[R[492]]]],[11,"clone",E,E,93,[[["self"]],[R[531]]]],[11,"clone",E,E,94,[[["self"]],["msghdr"]]],[11,"clone",E,E,95,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,96,[[["self"]],["termios"]]],[11,"clone",E,E,97,[[["self"]],[R[493]]]],[11,"clone",E,E,98,[[["self"]],[R[532]]]],[11,"clone",E,E,99,[[["self"]],[R[533]]]],[11,"clone",E,E,100,[[["self"]],[R[494]]]],[11,"clone",E,E,101,[[["self"]],[R[495]]]],[11,"clone",E,E,102,[[["self"]],[R[496]]]],[11,"clone",E,E,103,[[["self"]],["nlattr"]]],[11,"clone",E,E,104,[[["self"]],["rtentry"]]],[11,"clone",E,E,105,[[["self"]],["utmpx"]]],[11,"clone",E,E,137,[[["self"]],[R[539]]]],[11,"clone",E,E,106,[[["self"]],["sysinfo"]]],[11,"clone",E,E,107,[[["self"]],[R[534]]]],[11,"clone",E,E,108,[[["self"]],[R[448]]]],[11,"clone",E,E,109,[[["self"]],["statfs"]]],[11,"clone",E,E,110,[[["self"]],["flock"]]],[11,"clone",E,E,111,[[["self"]],[R[497]]]],[11,"clone",E,E,112,[[["self"]],["stack_t"]]],[11,"clone",E,E,113,[[["self"]],["stat"]]],[11,"clone",E,E,114,[[["self"]],["stat64"]]],[11,"clone",E,E,115,[[["self"]],[R[498]]]],[11,"clone",E,E,116,[[["self"]],[R[449]]]],[11,"clone",E,E,138,[[["self"]],[R[499]]]],[11,"clone",E,E,117,[[["self"]],[R[500]]]],[11,"clone",E,E,118,[[["self"]],[R[501]]]],[11,"clone",E,E,119,[[["self"]],[R[502]]]],[11,"clone",E,E,120,[[["self"]],[R[503]]]],[11,"clone",E,E,121,[[["self"]],["user"]]],[11,"clone",E,E,122,[[["self"]],[R[504]]]],[11,"clone",E,E,123,[[["self"]],[R[535]]]],[11,"clone",E,E,124,[[["self"]],[R[536]]]],[11,"clone",E,E,125,[[["self"]],[R[537]]]],[11,"clone",E,E,126,[[["self"]],[R[505]]]],[11,"clone",E,E,127,[[["self"]],[R[506]]]],[11,"clone",E,E,128,[[["self"]],["statvfs"]]],[11,"clone",E,E,139,[[["self"]],["sem_t"]]],[11,"clone",E,E,140,[[["self"]],[R[507]]]],[11,"clone",E,E,141,[[["self"]],[R[508]]]],[11,"clone",E,E,142,[[["self"]],[R[509]]]],[11,"clone",E,E,143,[[["self"]],[R[510]]]],[11,"clone",E,E,144,[[["self"]],[R[511]]]],[11,"clone",E,E,145,[[["self"]],[R[512]]]],[11,"clone",E,E,129,[[["self"]],[R[538]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[513]],[3,"rlimit"],[3,"rusage"],[3,R[451]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[452]],[3,"tms"],[3,"servent"],[3,R[514]],[3,"in_addr"],[3,"ip_mreq"],[3,R[515]],[3,R[453]],[3,R[454]],[3,R[516]],[3,R[455]],[3,"tm"],[3,R[456]],[3,"Dl_info"],[3,"lconv"],[3,R[457]],[3,"ifaddrs"],[3,"arpreq"],[3,R[459]],[3,"arphdr"],[3,"mmsghdr"],[3,R[460]],[3,R[461]],[3,R[462]],[3,"utsname"],[3,R[517]],[3,R[518]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[463]],[3,R[464]],[3,R[465]],[3,R[450]],[3,"msginfo"],[3,"sembuf"],[3,R[466]],[3,R[519]],[3,R[467]],[3,R[468]],[3,R[469]],[3,R[470]],[3,R[471]],[3,R[472]],[3,R[473]],[3,R[474]],[3,R[475]],[3,R[476]],[3,R[477]],[3,R[478]],[3,R[479]],[3,R[520]],[3,R[521]],[3,R[522]],[3,R[523]],[3,R[524]],[3,R[525]],[3,R[526]],[3,R[527]],[3,R[528]],[3,R[529]],[3,"ucred"],[3,"mntent"],[3,R[482]],[3,R[483]],[3,R[484]],[3,R[485]],[3,R[486]],[3,R[487]],[3,"dirent"],[3,R[530]],[3,R[488]],[3,R[489]],[3,"mq_attr"],[3,"statx"],[3,R[490]],[3,"aiocb"],[3,R[491]],[3,R[492]],[3,R[531]],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,R[493]],[3,R[532]],[3,R[533]],[3,R[494]],[3,R[495]],[3,R[496]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[534]],[3,R[448]],[3,"statfs"],[3,"flock"],[3,R[497]],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,R[498]],[3,R[449]],[3,R[500]],[3,R[501]],[3,R[502]],[3,R[503]],[3,"user"],[3,R[504]],[3,R[535]],[3,R[536]],[3,R[537]],[3,R[505]],[3,R[506]],[3,"statvfs"],[3,R[538]],[4,"c_void"],[3,"fd_set"],[3,R[458]],[3,"fsid_t"],[3,R[447]],[3,R[480]],[3,R[481]],[3,R[539]],[3,R[499]],[3,"sem_t"],[3,R[507]],[3,R[508]],[3,R[509]],[3,R[510]],[3,R[511]],[3,R[512]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[540]],[4,R[541]]]};
searchIndex["libudev"]={"doc":E,"i":[[3,"Context","libudev","A libudev context.",N,N],[3,"Device",E,"A structure that provides access to sysfs/kernel devices.",N,N],[3,"Properties",E,"Iterator over a device's properties.",N,N],[3,"Property",E,"A device property.",N,N],[3,"Attributes",E,"Iterator over a device's attributes.",N,N],[3,R[2139],E,"A device attribute.",N,N],[3,"Enumerator",E,"An enumeration context.",N,N],[3,"Devices",E,"Iterator over devices.",N,N],[3,"Error",E,"The error type for libudev operations.",N,N],[3,"Monitor",E,"Monitors for device events.",N,N],[3,R[2138],E,"An active monitor that can receive events.",N,N],[3,"Event",E,"An event that indicates a change in device state.",N,N],[4,R[33],E,"Types of errors that occur in libudev.",N,N],[13,"NoMem",E,E,0,N],[13,R[2324],E,E,0,N],[13,"Io",E,E,0,N],[4,"EventType",E,"Types of events that can be received from udev.",N,N],[13,"Add",E,"A device was added.",1,N],[13,"Change",E,"A device changed.",1,N],[13,"Remove",E,"A device was removed.",1,N],[13,"Unknown",E,"An unknown event occurred.",1,N],[11,"new",E,"Creates a new context.",2,[[],[R[13]]]],[11,"device_from_syspath",E,"Creates a device for a given syspath.",2,[[["path"],["self"]],[["device"],[R[13],["device"]]]]],[11,"is_initialized",E,"Checks whether the device has already been handled by udev.",3,[[["self"]],["bool"]]],[11,"devnum",E,"Gets the device's major/minor number.",3,[[["self"]],[[R[45],["dev_t"]],["dev_t"]]]],[11,"syspath",E,"Returns the syspath of the device.",3,[[["self"]],["path"]]],[11,"devpath",E,"Returns the kernel devpath value of the device.",3,[[["self"]],["osstr"]]],[11,"devnode",E,"Returns the path to the device node belonging to the device.",3,[[["self"]],[["path"],[R[45],["path"]]]]],[11,"parent",E,"Returns the parent of the device.",3,[[["self"]],[["device"],[R[45],["device"]]]]],[11,"subsystem",E,"Returns the subsystem name of the device.",3,[[["self"]],["osstr"]]],[11,"sysname",E,"Returns the kernel device name for the device.",3,[[["self"]],["osstr"]]],[11,"sysnum",E,"Returns the instance number of the device.",3,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,"devtype",E,"Returns the devtype name of the device.",3,[[["self"]],[[R[45],["osstr"]],["osstr"]]]],[11,"driver",E,"Returns the name of the kernel driver attached to the…",3,[[["self"]],[[R[45],["osstr"]],["osstr"]]]],[11,"property_value",E,"Retreives the value of a device property.",3,[[["self"],["asref",["osstr"]],["osstr"]],[[R[45],["osstr"]],["osstr"]]]],[11,"attribute_value",E,"Retreives the value of a device attribute.",3,[[["self"],["asref",["osstr"]],["osstr"]],[[R[45],["osstr"]],["osstr"]]]],[11,"set_attribute_value",E,"Sets the value of a device attribute.",3,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"properties",E,"Returns an iterator over the device's properties.",3,[[["self"]],["properties"]]],[11,"attributes",E,"Returns an iterator over the device's attributes.",3,[[["self"]],["attributes"]]],[11,"name",E,"Returns the property name.",4,[[["self"]],["osstr"]]],[11,"value",E,"Returns the property value.",4,[[["self"]],["osstr"]]],[11,"name",E,"Returns the attribute name.",5,[[["self"]],["osstr"]]],[11,"value",E,"Returns the attribute value.",5,[[["self"]],[[R[45],["osstr"]],["osstr"]]]],[11,"new",E,"Creates a new Enumerator.",6,[[["context"]],[R[13]]]],[11,"match_is_initialized",E,"Adds a filter that matches only initialized devices.",6,[[["self"]],[R[13]]]],[11,R[2134],E,"Adds a filter that matches only devices that belong to the…",6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_attribute",E,R[2133],6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_sysname",E,R[2133],6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_property",E,R[2133],6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_tag",E,"Adds a filter that matches only devices with the given tag.",6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_parent",E,"Includes the parent device and all devices in the subtree…",6,[[["self"],["device"]],[R[13]]]],[11,"nomatch_subsystem",E,"Adds a filter that matches only devices that don't belong…",6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"nomatch_attribute",E,"Adds a filter that matches only devices that don't have…",6,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"add_syspath",E,"Includes the device with the given syspath.",6,[[["self"],["path"]],[R[13]]]],[11,"scan_devices",E,"Scans `/sys` for devices matching the attached filters.",6,[[["self"]],[[R[13],["devices"]],["devices"]]]],[11,"kind",E,R[2331],7,[[["self"]],[R[1]]]],[11,R[31],E,"Returns a description of the error.",7,[[["self"]],["str"]]],[11,"new",E,"Creates a new `Monitor`.",8,[[["context"]],[R[13]]]],[11,R[2134],E,R[2135],8,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_subsystem_devtype",E,R[2135],8,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"match_tag",E,R[2135],8,[[["self"],["asref",["osstr"]],["osstr"]],[R[13]]]],[11,"clear_filters",E,"Removes all filters currently set on the monitor.",8,[[["self"]],[R[13]]]],[11,"listen",E,"Listens for events matching the current filters.",8,[[],[[R[13],[R[2136]]],[R[2136]]]]],[11,"receive_event",E,"Receives the next available event from the monitor.",9,[[["self"]],[[R[45],["event"]],["event"]]]],[11,"event_type",E,"Returns the `EventType` corresponding to this event.",10,[[["self"]],[R[2137]]]],[11,"sequence_number",E,"Returns the event's sequence number.",10,[[["self"]],["u64"]]],[11,"device",E,"Returns the device associated with this event.",10,[[["self"]],["device"]]],[6,"Result",E,"A `Result` type for libudev operations.",N,N],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[43],E,E,11,[[],["i"]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[43],E,E,12,[[],["i"]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[43],E,E,13,[[],["i"]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,R[62],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[77],E,E,1,[[],[R[2137]]]],[11,"next",E,E,11,[[["self"]],[["property"],[R[45],["property"]]]]],[11,R[46],E,E,11,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[[R[45],[R[2005]]],[R[2005]]]]],[11,R[46],E,E,12,[[["self"]]]],[11,"next",E,E,13,[[["self"]],[["device"],[R[45],["device"]]]]],[11,R[46],E,E,13,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],[R[1]]]],[11,"clone",E,E,1,[[["self"]],[R[2137]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"drop",E,E,8,[[["self"]]]],[11,"eq",E,E,0,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,1,[[[R[2137]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[["error"],["stdresult",["error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"deref",E,E,10,[[["self"]],["device"]]],[11,R[31],E,E,7,[[["self"]],["str"]]],[11,R[853],E,"Returns the file descriptor of the monitor's socket.",9,[[["self"]],["rawfd"]]]],"p":[[4,R[33]],[4,"EventType"],[3,"Context"],[3,"Device"],[3,"Property"],[3,R[2139]],[3,"Enumerator"],[3,"Error"],[3,"Monitor"],[3,R[2138]],[3,"Event"],[3,"Properties"],[3,"Attributes"],[3,"Devices"]]};
searchIndex["libudev_sys"]={"doc":E,"i":[[3,R[951],"libudev_sys",E,N,N],[3,"udev",E,E,N,N],[3,R[952],E,E,N,N],[3,R[953],E,E,N,N],[3,R[954],E,E,N,N],[3,R[955],E,E,N,N],[3,R[956],E,E,N,N],[5,"udev_hwdb_ref",E,E,N,N],[5,"udev_hwdb_unref",E,E,N,N],[5,"udev_hwdb_new",E,E,N,N],[5,"udev_hwdb_get_properties_list_entry",E,E,N,N],[5,"udev_new",E,E,N,N],[5,"udev_ref",E,E,N,N],[5,"udev_unref",E,E,N,N],[5,"udev_set_userdata",E,E,N,N],[5,"udev_get_userdata",E,E,N,N],[5,"udev_list_entry_get_next",E,E,N,N],[5,"udev_list_entry_get_by_name",E,E,N,N],[5,"udev_list_entry_get_name",E,E,N,N],[5,"udev_list_entry_get_value",E,E,N,N],[5,"udev_device_ref",E,E,N,N],[5,"udev_device_unref",E,E,N,N],[5,"udev_device_get_udev",E,E,N,N],[5,"udev_device_new_from_syspath",E,E,N,N],[5,"udev_device_new_from_devnum",E,E,N,N],[5,"udev_device_new_from_subsystem_sysname",E,E,N,N],[5,"udev_device_new_from_device_id",E,E,N,N],[5,"udev_device_new_from_environment",E,E,N,N],[5,"udev_device_get_parent",E,E,N,N],[5,"udev_device_get_parent_with_subsystem_devtype",E,E,N,N],[5,"udev_device_get_devpath",E,E,N,N],[5,"udev_device_get_subsystem",E,E,N,N],[5,"udev_device_get_devtype",E,E,N,N],[5,"udev_device_get_syspath",E,E,N,N],[5,"udev_device_get_sysname",E,E,N,N],[5,"udev_device_get_sysnum",E,E,N,N],[5,"udev_device_get_devnode",E,E,N,N],[5,"udev_device_get_is_initialized",E,E,N,N],[5,"udev_device_get_devlinks_list_entry",E,E,N,N],[5,"udev_device_get_properties_list_entry",E,E,N,N],[5,"udev_device_get_tags_list_entry",E,E,N,N],[5,"udev_device_get_property_value",E,E,N,N],[5,"udev_device_get_driver",E,E,N,N],[5,"udev_device_get_devnum",E,E,N,N],[5,"udev_device_get_action",E,E,N,N],[5,"udev_device_get_sysattr_value",E,E,N,N],[5,"udev_device_set_sysattr_value",E,E,N,N],[5,"udev_device_get_sysattr_list_entry",E,E,N,N],[5,"udev_device_get_seqnum",E,E,N,N],[5,"udev_device_get_usec_since_initialized",E,E,N,N],[5,"udev_device_has_tag",E,E,N,N],[5,"udev_monitor_ref",E,E,N,N],[5,"udev_monitor_unref",E,E,N,N],[5,"udev_monitor_get_udev",E,E,N,N],[5,"udev_monitor_new_from_netlink",E,E,N,N],[5,"udev_monitor_enable_receiving",E,E,N,N],[5,"udev_monitor_set_receive_buffer_size",E,E,N,N],[5,"udev_monitor_get_fd",E,E,N,N],[5,"udev_monitor_receive_device",E,E,N,N],[5,"udev_monitor_filter_add_match_subsystem_devtype",E,E,N,N],[5,"udev_monitor_filter_add_match_tag",E,E,N,N],[5,"udev_monitor_filter_update",E,E,N,N],[5,"udev_monitor_filter_remove",E,E,N,N],[5,"udev_enumerate_ref",E,E,N,N],[5,"udev_enumerate_unref",E,E,N,N],[5,"udev_enumerate_get_udev",E,E,N,N],[5,"udev_enumerate_new",E,E,N,N],[5,"udev_enumerate_add_match_subsystem",E,E,N,N],[5,"udev_enumerate_add_nomatch_subsystem",E,E,N,N],[5,"udev_enumerate_add_match_sysattr",E,E,N,N],[5,"udev_enumerate_add_nomatch_sysattr",E,E,N,N],[5,"udev_enumerate_add_match_property",E,E,N,N],[5,"udev_enumerate_add_match_tag",E,E,N,N],[5,"udev_enumerate_add_match_parent",E,E,N,N],[5,"udev_enumerate_add_match_is_initialized",E,E,N,N],[5,"udev_enumerate_add_match_sysname",E,E,N,N],[5,"udev_enumerate_add_syspath",E,E,N,N],[5,"udev_enumerate_scan_devices",E,E,N,N],[5,"udev_enumerate_scan_subsystems",E,E,N,N],[5,"udev_enumerate_get_list_entry",E,E,N,N],[5,"udev_queue_ref",E,E,N,N],[5,"udev_queue_unref",E,E,N,N],[5,"udev_queue_get_udev",E,E,N,N],[5,"udev_queue_new",E,E,N,N],[5,"udev_queue_get_udev_is_active",E,E,N,N],[5,"udev_queue_get_queue_is_empty",E,E,N,N],[5,"udev_queue_get_fd",E,E,N,N],[5,"udev_queue_flush",E,E,N,N],[5,"udev_util_encode_string",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]]],"p":[[3,R[951]],[3,"udev"],[3,R[952]],[3,R[953]],[3,R[954]],[3,R[955]],[3,R[956]]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,R[780],"lock_api",R[688],N,N],[3,R[781],E,R[688],N,N],[3,"Mutex",E,R[2735],N,N],[3,R[286],E,R[2736],N,N],[3,R[760],E,R[2734],N,N],[3,R[761],E,R[2738],N,N],[3,R[762],E,R[2739],N,N],[3,R[763],E,R[2737],N,N],[3,"RwLock",E,R[2742],N,N],[3,R[288],E,R[2743],N,N],[3,R[289],E,R[2745],N,N],[3,R[764],E,R[2744],N,N],[3,R[765],E,R[2740],N,N],[3,R[766],E,R[2741],N,N],[11,"new",E,"Creates a new mutex in an unlocked state ready for use.",0,[[[T]],["mutex"]]],[11,R[118],E,R[697],0,[[],[T]]],[11,"lock",E,"Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],[R[280]]]],[11,R[698],E,R[699],0,[[["self"]],[[R[45],[R[280]]],[R[280]]]]],[11,R[121],E,R[689],0,[[["self"]],[T]]],[11,R[701],E,R[702],0,[[["self"]]]],[11,"raw",E,R[703],0,[[["self"]],["r"]]],[11,R[704],E,"Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,R[705],E,R[690],0,[[["self"]],[[R[45],[R[280]]],[R[280]]]]],[11,R[706],E,R[690],0,[[["self"]],[[R[45],[R[280]]],[R[280]]]]],[11,"mutex",E,"Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map",E,R[693],1,[[["f"]],[[R[691]],["sized"]]]],[11,R[724],E,R[694],1,[[["f"]],[[R[691]],[R[13],[R[691]]]]]],[11,R[721],E,R[692],1,[[["self"],["f"]],[U]]],[11,R[695],E,R[696],1,[[]]],[11,R[709],E,R[692],1,[[["self"],["f"]],[U]]],[11,"bump",E,R[710],1,[[["self"]]]],[11,"map",E,R[693],2,[[["f"]],[[R[691]],["sized"]]]],[11,R[724],E,R[694],2,[[["f"]],[[R[691]],[R[13],[R[691]]]]]],[11,R[695],E,R[696],2,[[]]],[11,"new",E,"Creates a new reentrant mutex in an unlocked state ready…",3,[[[T]],[R[707]]]],[11,R[118],E,R[697],3,[[],[T]]],[11,"lock",E,"Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],[R[700]]]],[11,R[698],E,R[699],3,[[["self"]],[[R[700]],[R[45],[R[700]]]]]],[11,R[121],E,R[689],3,[[["self"]],[T]]],[11,R[701],E,R[702],3,[[["self"]]]],[11,"raw",E,R[703],3,[[["self"]],["r"]]],[11,R[704],E,"Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,R[705],E,R[690],3,[[["self"]],[[R[700]],[R[45],[R[700]]]]]],[11,R[706],E,R[690],3,[[["self"]],[[R[700]],[R[45],[R[700]]]]]],[11,"remutex",E,"Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],[R[707]]]],[11,"map",E,R[711],4,[[["f"]],[[R[708]],["sized"]]]],[11,R[724],E,R[712],4,[[["f"]],[[R[708]],[R[13],[R[708]]]]]],[11,R[721],E,R[692],4,[[["self"],["f"]],[U]]],[11,R[695],E,R[696],4,[[]]],[11,R[709],E,R[692],4,[[["self"],["f"]],[U]]],[11,"bump",E,R[710],4,[[["self"]]]],[11,"map",E,R[711],5,[[["f"]],[[R[708]],["sized"]]]],[11,R[724],E,R[712],5,[[["f"]],[[R[708]],[R[13],[R[708]]]]]],[11,R[695],E,R[696],5,[[]]],[11,"new",E,"Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[[T]],["rwlock"]]],[11,R[118],E,"Consumes this `RwLock`, returning the underlying data.",6,[[],[T]]],[11,"read",E,R[716],6,[[["self"]],[R[282]]]],[11,R[713],E,R[717],6,[[["self"]],[[R[282]],[R[45],[R[282]]]]]],[11,"write",E,"Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],[R[283]]]],[11,R[349],E,"Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],[[R[45],[R[283]]],[R[283]]]]],[11,R[121],E,R[689],6,[[["self"]],[T]]],[11,"force_unlock_read",E,"Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write",E,"Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw",E,"Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair",E,"Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair",E,"Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for",E,R[714],6,[[["self"]],[[R[282]],[R[45],[R[282]]]]]],[11,"try_read_until",E,R[714],6,[[["self"]],[[R[282]],[R[45],[R[282]]]]]],[11,"try_write_for",E,R[715],6,[[["self"]],[[R[45],[R[283]]],[R[283]]]]],[11,"try_write_until",E,R[715],6,[[["self"]],[[R[45],[R[283]]],[R[283]]]]],[11,"read_recursive",E,R[716],6,[[["self"]],[R[282]]]],[11,"try_read_recursive",E,R[717],6,[[["self"]],[[R[282]],[R[45],[R[282]]]]]],[11,"try_read_recursive_for",E,R[714],6,[[["self"]],[[R[282]],[R[45],[R[282]]]]]],[11,"try_read_recursive_until",E,R[714],6,[[["self"]],[[R[282]],[R[45],[R[282]]]]]],[11,"upgradable_read",E,"Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],[R[718]]]],[11,"try_upgradable_read",E,R[719],6,[[["self"]],[[R[45],[R[718]]],[R[718]]]]],[11,"try_upgradable_read_for",E,R[719],6,[[["self"]],[[R[45],[R[718]]],[R[718]]]]],[11,"try_upgradable_read_until",E,R[719],6,[[["self"]],[[R[45],[R[718]]],[R[718]]]]],[11,"rwlock",E,R[723],7,[[["self"]],["rwlock"]]],[11,"map",E,R[730],7,[[["f"]],[[R[720]],["sized"]]]],[11,R[724],E,R[731],7,[[["f"]],[[R[13],[R[720]]],[R[720]]]]],[11,R[721],E,R[722],7,[[["self"],["f"]],[U]]],[11,R[695],E,R[726],7,[[]]],[11,R[709],E,R[722],7,[[["self"],["f"]],[U]]],[11,"bump",E,R[727],7,[[["self"]]]],[11,"rwlock",E,R[723],8,[[["self"]],["rwlock"]]],[11,"map",E,R[732],8,[[["f"]],[[R[725]],["sized"]]]],[11,R[724],E,R[733],8,[[["f"]],[[R[725]],[R[13],[R[725]]]]]],[11,R[721],E,R[722],8,[[["self"],["f"]],[U]]],[11,R[728],E,R[734],8,[[],[R[282]]]],[11,R[746],E,"Atomically downgrades a write lock into an upgradable read…",8,[[],[R[718]]]],[11,R[695],E,R[726],8,[[]]],[11,R[709],E,R[722],8,[[["self"],["f"]],[U]]],[11,"bump",E,R[727],8,[[["self"]]]],[11,"rwlock",E,R[723],9,[[["self"]],["rwlock"]]],[11,R[721],E,R[722],9,[[["self"],["f"]],[U]]],[11,"upgrade",E,"Atomically upgrades an upgradable read lock lock into a…",9,[[],[R[283]]]],[11,R[744],E,R[729],9,[[],[[R[283]],[R[13],[R[283]]]]]],[11,R[695],E,R[726],9,[[]]],[11,R[709],E,R[722],9,[[["self"],["f"]],[U]]],[11,"bump",E,R[727],9,[[["self"]]]],[11,R[728],E,"Atomically downgrades an upgradable read lock lock into a…",9,[[],[R[282]]]],[11,R[748],E,R[729],9,[[],[[R[283]],[R[13],[R[283]]]]]],[11,R[750],E,R[729],9,[[],[[R[283]],[R[13],[R[283]]]]]],[11,"map",E,R[730],10,[[["f"]],[[R[720]],["sized"]]]],[11,R[724],E,R[731],10,[[["f"]],[[R[13],[R[720]]],[R[720]]]]],[11,R[695],E,R[726],10,[[]]],[11,"map",E,R[732],11,[[["f"]],[[R[725]],["sized"]]]],[11,R[724],E,R[733],11,[[["f"]],[[R[725]],[R[13],[R[725]]]]]],[11,R[728],E,R[734],11,[[],[R[720]]]],[11,R[695],E,R[726],11,[[]]],[8,"RawMutex",E,"Basic operations for a mutex.",N,N],[18,"INIT",E,R[751],12,N],[16,R[736],E,R[737],12,N],[10,"lock",E,"Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,R[698],E,"Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock",E,"Unlocks this mutex.",12,[[["self"]]]],[8,R[767],E,"Additional methods for mutexes which support fair unlocking.",N,N],[10,R[695],E,"Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump",E,R[710],13,[[["self"]]]],[8,R[768],E,"Additional methods for mutexes which support locking with…",N,N],[16,R[735],E,R[738],14,N],[16,"Instant",E,R[739],14,N],[10,R[705],E,R[690],14,[[["self"]],["bool"]]],[10,R[706],E,R[690],14,[[["self"]],["bool"]]],[8,R[769],E,"Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT",E,R[752],15,N],[10,R[2746],E,"Returns a non-zero thread ID which identifies the current…",15,[[["self"]],[R[9]]]],[8,R[770],E,"Basic operations for a reader-writer lock.",N,N],[18,"INIT",E,R[753],16,N],[16,R[736],E,R[737],16,N],[10,R[2750],E,"Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,R[2751],E,"Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,R[2752],E,"Releases a shared lock.",16,[[["self"]]]],[10,R[2747],E,"Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,R[2748],E,"Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,R[2749],E,"Releases an exclusive lock.",16,[[["self"]]]],[8,R[771],E,"Additional methods for RwLocks which support fair unlocking.",N,N],[10,R[2753],E,"Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,R[2754],E,"Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,R[754],E,R[755],17,[[["self"]]]],[11,R[756],E,R[757],17,[[["self"]]]],[8,R[772],E,R[743],N,N],[10,R[728],E,"Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,R[773],E,"Additional methods for RwLocks which support locking with…",N,N],[16,R[735],E,R[738],19,N],[16,"Instant",E,R[739],19,N],[10,R[2755],E,R[740],19,[[["self"]],["bool"]]],[10,R[2756],E,R[740],19,[[["self"]],["bool"]]],[10,R[2757],E,R[741],19,[[["self"]],["bool"]]],[10,R[2758],E,R[741],19,[[["self"]],["bool"]]],[8,R[774],E,R[742],N,N],[10,R[2759],E,"Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,R[2760],E,"Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,R[775],E,R[742],N,N],[10,R[2761],E,R[740],21,[[["self"]],["bool"]]],[10,R[2762],E,R[740],21,[[["self"]],["bool"]]],[8,R[776],E,R[743],N,N],[10,R[2763],E,"Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,R[2764],E,"Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,R[2765],E,"Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade",E,"Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,R[744],E,R[749],22,[[["self"]],["bool"]]],[8,R[777],E,R[745],N,N],[10,R[2766],E,"Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,R[758],E,R[759],23,[[["self"]]]],[8,R[778],E,R[745],N,N],[10,R[2767],E,"Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,R[746],E,"Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,R[779],E,R[745],N,N],[10,R[2769],E,R[747],25,[[["self"]],["bool"]]],[10,R[2768],E,R[747],25,[[["self"]],["bool"]]],[10,R[748],E,R[749],25,[[["self"]],["bool"]]],[10,R[750],E,R[749],25,[[["self"]],["bool"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,"into",E,E,26,[[],[U]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,"into",E,E,27,[[],[U]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,"into",E,E,6,[[],[U]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,"into",E,E,7,[[],[U]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,"into",E,E,8,[[],[U]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,"into",E,E,9,[[],[U]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,"into",E,E,10,[[],[U]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,"into",E,E,11,[[],[U]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],["mutex"]]],[11,"from",E,E,3,[[[T]],[R[707]]]],[11,"from",E,E,6,[[[T]],["rwlock"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"deref",E,E,5,[[["self"]],[T]]],[11,"deref",E,E,7,[[["self"]],[T]]],[11,"deref",E,E,8,[[["self"]],[T]]],[11,"deref",E,E,9,[[["self"]],[T]]],[11,"deref",E,E,10,[[["self"]],[T]]],[11,"deref",E,E,11,[[["self"]],[T]]],[11,R[60],E,E,1,[[["self"]],[T]]],[11,R[60],E,E,2,[[["self"]],[T]]],[11,R[60],E,E,8,[[["self"]],[T]]],[11,R[60],E,E,11,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"drop",E,E,8,[[["self"]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,R[77],E,E,0,[[],["mutex"]]],[11,R[77],E,E,3,[[],[R[707]]]],[11,R[77],E,E,6,[[],["rwlock"]]],[18,"INIT",E,R[751],12,N],[11,"bump",E,R[710],13,[[["self"]]]],[18,"INIT",E,R[752],15,N],[18,"INIT",E,R[753],16,N],[11,R[754],E,R[755],17,[[["self"]]]],[11,R[756],E,R[757],17,[[["self"]]]],[11,R[758],E,R[759],23,[[["self"]]]]],"p":[[3,"Mutex"],[3,R[286]],[3,R[760]],[3,R[761]],[3,R[762]],[3,R[763]],[3,"RwLock"],[3,R[288]],[3,R[289]],[3,R[764]],[3,R[765]],[3,R[766]],[8,"RawMutex"],[8,R[767]],[8,R[768]],[8,R[769]],[8,R[770]],[8,R[771]],[8,R[772]],[8,R[773]],[8,R[774]],[8,R[775]],[8,R[776]],[8,R[777]],[8,R[778]],[8,R[779]],[3,R[780]],[3,R[781]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,R[3029],E,"Builder for `Record`.",N,N],[3,"Metadata",E,"Metadata about a log message.",N,N],[3,R[3030],E,"Builder for `Metadata`.",N,N],[3,R[3031],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[3032],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,"Debug",E,"The \"debug\" level.",0,N],[13,"Trace",E,"The \"trace\" level.",0,N],[4,R[3028],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[3018]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[3018]]]],[5,"set_boxed_logger",E,"Sets the global logger to a `Box<Log>`.",N,[[["box",["log"]],["log"]],[[R[3019]],[R[13],[R[3019]]]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[3019]],[R[13],[R[3019]]]]]],[5,"set_logger_racy",E,"A thread-unsafe version of [`set_logger`].",N,[[["log"]],[[R[3019]],[R[13],[R[3019]]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[["self"],[R[3026]]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush",E,"Flushes any buffered records.",2,[[["self"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],[R[3018]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[3018]]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[["self"]],[[R[45],["level"]],["level"]]]],[11,"builder",E,R[3022],3,[[],[R[3020]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[3034]]]],[11,R[3026],E,"Metadata about the log directive.",3,[[["self"]],[R[3026]]]],[11,"level",E,R[3023],3,[[["self"]],["level"]]],[11,"target",E,R[3024],3,[[["self"]],["str"]]],[11,R[3021],E,"The module path of the message.",3,[[["self"]],[["str"],[R[45],["str"]]]]],[11,"file",E,"The source file containing the message.",3,[[["self"]],[["str"],[R[45],["str"]]]]],[11,"line",E,"The line containing the message.",3,[[["self"]],[["u32"],[R[45],["u32"]]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[3020]]]],[11,"args",E,"Set `args`.",4,[[["self"],[R[3034]]],[R[3020]]]],[11,R[3026],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],[R[3026]]],[R[3020]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[3020]]]],[11,"target",E,"Set `Metadata::target`",4,[[["self"],["str"]],[R[3020]]]],[11,R[3021],E,"Set `module_path`",4,[[["self"],["str"],[R[45],["str"]]],[R[3020]]]],[11,"file",E,"Set `file`",4,[[["self"],["str"],[R[45],["str"]]],[R[3020]]]],[11,"line",E,"Set `line`",4,[[["self"],["u32"],[R[45],["u32"]]],[R[3020]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder",E,R[3022],5,[[],[R[3025]]]],[11,"level",E,R[3023],5,[[["self"]],["level"]]],[11,"target",E,R[3024],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[3025]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[3025]]]],[11,"target",E,"Setter for `target`.",6,[[["self"],["str"]],[R[3025]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[3026]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[62],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[62],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[3018]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[3026]]]],[11,"cmp",E,E,0,[[["level"],["self"]],[R[47]]]],[11,"cmp",E,E,1,[[["self"],[R[3018]]],[R[47]]]],[11,"cmp",E,E,5,[[["self"],[R[3026]]],[R[47]]]],[11,"cmp",E,E,6,[[["self"],[R[3025]]],[R[47]]]],[11,R[63],E,E,0,[[["level"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["level"],["self"]],["bool"]]],[11,"le",E,E,0,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["level"],["self"]],["bool"]]],[11,R[63],E,E,0,[[["self"],[R[3018]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["self"],[R[3018]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[3018]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[3018]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[3018]]],["bool"]]],[11,R[63],E,E,1,[[["self"],[R[3018]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,1,[[["self"],[R[3018]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[3018]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[3018]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[3018]]],["bool"]]],[11,R[63],E,E,1,[[["level"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,1,[[["level"],["self"]],["bool"]]],[11,"le",E,E,1,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,1,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,1,[[["level"],["self"]],["bool"]]],[11,R[63],E,E,5,[[["self"],[R[3026]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,5,[[["self"],[R[3026]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[3026]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[3026]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[3026]]],["bool"]]],[11,R[63],E,E,6,[[["self"],[R[3025]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,6,[[["self"],[R[3025]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[3025]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[3025]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[3025]]],["bool"]]],[11,"eq",E,E,0,[[["level"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[3018]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[3018]]],["bool"]]],[11,"eq",E,E,1,[[["level"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[3026]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[3026]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[3025]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[3025]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[3027]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[3027]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,R[551],E,E,0,[[["str"]],[[R[13],["level"]],["level"]]]],[11,R[551],E,E,1,[[["str"]],[[R[3018]],[R[13],[R[3018]]]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,R[31],E,E,7,[[["self"]],["str"]]],[11,R[31],E,E,8,[[["self"]],["str"]]],[11,R[3033],E,E,0,[[["self"],["s"]],[R[13]]]],[11,R[3033],E,E,1,[[["self"],["s"]],[R[13]]]],[11,R[2809],E,E,0,[[["d"]],[R[13]]]],[11,R[2809],E,E,1,[[["d"]],[R[13]]]]],"p":[[4,"Level"],[4,R[3028]],[8,"Log"],[3,"Record"],[3,R[3029]],[3,"Metadata"],[3,R[3030]],[3,R[3031]],[3,R[3032]]]};
searchIndex["log4rs"]={"doc":"log4rs is a highly configurable logging framework modeled…","i":[[3,"Handle","log4rs","A handle to the active logger.",N,N],[4,"Error",E,"An error initializing the logging framework from a file.",N,N],[13,"Log",E,"An error from the log crate",0,N],[13,"Log4rs",E,"A fatal error initializing the log4rs config.",0,N],[5,"init_file",E,"Initializes the global logger as a log4rs logger…",N,[[[R[3132]],["p"]],[["error"],[R[13],["error"]]]]],[5,"load_config_file",E,"Loads a log4rs logger configuration from a file.",N,[[[R[3132]],["p"]],[[R[13],["config","error"]],["error"],["config"]]]],[5,"init_config",E,"Initializes the global logger as a log4rs logger with the…",N,[[["config"]],[[R[3019]],[R[13],["handle",R[3019]]],["handle"]]]],[0,"append",E,"Appenders",N,N],[3,R[3172],R[3135],R[3137],N,N],[12,"kind",E,"The appender kind.",1,N],[12,"filters",E,"The filters attached to the appender.",1,N],[12,"config",E,"The appender configuration.",1,N],[0,"file",E,"The file appender.",N,N],[3,R[3189],R[3152],"The file appender's configuration.",N,N],[3,R[3173],E,"An appender which logs to a file.",N,N],[3,R[3174],E,"A builder for `FileAppender`s.",N,N],[3,R[3190],E,"A deserializer for the `FileAppender`.",N,N],[11,"builder",E,"Creates a new `FileAppender` builder.",2,[[],[R[3133]]]],[11,"encoder",E,"Sets the output encoder for the `FileAppender`.",3,[[["box",["encode"]],["encode"]],[R[3133]]]],[11,"append",E,"Determines if the appender will append to or truncate the…",3,[[["bool"]],[R[3133]]]],[11,"build",E,"Consumes the `FileAppenderBuilder`, producing a…",3,[[["path"],["asref",["path"]]],[[R[13],[R[3134]]],[R[3134]]]]],[0,"console",R[3135],"The console appender.",N,N],[3,R[3191],R[3153],"The console appender's configuration.",N,N],[3,R[3175],E,"An appender which logs to standard out.",N,N],[3,R[3176],E,"A builder for `ConsoleAppender`s.",N,N],[3,R[3192],E,"A deserializer for the `ConsoleAppender`.",N,N],[4,"Target",E,"The stream to log to.",N,N],[13,"Stdout",E,"Standard output.",4,N],[13,"Stderr",E,"Standard error.",4,N],[11,"builder",E,"Creates a new `ConsoleAppender` builder.",5,[[],[R[3136]]]],[11,"encoder",E,"Sets the output encoder for the `ConsoleAppender`.",6,[[["box",["encode"]],["encode"]],[R[3136]]]],[11,"target",E,"Sets the output stream to log to.",6,[[["target"]],[R[3136]]]],[11,"build",E,"Consumes the `ConsoleAppenderBuilder`, producing a…",6,[[],["consoleappender"]]],[8,"Append",R[3135],"A trait implemented by log4rs appenders.",N,N],[10,"append",E,"Processes the provided `Record`.",7,[[["self"],["record"]],[[R[13],["box"]],["box",["error"]]]]],[10,"flush",E,"Flushes all in-flight records.",7,[[["self"]]]],[0,"config","log4rs","log4rs configuration",N,N],[3,"Root",R[3154],"Configuration for the root logger.",N,N],[3,R[3177],E,"A builder for `Root`s.",N,N],[3,"Appender",E,R[3137],N,N],[3,R[3178],E,"A builder for `Appender`s.",N,N],[3,"Logger",E,"Configuration for a logger.",N,N],[3,R[3179],E,"A builder for `Logger`s.",N,N],[3,"Config",E,"A log4rs configuration.",N,N],[3,R[3180],E,"A builder for `Config`s.",N,N],[3,"Errors",E,"Errors encountered when validating a log4rs `Config`.",N,N],[4,"Error",E,"An error validating a log4rs `Config`.",N,N],[13,"DuplicateAppenderName",E,"Multiple appenders were registered with the same name.",8,N],[13,"NonexistentAppender",E,"A reference to a nonexistant appender.",8,N],[13,"DuplicateLoggerName",E,"Multiple loggers were registered with the same name.",8,N],[13,"InvalidLoggerName",E,"A logger name was invalid.",8,N],[11,"builder",E,"Creates a new `RootBuilder` with no appenders.",9,[[],[R[3138]]]],[11,"level",E,"Returns the minimum level of log messages that the root…",9,[[["self"]],[R[3018]]]],[11,R[3143],E,R[3140],9,[[["self"]]]],[11,"appender",E,R[3141],10,[[[T]],[R[3138]]]],[11,R[3143],E,R[3144],10,[[["i"]],[R[3138]]]],[11,"build",E,"Consumes the `RootBuilder`, returning the `Root`.",10,[[[R[3018]]],["root"]]],[11,"builder",E,"Creates a new `AppenderBuilder` with the specified name…",11,[[],[R[3139]]]],[11,"name",E,"Returns the name of the appender.",11,[[["self"]],["str"]]],[11,"appender",E,"Returns the appender.",11,[[["self"]],["append"]]],[11,"filters",E,"Returns the filters attached to the appender.",11,[[["self"]]]],[11,"filter",E,"Adds a filter.",12,[[["box",["filter"]],["filter"]],[R[3139]]]],[11,"filters",E,"Adds filters.",12,[[["i"]],[R[3139]]]],[11,"build",E,"Consumes the `AppenderBuilder`, returning the `Appender`.",12,[[["append"],[T],["box",["append"]]],["appender"]]],[11,"builder",E,"Creates a new `LoggerBuilder` with the specified name and…",13,[[],[R[3142]]]],[11,"name",E,"Returns the name of the logger.",13,[[["self"]],["str"]]],[11,"level",E,"Returns the minimum level of log messages that the logger…",13,[[["self"]],[R[3018]]]],[11,R[3143],E,R[3140],13,[[["self"]]]],[11,"additive",E,"Determines if appenders of parent loggers will also be…",13,[[["self"]],["bool"]]],[11,"appender",E,R[3141],14,[[[T]],[R[3142]]]],[11,R[3143],E,R[3144],14,[[["i"]],[R[3142]]]],[11,"additive",E,"Sets the additivity of the logger.",14,[[["bool"]],[R[3142]]]],[11,"build",E,"Consumes the `LoggerBuilder`, returning the `Logger`.",14,[[[T],[R[3018]]],["logger"]]],[11,"builder",E,"Creates a new `ConfigBuilder`.",15,[[],[R[3145]]]],[11,R[3143],E,"Returns the `Appender`s associated with the `Config`.",15,[[["self"]]]],[11,"root",E,"Returns the `Root` associated with the `Config`.",15,[[["self"]],["root"]]],[11,"loggers",E,"Returns the `Logger`s associated with the `Config`.",15,[[["self"]]]],[11,"appender",E,R[3141],16,[[["appender"]],[R[3145]]]],[11,R[3143],E,R[3144],16,[[["i"]],[R[3145]]]],[11,"logger",E,"Adds a logger.",16,[[["logger"]],[R[3145]]]],[11,"loggers",E,"Adds loggers.",16,[[["i"]],[R[3145]]]],[11,"build_lossy",E,R[3146],16,[[["root"]]]],[11,"build",E,R[3146],16,[[["root"]],[[R[13],["config","errors"]],["config"],["errors"]]]],[11,"errors",E,"Returns a slice of `Error`s.",17,[[["self"]]]],[0,"filter","log4rs","Filters",N,N],[3,R[3181],R[3147],"Configuration for a filter.",N,N],[12,"kind",E,"The filter kind.",18,N],[12,"config",E,"The filter configuration.",18,N],[4,"Response",E,"The response returned by a filter.",N,N],[13,"Accept",E,"Accept the log event.",19,N],[13,"Neutral",E,"Take no action on the log event.",19,N],[13,"Reject",E,"Reject the log event.",19,N],[0,"threshold",E,"The threshold filter.",N,N],[3,R[3193],R[3155],"The threshold filter's configuration.",N,N],[3,R[3182],E,"A filter that rejects all events at a level below a…",N,N],[3,R[3194],E,"A deserializer for the `ThresholdFilter`.",N,N],[11,"new",E,"Creates a new `ThresholdFilter` with the specified…",20,[[[R[3018]]],["thresholdfilter"]]],[8,"Filter",R[3147],"The trait implemented by log4rs filters.",N,N],[10,"filter",E,"Filters a log event.",21,[[["self"],["record"]],["response"]]],[0,"file","log4rs","Support for log4rs configuration from files.",N,N],[3,R[3184],R[3156],"A container of `Deserialize`rs.",N,N],[3,"Error",E,"An error deserializing a configuration into a log4rs…",N,N],[3,"RawConfig",E,"A raw deserializable log4rs configuration.",N,N],[8,R[3183],E,"A trait implemented by traits which are deserializable.",N,N],[10,"name",E,"Returns a name for objects implementing the trait suitable…",22,[[],["str"]]],[8,R[2833],E,"A trait for objects that can deserialize log4rs components…",N,N],[16,"Trait",E,"The trait that this deserializer will create.",23,N],[16,"Config",E,"This deserializer's configuration.",23,N],[10,R[2809],E,"Create a new trait object based on the provided config.",23,[[["self"],[R[3132]]],[[R[13],["box","box"]],["box"],["box",["error"]]]]],[11,"new",E,"Creates a `Deserializers` with default mappings.",24,[[],[R[3132]]]],[11,"empty",E,"Creates a new `Deserializers` with no mappings.",24,[[],[R[3132]]]],[11,"insert",E,"Adds a mapping from the specified `kind` to a deserializer.",24,[[["self"],[T],["str"]]]],[11,R[2809],E,"Deserializes a value of a specific type and kind.",24,[[["self"],["value"],["str"]],[["box",["error"]],[R[13],["box","box"]],["box"]]]],[11,"root",E,"Returns the root.",25,[[["self"]],["root"]]],[11,"loggers",E,"Returns the loggers.",25,[[["self"]],[["logger"],["vec",["logger"]]]]],[11,"appenders_lossy",E,"Returns the appenders.",25,[[["self"],[R[3132]]]]],[11,"refresh_rate",E,"Returns the requested refresh rate.",25,[[["self"]],[[R[45],[R[411]]],[R[411]]]]],[0,"encode","log4rs","Encoders",N,N],[3,R[3185],R[3148],"Configuration for an encoder.",N,N],[12,"kind",E,"The encoder's kind.",26,N],[12,"config",E,"The encoder's configuration.",26,N],[3,"Style",E,"The style applied to text output.",N,N],[12,"text",E,"The text (or foreground) color.",27,N],[12,R[3280],E,"The background color.",27,N],[12,"intense",E,"True if the text should have increased intensity.",27,N],[4,"Color",E,"A text or background color.",N,N],[13,"Black",E,E,28,N],[13,"Red",E,E,28,N],[13,"Green",E,E,28,N],[13,"Yellow",E,E,28,N],[13,"Blue",E,E,28,N],[13,"Magenta",E,E,28,N],[13,"Cyan",E,E,28,N],[13,"White",E,E,28,N],[0,"pattern",E,"A simple pattern-based encoder.",N,N],[3,R[3195],R[3161],"The pattern encoder's configuration.",N,N],[3,R[3186],E,"An `Encode`r configured via a format string.",N,N],[3,R[3196],E,"A deserializer for the `PatternEncoder`.",N,N],[11,"new",E,"Creates a `PatternEncoder` from a pattern string.",29,[[["str"]],[R[3166]]]],[0,"writer",R[3148],"Implementations of the `encode::Write` trait.",N,N],[0,"ansi",R[3149],"The ANSI writer.",N,N],[3,"AnsiWriter",R[3162],"An `encode::Write`r that wraps an `io::Write`r, emitting…",N,N],[12,"0",E,E,30,N],[0,"console",R[3149],"The console writer",N,N],[3,R[3187],R[3163],"An `encode::Write`r that outputs to a console.",N,N],[3,R[3197],E,"An RAII lock over a console.",N,N],[11,"stdout",E,R[3151],31,[[],[[R[45],[R[3150]]],[R[3150]]]]],[11,"stderr",E,R[3151],31,[[],[[R[45],[R[3150]]],[R[3150]]]]],[11,"lock",E,"Locks the console, preventing other threads from writing…",31,[[["self"]],["consolewriterlock"]]],[0,"simple",R[3149],"The simple writer",N,N],[3,R[3188],R[3164],"An `encode::Write`r that simply delegates to an…",N,N],[12,"0",E,E,32,N],[8,"Encode",R[3148],"A trait implemented by types that can serialize a `Record`…",N,N],[10,"encode",E,"Encodes the `Record` into bytes and writes them.",33,[[["self"],["record"],["write"]],[[R[13],["box"]],["box",["error"]]]]],[8,"Write",E,"A trait for types that an `Encode`r will write to.",N,N],[11,R[3165],E,"Sets the output text style, if supported.",34,[[["self"],["style"]],[R[13]]]],[11,"new",E,"Returns a `Style` with all fields set to their defaults.",27,[[],["style"]]],[11,"text",E,"Sets the text color.",27,[[["self"],["color"]],["style"]]],[11,R[3280],E,"Sets the background color.",27,[[["self"],["color"]],["style"]]],[11,"intense",E,"Sets the text intensity.",27,[[["self"],["bool"]],["style"]]],[11,"set_config","log4rs","Sets the logging configuration.",35,[[["self"],["config"]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",R[3135],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",R[3152],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"append",E,E,2,[[["self"],["record"]],[["box",["error"]],[R[13],["box"]]]]],[11,"flush",E,E,2,[[["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",R[3153],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"append",E,E,5,[[["self"],["record"]],[["box",["error"]],[R[13],["box"]]]]],[11,"flush",E,E,5,[[["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",R[3154],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,R[62],E,E,17,[[["self"]],["string"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,R[62],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",R[3147],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",R[3155],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,"from",R[3156],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[[T],["self"]]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,R[3333],E,E,24,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3158],E,E,24,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3159],E,E,24,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,24,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[62],E,E,42,[[["self"]],["string"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",R[3148],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[[T],["self"]]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,R[3333],E,E,27,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3158],E,E,27,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3159],E,E,27,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,27,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[[T],["self"]]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,R[3333],E,E,28,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3158],E,E,28,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3159],E,E,28,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,28,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,"from",R[3161],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"from",R[3162],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,"from",R[3163],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,"from",R[3164],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"append",R[3152],E,2,[[["self"],["record"]],[[R[13],["box"]],["box",["error"]]]]],[11,"flush",E,E,2,[[["self"]]]],[11,"append",R[3153],E,5,[[["self"],["record"]],[[R[13],["box"]],["box",["error"]]]]],[11,"flush",E,E,5,[[["self"]]]],[11,"filter",R[3155],E,20,[[["self"],["record"]],["response"]]],[11,"name",R[3135],E,7,[[],["str"]]],[11,"name",R[3147],E,21,[[],["str"]]],[11,"name",R[3148],E,33,[[],["str"]]],[11,R[2809],R[3152],E,37,[[["self"],["fileappenderconfig"],[R[3132]]],[[R[13],["box","box"]],["box",["error"]],["box",["append"]]]]],[11,R[2809],R[3153],E,39,[[["self"],["consoleappenderconfig"],[R[3132]]],[[R[13],["box","box"]],["box",["error"]],["box",["append"]]]]],[11,R[2809],R[3155],E,41,[[[R[3132]],["self"],["thresholdfilterconfig"]],[["box",["filter"]],[R[13],["box","box"]],["box",["error"]]]]],[11,R[2809],R[3161],E,44,[[[R[3132]],["self"],["patternencoderconfig"]],[["box",["encode"]],[R[13],["box","box"]],["box",["error"]]]]],[11,"encode",E,E,29,[[["write"],["self"],["record"]],[[R[13],["box"]],["box",["error"]]]]],[11,R[3165],R[3162],E,30,[[["self"],["style"]],[R[13]]]],[11,R[3165],R[3163],E,31,[[["self"],["style"]],[R[13]]]],[11,R[3165],E,E,45,[[["self"],["style"]],[R[13]]]],[11,R[77],R[3156],E,24,[[],[R[3132]]]],[11,R[77],R[3161],E,29,[[],[R[3166]]]],[11,R[77],R[3148],E,27,[[],["style"]]],[11,"clone",R[3156],E,24,[[["self"]],[R[3132]]]],[11,"clone",R[3148],E,28,[[["self"]],["color"]]],[11,"clone",E,E,27,[[["self"]],["style"]]],[11,"from","log4rs",E,0,[[[R[3019]]],["error"]]],[11,"from",E,E,0,[[["box",["error"]],["error"]],["error"]]],[11,"eq",R[3135],E,1,[[["self"],[R[3167]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[3167]]],["bool"]]],[11,"eq",R[3147],E,18,[[[R[3168]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[3168]],["self"]],["bool"]]],[11,"fmt",R[3152],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3153],E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3135],E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3154],E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3155],E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3147],E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3156],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3161],E,29,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3162],E,30,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3164],E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3148],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","log4rs",E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3154],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3156],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","log4rs",E,0,[[["self"],[R[30]]],[R[13]]]],[11,"write",R[3162],E,30,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,30,[[["self"]],[R[13]]]],[11,R[3170],E,E,30,[[["self"]],[R[13]]]],[11,R[3169],E,E,30,[[["self"],[R[3034]]],[R[13]]]],[11,"write",R[3163],E,31,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,31,[[["self"]],[R[13]]]],[11,R[3170],E,E,31,[[["self"]],[R[13]]]],[11,R[3169],E,E,31,[[["self"],[R[3034]]],[R[13]]]],[11,"write",E,E,45,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,45,[[["self"]],[R[13]]]],[11,R[3170],E,E,45,[[["self"]],[R[13]]]],[11,R[3169],E,E,45,[[["self"],[R[3034]]],[R[13]]]],[11,"write",R[3164],E,32,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,32,[[["self"]],[R[13]]]],[11,R[3170],E,E,32,[[["self"]],[R[13]]]],[11,R[3169],E,E,32,[[["self"],[R[3034]]],[R[13]]]],[11,R[31],R[3154],E,17,[[["self"]],["str"]]],[11,R[31],E,E,8,[[["self"]],["str"]]],[11,R[31],R[3156],E,42,[[["self"]],["str"]]],[11,"cause",E,E,42,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[31],"log4rs",E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[2809],R[3152],E,36,[[["__d"]],[R[13]]]],[11,R[2809],R[3153],E,38,[[["__d"]],[R[13]]]],[11,R[2809],R[3135],E,1,[[["d"]],[[R[13],[R[3167]]],[R[3167]]]]],[11,R[2809],R[3155],E,40,[[["__d"]],[R[13]]]],[11,R[2809],R[3147],E,18,[[["d"]],[[R[13],[R[3168]]],[R[3168]]]]],[11,R[2809],R[3156],E,25,[[["__d"]],[R[13]]]],[11,R[2809],R[3161],E,43,[[["__d"]],[R[13]]]],[11,R[2809],R[3148],E,26,[[["d"]],[[R[3171]],[R[13],[R[3171]]]]]]],"p":[[4,"Error"],[3,R[3172]],[3,R[3173]],[3,R[3174]],[4,"Target"],[3,R[3175]],[3,R[3176]],[8,"Append"],[4,"Error"],[3,"Root"],[3,R[3177]],[3,"Appender"],[3,R[3178]],[3,"Logger"],[3,R[3179]],[3,"Config"],[3,R[3180]],[3,"Errors"],[3,R[3181]],[4,"Response"],[3,R[3182]],[8,"Filter"],[8,R[3183]],[8,R[2833]],[3,R[3184]],[3,"RawConfig"],[3,R[3185]],[3,"Style"],[4,"Color"],[3,R[3186]],[3,"AnsiWriter"],[3,R[3187]],[3,R[3188]],[8,"Encode"],[8,"Write"],[3,"Handle"],[3,R[3189]],[3,R[3190]],[3,R[3191]],[3,R[3192]],[3,R[3193]],[3,R[3194]],[3,"Error"],[3,R[3195]],[3,R[3196]],[3,R[3197]]]};
searchIndex["log_mdc"]={"doc":"A mapped diagnostic context (MDC) for use with the `log`…","i":[[3,R[290],"log_mdc","A guard object which restores an MDC entry when dropped.",N,N],[3,R[291],E,"A guard objects which restores MDC entries when dropped.",N,N],[5,"insert",E,"Inserts a new entry into the MDC, returning the old value.",N,[[["k"],["v"]],[[R[45],["string"]],["string"]]]],[5,"insert_scoped",E,"Inserts a new entry into the MDC in a scoped fashion.",N,[[["k"],["v"]],["insertguard"]]],[5,"extend",E,"Extends the MDC with new entries.",N,[[["i"]]]],[5,"extend_scoped",E,"Extends the MDC with new entries in a scoped fashion.",N,[[["i"]],["extendguard"]]],[5,"get",E,"Retrieves a value from the MDC.",N,[[["q"],["f"]],[T]]],[5,"remove",E,"Removes a value from the MDC.",N,[[["q"]],[[R[45],["string"]],["string"]]]],[5,"clear",E,"Removes all values from the MDC.",N,[[]]],[5,"iter",E,"Invokes the provided closure for each entry in the MDC.",N,[[["f"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,R[290]],[3,R[291]]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","i":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,R[3085],E,"Handle to a user space `Poll` registration.",N,N],[3,R[3086],E,"Updates the readiness state of the associated…",N,N],[3,"PollOpt",E,"Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready",E,"A set of readiness event kinds",N,N],[3,"Token",E,"Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0",E,E,0,N],[3,"Events",E,R[3078],N,N],[11,"empty",E,"Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge",E,"Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level",E,"Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot",E,"Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge",E,"Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level",E,"Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot",E,"Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,R[1110],E,R[3074],1,[[["pollopt"],["self"]],["bool"]]],[11,"insert",E,"Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove",E,R[3073],1,[[["self"],["pollopt"]]]],[11,"empty",E,"Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable",E,"Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable",E,"Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all",E,"Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,R[73],E,"Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable",E,"Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable",E,"Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert",E,"Adds all readiness represented by `other` into `self`.",2,[[["self"],["into"]]]],[11,"remove",E,R[3073],2,[[["self"],["into"]]]],[11,R[1110],E,R[3074],2,[[["self"],["into"]],["bool"]]],[11,R[2293],E,"Create a `Ready` instance using the given `usize`…",2,[[[R[9]]],["ready"]]],[11,"as_usize",E,"Returns a `usize` representation of the `Ready` value.",2,[[["self"]],[R[9]]]],[11,"new",E,"Return a new `Poll` handle.",3,[[],[["poll"],[R[13],["poll"]]]]],[11,R[3081],E,"Register an `Evented` handle with the `Poll` instance.",3,[[["ready"],["e"],["token"],["self"],["pollopt"]],[R[13]]]],[11,R[3079],E,"Re-register an `Evented` handle with the `Poll` instance.",3,[[["ready"],["e"],["token"],["self"],["pollopt"]],[R[13]]]],[11,R[3080],E,"Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],[R[13]]]],[11,"poll",E,"Wait for readiness events",3,[[["events"],[R[411]],["self"],[R[45],[R[411]]]],[[R[9]],[R[13],[R[9]]]]]],[11,"poll_interruptible",E,"Like `poll`, but may be interrupted by a signal",3,[[["events"],[R[411]],["self"],[R[45],[R[411]]]],[[R[9]],[R[13],[R[9]]]]]],[11,R[72],E,"Return a new `Events` capable of holding up to `capacity`…",4,[[[R[9]]],["events"]]],[11,R[74],E,"Returns the number of `Event` values that `self` can hold.",4,[[["self"]],[R[9]]]],[11,R[73],E,"Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter",E,"Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear",E,"Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2",E,"Create and return a new `Registration` and the associated…",5,[[]]],[11,"readiness",E,"Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness",E,"Set the registration's readiness",6,[[["ready"],["self"]],[R[13]]]],[0,"net",E,"Networking primitives",N,N],[3,R[3087],"mio::net","A structure representing a socket server",N,N],[3,R[3492],E,"A non-blocking TCP stream between a local socket and a…",N,N],[3,R[3501],E,"A User Datagram Protocol socket.",N,N],[11,"connect",E,"Create a new TCP stream and issue a non-blocking connect…",7,[[[R[806]]],[[R[13],[R[805]]],[R[805]]]]],[11,"connect_stream",E,R[3488],7,[[[R[805]],[R[806]]],[[R[13],[R[805]]],[R[805]]]]],[11,R[3442],E,"Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[[R[805]]],[[R[13],[R[805]]],[R[805]]]]],[11,R[3490],E,"Returns the socket address of the remote peer of this TCP…",7,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3076],E,"Returns the socket address of the local half of this TCP…",7,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3117],E,R[3075],7,[[["self"]],[[R[13],[R[805]]],[R[805]]]]],[11,R[3116],E,R[3444],7,[[["self"],[R[3116]]],[R[13]]]],[11,R[3088],E,R[3089],7,[[["self"],["bool"]],[R[13]]]],[11,"nodelay",E,R[3090],7,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[835],E,R[836],7,[[["self"],[R[9]]],[R[13]]]],[11,R[837],E,R[838],7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[839],E,R[840],7,[[["self"],[R[9]]],[R[13]]]],[11,R[841],E,R[842],7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[3091],E,R[822],7,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[11,R[3491],E,R[823],7,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[11,"set_ttl",E,R[810],7,[[["self"],["u32"]],[R[13]]]],[11,"ttl",E,R[828],7,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[829],E,R[811],7,[[["self"],["bool"]],[R[13]]]],[11,"only_v6",E,R[830],7,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[832],E,"Sets the value for the `SO_LINGER` option on this socket.",7,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[11,"linger",E,"Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[11,R[816],E,R[817],7,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,"peek",E,R[3115],7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"read_bufs",E,R[3445],7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"write_bufs",E,R[3446],7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"bind",E,"Convenience method to bind a new TCP listener to the…",8,[[[R[806]]],[[R[13],[R[804]]],[R[804]]]]],[11,R[3118],E,"Creates a new `TcpListener` from an instance of a…",8,[[[R[804]]],[[R[13],[R[804]]],[R[804]]]]],[11,"accept",E,"Accepts a new `TcpStream`.",8,[[["self"]],[R[13]]]],[11,"accept_std",E,"Accepts a new `std::net::TcpStream`.",8,[[["self"]],[R[13]]]],[11,R[3076],E,R[3440],8,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3117],E,R[3075],8,[[["self"]],[[R[13],[R[804]]],[R[804]]]]],[11,"set_ttl",E,R[810],8,[[["self"],["u32"]],[R[13]]]],[11,"ttl",E,R[828],8,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[829],E,R[811],8,[[["self"],["bool"]],[R[13]]]],[11,"only_v6",E,R[830],8,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[816],E,R[817],8,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,"bind",E,"Creates a UDP socket from the given address.",9,[[[R[806]]],[[R[13],[R[809]]],[R[809]]]]],[11,"from_socket",E,"Creates a new mio-wrapped socket from an underlying and…",9,[[[R[809]]],[[R[13],[R[809]]],[R[809]]]]],[11,R[3076],E,"Returns the socket address that this socket was created…",9,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3117],E,R[3075],9,[[["self"]],[[R[13],[R[809]]],[R[809]]]]],[11,"send_to",E,R[3498],9,[[[R[806]],["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"recv_from",E,R[3500],9,[[["self"]],[R[13]]]],[11,"send",E,R[3077],9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"recv",E,"Receives data from the socket previously bound with…",9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"connect",E,R[3496],9,[[["self"],[R[806]]],[R[13]]]],[11,R[3092],E,R[3093],9,[[["self"],["bool"]],[R[13]]]],[11,R[862],E,R[3094],9,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3095],E,R[3096],9,[[["self"],["bool"]],[R[13]]]],[11,R[3097],E,R[3098],9,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3099],E,R[3100],9,[[["self"],["u32"]],[R[13]]]],[11,R[3101],E,R[3102],9,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[3103],E,R[3104],9,[[["self"],["bool"]],[R[13]]]],[11,R[3105],E,R[3106],9,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,"set_ttl",E,R[810],9,[[["self"],["u32"]],[R[13]]]],[11,"ttl",E,R[828],9,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[3107],E,R[3108],9,[[[R[843]],["self"]],[R[13]]]],[11,R[3109],E,R[3110],9,[[[R[1326]],["self"],["u32"]],[R[13]]]],[11,R[3111],E,R[3112],9,[[[R[843]],["self"]],[R[13]]]],[11,R[3113],E,R[3114],9,[[[R[1326]],["self"],["u32"]],[R[13]]]],[11,R[829],E,R[811],9,[[["self"],["bool"]],[R[13]]]],[11,"only_v6",E,R[830],9,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[816],E,R[817],9,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,"recv_bufs",E,"Receives a single datagram message socket previously bound…",9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"send_bufs",E,R[3077],9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events",R[3082],R[3078],N,N],[3,"Iter",E,"[`Events`] iterator.",N,N],[3,"Event",E,"An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented",E,"A value that may be registered with `Poll`",N,N],[10,R[3081],E,"Register `self` with the given `Poll` instance.",10,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[10,R[3079],E,"Re-register `self` with the given `Poll` instance.",10,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[10,R[3080],E,"Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],[R[13]]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd",R[3083],"Adapter for [`RawFd`] providing an [`Evented`]…",N,N],[12,"0",E,E,11,N],[3,"UnixReady",E,"Unix specific extensions to `Ready`",N,N],[11,"from","mio",E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[43],E,E,4,[[],["i"]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",R[3082],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[43],E,E,13,[[],["i"]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",R[3083],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from","mio::net",E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,R[3081],"mio",E,5,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3079],E,E,5,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3080],E,E,5,[[["self"],["poll"]],[R[13]]]],[11,R[3081],R[3083],E,11,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3079],E,E,11,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3080],E,E,11,[[["self"],["poll"]],[R[13]]]],[11,R[3081],"mio::net",E,7,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3079],E,E,7,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3080],E,E,7,[[["self"],["poll"]],[R[13]]]],[11,R[3081],E,E,8,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3079],E,E,8,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3080],E,E,8,[[["self"],["poll"]],[R[13]]]],[11,R[3081],E,E,9,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3079],E,E,9,[[["ready"],["token"],["self"],["pollopt"],["poll"]],[R[13]]]],[11,R[3080],E,E,9,[[["self"],["poll"]],[R[13]]]],[11,"next",R[3082],E,13,[[["self"]],[["event"],[R[45],["event"]]]]],[11,"clone","mio",E,1,[[["self"]],["pollopt"]]],[11,"clone",E,E,2,[[["self"]],["ready"]]],[11,"clone",R[3082],E,12,[[["self"]],["event"]]],[11,"clone","mio",E,6,[[["self"]],["setreadiness"]]],[11,"clone",R[3082],E,13,[[["self"]],["iter"]]],[11,"clone",R[3083],E,14,[[["self"]],[R[3084]]]],[11,"clone","mio",E,0,[[["self"]],["token"]]],[11,"cmp",E,E,1,[[["self"],["pollopt"]],[R[47]]]],[11,"cmp",E,E,2,[[["self"],["ready"]],[R[47]]]],[11,"cmp",R[3083],E,14,[[["self"],[R[3084]]],[R[47]]]],[11,"cmp","mio",E,0,[[["token"],["self"]],[R[47]]]],[11,"from",R[3083],E,14,[[["ready"]],[R[3084]]]],[11,"from","mio",E,2,[[[R[3084]]],["ready"]]],[11,"from",E,E,0,[[[R[9]]],["token"]]],[11,"drop",E,E,5,[[["self"]]]],[11,R[43],E,E,4,[[]]],[11,R[63],E,E,1,[[["self"],["pollopt"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,1,[[["self"],["pollopt"]],["bool"]]],[11,"le",E,E,1,[[["self"],["pollopt"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["pollopt"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["pollopt"]],["bool"]]],[11,R[63],E,E,2,[[["self"],["ready"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"le",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["ready"]],["bool"]]],[11,R[63],R[3083],E,14,[[["self"],[R[3084]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,14,[[["self"],[R[3084]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[3084]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[3084]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[3084]]],["bool"]]],[11,R[63],"mio",E,0,[[["token"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["token"],["self"]],["bool"]]],[11,"le",E,E,0,[[["token"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["token"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["token"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["pollopt"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["pollopt"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"eq",R[3082],E,12,[[["event"],["self"]],["bool"]]],[11,"ne",E,E,12,[[["event"],["self"]],["bool"]]],[11,"eq",R[3083],E,14,[[["self"],[R[3084]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[3084]]],["bool"]]],[11,"eq","mio",E,0,[[["token"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["token"],["self"]],["bool"]]],[11,R[60],R[3083],E,14,[[["self"]],["ready"]]],[11,"fmt","mio",E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3082],E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","mio",E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3082],E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","mio",E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3083],E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","mio",E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","mio::net",E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"sub","mio",E,1,[[["pollopt"]],["pollopt"]]],[11,"sub",E,E,2,[[[T]],["ready"]]],[11,"sub",R[3083],E,14,[[[R[3084]]],[R[3084]]]],[11,R[1432],"mio",E,2,[[["self"],[T]]]],[11,"bitand",E,E,1,[[["pollopt"]],["pollopt"]]],[11,"bitand",E,E,2,[[[T]],["ready"]]],[11,"bitand",R[3083],E,14,[[[R[3084]]],[R[3084]]]],[11,"bitor","mio",E,1,[[["pollopt"]],["pollopt"]]],[11,"bitor",E,E,2,[[[T]],["ready"]]],[11,"bitor",R[3083],E,14,[[[R[3084]]],[R[3084]]]],[11,"bitxor","mio",E,1,[[["pollopt"]],["pollopt"]]],[11,"bitxor",E,E,2,[[[T]],["ready"]]],[11,"bitxor",R[3083],E,14,[[[R[3084]]],[R[3084]]]],[11,R[1437],"mio",E,2,[[["self"],[T]]]],[11,R[1439],E,E,2,[[["self"],[T]]]],[11,R[1441],E,E,2,[[["self"],[T]]]],[11,"deref",R[3083],E,14,[[["self"]],["ready"]]],[11,"hash","mio",E,0,[[["self"],["__h"]]]],[11,"write","mio::net",E,7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,7,[[["self"]],[R[13]]]],[11,"read",E,E,7,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[853],"mio",E,3,[[["self"]],["rawfd"]]],[11,R[853],"mio::net",E,7,[[["self"]],["rawfd"]]],[11,R[853],E,E,8,[[["self"]],["rawfd"]]],[11,R[853],E,E,9,[[["self"]],["rawfd"]]],[11,R[854],E,E,7,[[["rawfd"]],[R[805]]]],[11,R[854],E,E,8,[[["rawfd"]],[R[804]]]],[11,R[854],E,E,9,[[["rawfd"]],[R[809]]]],[11,R[2351],E,E,7,[[],["rawfd"]]],[11,R[2351],E,E,8,[[],["rawfd"]]],[11,R[2351],E,E,9,[[],["rawfd"]]],[11,"new",R[3082],"Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness",E,"Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token",E,"Returns the event's token.",12,[[["self"]],["token"]]],[11,"error",R[3083],"Returns a `Ready` representing error readiness.",14,[[],[R[3084]]]],[11,"hup",E,"Returns a `Ready` representing HUP readiness.",14,[[],[R[3084]]]],[11,"priority",E,"Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],[R[3084]]]],[11,"is_error",E,"Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup",E,"Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority",E,"Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"p":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,R[3085]],[3,R[3086]],[3,R[3492]],[3,R[3087]],[3,R[3501]],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_serial"]={"doc":"mio-serial - Serial port I/O for mio","i":[[4,R[2356],R[3199],R[3259],N,N],[13,"Input",E,R[3260],0,N],[13,"Output",E,R[3261],0,N],[13,"All",E,R[3262],0,N],[4,"DataBits",E,R[3243],N,N],[13,"Five",E,R[3244],1,N],[13,"Six",E,R[3245],1,N],[13,"Seven",E,R[3246],1,N],[13,"Eight",E,R[3247],1,N],[3,"Error",E,R[3222],N,N],[12,"kind",E,R[3223],2,N],[12,R[31],E,R[3224],2,N],[4,R[33],E,R[3238],N,N],[13,"NoDevice",E,R[3239],3,N],[13,R[2324],E,R[3240],3,N],[13,"Unknown",E,R[3241],3,N],[13,"Io",E,R[3242],3,N],[4,R[2355],E,R[3255],N,N],[13,"None",E,R[3256],4,N],[13,"Software",E,R[3257],4,N],[13,"Hardware",E,R[3258],4,N],[4,"Parity",E,R[3248],N,N],[13,"None",E,R[3249],5,N],[13,"Odd",E,R[3250],5,N],[13,"Even",E,R[3251],5,N],[8,R[3269],E,R[3270],N,N],[10,"name",E,R[3271],6,[[["self"]],[["string"],[R[45],["string"]]]]],[10,"settings",E,R[3200],6,[[["self"]],[R[2328]]]],[10,R[3226],E,R[3201],6,[[["self"]],[["error"],["u32"],[R[13],["u32","error"]]]]],[10,R[3228],E,R[3202],6,[[["self"]],[[R[13],[R[2347],"error"]],["error"],[R[2347]]]]],[10,R[2329],E,R[3203],6,[[["self"]],[[R[13],[R[2330],"error"]],[R[2330]],["error"]]]],[10,"parity",E,R[3204],6,[[["self"]],[[R[13],["parity","error"]],["parity"],["error"]]]],[10,R[3232],E,R[3205],6,[[["self"]],[["error"],[R[2348]],[R[13],[R[2348],"error"]]]]],[10,"timeout",E,R[3272],6,[[["self"]],[R[411]]]],[10,"set_all",E,R[3206],6,[[["self"],[R[2328]]],[[R[13],["error"]],["error"]]]],[10,R[2333],E,R[3207],6,[[["self"],["u32"]],[[R[13],["error"]],["error"]]]],[10,R[2335],E,R[3208],6,[[["self"],[R[2347]]],[[R[13],["error"]],["error"]]]],[10,R[2334],E,R[3209],6,[[["self"],[R[2330]]],[[R[13],["error"]],["error"]]]],[10,R[3273],E,R[3210],6,[[["self"],["parity"]],[[R[13],["error"]],["error"]]]],[10,R[2336],E,R[3211],6,[[["self"],[R[2348]]],[[R[13],["error"]],["error"]]]],[10,R[2337],E,R[3274],6,[[["self"],[R[411]]],[[R[13],["error"]],["error"]]]],[10,R[2338],E,R[3212],6,[[["self"],["bool"]],[[R[13],["error"]],["error"]]]],[10,R[2339],E,R[3213],6,[[["self"],["bool"]],[[R[13],["error"]],["error"]]]],[10,R[2340],E,R[3214],6,[[["self"]],[["bool"],["error"],[R[13],["bool","error"]]]]],[10,R[2341],E,R[3215],6,[[["self"]],[["bool"],["error"],[R[13],["bool","error"]]]]],[10,R[2342],E,R[3216],6,[[["self"]],[["bool"],["error"],[R[13],["bool","error"]]]]],[10,R[2343],E,R[3217],6,[[["self"]],[["bool"],["error"],[R[13],["bool","error"]]]]],[10,R[2344],E,R[3218],6,[[["self"]],[["error"],["u32"],[R[13],["u32","error"]]]]],[10,R[2345],E,R[3219],6,[[["self"]],[["error"],["u32"],[R[13],["u32","error"]]]]],[10,"clear",E,R[3220],6,[[["self"],[R[2346]]],[[R[13],["error"]],["error"]]]],[10,R[3117],E,R[3221],6,[[["self"]],[[R[13],["box","error"]],["box",[R[2325]]],["error"]]]],[3,R[2354],E,R[3235],N,N],[12,"port_name",E,R[3236],7,N],[12,"port_type",E,R[3237],7,N],[3,R[2352],E,R[3225],N,N],[12,R[3226],E,R[3227],8,N],[12,R[3228],E,R[3229],8,N],[12,R[2329],E,R[3230],8,N],[12,"parity",E,R[3231],8,N],[12,R[3232],E,R[3233],8,N],[12,"timeout",E,R[3234],8,N],[4,"StopBits",E,R[3252],N,N],[13,"One",E,R[3253],9,N],[13,"Two",E,R[3254],9,N],[5,R[2326],E,R[3263],N,[[],[[R[13],["vec","error"]],["vec",[R[2327]]],["error"]]]],[0,"unix",E,"Unix impl of mio-enabled serial ports.",N,N],[3,"Serial",R[3198],"*nix serial port using termios",N,N],[11,"from_path",E,"Open a nonblocking serial port from the provided path.",10,[[["path"],["asref",["path"]],[R[2328]]],[R[13]]]],[11,"from_serial",E,"Convert an existing `serialport::posix::TTYPort` struct.",10,[[["ttyport"]],[R[13]]]],[11,"pair",E,R[3267],10,[[],[R[13]]]],[11,R[3265],E,R[3266],10,[[["self"],["bool"]],[R[13]]]],[11,"exclusive",E,R[3264],10,[[["self"]],["bool"]]],[6,"Result",R[3199],R[3268],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",R[3198],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"fmt",R[3199],E,8,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"from",E,E,2,[[["error"]],["error"]]],[11,"from",E,E,2,[[["error"]],["error"]]],[11,"from",E,E,2,[[["error"]],["error"]]],[11,R[31],E,E,2,[[["self"]],["str"]]],[11,R[77],E,E,8,[[],[R[2328]]]],[11,"eq",E,E,8,[[["self"],[R[2328]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[2328]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[2327]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[2327]]],["bool"]]],[11,"eq",E,E,4,[[[R[2330]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2346]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["parity"]],["bool"]]],[11,"eq",E,E,1,[[[R[2347]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[2348]]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,3,[[["self"]],[R[1]]]],[11,"clone",E,E,4,[[["self"]],[R[2330]]]],[11,"clone",E,E,8,[[["self"]],[R[2328]]]],[11,"clone",E,E,7,[[["self"]],[R[2327]]]],[11,"clone",E,E,1,[[["self"]],[R[2347]]]],[11,"clone",E,E,0,[[["self"]],[R[2346]]]],[11,"clone",E,E,9,[[["self"]],[R[2348]]]],[11,"clone",E,E,5,[[["self"]],["parity"]]],[11,"write",R[3198],E,10,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,10,[[["self"]],[R[13]]]],[11,"read",E,E,10,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[853],E,E,10,[[["self"]],["rawfd"]]],[11,R[854],E,E,10,[[["rawfd"]],["self"]]],[11,R[2351],E,E,10,[[],["rawfd"]]],[11,R[3081],E,E,10,[[["pollopt"],["poll"],["ready"],["self"],["token"]],[R[13]]]],[11,R[3079],E,E,10,[[["pollopt"],["poll"],["ready"],["self"],["token"]],[R[13]]]],[11,R[3080],E,E,10,[[["self"],["poll"]],[R[13]]]],[11,"settings",E,R[3200],10,[[["self"]],[R[2328]]]],[11,"name",E,"Return the name associated with the serial port, if known.",10,[[["self"]],[[R[45],["string"]],["string"]]]],[11,R[3226],E,R[3201],10,[[["self"]],[[R[13],["u32"]],["u32"]]]],[11,R[3228],E,R[3202],10,[[["self"]],[[R[13],[R[2347]]],[R[2347]]]]],[11,R[2329],E,R[3203],10,[[["self"]],[[R[13],[R[2330]]],[R[2330]]]]],[11,"parity",E,R[3204],10,[[["self"]],[[R[13],["parity"]],["parity"]]]],[11,R[3232],E,R[3205],10,[[["self"]],[[R[2348]],[R[13],[R[2348]]]]]],[11,"timeout",E,"Returns the current timeout. This parameter is const and…",10,[[["self"]],[R[411]]]],[11,"set_all",E,R[3206],10,[[["self"],[R[2328]]],[R[13]]]],[11,R[2333],E,R[3207],10,[[["self"],["u32"]],[R[13]]]],[11,R[2335],E,R[3208],10,[[["self"],[R[2347]]],[R[13]]]],[11,R[2334],E,R[3209],10,[[["self"],[R[2330]]],[R[13]]]],[11,R[3273],E,R[3210],10,[[["self"],["parity"]],[R[13]]]],[11,R[2336],E,R[3211],10,[[["self"],[R[2348]]],[R[13]]]],[11,R[2337],E,"Sets the timeout for future I/O operations. This parameter…",10,[[["self"],[R[411]]],[R[13]]]],[11,R[2338],E,R[3212],10,[[["self"],["bool"]],[R[13]]]],[11,R[2339],E,R[3213],10,[[["self"],["bool"]],[R[13]]]],[11,R[2340],E,R[3214],10,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2341],E,R[3215],10,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2342],E,R[3216],10,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2343],E,R[3217],10,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2344],E,R[3218],10,[[["self"]],[[R[13],["u32"]],["u32"]]]],[11,R[2345],E,R[3219],10,[[["self"]],[[R[13],["u32"]],["u32"]]]],[11,"clear",E,R[3220],10,[[["self"],[R[2346]]],[R[13]]]],[11,R[3117],E,R[3221],10,[[["self"]],[[R[13],["box"]],["box",[R[2325]]]]]],[11,"new",R[3199],R[3275],2,[[[R[1]],[T]],["error"]]],[11,"kind",E,R[2331],2,[[["self"]],[R[1]]]]],"p":[[4,R[2356]],[4,"DataBits"],[3,"Error"],[4,R[33]],[4,R[2355]],[4,"Parity"],[8,R[3269]],[3,R[2354]],[3,R[2352]],[4,"StopBits"],[3,"Serial"]]};
searchIndex["mio_uds"]={"doc":"MIO bindings for Unix Domain Sockets","i":[[3,R[3502],"mio_uds","A Unix stream socket.",N,N],[3,R[3448],E,"A structure representing a Unix domain socket server.",N,N],[3,R[3447],E,"A Unix datagram socket.",N,N],[11,"bind",E,"Creates a Unix datagram socket bound to the given path.",0,[[["path"],["asref",["path"]]],[[R[13],[R[3436]]],[R[3436]]]]],[11,"from_datagram",E,"Consumes a standard library `UnixDatagram` and returns a…",0,[[[R[3436]]],[[R[13],[R[3436]]],[R[3436]]]]],[11,"pair",E,"Create an unnamed pair of connected sockets.",0,[[],[R[13]]]],[11,"unbound",E,"Creates a Unix Datagram socket which is not bound to any…",0,[[],[[R[13],[R[3436]]],[R[3436]]]]],[11,"connect",E,R[3504],0,[[["path"],["self"],["asref",["path"]]],[R[13]]]],[11,R[3117],E,R[3075],0,[[["self"]],[[R[13],[R[3436]]],[R[3436]]]]],[11,R[3076],E,"Returns the address of this socket.",0,[[["self"]],[[R[806]],[R[13],[R[806]]]]]],[11,R[3490],E,R[3506],0,[[["self"]],[[R[806]],[R[13],[R[806]]]]]],[11,"recv_from",E,R[3437],0,[[["self"]],[R[13]]]],[11,"recv",E,R[3437],0,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"send_to",E,R[3509],0,[[["path"],["self"],["asref",["path"]]],[[R[9]],[R[13],[R[9]]]]]],[11,"send",E,R[3510],0,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[816],E,R[3441],0,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,R[3116],E,R[3511],0,[[["self"],[R[3116]]],[R[13]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified socket.",1,[[["path"],["asref",["path"]]],[[R[13],[R[3438]]],[R[3438]]]]],[11,"from_listener",E,"Consumes a standard library `UnixListener` and returns a…",1,[[[R[3438]]],[[R[13],[R[3438]]],[R[3438]]]]],[11,"accept",E,R[3439],1,[[["self"]],[[R[13],[R[45]]],[R[45]]]]],[11,"accept_std",E,R[3439],1,[[["self"]],[[R[45]],[R[13],[R[45]]]]]],[11,R[3117],E,R[3075],1,[[["self"]],[[R[13],[R[3438]]],[R[3438]]]]],[11,R[3076],E,R[3440],1,[[["self"]],[[R[806]],[R[13],[R[806]]]]]],[11,R[816],E,R[3441],1,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,"connect",E,R[3516],2,[[["path"],["asref",["path"]]],[[R[3443]],[R[13],[R[3443]]]]]],[11,R[3442],E,"Consumes a standard library `UnixStream` and returns a…",2,[[[R[3443]]],[[R[3443]],[R[13],[R[3443]]]]]],[11,"pair",E,R[3503],2,[[],[R[13]]]],[11,R[3117],E,R[3075],2,[[["self"]],[[R[3443]],[R[13],[R[3443]]]]]],[11,R[3076],E,R[3518],2,[[["self"]],[[R[806]],[R[13],[R[806]]]]]],[11,R[3490],E,R[3519],2,[[["self"]],[[R[806]],[R[13],[R[806]]]]]],[11,R[816],E,R[3441],2,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,R[3116],E,R[3444],2,[[["self"],[R[3116]]],[R[13]]]],[11,"read_bufs",E,R[3445],2,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"write_bufs",E,R[3446],2,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"write",E,E,2,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,2,[[["self"]],[R[13]]]],[11,"read",E,E,2,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[853],E,E,0,[[["self"]],["i32"]]],[11,R[853],E,E,1,[[["self"]],["i32"]]],[11,R[853],E,E,2,[[["self"]],["i32"]]],[11,R[854],E,E,0,[[["i32"]],[R[3436]]]],[11,R[854],E,E,1,[[["i32"]],[R[3438]]]],[11,R[854],E,E,2,[[["i32"]],[R[3443]]]],[11,R[2351],E,E,0,[[],["i32"]]],[11,R[2351],E,E,1,[[],["i32"]]],[11,R[2351],E,E,2,[[],["i32"]]],[11,R[3081],E,E,0,[[["ready"],["token"],["pollopt"],["self"],["poll"]],[R[13]]]],[11,R[3079],E,E,0,[[["ready"],["token"],["pollopt"],["self"],["poll"]],[R[13]]]],[11,R[3080],E,E,0,[[["self"],["poll"]],[R[13]]]],[11,R[3081],E,E,1,[[["ready"],["token"],["pollopt"],["self"],["poll"]],[R[13]]]],[11,R[3079],E,E,1,[[["ready"],["token"],["pollopt"],["self"],["poll"]],[R[13]]]],[11,R[3080],E,E,1,[[["self"],["poll"]],[R[13]]]],[11,R[3081],E,E,2,[[["ready"],["token"],["pollopt"],["self"],["poll"]],[R[13]]]],[11,R[3079],E,E,2,[[["ready"],["token"],["pollopt"],["self"],["poll"]],[R[13]]]],[11,R[3080],E,E,2,[[["self"],["poll"]],[R[13]]]]],"p":[[3,R[3447]],[3,R[3448]],[3,R[3502]]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","i":[[3,R[855],"net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,R[856],E,"An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4",E,"Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],[[R[13],[R[803]]],[R[803]]]]],[11,"new_v6",E,"Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],[[R[13],[R[803]]],[R[803]]]]],[11,"bind",E,R[808],0,[[["self"],[T]],[[R[13],[R[803]]],[R[803]]]]],[11,"listen",E,"Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],[[R[804]],[R[13],[R[804]]]]]],[11,"connect",E,"Initiate a connection on this socket to the specified…",0,[[["self"],[T]],[[R[13],[R[805]]],[R[805]]]]],[11,"to_tcp_stream",E,"Converts this builder into a `TcpStream`",0,[[["self"]],[[R[13],[R[805]]],[R[805]]]]],[11,"to_tcp_listener",E,"Converts this builder into a `TcpListener`",0,[[["self"]],[[R[804]],[R[13],[R[804]]]]]],[11,R[3076],E,"Returns the address of the local half of this TCP socket.",0,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,"new_v4",E,"Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],[[R[807]],[R[13],[R[807]]]]]],[11,"new_v6",E,"Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],[[R[807]],[R[13],[R[807]]]]]],[11,"bind",E,R[808],1,[[["self"],[T]],[[R[13],[R[809]]],[R[809]]]]],[11,"ttl",E,R[810],0,[[["self"],["u32"]],[["self"],[R[13]]]]],[11,"only_v6",E,R[811],0,[[["self"],["bool"]],[["self"],[R[13]]]]],[11,R[812],E,R[813],0,[[["self"],["bool"]],[["self"],[R[13]]]]],[11,R[814],E,R[815],0,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[816],E,R[817],0,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,"ttl",E,R[810],1,[[["self"],["u32"]],[["self"],[R[13]]]]],[11,"only_v6",E,R[811],1,[[["self"],["bool"]],[["self"],[R[13]]]]],[11,R[812],E,R[813],1,[[["self"],["bool"]],[["self"],[R[13]]]]],[11,R[814],E,R[815],1,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[816],E,R[817],1,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[0,"unix",E,"Unix-specific extensions to the `std::net` types.",N,N],[8,R[857],"net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,R[818],E,R[819],2,[[["self"],["bool"]],[["self"],[R[13]]]]],[10,R[820],E,R[821],2,[[["self"]],[["bool"],[R[13],["bool"]]]]],[8,R[858],E,"Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,R[818],E,R[819],3,[[["self"],["bool"]],[["self"],[R[13]]]]],[10,R[820],E,R[821],3,[[["self"]],[["bool"],[R[13],["bool"]]]]],[8,R[859],"net2","Extension methods for the standard [`TcpStream`…",N,N],[10,R[3088],E,R[3089],4,[[["self"],["bool"]],[R[13]]]],[10,"nodelay",E,R[3090],4,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,R[835],E,R[836],4,[[["self"],[R[9]]],[R[13]]]],[10,R[837],E,R[838],4,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[10,R[839],E,R[840],4,[[["self"],[R[9]]],[R[13]]]],[10,R[841],E,R[842],4,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[10,"set_keepalive_ms",E,R[822],4,[[["self"],["u32"],[R[45],["u32"]]],[R[13]]]],[10,"keepalive_ms",E,R[823],4,[[["self"]],[[R[45],["u32"]],[R[13],[R[45]]]]]],[10,R[3091],E,R[822],4,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,R[3491],E,R[823],4,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[10,R[844],E,R[824],4,[[["self"],["u32"],[R[45],["u32"]]],[R[13]]]],[10,R[845],E,R[824],4,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,R[846],E,R[825],4,[[["self"]],[[R[45],["u32"]],[R[13],[R[45]]]]]],[10,R[847],E,R[825],4,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[10,R[848],E,R[826],4,[[["self"],["u32"],[R[45],["u32"]]],[R[13]]]],[10,R[849],E,R[826],4,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,R[850],E,R[827],4,[[["self"]],[[R[45],["u32"]],[R[13],[R[45]]]]]],[10,R[851],E,R[827],4,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[10,"set_ttl",E,R[810],4,[[["self"],["u32"]],[R[13]]]],[10,"ttl",E,R[828],4,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,R[829],E,R[811],4,[[["self"],["bool"]],[R[13]]]],[10,"only_v6",E,R[830],4,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,"connect",E,"Executes a `connect` operation on this socket,…",4,[[["self"],[R[852]]],[R[13]]]],[10,R[816],E,R[817],4,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[10,R[831],E,"Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],[R[13]]]],[10,R[832],E,R[833],4,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,"linger",E,R[834],4,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[8,R[860],E,"Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl",E,R[810],5,[[["self"],["u32"]],[R[13]]]],[10,"ttl",E,R[828],5,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,R[829],E,R[811],5,[[["self"],["bool"]],[R[13]]]],[10,"only_v6",E,R[830],5,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,R[816],E,R[817],5,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[10,R[831],E,"Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],[R[13]]]],[10,R[832],E,R[833],5,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,"linger",E,R[834],5,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[8,R[861],E,"Extension methods for the standard [`UdpSocket`…",N,N],[10,R[835],E,R[836],6,[[["self"],[R[9]]],[R[13]]]],[10,R[837],E,R[838],6,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[10,R[839],E,R[840],6,[[["self"],[R[9]]],[R[13]]]],[10,R[841],E,R[842],6,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[10,R[3092],E,R[3093],6,[[["self"],["bool"]],[R[13]]]],[10,R[862],E,R[3094],6,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,R[3095],E,R[3096],6,[[["self"],["bool"]],[R[13]]]],[10,R[3097],E,R[3098],6,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,R[3099],E,R[3100],6,[[["self"],["u32"]],[R[13]]]],[10,R[3101],E,R[3102],6,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,"set_multicast_hops_v6",E,"Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"],["u32"]],[R[13]]]],[10,"multicast_hops_v6",E,"Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,R[3103],E,R[3104],6,[[["self"],["bool"]],[R[13]]]],[10,R[3105],E,R[3106],6,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,"set_multicast_if_v4",E,"Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[[R[843]],["self"]],[R[13]]]],[10,"multicast_if_v4",E,"Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],[[R[843]],[R[13],[R[843]]]]]],[10,"set_multicast_if_v6",E,"Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"],["u32"]],[R[13]]]],[10,"multicast_if_v6",E,"Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,"set_ttl",E,R[810],6,[[["self"],["u32"]],[R[13]]]],[10,"ttl",E,R[828],6,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,"set_unicast_hops_v6",E,"Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["self"],["u32"]],[R[13]]]],[10,"unicast_hops_v6",E,"Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,R[829],E,R[811],6,[[["self"],["bool"]],[R[13]]]],[10,"only_v6",E,R[830],6,[[["self"]],[["bool"],[R[13],["bool"]]]]],[10,R[3107],E,R[3108],6,[[[R[843]],["self"]],[R[13]]]],[10,R[3109],E,R[3110],6,[[[R[1326]],["self"],["u32"]],[R[13]]]],[10,R[3111],E,R[3112],6,[[[R[843]],["self"]],[R[13]]]],[10,R[3113],E,R[3114],6,[[[R[1326]],["self"],["u32"]],[R[13]]]],[10,R[844],E,R[824],6,[[["self"],["u32"],[R[45],["u32"]]],[R[13]]]],[10,R[845],E,R[824],6,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,R[846],E,R[825],6,[[["self"]],[[R[45],["u32"]],[R[13],[R[45]]]]]],[10,R[847],E,R[825],6,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[10,R[848],E,R[826],6,[[["self"],["u32"],[R[45],["u32"]]],[R[13]]]],[10,R[849],E,R[826],6,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[10,R[850],E,R[827],6,[[["self"]],[[R[45],["u32"]],[R[13],[R[45]]]]]],[10,R[851],E,R[827],6,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[10,R[816],E,R[817],6,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[10,"connect",E,"Connects this UDP socket to a remote address, allowing the…",6,[[["self"],[R[852]]],[R[13]]]],[10,"send",E,R[3497],6,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[10,"recv",E,R[3115],6,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[10,R[831],E,"Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],[R[13]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[818],E,E,0,[[["self"],["bool"]],[["self"],[R[13]]]]],[11,R[820],E,E,0,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[818],E,E,1,[[["self"],["bool"]],[["self"],[R[13]]]]],[11,R[820],E,E,1,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,R[853],E,E,0,[[["self"]],["c_int"]]],[11,R[853],E,E,1,[[["self"]],["c_int"]]],[11,R[854],E,E,0,[[["c_int"]],[R[803]]]],[11,R[854],E,E,1,[[["c_int"]],[R[807]]]]],"p":[[3,R[855]],[3,R[856]],[8,R[857]],[8,R[858]],[8,R[859]],[8,R[860]],[8,R[861]]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","i":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys",E,E,0,N],[13,R[2298],E,E,0,N],[13,"InvalidUtf8",E,"The operation involved a conversion to Rust's native…",0,N],[13,"UnsupportedOperation",E,"The operation is not supported by Nix, in this instance…",0,N],[0,"dir",E,E,N,N],[3,"Dir",R[1429],"An open directory.",N,N],[3,"Iter",E,E,N,N],[3,"Entry",E,"A directory entry, similar to `std::fs::DirEntry`.",N,N],[4,"Type",E,E,N,N],[13,"Fifo",E,E,1,N],[13,"CharacterDevice",E,E,1,N],[13,"Directory",E,E,1,N],[13,"BlockDevice",E,E,1,N],[13,"File",E,E,1,N],[13,"Symlink",E,E,1,N],[13,"Socket",E,E,1,N],[11,"open",E,"Opens the given path as with `fcntl::open`.",2,[[["oflag"],["mode"],["p"]],[R[13]]]],[11,"openat",E,"Opens the given path as with `fcntl::openat`.",2,[[["rawfd"],["oflag"],["p"],["mode"]],[R[13]]]],[11,"from",E,"Converts from a descriptor-based object, closing the…",2,[[["intorawfd"]],[R[13]]]],[11,"from_fd",E,"Converts from a file descriptor, closing it on success or…",2,[[["rawfd"]],[R[13]]]],[11,"iter",E,"Returns an iterator of `Result<Entry>` which rewinds when…",2,[[["self"]],["iter"]]],[11,"ino",E,"Returns the inode number (`d_ino`) of the underlying…",3,[[["self"]],["u64"]]],[11,"file_name",E,R[3470],3,[[["self"]],["cstr"]]],[11,"file_type",E,"Returns the type of this directory entry, if known.",3,[[["self"]],[[R[45],["type"]],["type"]]]],[0,"errno","nix",E,N,N],[4,"Errno",R[1411],E,N,N],[13,"UnknownErrno",E,E,4,N],[13,"EPERM",E,E,4,N],[13,"ENOENT",E,E,4,N],[13,"ESRCH",E,E,4,N],[13,"EINTR",E,E,4,N],[13,"EIO",E,E,4,N],[13,"ENXIO",E,E,4,N],[13,"E2BIG",E,E,4,N],[13,"ENOEXEC",E,E,4,N],[13,"EBADF",E,E,4,N],[13,"ECHILD",E,E,4,N],[13,"EAGAIN",E,E,4,N],[13,"ENOMEM",E,E,4,N],[13,"EACCES",E,E,4,N],[13,"EFAULT",E,E,4,N],[13,"ENOTBLK",E,E,4,N],[13,"EBUSY",E,E,4,N],[13,"EEXIST",E,E,4,N],[13,"EXDEV",E,E,4,N],[13,"ENODEV",E,E,4,N],[13,"ENOTDIR",E,E,4,N],[13,"EISDIR",E,E,4,N],[13,"EINVAL",E,E,4,N],[13,"ENFILE",E,E,4,N],[13,"EMFILE",E,E,4,N],[13,"ENOTTY",E,E,4,N],[13,"ETXTBSY",E,E,4,N],[13,"EFBIG",E,E,4,N],[13,"ENOSPC",E,E,4,N],[13,"ESPIPE",E,E,4,N],[13,"EROFS",E,E,4,N],[13,"EMLINK",E,E,4,N],[13,"EPIPE",E,E,4,N],[13,"EDOM",E,E,4,N],[13,"ERANGE",E,E,4,N],[13,"EDEADLK",E,E,4,N],[13,R[1042],E,E,4,N],[13,"ENOLCK",E,E,4,N],[13,"ENOSYS",E,E,4,N],[13,"ENOTEMPTY",E,E,4,N],[13,"ELOOP",E,E,4,N],[13,"ENOMSG",E,E,4,N],[13,"EIDRM",E,E,4,N],[13,"ECHRNG",E,E,4,N],[13,"EL2NSYNC",E,E,4,N],[13,"EL3HLT",E,E,4,N],[13,"EL3RST",E,E,4,N],[13,"ELNRNG",E,E,4,N],[13,"EUNATCH",E,E,4,N],[13,"ENOCSI",E,E,4,N],[13,"EL2HLT",E,E,4,N],[13,"EBADE",E,E,4,N],[13,"EBADR",E,E,4,N],[13,"EXFULL",E,E,4,N],[13,"ENOANO",E,E,4,N],[13,"EBADRQC",E,E,4,N],[13,"EBADSLT",E,E,4,N],[13,"EBFONT",E,E,4,N],[13,"ENOSTR",E,E,4,N],[13,"ENODATA",E,E,4,N],[13,"ETIME",E,E,4,N],[13,"ENOSR",E,E,4,N],[13,"ENONET",E,E,4,N],[13,"ENOPKG",E,E,4,N],[13,"EREMOTE",E,E,4,N],[13,"ENOLINK",E,E,4,N],[13,"EADV",E,E,4,N],[13,"ESRMNT",E,E,4,N],[13,"ECOMM",E,E,4,N],[13,"EPROTO",E,E,4,N],[13,"EMULTIHOP",E,E,4,N],[13,"EDOTDOT",E,E,4,N],[13,"EBADMSG",E,E,4,N],[13,"EOVERFLOW",E,E,4,N],[13,"ENOTUNIQ",E,E,4,N],[13,"EBADFD",E,E,4,N],[13,"EREMCHG",E,E,4,N],[13,"ELIBACC",E,E,4,N],[13,"ELIBBAD",E,E,4,N],[13,"ELIBSCN",E,E,4,N],[13,"ELIBMAX",E,E,4,N],[13,"ELIBEXEC",E,E,4,N],[13,"EILSEQ",E,E,4,N],[13,"ERESTART",E,E,4,N],[13,"ESTRPIPE",E,E,4,N],[13,"EUSERS",E,E,4,N],[13,"ENOTSOCK",E,E,4,N],[13,R[1043],E,E,4,N],[13,"EMSGSIZE",E,E,4,N],[13,"EPROTOTYPE",E,E,4,N],[13,R[1044],E,E,4,N],[13,R[1045],E,E,4,N],[13,R[1046],E,E,4,N],[13,"EOPNOTSUPP",E,E,4,N],[13,R[1047],E,E,4,N],[13,R[1048],E,E,4,N],[13,"EADDRINUSE",E,E,4,N],[13,R[1049],E,E,4,N],[13,"ENETDOWN",E,E,4,N],[13,R[1050],E,E,4,N],[13,"ENETRESET",E,E,4,N],[13,R[1051],E,E,4,N],[13,"ECONNRESET",E,E,4,N],[13,"ENOBUFS",E,E,4,N],[13,"EISCONN",E,E,4,N],[13,"ENOTCONN",E,E,4,N],[13,"ESHUTDOWN",E,E,4,N],[13,R[1052],E,E,4,N],[13,"ETIMEDOUT",E,E,4,N],[13,R[1053],E,E,4,N],[13,"EHOSTDOWN",E,E,4,N],[13,R[1054],E,E,4,N],[13,"EALREADY",E,E,4,N],[13,R[1055],E,E,4,N],[13,"ESTALE",E,E,4,N],[13,"EUCLEAN",E,E,4,N],[13,"ENOTNAM",E,E,4,N],[13,"ENAVAIL",E,E,4,N],[13,"EISNAM",E,E,4,N],[13,"EREMOTEIO",E,E,4,N],[13,"EDQUOT",E,E,4,N],[13,"ENOMEDIUM",E,E,4,N],[13,R[1056],E,E,4,N],[13,"ECANCELED",E,E,4,N],[13,"ENOKEY",E,E,4,N],[13,R[1057],E,E,4,N],[13,R[1058],E,E,4,N],[13,R[1059],E,E,4,N],[13,"EOWNERDEAD",E,E,4,N],[13,R[1060],E,E,4,N],[13,"ERFKILL",E,E,4,N],[13,"EHWPOISON",E,E,4,N],[5,"from_i32",E,E,N,[[["i32"]],["errno"]]],[5,"errno",E,"Returns the platform-specific value of errno",N,[[],["i32"]]],[17,R[1061],E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[8,R[1444],E,"The sentinel value indicates that a function failed and…",N,N],[10,"sentinel",E,E,5,[[],["self"]]],[11,"last",E,E,4,[[],["self"]]],[11,"desc",E,E,4,[[],["str"]]],[11,"from_i32",E,E,4,[[["i32"]],["errno"]]],[11,"clear",E,E,4,[[]]],[11,R[13],E,"Returns `Ok(value)` if it does not contain the sentinel…",4,[[["partialeq"],[R[1062]]],[["partialeq"],[R[1062]],[R[13]]]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix",E,N,N],[3,"AtFlags",R[1407],E,N,N],[3,"OFlag",E,"Configuration options for opened files.",N,N],[3,"SealFlag",E,"Additional flags for file sealing, which allows for…",N,N],[3,"FdFlag",E,"Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[3,R[1445],E,"Additional flags to `splice` and friends.",N,N],[3,R[1446],E,"Mode argument flags for fallocate determining operation…",N,N],[4,"FcntlArg",E,E,N,N],[13,"F_DUPFD",E,E,6,N],[13,R[1063],E,E,6,N],[13,"F_GETFD",E,E,6,N],[13,"F_SETFD",E,E,6,N],[13,"F_GETFL",E,E,6,N],[13,"F_SETFL",E,E,6,N],[13,"F_SETLK",E,E,6,N],[13,"F_SETLKW",E,E,6,N],[13,"F_GETLK",E,E,6,N],[13,"F_OFD_SETLK",E,E,6,N],[13,"F_OFD_SETLKW",E,E,6,N],[13,"F_OFD_GETLK",E,E,6,N],[13,R[1064],E,E,6,N],[13,R[1065],E,E,6,N],[13,R[1066],E,E,6,N],[13,R[1067],E,E,6,N],[4,"FlockArg",E,E,N,N],[13,"LockShared",E,E,7,N],[13,"LockExclusive",E,E,7,N],[13,"Unlock",E,E,7,N],[13,"LockSharedNonblock",E,E,7,N],[13,"LockExclusiveNonblock",E,E,7,N],[13,"UnlockNonblock",E,E,7,N],[5,"open",E,E,N,[[["oflag"],["mode"],["p"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"openat",E,E,N,[[["rawfd"],["mode"],["oflag"],["p"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"readlink",E,E,N,[[["p"]],[["osstr"],[R[13],["osstr"]]]]],[5,"readlinkat",E,E,N,[[["rawfd"],["p"]],[["osstr"],[R[13],["osstr"]]]]],[5,"fcntl",E,E,N,[[["rawfd"],["fcntlarg"]],[["c_int"],[R[13],["c_int"]]]]],[5,"flock",E,E,N,[[["rawfd"],["flockarg"]],[R[13]]]],[5,"splice",E,E,N,[[["loff_t"],["rawfd"],[R[9]],[R[1068]],[R[45],["loff_t"]]],[[R[13],[R[9]]],[R[9]]]]],[5,"tee",E,E,N,[[["rawfd"],[R[9]],[R[1068]]],[[R[13],[R[9]]],[R[9]]]]],[5,"vmsplice",E,E,N,[[["rawfd"],[R[1068]]],[[R[13],[R[9]]],[R[9]]]]],[5,"fallocate",E,"Manipulates file space.",N,[[["rawfd"],[R[1105]],["off_t"]],[["c_int"],[R[13],["c_int"]]]]],[18,R[1069],E,E,8,N],[18,R[1070],E,E,8,N],[18,R[1071],E,E,8,N],[11,"empty",E,R[1074],8,[[],["atflags"]]],[11,"all",E,R[1075],8,[[],["atflags"]]],[11,"bits",E,R[1076],8,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],8,[[["c_int"]],[["atflags"],[R[45],["atflags"]]]]],[11,R[1078],E,R[1079],8,[[["c_int"]],["atflags"]]],[11,R[73],E,R[1080],8,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],8,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],8,[[["atflags"],["self"]],["bool"]]],[11,R[1110],E,R[1083],8,[[["atflags"],["self"]],["bool"]]],[11,"insert",E,R[1084],8,[[["self"],["atflags"]]]],[11,"remove",E,R[1085],8,[[["self"],["atflags"]]]],[11,"toggle",E,R[1086],8,[[["self"],["atflags"]]]],[11,"set",E,R[1087],8,[[["self"],["atflags"],["bool"]]]],[18,"O_ACCMODE",E,"Mask for the access mode of the file.",9,N],[18,"O_APPEND",E,"Open the file in append-only mode.",9,N],[18,"O_ASYNC",E,"Generate a signal when input or output becomes possible.",9,N],[18,"O_CLOEXEC",E,"Closes the file descriptor once an `execve` call is made.",9,N],[18,"O_CREAT",E,"Create the file if it does not exist.",9,N],[18,"O_DIRECT",E,"Try to minimize cache effects of the I/O for this file.",9,N],[18,R[1072],E,"If the specified path isn't a directory, fail.",9,N],[18,"O_DSYNC",E,"Implicitly follow each `write()` with an `fdatasync()`.",9,N],[18,"O_EXCL",E,"Error out if a file was not created.",9,N],[18,"O_FSYNC",E,"Same as `O_SYNC`.",9,N],[18,R[1073],E,"Allow files whose sizes can't be represented in an `off_t`…",9,N],[18,"O_NOATIME",E,"Do not update the file last access time during `read(2)`s.",9,N],[18,"O_NOCTTY",E,"Don't attach the device as the process' controlling…",9,N],[18,"O_NDELAY",E,"Same as `O_NONBLOCK`.",9,N],[18,"O_NOFOLLOW",E,"`open()` will fail if the given path is a symbolic link.",9,N],[18,R[1111],E,"When possible, open the file in nonblocking mode.",9,N],[18,"O_PATH",E,"Obtain a file descriptor for low-level access.",9,N],[18,"O_RDONLY",E,"Only allow reading.",9,N],[18,"O_RDWR",E,"Allow both reading and writing.",9,N],[18,"O_RSYNC",E,"Similar to `O_DSYNC` but applies to `read`s instead.",9,N],[18,"O_SYNC",E,"Implicitly follow each `write()` with an `fsync()`.",9,N],[18,"O_TMPFILE",E,"Create an unnamed temporary file.",9,N],[18,"O_TRUNC",E,"Truncate an existing regular file to 0 length if it allows…",9,N],[18,"O_WRONLY",E,"Only allow writing.",9,N],[11,"empty",E,R[1074],9,[[],["oflag"]]],[11,"all",E,R[1075],9,[[],["oflag"]]],[11,"bits",E,R[1076],9,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],9,[[["c_int"]],[[R[45],["oflag"]],["oflag"]]]],[11,R[1078],E,R[1079],9,[[["c_int"]],["oflag"]]],[11,R[73],E,R[1080],9,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],9,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],9,[[["self"],["oflag"]],["bool"]]],[11,R[1110],E,R[1083],9,[[["self"],["oflag"]],["bool"]]],[11,"insert",E,R[1084],9,[[["self"],["oflag"]]]],[11,"remove",E,R[1085],9,[[["self"],["oflag"]]]],[11,"toggle",E,R[1086],9,[[["self"],["oflag"]]]],[11,"set",E,R[1087],9,[[["self"],["bool"],["oflag"]]]],[18,R[1088],E,"Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",10,N],[18,R[1089],E,"The file cannot be reduced in size.",10,N],[18,R[1090],E,"The size of the file cannot be increased.",10,N],[18,R[1091],E,"The file contents cannot be modified.",10,N],[11,"empty",E,R[1074],10,[[],[R[1093]]]],[11,"all",E,R[1075],10,[[],[R[1093]]]],[11,"bits",E,R[1076],10,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],10,[[["c_int"]],[[R[45],[R[1093]]],[R[1093]]]]],[11,R[1078],E,R[1079],10,[[["c_int"]],[R[1093]]]],[11,R[73],E,R[1080],10,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],10,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],10,[[["self"],[R[1093]]],["bool"]]],[11,R[1110],E,R[1083],10,[[["self"],[R[1093]]],["bool"]]],[11,"insert",E,R[1084],10,[[["self"],[R[1093]]]]],[11,"remove",E,R[1085],10,[[["self"],[R[1093]]]]],[11,"toggle",E,R[1086],10,[[["self"],[R[1093]]]]],[11,"set",E,R[1087],10,[[["self"],[R[1093]],["bool"]]]],[18,R[1125],E,"The file descriptor will automatically be closed during a…",11,N],[11,"empty",E,R[1074],11,[[],["fdflag"]]],[11,"all",E,R[1075],11,[[],["fdflag"]]],[11,"bits",E,R[1076],11,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],11,[[["c_int"]],[[R[45],["fdflag"]],["fdflag"]]]],[11,R[1078],E,R[1079],11,[[["c_int"]],["fdflag"]]],[11,R[73],E,R[1080],11,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],11,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],11,[[["self"],["fdflag"]],["bool"]]],[11,R[1110],E,R[1083],11,[[["self"],["fdflag"]],["bool"]]],[11,"insert",E,R[1084],11,[[["self"],["fdflag"]]]],[11,"remove",E,R[1085],11,[[["self"],["fdflag"]]]],[11,"toggle",E,R[1086],11,[[["self"],["fdflag"]]]],[11,"set",E,R[1087],11,[[["self"],["fdflag"],["bool"]]]],[18,R[1095],E,"Request that pages be moved instead of copied.",12,N],[18,R[1096],E,"Do not block on I/O.",12,N],[18,R[1097],E,"Hint that more data will be coming in a subsequent splice.",12,N],[18,R[1098],E,"Gift the user pages to the kernel.",12,N],[11,"empty",E,R[1074],12,[[],[R[1068]]]],[11,"all",E,R[1075],12,[[],[R[1068]]]],[11,"bits",E,R[1076],12,[[["self"]],["c_uint"]]],[11,R[1094],E,R[1077],12,[[["c_uint"]],[[R[45],[R[1068]]],[R[1068]]]]],[11,R[1078],E,R[1079],12,[[["c_uint"]],[R[1068]]]],[11,R[73],E,R[1080],12,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],12,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],12,[[["self"],[R[1068]]],["bool"]]],[11,R[1110],E,R[1083],12,[[["self"],[R[1068]]],["bool"]]],[11,"insert",E,R[1084],12,[[["self"],[R[1068]]]]],[11,"remove",E,R[1085],12,[[["self"],[R[1068]]]]],[11,"toggle",E,R[1086],12,[[["self"],[R[1068]]]]],[11,"set",E,R[1087],12,[[["self"],[R[1068]],["bool"]]]],[18,R[1099],E,"File size is not changed.",13,N],[18,R[1100],E,"Deallocates space by creating a hole.",13,N],[18,R[1101],E,"Removes byte range from a file without leaving a hole.",13,N],[18,R[1102],E,"Zeroes space in specified byte range.",13,N],[18,R[1103],E,"Increases file space by inserting a hole within the file…",13,N],[18,R[1104],E,"Shared file data extants are made private to the file.",13,N],[11,"empty",E,R[1074],13,[[],[R[1105]]]],[11,"all",E,R[1075],13,[[],[R[1105]]]],[11,"bits",E,R[1076],13,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],13,[[["c_int"]],[[R[45],[R[1105]]],[R[1105]]]]],[11,R[1078],E,R[1079],13,[[["c_int"]],[R[1105]]]],[11,R[73],E,R[1080],13,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],13,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],13,[[["self"],[R[1105]]],["bool"]]],[11,R[1110],E,R[1083],13,[[["self"],[R[1105]]],["bool"]]],[11,"insert",E,R[1084],13,[[["self"],[R[1105]]]]],[11,"remove",E,R[1085],13,[[["self"],[R[1105]]]]],[11,"toggle",E,R[1086],13,[[["self"],[R[1105]]]]],[11,"set",E,R[1087],13,[[["self"],[R[1105]],["bool"]]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,R[1447],R[1374],"Describes a single address for an interface as returned by…",N,N],[12,"interface_name",E,"Name of the network interface",14,N],[12,"flags",E,"Flags as from `SIOCGIFFLAGS` ioctl",14,N],[12,"address",E,"Network address of this interface",14,N],[12,"netmask",E,"Netmask of this interface",14,N],[12,R[862],E,"Broadcast address of this interface, if applicable",14,N],[12,"destination",E,"Point-to-point destination address",14,N],[3,R[1476],E,"Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs",E,"Get interface addresses using libc's `getifaddrs`",N,[[],[[R[1106]],[R[13],[R[1106]]]]]],[0,"kmod","nix","Load and unload kernel modules.",N,N],[3,R[1448],R[1412],"Flags used by the `finit_module` function.",N,N],[3,R[1449],E,"Flags used by `delete_module`.",N,N],[5,"init_module",E,"Loads a kernel module from a buffer.",N,[[["cstr"]],[R[13]]]],[5,"finit_module",E,"Loads a kernel module from a given file descriptor.",N,[[[T],["cstr"],[R[1109]]],[R[13]]]],[5,"delete_module",E,"Unloads the kernel module with the given name.",N,[[["cstr"],[R[1112]]],[R[13]]]],[18,R[1107],E,"Ignore symbol version hashes.",15,N],[18,R[1108],E,"Ignore kernel version magic.",15,N],[11,"empty",E,R[1074],15,[[],[R[1109]]]],[11,"all",E,R[1075],15,[[],[R[1109]]]],[11,"bits",E,R[1076],15,[[["self"]],["c_uint"]]],[11,R[1094],E,R[1077],15,[[["c_uint"]],[[R[1109]],[R[45],[R[1109]]]]]],[11,R[1078],E,R[1079],15,[[["c_uint"]],[R[1109]]]],[11,R[73],E,R[1080],15,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],15,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],15,[[["self"],[R[1109]]],["bool"]]],[11,R[1110],E,R[1083],15,[[["self"],[R[1109]]],["bool"]]],[11,"insert",E,R[1084],15,[[["self"],[R[1109]]]]],[11,"remove",E,R[1085],15,[[["self"],[R[1109]]]]],[11,"toggle",E,R[1086],15,[[["self"],[R[1109]]]]],[11,"set",E,R[1087],15,[[["self"],[R[1109]],["bool"]]]],[18,R[1111],E,E,16,N],[18,"O_TRUNC",E,E,16,N],[11,"empty",E,R[1074],16,[[],[R[1112]]]],[11,"all",E,R[1075],16,[[],[R[1112]]]],[11,"bits",E,R[1076],16,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],16,[[["c_int"]],[[R[1112]],[R[45],[R[1112]]]]]],[11,R[1078],E,R[1079],16,[[["c_int"]],[R[1112]]]],[11,R[73],E,R[1080],16,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],16,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],16,[[["self"],[R[1112]]],["bool"]]],[11,R[1110],E,R[1083],16,[[["self"],[R[1112]]],["bool"]]],[11,"insert",E,R[1084],16,[[["self"],[R[1112]]]]],[11,"remove",E,R[1085],16,[[["self"],[R[1112]]]]],[11,"toggle",E,R[1086],16,[[["self"],[R[1112]]]]],[11,"set",E,R[1087],16,[[["self"],[R[1112]],["bool"]]]],[0,"mount","nix",E,N,N],[3,"MsFlags",R[1408],E,N,N],[3,"MntFlags",E,E,N,N],[5,"mount",E,E,N,[[["p2"],[R[45]],["p3"],[R[45]],["msflags"],[R[45]],["p1"],["p4"]],[R[13]]]],[5,"umount",E,E,N,[[["p"]],[R[13]]]],[5,"umount2",E,E,N,[[[R[1123]],["p"]],[R[13]]]],[18,"MS_RDONLY",E,"Mount read-only",17,N],[18,"MS_NOSUID",E,"Ignore suid and sgid bits",17,N],[18,"MS_NODEV",E,"Disallow access to device special files",17,N],[18,"MS_NOEXEC",E,"Disallow program execution",17,N],[18,R[1113],E,"Writes are synced at once",17,N],[18,"MS_REMOUNT",E,"Alter flags of a mounted FS",17,N],[18,R[1114],E,"Allow mandatory locks on a FS",17,N],[18,"MS_DIRSYNC",E,"Directory modifications are synchronous",17,N],[18,"MS_NOATIME",E,"Do not update access times",17,N],[18,R[1115],E,"Do not update directory access times",17,N],[18,"MS_BIND",E,"Linux 2.4.0 - Bind directory at different place",17,N],[18,"MS_MOVE",E,E,17,N],[18,"MS_REC",E,E,17,N],[18,"MS_SILENT",E,E,17,N],[18,R[1116],E,E,17,N],[18,R[1117],E,E,17,N],[18,"MS_PRIVATE",E,E,17,N],[18,"MS_SLAVE",E,E,17,N],[18,"MS_SHARED",E,E,17,N],[18,R[1118],E,E,17,N],[18,R[1119],E,E,17,N],[18,R[1120],E,E,17,N],[18,R[1121],E,E,17,N],[18,"MS_ACTIVE",E,E,17,N],[18,"MS_NOUSER",E,E,17,N],[18,R[1122],E,E,17,N],[18,"MS_MGC_VAL",E,E,17,N],[18,"MS_MGC_MSK",E,E,17,N],[11,"empty",E,R[1074],17,[[],["msflags"]]],[11,"all",E,R[1075],17,[[],["msflags"]]],[11,"bits",E,R[1076],17,[[["self"]],["c_ulong"]]],[11,R[1094],E,R[1077],17,[[["c_ulong"]],[[R[45],["msflags"]],["msflags"]]]],[11,R[1078],E,R[1079],17,[[["c_ulong"]],["msflags"]]],[11,R[73],E,R[1080],17,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],17,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],17,[[["self"],["msflags"]],["bool"]]],[11,R[1110],E,R[1083],17,[[["self"],["msflags"]],["bool"]]],[11,"insert",E,R[1084],17,[[["self"],["msflags"]]]],[11,"remove",E,R[1085],17,[[["self"],["msflags"]]]],[11,"toggle",E,R[1086],17,[[["self"],["msflags"]]]],[11,"set",E,R[1087],17,[[["self"],["bool"],["msflags"]]]],[18,"MNT_FORCE",E,E,18,N],[18,"MNT_DETACH",E,E,18,N],[18,"MNT_EXPIRE",E,E,18,N],[11,"empty",E,R[1074],18,[[],[R[1123]]]],[11,"all",E,R[1075],18,[[],[R[1123]]]],[11,"bits",E,R[1076],18,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],18,[[["c_int"]],[[R[45],[R[1123]]],[R[1123]]]]],[11,R[1078],E,R[1079],18,[[["c_int"]],[R[1123]]]],[11,R[73],E,R[1080],18,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],18,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],18,[[["self"],[R[1123]]],["bool"]]],[11,R[1110],E,R[1083],18,[[["self"],[R[1123]]],["bool"]]],[11,"insert",E,R[1084],18,[[["self"],[R[1123]]]]],[11,"remove",E,R[1085],18,[[["self"],[R[1123]]]]],[11,"toggle",E,R[1086],18,[[["self"],[R[1123]]]]],[11,"set",E,R[1087],18,[[["self"],[R[1123]],["bool"]]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag",R[1375],E,N,N],[3,"FdFlag",E,E,N,N],[3,"MqAttr",E,E,N,N],[5,"mq_open",E,"Open a message queue",N,[[["cstring"],["mode"],[R[45],["mqattr"]],["mqattr"],[R[1124]]],[[R[13],["mqd_t"]],["mqd_t"]]]],[5,"mq_unlink",E,"Remove a message queue",N,[[["cstring"]],[R[13]]]],[5,"mq_close",E,"Close a message queue",N,[[["mqd_t"]],[R[13]]]],[5,"mq_receive",E,"Receive a message from a message queue",N,[[["mqd_t"],["u32"]],[[R[13],[R[9]]],[R[9]]]]],[5,"mq_send",E,"Send a message to a message queue",N,[[["mqd_t"],["u32"]],[R[13]]]],[5,"mq_getattr",E,"Get message queue attributes",N,[[["mqd_t"]],[[R[13],["mqattr"]],["mqattr"]]]],[5,"mq_setattr",E,"Set the attributes of the message queue. Only `O_NONBLOCK`…",N,[[["mqd_t"],["mqattr"]],[[R[13],["mqattr"]],["mqattr"]]]],[5,"mq_set_nonblock",E,"Convenience function. Sets the `O_NONBLOCK` attribute for…",N,[[["mqd_t"]],[[R[13],["mqattr"]],["mqattr"]]]],[5,"mq_remove_nonblock",E,"Convenience function. Removes `O_NONBLOCK` attribute for a…",N,[[["mqd_t"]],[[R[13],["mqattr"]],["mqattr"]]]],[18,"O_RDONLY",E,E,19,N],[18,"O_WRONLY",E,E,19,N],[18,"O_RDWR",E,E,19,N],[18,"O_CREAT",E,E,19,N],[18,"O_EXCL",E,E,19,N],[18,R[1111],E,E,19,N],[18,"O_CLOEXEC",E,E,19,N],[11,"empty",E,R[1074],19,[[],[R[1124]]]],[11,"all",E,R[1075],19,[[],[R[1124]]]],[11,"bits",E,R[1076],19,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],19,[[["c_int"]],[[R[45],[R[1124]]],[R[1124]]]]],[11,R[1078],E,R[1079],19,[[["c_int"]],[R[1124]]]],[11,R[73],E,R[1080],19,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],19,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],19,[[["self"],[R[1124]]],["bool"]]],[11,R[1110],E,R[1083],19,[[["self"],[R[1124]]],["bool"]]],[11,"insert",E,R[1084],19,[[["self"],[R[1124]]]]],[11,"remove",E,R[1085],19,[[["self"],[R[1124]]]]],[11,"toggle",E,R[1086],19,[[["self"],[R[1124]]]]],[11,"set",E,R[1087],19,[[["self"],["bool"],[R[1124]]]]],[18,R[1125],E,E,20,N],[11,"empty",E,R[1074],20,[[],["fdflag"]]],[11,"all",E,R[1075],20,[[],["fdflag"]]],[11,"bits",E,R[1076],20,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],20,[[["c_int"]],[[R[45],["fdflag"]],["fdflag"]]]],[11,R[1078],E,R[1079],20,[[["c_int"]],["fdflag"]]],[11,R[73],E,R[1080],20,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],20,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],20,[[["fdflag"],["self"]],["bool"]]],[11,R[1110],E,R[1083],20,[[["fdflag"],["self"]],["bool"]]],[11,"insert",E,R[1084],20,[[["self"],["fdflag"]]]],[11,"remove",E,R[1085],20,[[["self"],["fdflag"]]]],[11,"toggle",E,R[1086],20,[[["self"],["fdflag"]]]],[11,"set",E,R[1087],20,[[["self"],["fdflag"],["bool"]]]],[11,"new",E,E,21,[[["c_long"]],["mqattr"]]],[11,"flags",E,E,21,[[["self"]],["c_long"]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,R[1450],R[1376],"Standard interface flags, used by `getifaddrs`",N,N],[5,R[1126],E,"Resolve an interface into a interface number.",N,[[["p"]],[["c_uint"],[R[13],["c_uint"]]]]],[18,"IFF_UP",E,"Interface is running. (see `netdevice(7)`)",22,N],[18,R[1127],E,"Valid broadcast address set. (see `netdevice(7)`)",22,N],[18,"IFF_DEBUG",E,"Internal debugging flag. (see `netdevice(7)`)",22,N],[18,R[1128],E,"Interface is a loopback interface. (see `netdevice(7)`)",22,N],[18,R[1129],E,"Interface is a point-to-point link. (see `netdevice(7)`)",22,N],[18,R[1130],E,"Avoid use of trailers. (see `netdevice(7)`)",22,N],[18,R[1131],E,"Resources allocated. (see `netdevice(7)`)",22,N],[18,"IFF_NOARP",E,"No arp protocol, L2 destination address not set. (see…",22,N],[18,R[1132],E,"Interface is in promiscuous mode. (see `netdevice(7)`)",22,N],[18,R[1133],E,"Receive all multicast packets. (see `netdevice(7)`)",22,N],[18,"IFF_MASTER",E,"Master of a load balancing bundle. (see `netdevice(7)`)",22,N],[18,"IFF_SLAVE",E,"Slave of a load balancing bundle. (see `netdevice(7)`)",22,N],[18,R[1134],E,"Supports multicast. (see `netdevice(7)`)",22,N],[18,R[1135],E,"Is able to select media type via ifmap. (see `netdevice(7)`)",22,N],[18,R[1136],E,"Auto media selection active. (see `netdevice(7)`)",22,N],[18,R[1137],E,"The addresses are lost when the interface goes down. (see…",22,N],[18,R[1138],E,"Driver signals L1 up. Volatile.",22,N],[18,R[1139],E,"Driver signals dormant. Volatile.",22,N],[18,"IFF_ECHO",E,"Echo sent packets. Volatile.",22,N],[18,"IFF_NO_PI",E,"Do not provide packet information",22,N],[18,"IFF_TUN",E,"TUN device (no Ethernet headers) ",22,N],[18,"IFF_TAP",E,"TAP device",22,N],[11,"empty",E,R[1074],22,[[],[R[1140]]]],[11,"all",E,R[1075],22,[[],[R[1140]]]],[11,"bits",E,R[1076],22,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],22,[[["c_int"]],[[R[45],[R[1140]]],[R[1140]]]]],[11,R[1078],E,R[1079],22,[[["c_int"]],[R[1140]]]],[11,R[73],E,R[1080],22,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],22,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],22,[[["self"],[R[1140]]],["bool"]]],[11,R[1110],E,R[1083],22,[[["self"],[R[1140]]],["bool"]]],[11,"insert",E,R[1084],22,[[["self"],[R[1140]]]]],[11,"remove",E,R[1085],22,[[["self"],[R[1140]]]]],[11,"toggle",E,R[1086],22,[[["self"],[R[1140]]]]],[11,"set",E,R[1087],22,[[["self"],[R[1140]],["bool"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd",R[1413],"This is a wrapper around `libc::pollfd`.",N,N],[3,"PollFlags",E,"These flags define the different events that can be…",N,N],[5,"poll",E,"`poll` waits for one of a set of file descriptors to…",N,[[["c_int"]],[["c_int"],[R[13],["c_int"]]]]],[5,"ppoll",E,"`ppoll()` allows an application to safely wait until…",N,[[[R[513]],["sigset"]],[["c_int"],[R[13],["c_int"]]]]],[11,"new",E,"Creates a new `PollFd` specifying the events of interest…",23,[[[R[1497]],["rawfd"]],["pollfd"]]],[11,"revents",E,"Returns the events that occured in the last call to `poll`…",23,[[["self"]],[[R[45],[R[1497]]],[R[1497]]]]],[18,"POLLIN",E,"There is data to read.",24,N],[18,"POLLPRI",E,"There is some exceptional condition on the file descriptor.",24,N],[18,"POLLOUT",E,"Writing is now possible, though a write larger that the…",24,N],[18,"POLLRDNORM",E,"Equivalent to `POLLIN`",24,N],[18,"POLLWRNORM",E,"Equivalent to `POLLOUT`",24,N],[18,"POLLRDBAND",E,"Priority band data can be read (generally unused on Linux).",24,N],[18,"POLLWRBAND",E,"Priority data may be written.",24,N],[18,"POLLERR",E,"Error condition (only returned in `PollFd::revents`;…",24,N],[18,"POLLHUP",E,"Hang up (only returned in `PollFd::revents`; ignored in…",24,N],[18,"POLLNVAL",E,"Invalid request: `fd` not open (only returned in…",24,N],[11,"empty",E,R[1074],24,[[],[R[1497]]]],[11,"all",E,R[1075],24,[[],[R[1497]]]],[11,"bits",E,R[1076],24,[[["self"]],["c_short"]]],[11,R[1094],E,R[1077],24,[[["c_short"]],[[R[1497]],[R[45],[R[1497]]]]]],[11,R[1078],E,R[1079],24,[[["c_short"]],[R[1497]]]],[11,R[73],E,R[1080],24,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],24,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],24,[[[R[1497]],["self"]],["bool"]]],[11,R[1110],E,R[1083],24,[[[R[1497]],["self"]],["bool"]]],[11,"insert",E,R[1084],24,[[["self"],[R[1497]]]]],[11,"remove",E,R[1085],24,[[["self"],[R[1497]]]]],[11,"toggle",E,R[1086],24,[[["self"],[R[1497]]]]],[11,"set",E,R[1087],24,[[["self"],[R[1497]],["bool"]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId",R[1443],E,N,N],[3,"Winsize",E,E,N,N],[12,"ws_row",E,E,25,N],[12,"ws_col",E,E,25,N],[12,"ws_xpixel",E,E,25,N],[12,"ws_ypixel",E,E,25,N],[3,R[1451],E,"Representation of a master/slave pty pair",N,N],[12,"master",E,R[1498],26,N],[12,"slave",E,"The slave port in a virtual pty pair",26,N],[3,R[1520],E,"Representation of a master with a forked pty",N,N],[12,"master",E,R[1498],27,N],[12,"fork_result",E,"Metadata about forked process",27,N],[3,"PtyMaster",E,"Representation of the Master device in a master/slave pty…",N,N],[5,"grantpt",E,"Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[[R[1143]]],[R[13]]]],[5,R[1142],E,"Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],[[R[1143]],[R[13],[R[1143]]]]]],[5,"ptsname",E,R[1144],N,[[[R[1143]]],[[R[13],["string"]],["string"]]]],[5,"ptsname_r",E,R[1144],N,[[[R[1143]]],[[R[13],["string"]],["string"]]]],[5,"unlockpt",E,"Unlock a pseudoterminal master/slave pseudoterminal pair…",N,[[[R[1143]]],[R[13]]]],[5,"openpty",E,"Create a new pseudoterminal, returning the slave and…",N,[[["into",[R[45]]],[R[45],["winsize"]],[R[45],["termios"]],["into",[R[45]]]],[[R[1145]],[R[13],[R[1145]]]]]],[5,"forkpty",E,"Create a new pseudoterminal, returning the master file…",N,[[["into",[R[45]]],[R[45],["winsize"]],[R[45],["termios"]],["into",[R[45]]]],[[R[13],[R[1499]]],[R[1499]]]]],[0,"sched","nix",E,N,N],[3,"CloneFlags",R[1409],E,N,N],[3,"CpuSet",E,E,N,N],[5,R[1146],E,E,N,[[["cpuset"],["pid"]],[R[13]]]],[5,R[1500],E,"Explicitly yield the processor to other threads.",N,[[],[R[13]]]],[5,"clone",E,E,N,[[[R[1147]],[R[45],["c_int"]],["c_int"],["clonecb"]],[[R[13],["pid"]],["pid"]]]],[5,"unshare",E,E,N,[[[R[1147]]],[R[13]]]],[5,"setns",E,E,N,[[[R[1147]],["rawfd"]],[R[13]]]],[6,"CloneCb",E,E,N,N],[18,"CLONE_VM",E,E,28,N],[18,"CLONE_FS",E,E,28,N],[18,R[1148],E,E,28,N],[18,R[1149],E,E,28,N],[18,R[1150],E,E,28,N],[18,R[1151],E,E,28,N],[18,R[1152],E,E,28,N],[18,R[1153],E,E,28,N],[18,R[1154],E,E,28,N],[18,R[1155],E,E,28,N],[18,R[1156],E,E,28,N],[18,R[1157],E,E,28,N],[18,R[1158],E,E,28,N],[18,R[1159],E,E,28,N],[18,R[1160],E,E,28,N],[18,R[1161],E,E,28,N],[18,R[1162],E,E,28,N],[18,R[1163],E,E,28,N],[18,R[1164],E,E,28,N],[18,R[1165],E,E,28,N],[18,R[1166],E,E,28,N],[18,R[1167],E,E,28,N],[18,"CLONE_IO",E,E,28,N],[11,"empty",E,R[1074],28,[[],[R[1147]]]],[11,"all",E,R[1075],28,[[],[R[1147]]]],[11,"bits",E,R[1076],28,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],28,[[["c_int"]],[[R[1147]],[R[45],[R[1147]]]]]],[11,R[1078],E,R[1079],28,[[["c_int"]],[R[1147]]]],[11,R[73],E,R[1080],28,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],28,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],28,[[[R[1147]],["self"]],["bool"]]],[11,R[1110],E,R[1083],28,[[[R[1147]],["self"]],["bool"]]],[11,"insert",E,R[1084],28,[[["self"],[R[1147]]]]],[11,"remove",E,R[1085],28,[[["self"],[R[1147]]]]],[11,"toggle",E,R[1086],28,[[["self"],[R[1147]]]]],[11,"set",E,R[1087],28,[[["self"],[R[1147]],["bool"]]]],[11,"new",E,E,29,[[],["cpuset"]]],[11,"is_set",E,E,29,[[["self"],[R[9]]],[[R[13],["bool"]],["bool"]]]],[11,"set",E,E,29,[[["self"],[R[9]]],[R[13]]]],[11,"unset",E,E,29,[[["self"],[R[9]]],[R[13]]]],[0,"sys","nix",E,N,N],[0,"aio",R[1226],"POSIX Asynchronous I/O",N,N],[3,"AioCb",R[1377],"AIO Control Block.",N,N],[3,"LioCb",E,"LIO Control Block.",N,N],[12,"aiocbs",E,"A collection of [`AioCb`]s. All of these will be issued…",30,N],[4,R[1452],E,"Mode for `AioCb::fsync`. Controls whether only data or…",N,N],[13,"O_SYNC",E,"do it like `fsync`",31,N],[13,"O_DSYNC",E,"on supported operating systems only, do it like `fdatasync`",31,N],[4,"LioOpcode",E,"When used with `lio_listio`, determines whether a given…",N,N],[13,"LIO_NOP",E,E,32,N],[13,"LIO_WRITE",E,E,32,N],[13,"LIO_READ",E,E,32,N],[4,"LioMode",E,"Mode for `lio_listio`",N,N],[13,"LIO_WAIT",E,"Requests that `lio_listio` block until all requested…",33,N],[13,"LIO_NOWAIT",E,"Requests that `lio_listio` return immediately",33,N],[4,R[1453],E,"Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled",E,"All outstanding requests were canceled",34,N],[13,"AioNotCanceled",E,"Some requests were not canceled. Their status should be…",34,N],[13,"AioAllDone",E,"All of the requests have already finished",34,N],[4,"Buffer",E,"Owns (uniquely or shared) a memory buffer to keep it from…",N,N],[13,"None",E,"No buffer to own.",35,N],[13,"Phantom",E,"Keeps a reference to a slice",35,N],[13,"BoxedSlice",E,"Generic thing that keeps a buffer from dropping",35,N],[13,"BoxedMutSlice",E,"Generic thing that keeps a mutable buffer from dropping",35,N],[5,"aio_cancel_all",E,"Cancels outstanding AIO requests for a given file…",N,[[["rawfd"]],[[R[1168]],[R[13],[R[1168]]]]]],[5,R[1169],E,"Suspends the calling process until at least one of the…",N,[[[R[45],[R[513]]],[R[513]]],[R[13]]]],[11,"buffer",E,"Remove the inner `Buffer` and return it",36,[[["self"]],["buffer"]]],[11,"boxed_slice",E,"Remove the inner boxed slice, if any, and return it.",36,[[["self"]],[["box",[R[41]]],[R[45],["box"]]]]],[11,"boxed_mut_slice",E,"Remove the inner boxed mutable slice, if any, and return it.",36,[[["self"]],[[R[45],["box"]],["box",["borrowmut"]]]]],[11,"fd",E,"Returns the underlying file descriptor associated with the…",36,[[["self"]],["rawfd"]]],[11,"from_fd",E,"Constructs a new `AioCb` with no associated buffer.",36,[[["c_int"],["rawfd"],[R[1170]]],["aiocb"]]],[11,R[1353],E,"Constructs a new `AioCb` from a mutable slice.",36,[[["off_t"],["rawfd"],["c_int"],[R[1170]],[R[1171]]],["aiocb"]]],[11,"from_boxed_slice",E,"The safest and most flexible way to create an `AioCb`.",36,[[["box",[R[41]]],["rawfd"],["c_int"],[R[41]],[R[1170]],[R[1171]],["off_t"]],["aiocb"]]],[11,"from_boxed_mut_slice",E,"The safest and most flexible way to create an `AioCb` for…",36,[[["box",["borrowmut"]],["rawfd"],["borrowmut"],["c_int"],[R[1170]],[R[1171]],["off_t"]],["aiocb"]]],[11,"from_mut_ptr",E,"Constructs a new `AioCb` from a mutable raw pointer",36,[[["c_int"],["rawfd"],[R[9]],[R[1170]],[R[1171]],["off_t"]],["aiocb"]]],[11,"from_ptr",E,"Constructs a new `AioCb` from a raw pointer.",36,[[["rawfd"],[R[9]],["c_int"],[R[1170]],[R[1171]],["off_t"]],["aiocb"]]],[11,R[1495],E,"Like `from_mut_slice`, but works on constant slices rather…",36,[[["c_int"],["rawfd"],[R[1170]],[R[1171]],["off_t"]],["aiocb"]]],[11,"set_sigev_notify",E,"Update the notification settings for an existing `aiocb`",36,[[["self"],[R[1170]]]]],[11,"cancel",E,"Cancels an outstanding AIO request.",36,[[["self"]],[[R[1168]],[R[13],[R[1168]]]]]],[11,"error",E,"Retrieve error status of an asynchronous operation.",36,[[["self"]],[R[13]]]],[11,"fsync",E,"An asynchronous version of `fsync(2)`.",36,[[["self"],[R[1414]]],[R[13]]]],[11,"lio_opcode",E,"Returns the `aiocb`'s `LioOpcode` field",36,[[["self"]],[[R[1171]],[R[45],[R[1171]]]]]],[11,"nbytes",E,"Returns the requested length of the aio operation in bytes",36,[[["self"]],[R[9]]]],[11,"offset",E,"Returns the file offset stored in the `AioCb`",36,[[["self"]],["off_t"]]],[11,"priority",E,"Returns the priority of the `AioCb`",36,[[["self"]],["c_int"]]],[11,"read",E,"Asynchronously reads from a file descriptor into a buffer",36,[[["self"]],[R[13]]]],[11,R[517],E,"Returns the `SigEvent` stored in the `AioCb`",36,[[["self"]],[R[517]]]],[11,R[1172],E,"Retrieve return status of an asynchronous operation.",36,[[["self"]],[["isize"],[R[13],["isize"]]]]],[11,"write",E,"Asynchronously writes from a buffer to a file descriptor",36,[[["self"]],[R[13]]]],[11,R[72],E,"Initialize an empty `LioCb`",30,[[[R[9]]],["liocb"]]],[11,"listio",E,"Submits multiple asynchronous I/O requests with a single…",30,[[["self"],["liomode"],[R[1170]]],[R[13]]]],[11,"listio_resubmit",E,"Resubmits any incomplete operations with [`lio_listio`].",30,[[["self"],["liomode"],[R[1170]]],[R[13]]]],[11,R[1172],E,"Collect final status for an individual `AioCb` submitted…",30,[[["self"],[R[9]]],[["isize"],[R[13],["isize"]]]]],[11,"error",E,"Retrieve error status of an individual `AioCb` submitted…",30,[[["self"],[R[9]]],[R[13]]]],[0,"epoll",R[1226],E,N,N],[3,"EpollFlags",R[1378],E,N,N],[3,R[1454],E,E,N,N],[3,"EpollEvent",E,E,N,N],[4,"EpollOp",E,E,N,N],[13,"EpollCtlAdd",E,E,37,N],[13,"EpollCtlDel",E,E,37,N],[13,"EpollCtlMod",E,E,37,N],[5,R[1173],E,E,N,[[],[[R[13],["rawfd"]],["rawfd"]]]],[5,R[1174],E,E,N,[[[R[1184]]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"epoll_ctl",E,E,N,[[["epollop"],["rawfd"],[T]],[R[13]]]],[5,"epoll_wait",E,E,N,[[["isize"],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[18,"EPOLLIN",E,E,38,N],[18,"EPOLLPRI",E,E,38,N],[18,"EPOLLOUT",E,E,38,N],[18,R[1175],E,E,38,N],[18,R[1176],E,E,38,N],[18,R[1177],E,E,38,N],[18,R[1178],E,E,38,N],[18,"EPOLLMSG",E,E,38,N],[18,"EPOLLERR",E,E,38,N],[18,"EPOLLHUP",E,E,38,N],[18,"EPOLLRDHUP",E,E,38,N],[18,R[1179],E,E,38,N],[18,R[1180],E,E,38,N],[18,R[1181],E,E,38,N],[18,"EPOLLET",E,E,38,N],[11,"empty",E,R[1074],38,[[],[R[1182]]]],[11,"all",E,R[1075],38,[[],[R[1182]]]],[11,"bits",E,R[1076],38,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],38,[[["c_int"]],[[R[45],[R[1182]]],[R[1182]]]]],[11,R[1078],E,R[1079],38,[[["c_int"]],[R[1182]]]],[11,R[73],E,R[1080],38,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],38,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],38,[[["self"],[R[1182]]],["bool"]]],[11,R[1110],E,R[1083],38,[[["self"],[R[1182]]],["bool"]]],[11,"insert",E,R[1084],38,[[["self"],[R[1182]]]]],[11,"remove",E,R[1085],38,[[["self"],[R[1182]]]]],[11,"toggle",E,R[1086],38,[[["self"],[R[1182]]]]],[11,"set",E,R[1087],38,[[["self"],[R[1182]],["bool"]]]],[18,R[1183],E,E,39,N],[11,"empty",E,R[1074],39,[[],[R[1184]]]],[11,"all",E,R[1075],39,[[],[R[1184]]]],[11,"bits",E,R[1076],39,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],39,[[["c_int"]],[[R[1184]],[R[45],[R[1184]]]]]],[11,R[1078],E,R[1079],39,[[["c_int"]],[R[1184]]]],[11,R[73],E,R[1080],39,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],39,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],39,[[["self"],[R[1184]]],["bool"]]],[11,R[1110],E,R[1083],39,[[["self"],[R[1184]]],["bool"]]],[11,"insert",E,R[1084],39,[[["self"],[R[1184]]]]],[11,"remove",E,R[1085],39,[[["self"],[R[1184]]]]],[11,"toggle",E,R[1086],39,[[["self"],[R[1184]]]]],[11,"set",E,R[1087],39,[[["self"],["bool"],[R[1184]]]]],[11,"new",E,E,40,[[[R[1182]],["u64"]],["self"]]],[11,"empty",E,E,40,[[],["self"]]],[11,"events",E,E,40,[[["self"]],[R[1182]]]],[11,"data",E,E,40,[[["self"]],["u64"]]],[0,"eventfd",R[1226],E,N,N],[3,"EfdFlags",R[1379],E,N,N],[5,"eventfd",E,E,N,[[[R[1188]],["c_uint"]],[[R[13],["rawfd"]],["rawfd"]]]],[18,R[1185],E,E,41,N],[18,R[1186],E,E,41,N],[18,R[1187],E,E,41,N],[11,"empty",E,R[1074],41,[[],[R[1188]]]],[11,"all",E,R[1075],41,[[],[R[1188]]]],[11,"bits",E,R[1076],41,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],41,[[["c_int"]],[[R[1188]],[R[45],[R[1188]]]]]],[11,R[1078],E,R[1079],41,[[["c_int"]],[R[1188]]]],[11,R[73],E,R[1080],41,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],41,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],41,[[["self"],[R[1188]]],["bool"]]],[11,R[1110],E,R[1083],41,[[["self"],[R[1188]]],["bool"]]],[11,"insert",E,R[1084],41,[[["self"],[R[1188]]]]],[11,"remove",E,R[1085],41,[[["self"],[R[1188]]]]],[11,"toggle",E,R[1086],41,[[["self"],[R[1188]]]]],[11,"set",E,R[1087],41,[[["self"],[R[1188]],["bool"]]]],[0,"ioctl",R[1226],"Provide helpers for making ioctl system calls.",N,N],[0,"memfd",E,E,N,N],[3,R[1455],R[1380],E,N,N],[5,"memfd_create",E,E,N,[[["cstr"],[R[1191]]],[[R[13],["rawfd"]],["rawfd"]]]],[18,R[1189],E,E,42,N],[18,R[1190],E,E,42,N],[11,"empty",E,R[1074],42,[[],[R[1191]]]],[11,"all",E,R[1075],42,[[],[R[1191]]]],[11,"bits",E,R[1076],42,[[["self"]],["c_uint"]]],[11,R[1094],E,R[1077],42,[[["c_uint"]],[[R[45],[R[1191]]],[R[1191]]]]],[11,R[1078],E,R[1079],42,[[["c_uint"]],[R[1191]]]],[11,R[73],E,R[1080],42,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],42,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],42,[[["self"],[R[1191]]],["bool"]]],[11,R[1110],E,R[1083],42,[[["self"],[R[1191]]],["bool"]]],[11,"insert",E,R[1084],42,[[["self"],[R[1191]]]]],[11,"remove",E,R[1085],42,[[["self"],[R[1191]]]]],[11,"toggle",E,R[1086],42,[[["self"],[R[1191]]]]],[11,"set",E,R[1087],42,[[["self"],["bool"],[R[1191]]]]],[0,"mman",R[1226],E,N,N],[3,"ProtFlags",R[1381],"Desired memory protection of a memory mapping.",N,N],[3,"MapFlags",E,"Additional parameters for `mmap()`.",N,N],[3,"MsFlags",E,"Configuration flags for `msync`.",N,N],[3,R[1456],E,"Flags for `mlockall`.",N,N],[4,"MmapAdvise",E,"Usage information for a range of memory to allow for…",N,N],[13,R[1192],E,"No further special treatment. This is the default.",43,N],[13,R[1193],E,"Expect random page references.",43,N],[13,R[1194],E,"Expect sequential page references.",43,N],[13,R[1195],E,"Expect access in the near future.",43,N],[13,R[1196],E,"Do not expect access in the near future.",43,N],[13,R[1197],E,"Free up a given range of pages and its associated backing…",43,N],[13,R[1198],E,"Do not make pages in this range available to the child…",43,N],[13,R[1199],E,"Undo the effect of `MADV_DONTFORK`.",43,N],[13,R[1200],E,"Poison the given pages.",43,N],[13,R[1201],E,"Enable Kernel Samepage Merging (KSM) for the given pages.",43,N],[13,R[1202],E,"Undo the effect of `MADV_MERGEABLE`",43,N],[13,R[1203],E,"Preserve the memory of each page but offline the original…",43,N],[13,R[1204],E,"Enable Transparent Huge Pages (THP) for pages in the given…",43,N],[13,R[1205],E,"Undo the effect of `MADV_HUGEPAGE`.",43,N],[13,R[1206],E,"Exclude the given range from a core dump.",43,N],[13,R[1207],E,"Undo the effect of an earlier `MADV_DONTDUMP`.",43,N],[13,"MADV_FREE",E,"Specify that the application no longer needs the pages in…",43,N],[5,"mlock",E,"Locks all memory pages that contain part of the address…",N,[[["size_t"]],[R[13]]]],[5,"munlock",E,"Unlocks all memory pages that contain part of the address…",N,[[["size_t"]],[R[13]]]],[5,"mlockall",E,"Locks all memory pages mapped into this process' address…",N,[[[R[1224]]],[R[13]]]],[5,"munlockall",E,"Unlocks all memory pages mapped into this process' address…",N,[[],[R[13]]]],[5,"mmap",E,"Calls to mmap are inherently unsafe, so they must be made…",N,[[[R[1221]],["rawfd"],[R[1210]],["off_t"],["size_t"]],[R[13]]]],[5,"munmap",E,E,N,[[["size_t"]],[R[13]]]],[5,"madvise",E,E,N,[[[R[1422]],["size_t"]],[R[13]]]],[5,"mprotect",E,"Set protection of memory mapping.",N,[[[R[1210]],["size_t"]],[R[13]]]],[5,"msync",E,E,N,[[["msflags"],["size_t"]],[R[13]]]],[5,"shm_open",E,E,N,[[["oflag"],["mode"],["p"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"shm_unlink",E,E,N,[[["p"]],[R[13]]]],[18,"PROT_NONE",E,"Pages cannot be accessed.",44,N],[18,"PROT_READ",E,"Pages can be read.",44,N],[18,"PROT_WRITE",E,"Pages can be written.",44,N],[18,"PROT_EXEC",E,"Pages can be executed",44,N],[18,R[1208],E,"Apply protection up to the end of a mapping that grows…",44,N],[18,R[1209],E,"Apply protection down to the beginning of a mapping that…",44,N],[11,"empty",E,R[1074],44,[[],[R[1210]]]],[11,"all",E,R[1075],44,[[],[R[1210]]]],[11,"bits",E,R[1076],44,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],44,[[["c_int"]],[[R[45],[R[1210]]],[R[1210]]]]],[11,R[1078],E,R[1079],44,[[["c_int"]],[R[1210]]]],[11,R[73],E,R[1080],44,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],44,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],44,[[["self"],[R[1210]]],["bool"]]],[11,R[1110],E,R[1083],44,[[["self"],[R[1210]]],["bool"]]],[11,"insert",E,R[1084],44,[[["self"],[R[1210]]]]],[11,"remove",E,R[1085],44,[[["self"],[R[1210]]]]],[11,"toggle",E,R[1086],44,[[["self"],[R[1210]]]]],[11,"set",E,R[1087],44,[[["self"],[R[1210]],["bool"]]]],[18,"MAP_FILE",E,R[1215],45,N],[18,"MAP_SHARED",E,"Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",45,N],[18,R[1211],E,"Create a private copy-on-write mapping. Mutually exclusive…",45,N],[18,"MAP_FIXED",E,"Place the mapping at exactly the address specified in…",45,N],[18,"MAP_ANON",E,"Synonym for `MAP_ANONYMOUS`.",45,N],[18,R[1212],E,"The mapping is not backed by any file.",45,N],[18,"MAP_32BIT",E,"Put the mapping into the first 2GB of the process address…",45,N],[18,R[1213],E,"Used for stacks; indicates to the kernel that the mapping…",45,N],[18,R[1214],E,R[1215],45,N],[18,R[1216],E,R[1215],45,N],[18,"MAP_LOCKED",E,"Mark the mmaped region to be locked in the same way as…",45,N],[18,R[1217],E,"Do not reserve swap space for this mapping.",45,N],[18,R[1218],E,"Populate page tables for a mapping.",45,N],[18,R[1219],E,"Only meaningful when used with `MAP_POPULATE`. Don't…",45,N],[18,R[1220],E,"Allocate the mapping using \"huge pages.\"",45,N],[18,"MAP_STACK",E,"Region grows down, like a stack.",45,N],[11,"empty",E,R[1074],45,[[],[R[1221]]]],[11,"all",E,R[1075],45,[[],[R[1221]]]],[11,"bits",E,R[1076],45,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],45,[[["c_int"]],[[R[45],[R[1221]]],[R[1221]]]]],[11,R[1078],E,R[1079],45,[[["c_int"]],[R[1221]]]],[11,R[73],E,R[1080],45,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],45,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],45,[[[R[1221]],["self"]],["bool"]]],[11,R[1110],E,R[1083],45,[[[R[1221]],["self"]],["bool"]]],[11,"insert",E,R[1084],45,[[["self"],[R[1221]]]]],[11,"remove",E,R[1085],45,[[["self"],[R[1221]]]]],[11,"toggle",E,R[1086],45,[[["self"],[R[1221]]]]],[11,"set",E,R[1087],45,[[["self"],[R[1221]],["bool"]]]],[18,"MS_ASYNC",E,"Schedule an update but return immediately.",46,N],[18,R[1222],E,"Invalidate all cached data.",46,N],[18,"MS_SYNC",E,"Perform an update and wait for it to complete.",46,N],[11,"empty",E,R[1074],46,[[],["msflags"]]],[11,"all",E,R[1075],46,[[],["msflags"]]],[11,"bits",E,R[1076],46,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],46,[[["c_int"]],[[R[45],["msflags"]],["msflags"]]]],[11,R[1078],E,R[1079],46,[[["c_int"]],["msflags"]]],[11,R[73],E,R[1080],46,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],46,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],46,[[["msflags"],["self"]],["bool"]]],[11,R[1110],E,R[1083],46,[[["msflags"],["self"]],["bool"]]],[11,"insert",E,R[1084],46,[[["self"],["msflags"]]]],[11,"remove",E,R[1085],46,[[["self"],["msflags"]]]],[11,"toggle",E,R[1086],46,[[["self"],["msflags"]]]],[11,"set",E,R[1087],46,[[["self"],["msflags"],["bool"]]]],[18,R[1223],E,"Lock pages that are currently mapped into the address…",47,N],[18,"MCL_FUTURE",E,"Lock pages which will become mapped into the address space…",47,N],[11,"empty",E,R[1074],47,[[],[R[1224]]]],[11,"all",E,R[1075],47,[[],[R[1224]]]],[11,"bits",E,R[1076],47,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],47,[[["c_int"]],[[R[45],[R[1224]]],[R[1224]]]]],[11,R[1078],E,R[1079],47,[[["c_int"]],[R[1224]]]],[11,R[73],E,R[1080],47,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],47,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],47,[[["self"],[R[1224]]],["bool"]]],[11,R[1110],E,R[1083],47,[[["self"],[R[1224]]],["bool"]]],[11,"insert",E,R[1084],47,[[["self"],[R[1224]]]]],[11,"remove",E,R[1085],47,[[["self"],[R[1224]]]]],[11,"toggle",E,R[1086],47,[[["self"],[R[1224]]]]],[11,"set",E,R[1087],47,[[["self"],[R[1224]],["bool"]]]],[0,"pthread",R[1226],E,N,N],[5,R[1225],"nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread",E,E,N,N],[0,"ptrace",R[1226],E,N,N],[3,"Options",R[1382],"Ptrace options used in conjunction with the…",N,N],[4,"Request",E,"Ptrace Request enum defining the action to be taken.",N,N],[13,R[1227],E,E,48,N],[13,R[1228],E,E,48,N],[13,R[1229],E,E,48,N],[13,R[1230],E,E,48,N],[13,R[1231],E,E,48,N],[13,R[1232],E,E,48,N],[13,R[1233],E,E,48,N],[13,R[1234],E,E,48,N],[13,R[1235],E,E,48,N],[13,R[1236],E,E,48,N],[13,R[1237],E,E,48,N],[13,R[1238],E,E,48,N],[13,R[1239],E,E,48,N],[13,R[1240],E,E,48,N],[13,R[1241],E,E,48,N],[13,R[1242],E,E,48,N],[13,R[1243],E,E,48,N],[13,R[1244],E,E,48,N],[13,R[1245],E,E,48,N],[13,R[1246],E,E,48,N],[13,R[1247],E,E,48,N],[13,R[1248],E,E,48,N],[13,R[1249],E,E,48,N],[13,R[1250],E,E,48,N],[13,R[1251],E,E,48,N],[13,R[1252],E,E,48,N],[13,R[1253],E,E,48,N],[13,R[1254],E,E,48,N],[13,R[1255],E,E,48,N],[4,"Event",E,"Using the ptrace options the tracer can configure the…",N,N],[13,R[1256],E,"Event that stops before a return from fork or clone.",49,N],[13,R[1257],E,"Event that stops before a return from vfork or clone.",49,N],[13,R[1258],E,"Event that stops before a return from clone.",49,N],[13,R[1259],E,"Event that stops before a return from execve.",49,N],[13,R[1260],E,"Event for a return from vfork.",49,N],[13,R[1261],E,"Event for a stop before an exit. Unlike the waitpid Exit…",49,N],[13,R[1262],E,"STop triggered by a seccomp rule on a tracee.",49,N],[5,"ptrace",E,"Performs a ptrace request. If the request in question is…",N,[[[R[1263]],["request"],["pid"]],[["c_long"],[R[13],["c_long"]]]]],[5,"getregs",E,"Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`",N,[[["pid"]],[[R[13],[R[503]]],[R[503]]]]],[5,"setregs",E,"Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`",N,[[[R[503]],["pid"]],[R[13]]]],[5,"setoptions",E,"Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",N,[[["options"],["pid"]],[R[13]]]],[5,"getevent",E,"Gets a ptrace event as described by…",N,[[["pid"]],[["c_long"],[R[13],["c_long"]]]]],[5,"getsiginfo",E,"Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",N,[[["pid"]],[[R[497]],[R[13],[R[497]]]]]],[5,"setsiginfo",E,"Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",N,[[[R[497]],["pid"]],[R[13]]]],[5,"traceme",E,"Sets the process as traceable, as with…",N,[[],[R[13]]]],[5,"syscall",E,"Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",N,[[["pid"]],[R[13]]]],[5,"attach",E,"Attach to a running process, as with…",N,[[["pid"]],[R[13]]]],[5,"detach",E,"Detaches the current running process, as with…",N,[[["pid"]],[R[13]]]],[5,"cont",E,"Restart the stopped tracee process, as with…",N,[[[R[45],["signal"]],["into",[R[45]]],["pid"]],[R[13]]]],[5,"kill",E,"Issues a kill request as with `ptrace(PTRACE_KILL, ...)`",N,[[["pid"]],[R[13]]]],[5,"step",E,"Move the stopped tracee process forward by a single step…",N,[[[R[45],["signal"]],["into",[R[45]]],["pid"]],[R[13]]]],[5,"read",E,"Reads a word from a processes memory at the given address",N,[[[R[1263]],["pid"]],[["c_long"],[R[13],["c_long"]]]]],[5,"write",E,"Writes a word into the processes memory at the given address",N,[[[R[1263]],["pid"]],[R[13]]]],[18,R[1264],E,"When delivering system call traps set a bit to allow…",50,N],[18,R[1265],E,"Stop tracee at next fork and start tracing the forked…",50,N],[18,R[1266],E,"Stop tracee at next vfork call and trace the vforked…",50,N],[18,R[1267],E,"Stop tracee at next clone call and trace the cloned process.",50,N],[18,R[1268],E,"Stop tracee at next execve call.",50,N],[18,R[1269],E,"Stop tracee at vfork completion.",50,N],[18,R[1270],E,"Stop tracee at next exit call. Stops before exit commences…",50,N],[18,R[1271],E,"Stop tracee when a SECCOMP_RET_TRACE rule is triggered.…",50,N],[18,R[1272],E,"Send a SIGKILL to the tracee if the tracer exits. This is…",50,N],[11,"empty",E,R[1074],50,[[],["options"]]],[11,"all",E,R[1075],50,[[],["options"]]],[11,"bits",E,R[1076],50,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],50,[[["c_int"]],[[R[45],["options"]],["options"]]]],[11,R[1078],E,R[1079],50,[[["c_int"]],["options"]]],[11,R[73],E,R[1080],50,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],50,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],50,[[["self"],["options"]],["bool"]]],[11,R[1110],E,R[1083],50,[[["self"],["options"]],["bool"]]],[11,"insert",E,R[1084],50,[[["self"],["options"]]]],[11,"remove",E,R[1085],50,[[["self"],["options"]]]],[11,"toggle",E,R[1086],50,[[["self"],["options"]]]],[11,"set",E,R[1087],50,[[["self"],["options"],["bool"]]]],[6,"AddressType",E,E,N,N],[0,"quota",R[1226],"Set and configure disk quotas for users, groups, or…",N,N],[3,R[1457],R[1383],"Indicates the quota fields that are valid to read from.",N,N],[3,"Dqblk",E,"Wrapper type for `if_dqblk`",N,N],[4,"QuotaType",E,"The scope of the quota.",N,N],[13,"USRQUOTA",E,"Specify a user quota",51,N],[13,"GRPQUOTA",E,"Specify a group quota",51,N],[4,"QuotaFmt",E,"The type of quota format to use.",N,N],[13,R[1273],E,"Use the original quota format.",52,N],[13,R[1274],E,"Use the standard VFS v0 quota format.",52,N],[13,R[1275],E,"Use the VFS v1 quota format.",52,N],[5,"quotactl_on",E,"Turn on disk quotas for a block device.",N,[[[R[1276]],["quotafmt"],["p"]],[R[13]]]],[5,"quotactl_off",E,"Disable disk quotas for a block device.",N,[[[R[1276]],["p"]],[R[13]]]],[5,"quotactl_sync",E,"Update the on-disk copy of quota usages for a filesystem.",N,[[[R[1276]],[R[45]],["p"]],[R[13]]]],[5,"quotactl_get",E,"Get disk quota limits and current usage for the given…",N,[[[R[1276]],["c_int"],["p"]],[["dqblk"],[R[13],["dqblk"]]]]],[5,"quotactl_set",E,"Configure quota values for the specified fields for a…",N,[[[R[1276]],["p"],["c_int"],["dqblk"],[R[1279]]],[R[13]]]],[18,R[1277],E,"The block hard & soft limit fields.",53,N],[18,"QIF_SPACE",E,"The current space field.",53,N],[18,R[1278],E,"The inode hard & soft limit fields.",53,N],[18,"QIF_INODES",E,"The current inodes field.",53,N],[18,"QIF_BTIME",E,"The disk use time limit field.",53,N],[18,"QIF_ITIME",E,"The file quote time limit field.",53,N],[18,"QIF_LIMITS",E,"All block & inode limits.",53,N],[18,"QIF_USAGE",E,"The space & inodes usage fields.",53,N],[18,"QIF_TIMES",E,"The time limit fields.",53,N],[18,"QIF_ALL",E,"All fields.",53,N],[11,"empty",E,R[1074],53,[[],[R[1279]]]],[11,"all",E,R[1075],53,[[],[R[1279]]]],[11,"bits",E,R[1076],53,[[["self"]],["u32"]]],[11,R[1094],E,R[1077],53,[[["u32"]],[[R[45],[R[1279]]],[R[1279]]]]],[11,R[1078],E,R[1079],53,[[["u32"]],[R[1279]]]],[11,R[73],E,R[1080],53,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],53,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],53,[[["self"],[R[1279]]],["bool"]]],[11,R[1110],E,R[1083],53,[[["self"],[R[1279]]],["bool"]]],[11,"insert",E,R[1084],53,[[["self"],[R[1279]]]]],[11,"remove",E,R[1085],53,[[["self"],[R[1279]]]]],[11,"toggle",E,R[1086],53,[[["self"],[R[1279]]]]],[11,"set",E,R[1087],53,[[["self"],["bool"],[R[1279]]]]],[11,"blocks_hard_limit",E,"The absolute limit on disk quota blocks allocated.",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"set_blocks_hard_limit",E,"Set the absolute limit on disk quota blocks allocated.",54,[[["self"],["u64"]]]],[11,"blocks_soft_limit",E,"Preferred limit on disk quota blocks",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"set_blocks_soft_limit",E,"Set the preferred limit on disk quota blocks allocated.",54,[[["self"],["u64"]]]],[11,"occupied_space",E,"Current occupied space (bytes).",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"inodes_hard_limit",E,"Maximum number of allocated inodes.",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"set_inodes_hard_limit",E,"Set the maximum number of allocated inodes.",54,[[["self"],["u64"]]]],[11,"inodes_soft_limit",E,"Preferred inode limit",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"set_inodes_soft_limit",E,"Set the preferred limit of allocated inodes.",54,[[["self"],["u64"]]]],[11,"allocated_inodes",E,"Current number of allocated inodes.",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"block_time_limit",E,"Time limit for excessive disk use.",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"set_block_time_limit",E,"Set the time limit for excessive disk use.",54,[[["self"],["u64"]]]],[11,"inode_time_limit",E,"Time limit for excessive files.",54,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"set_inode_time_limit",E,"Set the time limit for excessive files.",54,[[["self"],["u64"]]]],[0,"reboot",R[1226],"Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",N,N],[4,"RebootMode",R[1384],"How exactly should the system be rebooted.",N,N],[13,R[1280],E,E,55,N],[13,"RB_KEXEC",E,E,55,N],[13,R[1281],E,E,55,N],[13,R[1282],E,E,55,N],[13,R[1283],E,E,55,N],[5,"reboot",E,E,N,[[[R[1423]]],[[R[13],["void"]],["void"]]]],[5,"set_cad_enabled",E,"Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",N,[[["bool"]],[R[13]]]],[0,"select",R[1226],E,N,N],[17,"FD_SETSIZE",R[1385],E,N,N],[3,"FdSet",E,E,N,N],[5,"select",E,"Monitors file descriptors for readiness",N,[[["w"],["n"],["e"],[T],["r"]],[["c_int"],[R[13],["c_int"]]]]],[5,"pselect",E,"Monitors file descriptors for readiness with an altered…",N,[[["w"],["n"],["e"],["s"],[T],["r"]],[["c_int"],[R[13],["c_int"]]]]],[11,"new",E,E,56,[[],["fdset"]]],[11,"insert",E,E,56,[[["self"],["rawfd"]]]],[11,"remove",E,E,56,[[["self"],["rawfd"]]]],[11,R[1110],E,E,56,[[["self"],["rawfd"]],["bool"]]],[11,"clear",E,E,56,[[["self"]]]],[11,"highest",E,"Finds the highest file descriptor in the set.",56,[[["self"]],[["rawfd"],[R[45],["rawfd"]]]]],[0,"sendfile",R[1226],E,N,N],[5,"sendfile","nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting…",N,[[["rawfd"],[R[45],["off_t"]],["off_t"],[R[9]]],[[R[13],[R[9]]],[R[9]]]]],[0,"signal",R[1226],E,N,N],[3,"SigEvent",R[1287],"Used to request asynchronous notification of the…",N,N],[3,R[1477],E,E,N,N],[3,"SaFlags",E,E,N,N],[3,"SigSet",E,E,N,N],[3,"SigAction",E,"Action to take on receipt of a signal. Corresponds to…",N,N],[4,"Signal",E,E,N,N],[13,"SIGHUP",E,E,57,N],[13,"SIGINT",E,E,57,N],[13,"SIGQUIT",E,E,57,N],[13,"SIGILL",E,E,57,N],[13,"SIGTRAP",E,E,57,N],[13,"SIGABRT",E,E,57,N],[13,"SIGBUS",E,E,57,N],[13,"SIGFPE",E,E,57,N],[13,"SIGKILL",E,E,57,N],[13,"SIGUSR1",E,E,57,N],[13,"SIGSEGV",E,E,57,N],[13,"SIGUSR2",E,E,57,N],[13,"SIGPIPE",E,E,57,N],[13,"SIGALRM",E,E,57,N],[13,"SIGTERM",E,E,57,N],[13,"SIGSTKFLT",E,E,57,N],[13,"SIGCHLD",E,E,57,N],[13,"SIGCONT",E,E,57,N],[13,"SIGSTOP",E,E,57,N],[13,"SIGTSTP",E,E,57,N],[13,"SIGTTIN",E,E,57,N],[13,"SIGTTOU",E,E,57,N],[13,"SIGURG",E,E,57,N],[13,"SIGXCPU",E,E,57,N],[13,"SIGXFSZ",E,E,57,N],[13,"SIGVTALRM",E,E,57,N],[13,"SIGPROF",E,E,57,N],[13,"SIGWINCH",E,E,57,N],[13,"SIGIO",E,E,57,N],[13,"SIGPWR",E,E,57,N],[13,"SIGSYS",E,E,57,N],[4,"SigmaskHow",E,E,N,N],[13,"SIG_BLOCK",E,E,58,N],[13,R[1284],E,E,58,N],[13,R[1285],E,E,58,N],[4,"SigHandler",E,"A signal handler.",N,N],[13,"SigDfl",E,"Default signal handling.",59,N],[13,"SigIgn",E,"Request that the signal be ignored.",59,N],[13,"Handler",E,R[1286],59,N],[13,"SigAction",E,R[1286],59,N],[4,R[1458],E,"Used to request asynchronous notification of certain…",N,N],[13,"SigevNone",E,"No notification will be delivered",60,N],[13,"SigevSignal",E,"The signal given by `signal` will be delivered to the…",60,N],[12,"signal",R[1288],E,60,N],[12,"si_value",E,E,60,N],[13,"SigevThreadId",R[1287],"The signal `signal` is queued to the thread whose LWP ID…",60,N],[12,"signal",R[1288],E,60,N],[12,"thread_id",E,E,60,N],[12,"si_value",E,E,60,N],[5,R[448],R[1287],"Changes the action taken by a process on receipt of a…",N,[[["signal"],[R[448]]],[[R[13],[R[448]]],[R[448]]]]],[5,"signal",E,"Signal management (see signal(3p))",N,[[["signal"],[R[1416]]],[[R[1416]],[R[13],[R[1416]]]]]],[5,R[1289],E,"Manages the signal mask (set of blocked signals) for the…",N,[[[R[45],["sigset"]],["sigset"],["sigset"],[R[45],["sigset"]],[R[1294]]],[R[13]]]],[5,R[1290],E,"Examine and change blocked signals.",N,[[[R[45],["sigset"]],["sigset"],["sigset"],[R[45],["sigset"]],[R[1294]]],[R[13]]]],[5,"kill",E,E,N,[[[R[45],["signal"]],["into",[R[45]]],["pid"]],[R[13]]]],[5,"killpg",E,"Send a signal to a process group (see killpg(3)).",N,[[[R[45],["signal"]],["into",[R[45]]],["pid"]],[R[13]]]],[5,"raise",E,E,N,[[["signal"]],[R[13]]]],[11,"new",E,"Note: this constructor does not allow the user to set the…",61,[[[R[1170]]],[R[517]]]],[11,R[517],E,E,61,[[["self"]],[R[517]]]],[6,"type_of_thread_id",E,E,N,N],[17,"NSIG",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[11,R[2715],E,E,57,[[],[R[1415]]]],[11,"from_c_int",E,E,57,[[["c_int"]],[["signal"],[R[13],["signal"]]]]],[18,R[1291],E,E,62,N],[18,R[1292],E,E,62,N],[18,"SA_NODEFER",E,E,62,N],[18,"SA_ONSTACK",E,E,62,N],[18,R[1293],E,E,62,N],[18,"SA_RESTART",E,E,62,N],[18,"SA_SIGINFO",E,E,62,N],[11,"empty",E,R[1074],62,[[],["saflags"]]],[11,"all",E,R[1075],62,[[],["saflags"]]],[11,"bits",E,R[1076],62,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],62,[[["c_int"]],[["saflags"],[R[45],["saflags"]]]]],[11,R[1078],E,R[1079],62,[[["c_int"]],["saflags"]]],[11,R[73],E,R[1080],62,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],62,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],62,[[["self"],["saflags"]],["bool"]]],[11,R[1110],E,R[1083],62,[[["self"],["saflags"]],["bool"]]],[11,"insert",E,R[1084],62,[[["self"],["saflags"]]]],[11,"remove",E,R[1085],62,[[["self"],["saflags"]]]],[11,"toggle",E,R[1086],62,[[["self"],["saflags"]]]],[11,"set",E,R[1087],62,[[["self"],["saflags"],["bool"]]]],[11,"all",E,E,63,[[],["sigset"]]],[11,"empty",E,E,63,[[],["sigset"]]],[11,"add",E,E,63,[[["self"],["signal"]]]],[11,"clear",E,E,63,[[["self"]]]],[11,"remove",E,E,63,[[["self"],["signal"]]]],[11,R[1110],E,E,63,[[["signal"],["self"]],["bool"]]],[11,"extend",E,E,63,[[["self"],["sigset"]]]],[11,"thread_get_mask",E,"Gets the currently blocked (masked) set of signals for the…",63,[[],[["sigset"],[R[13],["sigset"]]]]],[11,"thread_set_mask",E,"Sets the set of signals as the signal mask for the calling…",63,[[["self"]],[R[13]]]],[11,"thread_block",E,"Adds the set of signals to the signal mask for the calling…",63,[[["self"]],[R[13]]]],[11,"thread_unblock",E,"Removes the set of signals from the signal mask for the…",63,[[["self"]],[R[13]]]],[11,"thread_swap_mask",E,"Sets the set of signals as the signal mask, and returns…",63,[[["self"],[R[1294]]],[["sigset"],[R[13],["sigset"]]]]],[11,"wait",E,"Suspends execution of the calling thread until one of the…",63,[[["self"]],[["signal"],[R[13],["signal"]]]]],[11,"new",E,"Creates a new action.",64,[[[R[1416]],["saflags"],["sigset"]],[R[448]]]],[11,"flags",E,"Returns the flags set on the action.",64,[[["self"]],["saflags"]]],[11,"mask",E,"Returns the set of signals that are blocked during…",64,[[["self"]],["sigset"]]],[11,"handler",E,"Returns the action's handler.",64,[[["self"]],[R[1416]]]],[0,R[1302],R[1226],"Interface for the `signalfd` syscall.",N,N],[3,"siginfo",R[1386],E,N,N],[12,"ssi_signo",E,E,65,N],[12,"ssi_errno",E,E,65,N],[12,"ssi_code",E,E,65,N],[12,"ssi_pid",E,E,65,N],[12,"ssi_uid",E,E,65,N],[12,"ssi_fd",E,E,65,N],[12,"ssi_tid",E,E,65,N],[12,"ssi_band",E,E,65,N],[12,R[1295],E,E,65,N],[12,"ssi_trapno",E,E,65,N],[12,"ssi_status",E,E,65,N],[12,"ssi_int",E,E,65,N],[12,"ssi_ptr",E,E,65,N],[12,"ssi_utime",E,E,65,N],[12,"ssi_stime",E,E,65,N],[12,"ssi_addr",E,E,65,N],[12,R[1296],E,E,65,N],[12,R[1297],E,E,65,N],[12,R[1298],E,E,65,N],[12,"ssi_arch",E,E,65,N],[3,"SfdFlags",E,E,N,N],[3,"SignalFd",E,"A helper struct for creating, reading and closing a…",N,N],[5,R[1302],E,"Creates a new file descriptor for reading signals.",N,[[["sigset"],["rawfd"],[R[1301]]],[[R[13],["rawfd"]],["rawfd"]]]],[17,"SIGNALFD_NEW",E,E,N,N],[17,"SIGNALFD_SIGINFO_SIZE",E,E,N,N],[18,R[1299],E,E,66,N],[18,R[1300],E,E,66,N],[11,"empty",E,R[1074],66,[[],[R[1301]]]],[11,"all",E,R[1075],66,[[],[R[1301]]]],[11,"bits",E,R[1076],66,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],66,[[["c_int"]],[[R[45],[R[1301]]],[R[1301]]]]],[11,R[1078],E,R[1079],66,[[["c_int"]],[R[1301]]]],[11,R[73],E,R[1080],66,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],66,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],66,[[["self"],[R[1301]]],["bool"]]],[11,R[1110],E,R[1083],66,[[["self"],[R[1301]]],["bool"]]],[11,"insert",E,R[1084],66,[[["self"],[R[1301]]]]],[11,"remove",E,R[1085],66,[[["self"],[R[1301]]]]],[11,"toggle",E,R[1086],66,[[["self"],[R[1301]]]]],[11,"set",E,R[1087],66,[[["self"],[R[1301]],["bool"]]]],[11,"new",E,E,67,[[["sigset"]],[[R[13],[R[1302]]],[R[1302]]]]],[11,"with_flags",E,E,67,[[["sigset"],[R[1301]]],[[R[13],[R[1302]]],[R[1302]]]]],[11,"set_mask",E,E,67,[[["self"],["sigset"]],[R[13]]]],[11,"read_signal",E,E,67,[[["self"]],[[R[13],[R[45]]],[R[45],["siginfo"]]]]],[0,"socket",R[1226],"Socket interface functions",N,N],[3,"cmsghdr",R[1317],E,N,N],[12,"cmsg_len",E,E,68,N],[12,"cmsg_level",E,E,68,N],[12,"cmsg_type",E,E,68,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,69,N],[12,R[1303],E,E,69,N],[12,"msg_iov",E,E,69,N],[12,"msg_iovlen",E,E,69,N],[12,R[1304],E,E,69,N],[12,R[1305],E,E,69,N],[12,"msg_flags",E,E,69,N],[6,R[1306],E,E,N,N],[3,R[515],E,E,N,N],[12,"sa_family",E,E,70,N],[12,"sa_data",E,E,70,N],[3,R[453],E,E,N,N],[12,"sin_family",E,E,71,N],[12,"sin_port",E,E,71,N],[12,"sin_addr",E,E,71,N],[12,"sin_zero",E,E,71,N],[3,R[454],E,E,N,N],[12,R[1307],E,E,72,N],[12,"sin6_port",E,E,72,N],[12,R[1308],E,E,72,N],[12,"sin6_addr",E,E,72,N],[12,R[1309],E,E,72,N],[3,R[462],E,E,N,N],[12,"ss_family",E,E,73,N],[3,R[461],E,E,N,N],[12,"sun_family",E,E,74,N],[12,"sun_path",E,E,74,N],[3,"UnixAddr",E,"A wrapper around `sockaddr_un`.",N,N],[12,"0",E,E,75,N],[12,"1",E,E,75,N],[3,"Ipv4Addr",E,E,N,N],[12,"0",E,E,76,N],[3,"Ipv6Addr",E,E,N,N],[12,"0",E,E,77,N],[3,"LinkAddr",E,"Hardware Address",N,N],[12,"0",E,E,78,N],[3,R[1459],E,E,N,N],[12,"0",E,E,79,N],[3,"AlgAddr",E,E,N,N],[12,"0",E,E,80,N],[3,"SockFlag",E,"Additional socket options",N,N],[3,"MsgFlags",E,"Flags for send/recv and their relatives",N,N],[3,R[1463],E,"Unix credentials of the sending process.",N,N],[3,R[1464],E,"Request for multicast socket operations",N,N],[3,R[1465],E,"Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace",E,"A structure used to make room in a cmsghdr passed to…",N,N],[3,"RecvMsg",E,E,N,N],[12,"bytes",E,E,81,N],[12,"address",E,E,81,N],[12,"flags",E,E,81,N],[3,R[1478],E,E,N,N],[4,R[1460],E,"These constants specify the protocol family to be used in…",N,N],[13,"Unix",E,"Local communication (see `unix(7)`)",82,N],[13,"Inet",E,"IPv4 Internet protocols (see `ip(7)`)",82,N],[13,"Inet6",E,"IPv6 Internet protocols (see `ipv6(7)`)",82,N],[13,"Netlink",E,"Kernel user interface device (see `netlink(7)`)",82,N],[13,"Packet",E,"Low level packet interface (see `packet(7)`)",82,N],[13,"Ax25",E,"Amateur radio AX.25 protocol",82,N],[13,"Ipx",E,"IPX - Novell protocols",82,N],[13,"AppleTalk",E,"AppleTalk",82,N],[13,"NetRom",E,E,82,N],[13,"Bridge",E,E,82,N],[13,"AtmPvc",E,"Access to raw ATM PVCs",82,N],[13,"X25",E,"ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",82,N],[13,"Rose",E,E,82,N],[13,"Decnet",E,E,82,N],[13,"NetBeui",E,E,82,N],[13,"Security",E,E,82,N],[13,"Key",E,E,82,N],[13,"Ash",E,E,82,N],[13,"Econet",E,E,82,N],[13,"AtmSvc",E,E,82,N],[13,"Rds",E,E,82,N],[13,"Sna",E,E,82,N],[13,"Irda",E,E,82,N],[13,"Pppox",E,E,82,N],[13,"Wanpipe",E,E,82,N],[13,"Llc",E,E,82,N],[13,"Ib",E,E,82,N],[13,"Mpls",E,E,82,N],[13,"Can",E,E,82,N],[13,"Tipc",E,E,82,N],[13,"Bluetooth",E,E,82,N],[13,"Iucv",E,E,82,N],[13,"RxRpc",E,E,82,N],[13,"Isdn",E,E,82,N],[13,"Phonet",E,E,82,N],[13,"Ieee802154",E,E,82,N],[13,"Caif",E,E,82,N],[13,"Alg",E,"Interface to kernel crypto API",82,N],[13,"Nfc",E,E,82,N],[13,"Vsock",E,E,82,N],[13,"Unspec",E,"Unspecified address family, (see `getaddrinfo(3)`)",82,N],[4,"SockAddr",E,"Represents a socket address",N,N],[13,"Inet",E,E,83,N],[13,"Unix",E,E,83,N],[13,"Netlink",E,E,83,N],[13,"Alg",E,E,83,N],[13,"Link",E,"Datalink address (MAC)",83,N],[4,"InetAddr",E,E,N,N],[13,"V4",E,E,84,N],[13,"V6",E,E,84,N],[4,"IpAddr",E,E,N,N],[13,"V4",E,E,85,N],[13,"V6",E,E,85,N],[4,"SockType",E,"These constants are used to specify the communication…",N,N],[13,"Stream",E,"Provides sequenced, reliable, two-way, connection- based…",86,N],[13,"Datagram",E,"Supports datagrams (connectionless, unreliable messages of…",86,N],[13,"SeqPacket",E,"Provides a sequenced, reliable, two-way connection- based…",86,N],[13,"Raw",E,"Provides raw network protocol access.",86,N],[13,"Rdm",E,"Provides a reliable datagram layer that does not guarantee…",86,N],[4,R[1461],E,"Constants used in `socket` and `socketpair` to specify the…",N,N],[13,"Tcp",E,"TCP protocol (ip(7))",87,N],[13,"Udp",E,"UDP protocol (ip(7))",87,N],[4,R[1521],E,"A type-safe wrapper around a single control message, as…",N,N],[13,"ScmRights",E,R[1501],88,N],[13,R[1502],E,R[1501],88,N],[13,"ScmTimestamp",E,"A message of type `SCM_TIMESTAMP`, containing the time the…",88,N],[13,R[1503],E,E,88,N],[13,"Ipv6PacketInfo",E,E,88,N],[4,R[1462],E,"A type-safe zero-copy wrapper around a single control…",N,N],[13,"ScmRights",E,"A message of type `SCM_RIGHTS`, containing an array of…",89,N],[13,R[1502],E,"A message of type `SCM_CREDENTIALS`, containing the pid,…",89,N],[13,"AlgSetIv",E,"Set IV for `AF_ALG` crypto API.",89,N],[13,"AlgSetOp",E,"Set crypto operation for `AF_ALG` crypto API. It may be…",89,N],[13,"AlgSetAeadAssoclen",E,"Set the length of associated authentication data (AAD)…",89,N],[4,"SockLevel",E,"The protocol level at which to get / set socket options.…",N,N],[13,"Socket",E,E,90,N],[13,"Tcp",E,E,90,N],[13,"Ip",E,E,90,N],[13,"Ipv6",E,E,90,N],[13,"Udp",E,E,90,N],[13,"Netlink",E,E,90,N],[13,"Alg",E,E,90,N],[4,R[3282],E,E,N,N],[13,"Read",E,"Further receptions will be disallowed.",91,N],[13,"Write",E,"Further  transmissions will be disallowed.",91,N],[13,"Both",E,"Further receptions and transmissions will be disallowed.",91,N],[5,"sendmsg",E,"Send data in scatter-gather vectors to a socket, possibly…",N,[[[R[1325]],["rawfd"],[R[515]],[R[45],[R[515]]]],[[R[13],[R[9]]],[R[9]]]]],[5,"recvmsg",E,"Receive message in scatter-gather vectors from a socket,…",N,[[["rawfd"],[R[1325]],[R[45],["cmsgbuffer"]],["cmsgbuffer"]],[["recvmsg"],[R[13],["recvmsg"]]]]],[5,"socket",E,"Create an endpoint for communication",N,[[[R[1310]],[R[1427]],[R[1321]],["into",[R[45]]],[R[45],[R[1311]]]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"socketpair",E,"Create a pair of connected sockets",N,[[[R[1310]],[R[1427]],["into",[R[45]]],[R[45],[R[1311]]],[R[1321]]],[R[13]]]],[5,"listen",E,"Listen for connections on a socket",N,[[["rawfd"],[R[9]]],[R[13]]]],[5,"bind",E,"Bind a name to a socket",N,[[["rawfd"],[R[515]]],[R[13]]]],[5,"accept",E,R[1312],N,[[["rawfd"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"accept4",E,R[1312],N,[[[R[1321]],["rawfd"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"connect",E,"Initiate a connection on a socket",N,[[["rawfd"],[R[515]]],[R[13]]]],[5,"recv",E,"Receive data from a connection-oriented socket. Returns…",N,[[[R[1325]],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,"recvfrom",E,"Receive data from a connectionless or connection-oriented…",N,[[["rawfd"]],[R[13]]]],[5,"sendto",E,"Send a message to a socket",N,[[[R[1325]],["rawfd"],[R[515]]],[[R[13],[R[9]]],[R[9]]]]],[5,"send",E,"Send data to a connection-oriented socket. Returns the…",N,[[[R[1325]],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,R[1313],E,"Get the current value for the requested socket option",N,[[["rawfd"],[R[1313]]],[R[13]]]],[5,R[1314],E,"Sets the value for the requested socket option",N,[[["rawfd"],[R[1314]]],[R[13]]]],[5,R[1315],E,"Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],[[R[515]],[R[13],[R[515]]]]]],[5,R[1316],E,"Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],[[R[515]],[R[13],[R[515]]]]]],[5,"sockaddr_storage_to_addr",E,"Return the appropriate `SockAddr` type from a…",N,[[[R[9]],[R[462]]],[[R[515]],[R[13],[R[515]]]]]],[5,R[3116],E,"Shut down part of a full-duplex connection.",N,[[[R[3116]],["rawfd"]],[R[13]]]],[11,"new",E,E,79,[[["u32"]],[R[1417]]]],[11,"pid",E,E,79,[[["self"]],["u32"]]],[11,"groups",E,E,79,[[["self"]],["u32"]]],[11,"new",E,E,80,[[["str"]],["algaddr"]]],[11,"alg_type",E,E,80,[[["self"]],["cstr"]]],[11,"alg_name",E,E,80,[[["self"]],["cstr"]]],[11,"family",E,"Always AF_PACKET",78,[[["self"]],[R[1310]]]],[11,"protocol",E,"Physical-layer protocol",78,[[["self"]],["u16"]]],[11,"ifindex",E,"Interface number",78,[[["self"]],[R[9]]]],[11,"hatype",E,"ARP hardware type",78,[[["self"]],["u16"]]],[11,"pkttype",E,"Packet type",78,[[["self"]],["u8"]]],[11,"halen",E,"Length of MAC address",78,[[["self"]],[R[9]]]],[11,"addr",E,"Physical-layer address (MAC)",78,[[["self"]]]],[11,"from_i32",E,"Create a new `AddressFamily` from an integer value…",82,[[["i32"]],[[R[45],[R[1310]]],[R[1310]]]]],[11,R[3118],E,E,84,[[[R[806]]],["inetaddr"]]],[11,"new",E,E,84,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip",E,"Gets the IP address associated with this socket address.",84,[[["self"]],["ipaddr"]]],[11,"port",E,"Gets the port number associated with this socket address",84,[[["self"]],["u16"]]],[11,"to_std",E,E,84,[[["self"]],[R[806]]]],[11,"to_str",E,E,84,[[["self"]],["string"]]],[11,"new_v4",E,"Create a new IpAddr that contains an IPv4 address.",85,[[["u8"]],["ipaddr"]]],[11,"new_v6",E,"Create a new IpAddr that contains an IPv6 address.",85,[[["u16"]],["ipaddr"]]],[11,R[3118],E,E,85,[[["ipaddr"]],["ipaddr"]]],[11,"to_std",E,E,85,[[["self"]],["ipaddr"]]],[11,"new",E,E,76,[[["u8"]],[R[843]]]],[11,R[3118],E,E,76,[[[R[843]]],[R[843]]]],[11,"any",E,E,76,[[],[R[843]]]],[11,"octets",E,E,76,[[["self"]]]],[11,"to_std",E,E,76,[[["self"]],[R[843]]]],[11,"new",E,E,77,[[["u16"]],[R[1326]]]],[11,R[3118],E,E,77,[[[R[1326]]],[R[1326]]]],[11,"segments",E,"Return the eight 16-bit segments that make up this address",77,[[["self"]]]],[11,"to_std",E,E,77,[[["self"]],[R[1326]]]],[11,"new",E,"Create a new sockaddr_un representing a filesystem path.",75,[[["p"]],[[R[13],["unixaddr"]],["unixaddr"]]]],[11,"new_abstract",E,"Create a new `sockaddr_un` representing an address in the…",75,[[],[[R[13],["unixaddr"]],["unixaddr"]]]],[11,"path",E,"If this address represents a filesystem path, return that…",75,[[["self"]],[["path"],[R[45],["path"]]]]],[11,"as_abstract",E,"If this address represents an abstract socket, return its…",75,[[["self"]],[R[45]]]],[11,"new_inet",E,E,83,[[["inetaddr"]],[R[515]]]],[11,"new_unix",E,E,83,[[["p"]],[[R[515]],[R[13],[R[515]]]]]],[11,"new_netlink",E,E,83,[[["u32"]],[R[515]]]],[11,"new_alg",E,E,83,[[["str"]],[R[515]]]],[11,"family",E,E,83,[[["self"]],[R[1310]]]],[11,"to_str",E,E,83,[[["self"]],["string"]]],[11,"from_libc_sockaddr",E,"Creates a `SockAddr` struct from libc's sockaddr.",83,[[],[[R[45],[R[515]]],[R[515]]]]],[11,"as_ffi_pair",E,"Conversion from nix's SockAddr type to the underlying libc…",83,[[["self"]]]],[0,"sockopt",E,E,N,N],[3,"ReuseAddr",R[1387],E,N,N],[3,"ReusePort",E,E,N,N],[3,"TcpNoDelay",E,E,N,N],[3,"Linger",E,E,N,N],[3,R[1479],E,E,N,N],[3,R[1480],E,E,N,N],[3,R[1481],E,E,N,N],[3,R[1482],E,E,N,N],[3,R[1483],E,E,N,N],[3,R[1484],E,E,N,N],[3,R[1485],E,E,N,N],[3,R[1486],E,E,N,N],[3,"Broadcast",E,E,N,N],[3,"OobInline",E,E,N,N],[3,R[1487],E,E,N,N],[3,"KeepAlive",E,E,N,N],[3,R[1488],E,E,N,N],[3,R[1489],E,E,N,N],[3,"RcvBuf",E,E,N,N],[3,"SndBuf",E,E,N,N],[3,R[1490],E,E,N,N],[3,R[1491],E,E,N,N],[3,"SockType",E,E,N,N],[3,"AcceptConn",E,E,N,N],[3,R[1492],E,E,N,N],[3,R[1493],E,E,N,N],[3,R[1494],E,E,N,N],[3,"Mark",E,E,N,N],[3,"PassCred",E,E,N,N],[3,R[1525],E,E,N,N],[3,R[1503],E,E,N,N],[3,R[1526],E,E,N,N],[3,R[1527],E,E,N,N],[3,"AlgSetKey",E,E,N,N],[8,"CmsgBuffer",R[1317],"A type that can be used to store ancillary data received…",N,N],[10,R[262],E,E,92,[[["self"]]]],[8,"GetSockOpt",E,R[1318],N,N],[16,"Val",E,E,93,N],[8,"SetSockOpt",E,R[1318],N,N],[16,"Val",E,E,94,N],[18,R[1319],E,"Set non-blocking mode on the new socket",95,N],[18,R[1320],E,"Set close-on-exec on the new descriptor",95,N],[11,"empty",E,R[1074],95,[[],[R[1321]]]],[11,"all",E,R[1075],95,[[],[R[1321]]]],[11,"bits",E,R[1076],95,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],95,[[["c_int"]],[[R[45],[R[1321]]],[R[1321]]]]],[11,R[1078],E,R[1079],95,[[["c_int"]],[R[1321]]]],[11,R[73],E,R[1080],95,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],95,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],95,[[[R[1321]],["self"]],["bool"]]],[11,R[1110],E,R[1083],95,[[[R[1321]],["self"]],["bool"]]],[11,"insert",E,R[1084],95,[[["self"],[R[1321]]]]],[11,"remove",E,R[1085],95,[[["self"],[R[1321]]]]],[11,"toggle",E,R[1086],95,[[["self"],[R[1321]]]]],[11,"set",E,R[1087],95,[[["self"],[R[1321]],["bool"]]]],[18,"MSG_OOB",E,"Sends or requests out-of-band data on sockets that support…",96,N],[18,"MSG_PEEK",E,"Peeks at an incoming message. The data is treated as…",96,N],[18,R[1322],E,"Enables nonblocking operation; if the operation would…",96,N],[18,"MSG_CTRUNC",E,"Receive flags: Control Data was discarded (buffer too small)",96,N],[18,"MSG_TRUNC",E,"For raw (`Packet`), Internet datagram (since Linux…",96,N],[18,"MSG_EOR",E,"Terminates a record (when this notion is supported, as for…",96,N],[18,R[1323],E,"This flag specifies that queued errors should be received…",96,N],[18,R[1324],E,"Set the `close-on-exec` flag for the file descriptor…",96,N],[11,"empty",E,R[1074],96,[[],[R[1325]]]],[11,"all",E,R[1075],96,[[],[R[1325]]]],[11,"bits",E,R[1076],96,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],96,[[["c_int"]],[[R[1325]],[R[45],[R[1325]]]]]],[11,R[1078],E,R[1079],96,[[["c_int"]],[R[1325]]]],[11,R[73],E,R[1080],96,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],96,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],96,[[[R[1325]],["self"]],["bool"]]],[11,R[1110],E,R[1083],96,[[[R[1325]],["self"]],["bool"]]],[11,"insert",E,R[1084],96,[[["self"],[R[1325]]]]],[11,"remove",E,R[1085],96,[[["self"],[R[1325]]]]],[11,"toggle",E,R[1086],96,[[["self"],[R[1325]]]]],[11,"set",E,R[1087],96,[[["self"],[R[1325]],["bool"]]]],[11,"pid",E,"Returns the process identifier",97,[[["self"]],["pid_t"]]],[11,"uid",E,"Returns the user identifier",97,[[["self"]],["uid_t"]]],[11,"gid",E,"Returns the group identifier",97,[[["self"]],["gid_t"]]],[11,"new",E,"Instantiate a new `IpMembershipRequest`",98,[[[R[45],[R[843]]],[R[843]]],["self"]]],[11,"new",E,"Instantiate a new `Ipv6MembershipRequest`",99,[[[R[1326]]],["self"]]],[11,"new",E,"Create a CmsgSpace. The structure is used only for space,…",100,[[],["self"]]],[11,"cmsgs",E,"Iterate over the valid control messages pointed to by this…",81,[[["self"]],["cmsgiterator"]]],[0,"stat",R[1226],E,N,N],[6,"dev_t",R[1388],E,N,N],[6,"mode_t",E,E,N,N],[3,"FileStat",E,E,N,N],[12,"st_dev",E,E,101,N],[12,"st_ino",E,E,101,N],[12,"st_nlink",E,E,101,N],[12,"st_mode",E,E,101,N],[12,"st_uid",E,E,101,N],[12,"st_gid",E,E,101,N],[12,"st_rdev",E,E,101,N],[12,"st_size",E,E,101,N],[12,R[436],E,E,101,N],[12,R[437],E,E,101,N],[12,"st_atime",E,E,101,N],[12,R[438],E,E,101,N],[12,"st_mtime",E,E,101,N],[12,R[439],E,E,101,N],[12,"st_ctime",E,E,101,N],[12,R[440],E,E,101,N],[5,"FileStat",E,E,N,[[],["i32"]]],[3,"SFlag",E,E,N,N],[3,"Mode",E,E,N,N],[4,R[1466],E,"Flags for `fchmodat` function.",N,N],[13,R[1327],E,E,102,N],[13,R[1328],E,E,102,N],[4,R[1467],E,"Flags for `utimensat` function.",N,N],[13,R[1327],E,E,103,N],[13,R[1328],E,E,103,N],[5,"mknod",E,E,N,[[["sflag"],["mode"],["p"],["dev_t"]],[R[13]]]],[5,"major",E,E,N,[[["dev_t"]],["u64"]]],[5,"minor",E,E,N,[[["dev_t"]],["u64"]]],[5,"makedev",E,E,N,[[["u64"]],["dev_t"]]],[5,"umask",E,E,N,[[["mode"]],["mode"]]],[5,"stat",E,E,N,[[["p"]],[[R[13],[R[1329]]],[R[1329]]]]],[5,"lstat",E,E,N,[[["p"]],[[R[13],[R[1329]]],[R[1329]]]]],[5,"fstat",E,E,N,[[["rawfd"]],[[R[13],[R[1329]]],[R[1329]]]]],[5,"fstatat",E,E,N,[[["atflags"],["rawfd"],["p"]],[[R[13],[R[1329]]],[R[1329]]]]],[5,"fchmod",E,"Change the file permission bits of the file specified by a…",N,[[["rawfd"],["mode"]],[R[13]]]],[5,"fchmodat",E,"Change the file permission bits.",N,[[[R[1418]],["rawfd"],["mode"],["p"],[R[45],["rawfd"]]],[R[13]]]],[5,"utimes",E,R[1330],N,[[["timeval"],["p"]],[R[13]]]],[5,"lutimes",E,"Change the access and modification times of a file without…",N,[[["timeval"],["p"]],[R[13]]]],[5,"futimens",E,"Change the access and modification times of the file…",N,[[[R[513]],["rawfd"]],[R[13]]]],[5,"utimensat",E,R[1330],N,[[[R[513]],["rawfd"],[R[1419]],["p"],[R[45],["rawfd"]]],[R[13]]]],[18,"S_IFIFO",E,E,104,N],[18,"S_IFCHR",E,E,104,N],[18,"S_IFDIR",E,E,104,N],[18,"S_IFBLK",E,E,104,N],[18,"S_IFREG",E,E,104,N],[18,"S_IFLNK",E,E,104,N],[18,"S_IFSOCK",E,E,104,N],[18,"S_IFMT",E,E,104,N],[11,"empty",E,R[1074],104,[[],["sflag"]]],[11,"all",E,R[1075],104,[[],["sflag"]]],[11,"bits",E,R[1076],104,[[["self"]],["mode_t"]]],[11,R[1094],E,R[1077],104,[[["mode_t"]],[["sflag"],[R[45],["sflag"]]]]],[11,R[1078],E,R[1079],104,[[["mode_t"]],["sflag"]]],[11,R[73],E,R[1080],104,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],104,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],104,[[["sflag"],["self"]],["bool"]]],[11,R[1110],E,R[1083],104,[[["sflag"],["self"]],["bool"]]],[11,"insert",E,R[1084],104,[[["self"],["sflag"]]]],[11,"remove",E,R[1085],104,[[["self"],["sflag"]]]],[11,"toggle",E,R[1086],104,[[["self"],["sflag"]]]],[11,"set",E,R[1087],104,[[["self"],["sflag"],["bool"]]]],[18,"S_IRWXU",E,E,105,N],[18,"S_IRUSR",E,E,105,N],[18,"S_IWUSR",E,E,105,N],[18,"S_IXUSR",E,E,105,N],[18,"S_IRWXG",E,E,105,N],[18,"S_IRGRP",E,E,105,N],[18,"S_IWGRP",E,E,105,N],[18,"S_IXGRP",E,E,105,N],[18,"S_IRWXO",E,E,105,N],[18,"S_IROTH",E,E,105,N],[18,"S_IWOTH",E,E,105,N],[18,"S_IXOTH",E,E,105,N],[18,"S_ISUID",E,E,105,N],[18,"S_ISGID",E,E,105,N],[18,"S_ISVTX",E,E,105,N],[11,"empty",E,R[1074],105,[[],["mode"]]],[11,"all",E,R[1075],105,[[],["mode"]]],[11,"bits",E,R[1076],105,[[["self"]],["mode_t"]]],[11,R[1094],E,R[1077],105,[[["mode_t"]],[[R[45],["mode"]],["mode"]]]],[11,R[1078],E,R[1079],105,[[["mode_t"]],["mode"]]],[11,R[73],E,R[1080],105,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],105,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],105,[[["self"],["mode"]],["bool"]]],[11,R[1110],E,R[1083],105,[[["self"],["mode"]],["bool"]]],[11,"insert",E,R[1084],105,[[["self"],["mode"]]]],[11,"remove",E,R[1085],105,[[["self"],["mode"]]]],[11,"toggle",E,R[1086],105,[[["self"],["mode"]]]],[11,"set",E,R[1087],105,[[["self"],["mode"],["bool"]]]],[0,"statfs",R[1226],E,N,N],[5,"statfs","nix::sys::statfs",E,N,[[["statfs"],["p"]],[R[13]]]],[5,"fstatfs",E,E,N,[[[T],["statfs"]],[R[13]]]],[0,"statvfs",R[1226],"Get filesystem statistics",N,N],[3,"FsFlags",R[1389],"File system mount Flags",N,N],[3,"Statvfs",E,"Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs",E,"Return a `Statvfs` object with information about the `path`",N,[[["p"]],[["statvfs"],[R[13],["statvfs"]]]]],[5,"fstatvfs",E,"Return a `Statvfs` object with information about `fd`",N,[[[T]],[["statvfs"],[R[13],["statvfs"]]]]],[18,"ST_RDONLY",E,"Read Only",106,N],[18,"ST_NOSUID",E,"Do not allow the set-uid bits to have an effect",106,N],[18,"ST_NODEV",E,"Do not interpret character or block-special devices",106,N],[18,"ST_NOEXEC",E,"Do not allow execution of binaries on the filesystem",106,N],[18,R[1331],E,"All IO should be done synchronously",106,N],[18,R[1332],E,"Allow mandatory locks on the filesystem",106,N],[18,"ST_WRITE",E,"Write on file/directory/symlink",106,N],[18,"ST_APPEND",E,"Append-only file",106,N],[18,R[1333],E,"Immutable file",106,N],[18,"ST_NOATIME",E,R[1335],106,N],[18,R[1334],E,R[1335],106,N],[18,R[1336],E,"Update access time relative to modify/change time",106,N],[11,"empty",E,R[1074],106,[[],["fsflags"]]],[11,"all",E,R[1075],106,[[],["fsflags"]]],[11,"bits",E,R[1076],106,[[["self"]],["c_ulong"]]],[11,R[1094],E,R[1077],106,[[["c_ulong"]],[["fsflags"],[R[45],["fsflags"]]]]],[11,R[1078],E,R[1079],106,[[["c_ulong"]],["fsflags"]]],[11,R[73],E,R[1080],106,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],106,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],106,[[["fsflags"],["self"]],["bool"]]],[11,R[1110],E,R[1083],106,[[["fsflags"],["self"]],["bool"]]],[11,"insert",E,R[1084],106,[[["self"],["fsflags"]]]],[11,"remove",E,R[1085],106,[[["self"],["fsflags"]]]],[11,"toggle",E,R[1086],106,[[["self"],["fsflags"]]]],[11,"set",E,R[1087],106,[[["self"],["fsflags"],["bool"]]]],[11,"block_size",E,"get the file system block size",107,[[["self"]],["c_ulong"]]],[11,"fragment_size",E,"Get the fundamental file system block size",107,[[["self"]],["c_ulong"]]],[11,"blocks",E,"Get the number of blocks.",107,[[["self"]],[R[1337]]]],[11,"blocks_free",E,"Get the number of free blocks in the file system",107,[[["self"]],[R[1337]]]],[11,"blocks_available",E,"Get the number of free blocks for unprivileged users",107,[[["self"]],[R[1337]]]],[11,"files",E,"Get the total number of file inodes",107,[[["self"]],[R[1338]]]],[11,"files_free",E,"Get the number of free file inodes",107,[[["self"]],[R[1338]]]],[11,"files_available",E,"Get the number of free file inodes for unprivileged users",107,[[["self"]],[R[1338]]]],[11,"filesystem_id",E,"Get the file system id",107,[[["self"]],["c_ulong"]]],[11,"flags",E,"Get the mount flags",107,[[["self"]],["fsflags"]]],[11,"name_max",E,"Get the maximum filename length",107,[[["self"]],["c_ulong"]]],[0,"sysinfo",R[1226],E,N,N],[3,"SysInfo",R[1390],"System info structure returned by `sysinfo`.",N,N],[5,"sysinfo",E,"Returns system information.",N,[[],[["sysinfo"],[R[13],["sysinfo"]]]]],[11,"load_average",E,"Returns the load average tuple.",108,[[["self"]]]],[11,"uptime",E,"Returns the time since system boot.",108,[[["self"]],[R[411]]]],[11,"process_count",E,"Current number of processes.",108,[[["self"]],["u16"]]],[11,"swap_total",E,"Returns the amount of swap memory in Bytes.",108,[[["self"]],["u64"]]],[11,"swap_free",E,"Returns the amount of unused swap memory in Bytes.",108,[[["self"]],["u64"]]],[11,"ram_total",E,"Returns the total amount of installed RAM in Bytes.",108,[[["self"]],["u64"]]],[11,"ram_unused",E,"Returns the amount of completely unused RAM in Bytes.",108,[[["self"]],["u64"]]],[0,"termios",R[1226],"An interface for controlling asynchronous communication…",N,N],[17,"NCCS",R[1391],E,N,N],[17,R[1339],E,E,N,N],[3,"Termios",E,"Stores settings for the termios API",N,N],[12,"input_flags",E,"Input mode flags (see `termios.c_iflag` documentation)",109,N],[12,"output_flags",E,"Output mode flags (see `termios.c_oflag` documentation)",109,N],[12,"control_flags",E,"Control mode flags (see `termios.c_cflag` documentation)",109,N],[12,"local_flags",E,"Local mode flags (see `termios.c_lflag` documentation)",109,N],[12,"control_chars",E,"Control characters (see `termios.c_cc` documentation)",109,N],[3,"InputFlags",E,"Flags for configuring the input mode of a terminal",N,N],[3,R[1469],E,"Flags for configuring the output mode of a terminal",N,N],[3,R[1470],E,"Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags",E,"Flags for setting any local modes",N,N],[4,"BaudRate",E,"Baud rates supported by the system.",N,N],[13,"B0",E,E,110,N],[13,"B50",E,E,110,N],[13,"B75",E,E,110,N],[13,"B110",E,E,110,N],[13,"B134",E,E,110,N],[13,"B150",E,E,110,N],[13,"B200",E,E,110,N],[13,"B300",E,E,110,N],[13,"B600",E,E,110,N],[13,"B1200",E,E,110,N],[13,"B1800",E,E,110,N],[13,"B2400",E,E,110,N],[13,"B4800",E,E,110,N],[13,"B9600",E,E,110,N],[13,"B19200",E,E,110,N],[13,"B38400",E,E,110,N],[13,"B57600",E,E,110,N],[13,"B115200",E,E,110,N],[13,"B230400",E,E,110,N],[13,"B460800",E,E,110,N],[13,"B500000",E,E,110,N],[13,"B576000",E,E,110,N],[13,"B921600",E,E,110,N],[13,"B1000000",E,E,110,N],[13,"B1152000",E,E,110,N],[13,"B1500000",E,E,110,N],[13,"B2000000",E,E,110,N],[13,"B2500000",E,E,110,N],[13,"B3000000",E,E,110,N],[13,"B3500000",E,E,110,N],[13,"B4000000",E,E,110,N],[4,"SetArg",E,"Specify when a port configuration change should occur.",N,N],[13,"TCSANOW",E,"The change will occur immediately",111,N],[13,"TCSADRAIN",E,"The change occurs after all output has been written",111,N],[13,"TCSAFLUSH",E,"Same as `TCSADRAIN`, but will also flush the input buffer",111,N],[4,"FlushArg",E,"Specify a combination of the input and output buffers to…",N,N],[13,"TCIFLUSH",E,"Flush data that was received but not read",112,N],[13,"TCOFLUSH",E,"Flush data written but not transmitted",112,N],[13,"TCIOFLUSH",E,"Flush both received data not read and written data not…",112,N],[4,"FlowArg",E,"Specify how transmission flow should be altered",N,N],[13,"TCOOFF",E,"Suspend transmission",113,N],[13,"TCOON",E,"Resume transmission",113,N],[13,"TCIOFF",E,"Transmit a STOP character, which should disable a…",113,N],[13,"TCION",E,"Transmit a START character, which should re-enable a…",113,N],[4,R[1468],E,"Indices into the `termios.c_cc` array for special…",N,N],[13,"VDISCARD",E,E,114,N],[13,"VEOF",E,E,114,N],[13,"VEOL",E,E,114,N],[13,"VEOL2",E,E,114,N],[13,"VERASE",E,E,114,N],[13,"VINTR",E,E,114,N],[13,"VKILL",E,E,114,N],[13,"VLNEXT",E,E,114,N],[13,"VMIN",E,E,114,N],[13,"VQUIT",E,E,114,N],[13,"VREPRINT",E,E,114,N],[13,"VSTART",E,E,114,N],[13,"VSTOP",E,E,114,N],[13,"VSUSP",E,E,114,N],[13,"VSWTC",E,E,114,N],[13,"VTIME",E,E,114,N],[13,"VWERASE",E,E,114,N],[5,R[1340],E,"Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],[R[1424]]]],[5,R[1341],E,"Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],[R[1424]]]],[5,R[1342],E,"Set input baud rate (see cfsetispeed(3p)).",N,[[[R[1424]],["termios"]],[R[13]]]],[5,R[1343],E,"Set output baud rate (see cfsetospeed(3p)).",N,[[[R[1424]],["termios"]],[R[13]]]],[5,"cfsetspeed",E,"Set both the input and output baud rates (see termios(3)).",N,[[[R[1424]],["termios"]],[R[13]]]],[5,"cfmakeraw",E,"Configures the port to something like the \"raw\" mode of…",N,[[["termios"]]]],[5,"tcgetattr",E,"Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],[["termios"],[R[13],["termios"]]]]],[5,"tcsetattr",E,"Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["rawfd"],["termios"],["setarg"]],[R[13]]]],[5,"tcdrain",E,"Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],[R[13]]]],[5,"tcflow",E,"Suspend or resume the transmission or reception of data…",N,[[["rawfd"],["flowarg"]],[R[13]]]],[5,"tcflush",E,"Discard data in the output or input queue (see tcflush(3p)).",N,[[["rawfd"],["flusharg"]],[R[13]]]],[5,R[1344],E,"Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["c_int"],["rawfd"]],[R[13]]]],[5,"tcgetsid",E,"Get the session controlled by the given terminal (see…",N,[[["rawfd"]],[[R[13],["pid"]],["pid"]]]],[18,"IGNBRK",E,E,115,N],[18,"BRKINT",E,E,115,N],[18,"IGNPAR",E,E,115,N],[18,"PARMRK",E,E,115,N],[18,"INPCK",E,E,115,N],[18,"ISTRIP",E,E,115,N],[18,"INLCR",E,E,115,N],[18,"IGNCR",E,E,115,N],[18,"ICRNL",E,E,115,N],[18,"IXON",E,E,115,N],[18,"IXOFF",E,E,115,N],[18,"IXANY",E,E,115,N],[18,"IMAXBEL",E,E,115,N],[18,"IUTF8",E,E,115,N],[11,"empty",E,R[1074],115,[[],[R[1345]]]],[11,"all",E,R[1075],115,[[],[R[1345]]]],[11,"bits",E,R[1076],115,[[["self"]],[R[1347]]]],[11,R[1094],E,R[1077],115,[[[R[1347]]],[[R[1345]],[R[45],[R[1345]]]]]],[11,R[1078],E,R[1079],115,[[[R[1347]]],[R[1345]]]],[11,R[73],E,R[1080],115,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],115,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],115,[[["self"],[R[1345]]],["bool"]]],[11,R[1110],E,R[1083],115,[[["self"],[R[1345]]],["bool"]]],[11,"insert",E,R[1084],115,[[["self"],[R[1345]]]]],[11,"remove",E,R[1085],115,[[["self"],[R[1345]]]]],[11,"toggle",E,R[1086],115,[[["self"],[R[1345]]]]],[11,"set",E,R[1087],115,[[["self"],["bool"],[R[1345]]]]],[18,"OPOST",E,E,116,N],[18,"OLCUC",E,E,116,N],[18,"ONLCR",E,E,116,N],[18,"OCRNL",E,E,116,N],[18,"ONOCR",E,E,116,N],[18,"ONLRET",E,E,116,N],[18,"OFILL",E,E,116,N],[18,"OFDEL",E,E,116,N],[18,"NL0",E,E,116,N],[18,"NL1",E,E,116,N],[18,"CR0",E,E,116,N],[18,"CR1",E,E,116,N],[18,"CR2",E,E,116,N],[18,"CR3",E,E,116,N],[18,"TAB0",E,E,116,N],[18,"TAB1",E,E,116,N],[18,"TAB2",E,E,116,N],[18,"TAB3",E,E,116,N],[18,"XTABS",E,E,116,N],[18,"BS0",E,E,116,N],[18,"BS1",E,E,116,N],[18,"VT0",E,E,116,N],[18,"VT1",E,E,116,N],[18,"FF0",E,E,116,N],[18,"FF1",E,E,116,N],[18,"NLDLY",E,E,116,N],[18,"CRDLY",E,E,116,N],[18,"TABDLY",E,E,116,N],[18,"BSDLY",E,E,116,N],[18,"VTDLY",E,E,116,N],[18,"FFDLY",E,E,116,N],[11,"empty",E,R[1074],116,[[],[R[1346]]]],[11,"all",E,R[1075],116,[[],[R[1346]]]],[11,"bits",E,R[1076],116,[[["self"]],[R[1347]]]],[11,R[1094],E,R[1077],116,[[[R[1347]]],[[R[1346]],[R[45],[R[1346]]]]]],[11,R[1078],E,R[1079],116,[[[R[1347]]],[R[1346]]]],[11,R[73],E,R[1080],116,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],116,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],116,[[["self"],[R[1346]]],["bool"]]],[11,R[1110],E,R[1083],116,[[["self"],[R[1346]]],["bool"]]],[11,"insert",E,R[1084],116,[[["self"],[R[1346]]]]],[11,"remove",E,R[1085],116,[[["self"],[R[1346]]]]],[11,"toggle",E,R[1086],116,[[["self"],[R[1346]]]]],[11,"set",E,R[1087],116,[[["self"],["bool"],[R[1346]]]]],[18,"CS5",E,E,117,N],[18,"CS6",E,E,117,N],[18,"CS7",E,E,117,N],[18,"CS8",E,E,117,N],[18,"CSTOPB",E,E,117,N],[18,"CREAD",E,E,117,N],[18,"PARENB",E,E,117,N],[18,"PARODD",E,E,117,N],[18,"HUPCL",E,E,117,N],[18,"CLOCAL",E,E,117,N],[18,"CRTSCTS",E,E,117,N],[18,"CBAUD",E,E,117,N],[18,"CMSPAR",E,E,117,N],[18,"CIBAUD",E,E,117,N],[18,"CBAUDEX",E,E,117,N],[18,"CSIZE",E,E,117,N],[11,"empty",E,R[1074],117,[[],[R[1348]]]],[11,"all",E,R[1075],117,[[],[R[1348]]]],[11,"bits",E,R[1076],117,[[["self"]],[R[1347]]]],[11,R[1094],E,R[1077],117,[[[R[1347]]],[[R[45],[R[1348]]],[R[1348]]]]],[11,R[1078],E,R[1079],117,[[[R[1347]]],[R[1348]]]],[11,R[73],E,R[1080],117,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],117,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],117,[[["self"],[R[1348]]],["bool"]]],[11,R[1110],E,R[1083],117,[[["self"],[R[1348]]],["bool"]]],[11,"insert",E,R[1084],117,[[["self"],[R[1348]]]]],[11,"remove",E,R[1085],117,[[["self"],[R[1348]]]]],[11,"toggle",E,R[1086],117,[[["self"],[R[1348]]]]],[11,"set",E,R[1087],117,[[["self"],["bool"],[R[1348]]]]],[18,"ECHOKE",E,E,118,N],[18,"ECHOE",E,E,118,N],[18,"ECHOK",E,E,118,N],[18,"ECHO",E,E,118,N],[18,"ECHONL",E,E,118,N],[18,"ECHOPRT",E,E,118,N],[18,"ECHOCTL",E,E,118,N],[18,"ISIG",E,E,118,N],[18,"ICANON",E,E,118,N],[18,"IEXTEN",E,E,118,N],[18,"EXTPROC",E,E,118,N],[18,"TOSTOP",E,E,118,N],[18,"FLUSHO",E,E,118,N],[18,"PENDIN",E,E,118,N],[18,"NOFLSH",E,E,118,N],[11,"empty",E,R[1074],118,[[],[R[1349]]]],[11,"all",E,R[1075],118,[[],[R[1349]]]],[11,"bits",E,R[1076],118,[[["self"]],[R[1347]]]],[11,R[1094],E,R[1077],118,[[[R[1347]]],[[R[45],[R[1349]]],[R[1349]]]]],[11,R[1078],E,R[1079],118,[[[R[1347]]],[R[1349]]]],[11,R[73],E,R[1080],118,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],118,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],118,[[["self"],[R[1349]]],["bool"]]],[11,R[1110],E,R[1083],118,[[["self"],[R[1349]]],["bool"]]],[11,"insert",E,R[1084],118,[[["self"],[R[1349]]]]],[11,"remove",E,R[1085],118,[[["self"],[R[1349]]]]],[11,"toggle",E,R[1086],118,[[["self"],[R[1349]]]]],[11,"set",E,R[1087],118,[[["self"],[R[1349]],["bool"]]]],[0,"time",R[1226],E,N,N],[6,"time_t",R[1392],E,N,N],[6,R[1350],E,E,N,N],[3,"TimeSpec",E,E,N,N],[3,"TimeVal",E,E,N,N],[8,R[1471],E,E,N,N],[11,"zero",E,E,119,[[],["self"]]],[11,"hours",E,E,119,[[["i64"]],["self"]]],[11,"minutes",E,E,119,[[["i64"]],["self"]]],[10,"seconds",E,E,119,[[["i64"]],["self"]]],[10,R[1400],E,E,119,[[["i64"]],["self"]]],[10,R[1401],E,E,119,[[["i64"]],["self"]]],[10,R[1402],E,E,119,[[["i64"]],["self"]]],[11,"num_hours",E,E,119,[[["self"]],["i64"]]],[11,R[1496],E,E,119,[[["self"]],["i64"]]],[10,R[1403],E,E,119,[[["self"]],["i64"]]],[10,R[1404],E,E,119,[[["self"]],["i64"]]],[10,R[1405],E,E,119,[[["self"]],["i64"]]],[10,R[1406],E,E,119,[[["self"]],["i64"]]],[11,"tv_sec",E,E,120,[[["self"]],["time_t"]]],[11,"tv_nsec",E,E,120,[[["self"]],["c_long"]]],[11,"tv_sec",E,E,121,[[["self"]],["time_t"]]],[11,"tv_usec",E,E,121,[[["self"]],[R[1350]]]],[0,"uio",R[1226],E,N,N],[3,R[1472],R[1393],"A slice of memory in a remote process, starting at address…",N,N],[12,"base",E,"The starting address of this slice (`iov_base`).",122,N],[12,"len",E,"The number of bytes in this slice (`iov_len`).",122,N],[3,"IoVec",E,E,N,N],[5,"writev",E,E,N,[[["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,"readv",E,E,N,[[["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,"pwritev",E,"Write to `fd` at `offset` from buffers in `iov`.",N,[[["rawfd"],["off_t"]],[[R[13],[R[9]]],[R[9]]]]],[5,"preadv",E,"Read from `fd` at `offset` filling buffers in `iov`.",N,[[["rawfd"],["off_t"]],[[R[13],[R[9]]],[R[9]]]]],[5,"pwrite",E,E,N,[[["off_t"],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,"pread",E,E,N,[[["off_t"],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,R[1351],E,"Write data directly to another process's virtual memory…",N,[[["pid"]],[[R[13],[R[9]]],[R[9]]]]],[5,R[1352],E,"Read data directly from another process's virtual memory…",N,[[["pid"]],[[R[13],[R[9]]],[R[9]]]]],[11,R[251],E,E,123,[[["self"]]]],[11,R[1495],E,E,123,[[],["iovec"]]],[11,R[1353],E,E,123,[[],["iovec"]]],[0,"utsname",R[1226],E,N,N],[3,"UtsName",R[1394],E,N,N],[5,"uname",E,E,N,[[],["utsname"]]],[11,"sysname",E,E,124,[[["self"]],["str"]]],[11,"nodename",E,E,124,[[["self"]],["str"]]],[11,"release",E,E,124,[[["self"]],["str"]]],[11,"version",E,E,124,[[["self"]],["str"]]],[11,"machine",E,E,124,[[["self"]],["str"]]],[0,"wait",R[1226],E,N,N],[3,R[1473],R[1395],E,N,N],[4,"WaitStatus",E,"Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited",E,"The process exited normally (as with `exit()` or returning…",125,N],[13,"Signaled",E,"The process was killed by the given signal. The third…",125,N],[13,"Stopped",E,"The process is alive, but was stopped by the given signal.…",125,N],[13,"PtraceEvent",E,"The traced process was stopped by a `PTRACE_EVENT_*`…",125,N],[13,"PtraceSyscall",E,"The traced process was stopped by execution of a system…",125,N],[13,"Continued",E,"The process was previously stopped but has resumed…",125,N],[13,"StillAlive",E,"There are currently no state changes to report in any…",125,N],[5,"waitpid",E,E,N,[[[R[45],["pid"]],[R[45],[R[1354]]],[R[1354]],["into",[R[45]]]],[[R[13],[R[1355]]],[R[1355]]]]],[5,"wait",E,E,N,[[],[[R[13],[R[1355]]],[R[1355]]]]],[18,"WNOHANG",E,E,126,N],[18,"WUNTRACED",E,E,126,N],[18,"WEXITED",E,E,126,N],[18,"WCONTINUED",E,E,126,N],[18,"WSTOPPED",E,E,126,N],[18,"WNOWAIT",E,"Don't reap, just poll status.",126,N],[18,R[1356],E,"Don't wait on children of other threads in this group",126,N],[18,"__WALL",E,"Wait on all children, regardless of type",126,N],[18,"__WCLONE",E,E,126,N],[11,"empty",E,R[1074],126,[[],[R[1354]]]],[11,"all",E,R[1075],126,[[],[R[1354]]]],[11,"bits",E,R[1076],126,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],126,[[["c_int"]],[[R[45],[R[1354]]],[R[1354]]]]],[11,R[1078],E,R[1079],126,[[["c_int"]],[R[1354]]]],[11,R[73],E,R[1080],126,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],126,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],126,[[[R[1354]],["self"]],["bool"]]],[11,R[1110],E,R[1083],126,[[[R[1354]],["self"]],["bool"]]],[11,"insert",E,R[1084],126,[[["self"],[R[1354]]]]],[11,"remove",E,R[1085],126,[[["self"],[R[1354]]]]],[11,"toggle",E,R[1086],126,[[["self"],[R[1354]]]]],[11,"set",E,R[1087],126,[[["self"],[R[1354]],["bool"]]]],[11,"pid",E,"Extracts the PID from the WaitStatus unless it equals…",125,[[["self"]],[[R[45],["pid"]],["pid"]]]],[11,"from_raw",E,"Convert a raw `wstatus` as returned by `waitpid`/`wait`…",125,[[["i32"],["pid"]],[[R[13],[R[1355]]],[R[1355]]]]],[0,"inotify",R[1226],"Monitoring API for filesystem events.",N,N],[3,R[1523],R[1518],"Configuration options for `inotify_add_watch`.",N,N],[3,"InitFlags",E,"Configuration options for `inotify_init1`.",N,N],[3,"Inotify",E,"An inotify instance. This is also a file descriptor, you…",N,N],[3,R[1528],E,"This object is returned when you create a new watch on an…",N,N],[3,R[1522],E,"A single inotify event.",N,N],[12,"wd",E,"Watch descriptor. This field corresponds to the watch…",127,N],[12,"mask",E,"Event mask. This field is a bitfield describing the exact…",127,N],[12,"cookie",E,"This cookie is a number that allows you to connect related…",127,N],[12,"name",E,"Filename. This field exists only if the event was…",127,N],[18,"IN_ACCESS",E,E,128,N],[18,"IN_MODIFY",E,E,128,N],[18,"IN_ATTRIB",E,E,128,N],[18,R[1504],E,E,128,N],[18,R[1505],E,E,128,N],[18,"IN_OPEN",E,E,128,N],[18,R[1506],E,E,128,N],[18,R[1507],E,E,128,N],[18,"IN_CREATE",E,E,128,N],[18,"IN_DELETE",E,E,128,N],[18,R[1508],E,E,128,N],[18,R[1509],E,E,128,N],[18,"IN_UNMOUNT",E,E,128,N],[18,R[1510],E,E,128,N],[18,"IN_IGNORED",E,E,128,N],[18,"IN_CLOSE",E,E,128,N],[18,"IN_MOVE",E,E,128,N],[18,"IN_ONLYDIR",E,E,128,N],[18,R[1511],E,E,128,N],[18,"IN_ISDIR",E,E,128,N],[18,"IN_ONESHOT",E,E,128,N],[18,R[1512],E,E,128,N],[11,"empty",E,R[1074],128,[[],[R[1513]]]],[11,"all",E,R[1075],128,[[],[R[1513]]]],[11,"bits",E,R[1076],128,[[["self"]],["u32"]]],[11,R[1094],E,R[1077],128,[[["u32"]],[[R[45],[R[1513]]],[R[1513]]]]],[11,R[1078],E,R[1079],128,[[["u32"]],[R[1513]]]],[11,R[73],E,R[1080],128,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],128,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],128,[[["self"],[R[1513]]],["bool"]]],[11,R[1110],E,R[1083],128,[[["self"],[R[1513]]],["bool"]]],[11,"insert",E,R[1084],128,[[["self"],[R[1513]]]]],[11,"remove",E,R[1085],128,[[["self"],[R[1513]]]]],[11,"toggle",E,R[1086],128,[[["self"],[R[1513]]]]],[11,"set",E,R[1087],128,[[["self"],[R[1513]],["bool"]]]],[18,"IN_CLOEXEC",E,E,129,N],[18,R[1514],E,E,129,N],[11,"empty",E,R[1074],129,[[],[R[1515]]]],[11,"all",E,R[1075],129,[[],[R[1515]]]],[11,"bits",E,R[1076],129,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],129,[[["c_int"]],[[R[45],[R[1515]]],[R[1515]]]]],[11,R[1078],E,R[1079],129,[[["c_int"]],[R[1515]]]],[11,R[73],E,R[1080],129,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],129,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],129,[[[R[1515]],["self"]],["bool"]]],[11,R[1110],E,R[1083],129,[[[R[1515]],["self"]],["bool"]]],[11,"insert",E,R[1084],129,[[["self"],[R[1515]]]]],[11,"remove",E,R[1085],129,[[["self"],[R[1515]]]]],[11,"toggle",E,R[1086],129,[[["self"],[R[1515]]]]],[11,"set",E,R[1087],129,[[["self"],[R[1515]],["bool"]]]],[11,"init",E,"Initialize a new inotify instance.",130,[[[R[1515]]],[["inotify"],[R[13],["inotify"]]]]],[11,"add_watch",E,"Adds a new watch on the target file or directory. ",130,[[["self"],[R[1513]],["p"]],[[R[13],[R[1516]]],[R[1516]]]]],[11,"rm_watch",E,"Removes an existing watch using the watch descriptor…",130,[[["self"],[R[1516]]],[R[13]]]],[11,"read_events",E,"Reads a collection of events from the inotify file…",130,[[["self"]],[[R[13],["vec"]],["vec",["inotifyevent"]]]]],[0,"ucontext","nix",E,N,N],[3,"UContext",R[1396],E,N,N],[11,"get",E,E,131,[[],[[R[13],["ucontext"]],["ucontext"]]]],[11,"set",E,E,131,[[["self"]],[R[13]]]],[11,"sigmask_mut",E,E,131,[[["self"]],["sigset"]]],[11,"sigmask",E,E,131,[[["self"]],["sigset"]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\"…",N,N],[3,"Uid",R[1357],"User identifier",N,N],[3,"Gid",E,"Group identifier",N,N],[3,"Pid",E,"Process identifier",N,N],[3,R[1524],E,"Options for access()",N,N],[4,"ForkResult",E,"Represents the successful result of calling `fork`",N,N],[13,"Parent",E,E,132,N],[12,"child","nix::unistd::ForkResult",E,132,N],[13,"Child",R[1357],E,132,N],[4,R[1474],E,"Flags for `fchownat` function.",N,N],[13,R[1327],E,E,133,N],[13,R[1328],E,E,133,N],[4,"Whence",E,"Directive that tells [`lseek`] and [`lseek64`] what the…",N,N],[13,"SeekSet",E,"Specify an offset relative to the start of the file.",134,N],[13,"SeekCur",E,"Specify an offset relative to the current file location.",134,N],[13,"SeekEnd",E,"Specify an offset relative to the end of the file.",134,N],[13,"SeekData",E,"Specify an offset relative to the next location in the…",134,N],[13,"SeekHole",E,"Specify an offset relative to the next hole in the file…",134,N],[4,R[1475],E,"Variable names for `pathconf`",N,N],[13,"FILESIZEBITS",E,"Minimum number of bits needed to represent, as a signed…",135,N],[13,"LINK_MAX",E,"Maximum number of links to a single file.",135,N],[13,"MAX_CANON",E,"Maximum number of bytes in a terminal canonical input line.",135,N],[13,"MAX_INPUT",E,"Minimum number of bytes for which space is available in a…",135,N],[13,"NAME_MAX",E,"Maximum number of bytes in a filename (not including the…",135,N],[13,"PATH_MAX",E,"Maximum number of bytes the implementation will store as a…",135,N],[13,"PIPE_BUF",E,"Maximum number of bytes that is guaranteed to be atomic…",135,N],[13,"POSIX2_SYMLINKS",E,"Symbolic links can be created.",135,N],[13,"POSIX_ALLOC_SIZE_MIN",E,"Minimum number of bytes of storage actually allocated for…",135,N],[13,"POSIX_REC_INCR_XFER_SIZE",E,"Recommended increment for file transfer sizes between the…",135,N],[13,"POSIX_REC_MAX_XFER_SIZE",E,"Maximum recommended file transfer size.",135,N],[13,"POSIX_REC_MIN_XFER_SIZE",E,"Minimum recommended file transfer size.",135,N],[13,"POSIX_REC_XFER_ALIGN",E,"Recommended file transfer buffer alignment.",135,N],[13,"SYMLINK_MAX",E,"Maximum number of bytes in a symbolic link.",135,N],[13,"_POSIX_CHOWN_RESTRICTED",E,"The use of `chown` and `fchown` is restricted to a process…",135,N],[13,"_POSIX_NO_TRUNC",E,"Pathname components longer than {NAME_MAX} generate an…",135,N],[13,R[1339],E,"This symbol shall be defined to be the value of a…",135,N],[13,"_POSIX_ASYNC_IO",E,"Asynchronous input or output operations may be performed…",135,N],[13,"_POSIX_PRIO_IO",E,"Prioritized input or output operations may be performed…",135,N],[13,"_POSIX_SYNC_IO",E,"Synchronized input or output operations may be performed…",135,N],[4,"SysconfVar",E,"Variable names for `sysconf`",N,N],[13,"AIO_LISTIO_MAX",E,"Maximum number of I/O operations in a single list I/O call…",136,N],[13,"AIO_MAX",E,"Maximum number of outstanding asynchronous I/O operations…",136,N],[13,"AIO_PRIO_DELTA_MAX",E,"The maximum amount by which a process can decrease its…",136,N],[13,"ARG_MAX",E,"Maximum length of argument to the exec functions including…",136,N],[13,"ATEXIT_MAX",E,"Maximum number of functions that may be registered with…",136,N],[13,"BC_BASE_MAX",E,"Maximum obase values allowed by the bc utility.",136,N],[13,"BC_DIM_MAX",E,"Maximum number of elements permitted in an array by the bc…",136,N],[13,"BC_SCALE_MAX",E,"Maximum scale value allowed by the bc utility.",136,N],[13,"BC_STRING_MAX",E,"Maximum length of a string constant accepted by the bc…",136,N],[13,"CHILD_MAX",E,"Maximum number of simultaneous processes per real user ID.",136,N],[13,"COLL_WEIGHTS_MAX",E,"Maximum number of weights that can be assigned to an entry…",136,N],[13,"DELAYTIMER_MAX",E,"Maximum number of timer expiration overruns.",136,N],[13,"EXPR_NEST_MAX",E,"Maximum number of expressions that can be nested within…",136,N],[13,"HOST_NAME_MAX",E,"Maximum length of a host name (not including the…",136,N],[13,"IOV_MAX",E,"Maximum number of iovec structures that one process has…",136,N],[13,"LINE_MAX",E,"Unless otherwise noted, the maximum length, in bytes, of a…",136,N],[13,"LOGIN_NAME_MAX",E,"Maximum length of a login name.",136,N],[13,"NGROUPS_MAX",E,"Maximum number of simultaneous supplementary group IDs per…",136,N],[13,"GETGR_R_SIZE_MAX",E,"Initial size of `getgrgid_r` and `getgrnam_r` data buffers",136,N],[13,"GETPW_R_SIZE_MAX",E,"Initial size of `getpwuid_r` and `getpwnam_r` data buffers",136,N],[13,"MQ_OPEN_MAX",E,"The maximum number of open message queue descriptors a…",136,N],[13,"MQ_PRIO_MAX",E,"The maximum number of message priorities supported by the…",136,N],[13,"OPEN_MAX",E,"A value one greater than the maximum value that the system…",136,N],[13,"_POSIX_ADVISORY_INFO",E,"The implementation supports the Advisory Information option.",136,N],[13,"_POSIX_BARRIERS",E,"The implementation supports barriers.",136,N],[13,"_POSIX_ASYNCHRONOUS_IO",E,"The implementation supports asynchronous input and output.",136,N],[13,"_POSIX_CLOCK_SELECTION",E,"The implementation supports clock selection.",136,N],[13,"_POSIX_CPUTIME",E,"The implementation supports the Process CPU-Time Clocks…",136,N],[13,"_POSIX_FSYNC",E,"The implementation supports the File Synchronization option.",136,N],[13,"_POSIX_IPV6",E,"The implementation supports the IPv6 option.",136,N],[13,"_POSIX_JOB_CONTROL",E,"The implementation supports job control.",136,N],[13,"_POSIX_MAPPED_FILES",E,"The implementation supports memory mapped Files.",136,N],[13,"_POSIX_MEMLOCK",E,"The implementation supports the Process Memory Locking…",136,N],[13,"_POSIX_MEMLOCK_RANGE",E,"The implementation supports the Range Memory Locking option.",136,N],[13,"_POSIX_MEMORY_PROTECTION",E,"The implementation supports memory protection.",136,N],[13,"_POSIX_MESSAGE_PASSING",E,"The implementation supports the Message Passing option.",136,N],[13,"_POSIX_MONOTONIC_CLOCK",E,"The implementation supports the Monotonic Clock option.",136,N],[13,"_POSIX_PRIORITIZED_IO",E,"The implementation supports the Prioritized Input and…",136,N],[13,"_POSIX_PRIORITY_SCHEDULING",E,"The implementation supports the Process Scheduling option.",136,N],[13,"_POSIX_RAW_SOCKETS",E,"The implementation supports the Raw Sockets option.",136,N],[13,"_POSIX_READER_WRITER_LOCKS",E,"The implementation supports read-write locks.",136,N],[13,"_POSIX_REALTIME_SIGNALS",E,"The implementation supports realtime signals.",136,N],[13,"_POSIX_REGEXP",E,"The implementation supports the Regular Expression…",136,N],[13,"_POSIX_SAVED_IDS",E,"Each process has a saved set-user-ID and a saved…",136,N],[13,"_POSIX_SEMAPHORES",E,"The implementation supports semaphores.",136,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS",E,"The implementation supports the Shared Memory Objects…",136,N],[13,"_POSIX_SHELL",E,"The implementation supports the POSIX shell.",136,N],[13,"_POSIX_SPAWN",E,"The implementation supports the Spawn option.",136,N],[13,"_POSIX_SPIN_LOCKS",E,"The implementation supports spin locks.",136,N],[13,"_POSIX_SPORADIC_SERVER",E,"The implementation supports the Process Sporadic Server…",136,N],[13,"_POSIX_SS_REPL_MAX",E,E,136,N],[13,"_POSIX_SYNCHRONIZED_IO",E,"The implementation supports the Synchronized Input and…",136,N],[13,"_POSIX_THREAD_ATTR_STACKADDR",E,"The implementation supports the Thread Stack Address…",136,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE",E,"The implementation supports the Thread Stack Size…",136,N],[13,"_POSIX_THREAD_CPUTIME",E,"The implementation supports the Thread CPU-Time Clocks…",136,N],[13,"_POSIX_THREAD_PRIO_INHERIT",E,R[1358],136,N],[13,"_POSIX_THREAD_PRIO_PROTECT",E,R[1358],136,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING",E,"The implementation supports the Thread Execution…",136,N],[13,"_POSIX_THREAD_PROCESS_SHARED",E,"The implementation supports the Thread Process-Shared…",136,N],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT",E,R[1359],136,N],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT",E,R[1359],136,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS",E,"The implementation supports thread-safe functions.",136,N],[13,"_POSIX_THREAD_SPORADIC_SERVER",E,"The implementation supports the Thread Sporadic Server…",136,N],[13,"_POSIX_THREADS",E,"The implementation supports threads.",136,N],[13,"_POSIX_TIMEOUTS",E,"The implementation supports timeouts.",136,N],[13,"_POSIX_TIMERS",E,"The implementation supports timers.",136,N],[13,"_POSIX_TRACE",E,"The implementation supports the Trace option.",136,N],[13,"_POSIX_TRACE_EVENT_FILTER",E,"The implementation supports the Trace Event Filter option.",136,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX",E,E,136,N],[13,"_POSIX_TRACE_INHERIT",E,"The implementation supports the Trace Inherit option.",136,N],[13,"_POSIX_TRACE_LOG",E,"The implementation supports the Trace Log option.",136,N],[13,"_POSIX_TRACE_NAME_MAX",E,E,136,N],[13,"_POSIX_TRACE_SYS_MAX",E,E,136,N],[13,"_POSIX_TRACE_USER_EVENT_MAX",E,E,136,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS",E,"The implementation supports the Typed Memory Objects option.",136,N],[13,"_POSIX_VERSION",E,"Integer value indicating version of this standard…",136,N],[13,"_POSIX_V6_ILP32_OFF32",E,R[1360],136,N],[13,"_POSIX_V6_ILP32_OFFBIG",E,R[1360],136,N],[13,"_POSIX_V6_LP64_OFF64",E,R[1360],136,N],[13,"_POSIX_V6_LPBIG_OFFBIG",E,R[1360],136,N],[13,"_POSIX2_C_BIND",E,"The implementation supports the C-Language Binding option.",136,N],[13,"_POSIX2_C_DEV",E,"The implementation supports the C-Language Development…",136,N],[13,"_POSIX2_CHAR_TERM",E,"The implementation supports the Terminal Characteristics…",136,N],[13,"_POSIX2_FORT_DEV",E,"The implementation supports the FORTRAN Development…",136,N],[13,"_POSIX2_FORT_RUN",E,"The implementation supports the FORTRAN Runtime Utilities…",136,N],[13,"_POSIX2_LOCALEDEF",E,"The implementation supports the creation of locales by the…",136,N],[13,"_POSIX2_PBS",E,"The implementation supports the Batch Environment Services…",136,N],[13,"_POSIX2_PBS_ACCOUNTING",E,"The implementation supports the Batch Accounting option.",136,N],[13,"_POSIX2_PBS_CHECKPOINT",E,"The implementation supports the Batch Checkpoint/Restart…",136,N],[13,"_POSIX2_PBS_LOCATE",E,"The implementation supports the Locate Batch Job Request…",136,N],[13,"_POSIX2_PBS_MESSAGE",E,"The implementation supports the Batch Job Message Request…",136,N],[13,"_POSIX2_PBS_TRACK",E,"The implementation supports the Track Batch Job Request…",136,N],[13,"_POSIX2_SW_DEV",E,"The implementation supports the Software Development…",136,N],[13,"_POSIX2_UPE",E,"The implementation supports the User Portability Utilities…",136,N],[13,"_POSIX2_VERSION",E,"Integer value indicating version of the Shell and…",136,N],[13,"PAGE_SIZE",E,"The size of a system page in bytes.",136,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS",E,E,136,N],[13,"PTHREAD_KEYS_MAX",E,E,136,N],[13,R[1361],E,E,136,N],[13,"PTHREAD_THREADS_MAX",E,E,136,N],[13,"RE_DUP_MAX",E,E,136,N],[13,"RTSIG_MAX",E,E,136,N],[13,"SEM_NSEMS_MAX",E,E,136,N],[13,"SEM_VALUE_MAX",E,E,136,N],[13,"SIGQUEUE_MAX",E,E,136,N],[13,"STREAM_MAX",E,E,136,N],[13,"SYMLOOP_MAX",E,E,136,N],[13,"TIMER_MAX",E,E,136,N],[13,"TTY_NAME_MAX",E,E,136,N],[13,"TZNAME_MAX",E,E,136,N],[13,"_XOPEN_CRYPT",E,"The implementation supports the X/Open Encryption Option…",136,N],[13,"_XOPEN_ENH_I18N",E,"The implementation supports the Issue 4, Version 2…",136,N],[13,"_XOPEN_LEGACY",E,E,136,N],[13,"_XOPEN_REALTIME",E,"The implementation supports the X/Open Realtime Option…",136,N],[13,"_XOPEN_REALTIME_THREADS",E,"The implementation supports the X/Open Realtime Threads…",136,N],[13,"_XOPEN_SHM",E,"The implementation supports the Issue 4, Version 2 Shared…",136,N],[13,"_XOPEN_STREAMS",E,"The implementation supports the XSI STREAMS Option Group.",136,N],[13,"_XOPEN_UNIX",E,"The implementation supports the XSI option",136,N],[13,"_XOPEN_VERSION",E,"Integer value indicating version of the X/Open Portability…",136,N],[5,"pivot_root",E,E,N,[[["p2"],["p1"]],[R[13]]]],[5,"setresuid",E,"Sets the real, effective, and saved uid. (see setresuid(2))",N,[[["uid"]],[R[13]]]],[5,"setresgid",E,"Sets the real, effective, and saved gid. (see setresuid(2))",N,[[["gid"]],[R[13]]]],[5,"fork",E,"Create a new child process duplicating the parent process…",N,[[],[[R[1420]],[R[13],[R[1420]]]]]],[5,"getpid",E,"Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid",E,"Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid",E,"Set a process group ID (see setpgid(2)).",N,[[["pid"]],[R[13]]]],[5,"getpgid",E,E,N,[[[R[45],["pid"]],["pid"]],[[R[13],["pid"]],["pid"]]]],[5,"setsid",E,"Create new session and set process group id (see setsid(2)).",N,[[],[[R[13],["pid"]],["pid"]]]],[5,"getsid",E,"Get the process group ID of a session leader getsid(2).",N,[[[R[45],["pid"]],["pid"]],[[R[13],["pid"]],["pid"]]]],[5,"tcgetpgrp",E,"Get the terminal foreground process group (see…",N,[[["c_int"]],[[R[13],["pid"]],["pid"]]]],[5,"tcsetpgrp",E,"Set the terminal foreground process group (see…",N,[[["c_int"],["pid"]],[R[13]]]],[5,"getpgrp",E,"Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"gettid",E,"Get the caller's thread ID (see gettid(2).",N,[[],["pid"]]],[5,"dup",E,"Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"dup2",E,"Create a copy of the specified file descriptor using the…",N,[[["rawfd"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"dup3",E,"Create a new copy of the specified file descriptor using…",N,[[["rawfd"],["oflag"]],[[R[13],["rawfd"]],["rawfd"]]]],[5,"chdir",E,"Change the current working directory of the calling…",N,[[["p"]],[R[13]]]],[5,"fchdir",E,"Change the current working directory of the process to the…",N,[[["rawfd"]],[R[13]]]],[5,"mkdir",E,"Creates new directory `path` with access rights `mode`.…",N,[[["mode"],["p"]],[R[13]]]],[5,"mkfifo",E,"Creates new fifo special file (named pipe) with path…",N,[[["mode"],["p"]],[R[13]]]],[5,"symlinkat",E,"Creates a symbolic link at `path2` which points to `path1`.",N,[[["rawfd"],["p2"],[R[45],["rawfd"]],["p1"]],[R[13]]]],[5,"getcwd",E,"Returns the current directory as a `PathBuf`",N,[[],[["pathbuf"],[R[13],["pathbuf"]]]]],[5,"chown",E,R[1362],N,[[[R[45],["uid"]],["uid"],["p"],[R[45],["gid"]],["gid"]],[R[13]]]],[5,"fchownat",E,R[1362],N,[[["p"],["gid"],["rawfd"],[R[45],["uid"]],[R[45],["rawfd"]],["uid"],[R[45],["gid"]],[R[1421]]],[R[13]]]],[5,"execv",E,R[1363],N,[[["cstring"]],[[R[13],["void"]],["void"]]]],[5,"execve",E,R[1363],N,[[["cstring"]],[[R[13],["void"]],["void"]]]],[5,"execvp",E,R[1364],N,[[["cstring"]],[[R[13],["void"]],["void"]]]],[5,"execvpe",E,R[1364],N,[[["cstring"]],[[R[13],["void"]],["void"]]]],[5,"fexecve",E,R[1363],N,[[["rawfd"]],[[R[13],["void"]],["void"]]]],[5,"execveat",E,"Execute program relative to a directory file descriptor…",N,[[["cstring"],["rawfd"],["atflags"]],[[R[13],["void"]],["void"]]]],[5,"daemon",E,"Daemonize this process by detaching from the controlling…",N,[[["bool"]],[R[13]]]],[5,R[1365],E,"Set the system host name (see sethostname(2)).",N,[[["asref",["osstr"]],["osstr"]],[R[13]]]],[5,R[1366],E,"Get the host name and store it in the provided buffer,…",N,[[],[["cstr"],[R[13],["cstr"]]]]],[5,"close",E,"Close a raw file descriptor",N,[[["rawfd"]],[R[13]]]],[5,"read",E,"Read from a raw file descriptor.",N,[[["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,"write",E,"Write to a raw file descriptor.",N,[[["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[5,"lseek",E,"Move the read/write file offset.",N,[[["rawfd"],["whence"],["off_t"]],[["off_t"],[R[13],["off_t"]]]]],[5,"lseek64",E,E,N,[[["rawfd"],["whence"],["off64_t"]],[["off64_t"],[R[13],["off64_t"]]]]],[5,"pipe",E,"Create an interprocess channel.",N,[[],[R[13]]]],[5,"pipe2",E,"Like `pipe`, but allows setting certain file descriptor…",N,[[["oflag"]],[R[13]]]],[5,R[2724],E,R[1367],N,[[["off_t"],["p"]],[R[13]]]],[5,"ftruncate",E,R[1367],N,[[["rawfd"],["off_t"]],[R[13]]]],[5,"isatty",E,E,N,[[["rawfd"]],[[R[13],["bool"]],["bool"]]]],[5,"unlink",E,"Remove a directory entry",N,[[["p"]],[R[13]]]],[5,"chroot",E,E,N,[[["p"]],[R[13]]]],[5,"sync",E,"Commit filesystem caches to disk",N,[[]]],[5,"fsync",E,"Synchronize changes to a file",N,[[["rawfd"]],[R[13]]]],[5,"fdatasync",E,"Synchronize the data of a file",N,[[["rawfd"]],[R[13]]]],[5,"getuid",E,"Get a real user ID",N,[[],["uid"]]],[5,"geteuid",E,"Get the effective user ID",N,[[],["uid"]]],[5,"getgid",E,"Get the real group ID",N,[[],["gid"]]],[5,"getegid",E,"Get the effective group ID",N,[[],["gid"]]],[5,"seteuid",E,"Set the effective user ID",N,[[["uid"]],[R[13]]]],[5,"setegid",E,"Set the effective group ID",N,[[["gid"]],[R[13]]]],[5,"setuid",E,R[1368],N,[[["uid"]],[R[13]]]],[5,"setgid",E,"Set the group ID",N,[[["gid"]],[R[13]]]],[5,"getgroups",E,"Get the list of supplementary group IDs of the calling…",N,[[],[[R[13],["vec"]],["vec",["gid"]]]]],[5,"setgroups",E,"Set the list of supplementary group IDs for the calling…",N,[[],[R[13]]]],[5,R[1369],E,"Calculate the supplementary group access list.",N,[[["cstr"],["gid"]],[[R[13],["vec"]],["vec",["gid"]]]]],[5,"initgroups",E,"Initialize the supplementary group access list.",N,[[["cstr"],["gid"]],[R[13]]]],[5,"pause",E,"Suspend the thread until a signal is received.",N,[[]]],[5,"sleep",E,"Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp",E,"Creates a regular file which persists even after process…",N,[[["p"]],[R[13]]]],[5,"fpathconf",E,"Like `pathconf`, but works with file descriptors instead…",N,[[["rawfd"],[R[1370]]],[[R[45],["c_long"]],[R[13],[R[45]]]]]],[5,"pathconf",E,"Get path-dependent configurable system variables (see…",N,[[[R[1370]],["p"]],[[R[45],["c_long"]],[R[13],[R[45]]]]]],[5,"sysconf",E,"Get configurable system variables (see sysconf(3))",N,[[[R[1428]]],[[R[45],["c_long"]],[R[13],[R[45]]]]]],[5,"access",E,"Checks the file named by `path` for accessibility…",N,[[[R[1517]],["p"]],[R[13]]]],[0,"alarm",E,"Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],[[R[45],["c_uint"]],["c_uint"]]]],[5,"cancel",E,"Cancel an previously set alarm signal.",N,[[],[[R[45],["c_uint"]],["c_uint"]]]],[0,"acct",R[1357],E,N,N],[5,"enable","nix::unistd::acct","Enable process accounting",N,[[["p"]],[R[13]]]],[5,"disable",E,"Disable process accounting",N,[[],[R[13]]]],[17,"ROOT",R[1357],"Constant for UID = 0",N,N],[11,"from_raw",E,"Creates `Uid` from raw `uid_t`.",137,[[["uid_t"]],["self"]]],[11,"current",E,"Returns Uid of calling process. This is practically a more…",137,[[],["self"]]],[11,"effective",E,"Returns effective Uid of calling process. This is…",137,[[],["self"]]],[11,"is_root",E,"Returns true if the `Uid` represents privileged user -…",137,[[["self"]],["bool"]]],[11,"as_raw",E,"Get the raw `uid_t` wrapped by `self`.",137,[[["self"]],["uid_t"]]],[11,"from_raw",E,"Creates `Gid` from raw `gid_t`.",138,[[["gid_t"]],["self"]]],[11,"current",E,"Returns Gid of calling process. This is practically a more…",138,[[],["self"]]],[11,"effective",E,"Returns effective Gid of calling process. This is…",138,[[],["self"]]],[11,"as_raw",E,"Get the raw `gid_t` wrapped by `self`.",138,[[["self"]],["gid_t"]]],[11,"from_raw",E,"Creates `Pid` from raw `pid_t`.",139,[[["pid_t"]],["self"]]],[11,"this",E,"Returns PID of calling process",139,[[],["self"]]],[11,"parent",E,"Returns PID of parent of calling process",139,[[],["self"]]],[11,"as_raw",E,"Get the raw `pid_t` wrapped by `self`.",139,[[["self"]],["pid_t"]]],[11,"is_child",E,"Return `true` if this is the child process of the `fork()`",132,[[["self"]],["bool"]]],[11,"is_parent",E,"Returns `true` if this is the parent process of the `fork()`",132,[[["self"]],["bool"]]],[18,"F_OK",E,"Test for existence of file.",140,N],[18,"R_OK",E,"Test for read permission.",140,N],[18,"W_OK",E,"Test for write permission.",140,N],[18,"X_OK",E,"Test for execute (search) permission.",140,N],[11,"empty",E,R[1074],140,[[],[R[1517]]]],[11,"all",E,R[1075],140,[[],[R[1517]]]],[11,"bits",E,R[1076],140,[[["self"]],["c_int"]]],[11,R[1094],E,R[1077],140,[[["c_int"]],[[R[45],[R[1517]]],[R[1517]]]]],[11,R[1078],E,R[1079],140,[[["c_int"]],[R[1517]]]],[11,R[73],E,R[1080],140,[[["self"]],["bool"]]],[11,"is_all",E,R[1081],140,[[["self"]],["bool"]]],[11,R[1092],E,R[1082],140,[[["self"],[R[1517]]],["bool"]]],[11,R[1110],E,R[1083],140,[[["self"],[R[1517]]],["bool"]]],[11,"insert",E,R[1084],140,[[["self"],[R[1517]]]]],[11,"remove",E,R[1085],140,[[["self"],[R[1517]]]]],[11,"toggle",E,R[1086],140,[[["self"],[R[1517]]]]],[11,"set",E,R[1087],140,[[["self"],["bool"],[R[1517]]]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath",E,E,N,N],[10,"len",E,E,141,[[["self"]],[R[9]]]],[10,"with_nix_path",E,E,141,[[["self"],["f"]],[R[13]]]],[11,"as_errno",E,"Convert this `Error` to an `Errno`.",0,[[["self"]],[[R[45],["errno"]],["errno"]]]],[11,"from_errno",E,"Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last",E,"Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument",E,"Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none",E,"Generate an ioctl request code for a command that passes…",N,N],[14,"request_code_read",E,"Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write",E,"Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite",E,"Generate an ioctl request code for a command that reads…",N,N],[14,"ioctl_none",E,"Generates a wrapper function for an ioctl that passes no…",N,N],[14,"ioctl_none_bad",E,"Generates a wrapper function for a \"bad\" ioctl that passes…",N,N],[14,"ioctl_read",E,"Generates a wrapper function for an ioctl that reads data…",N,N],[14,"ioctl_read_bad",E,R[1372],N,N],[14,"ioctl_write_ptr",E,"Generates a wrapper function for an ioctl that writes data…",N,N],[14,"ioctl_write_ptr_bad",E,R[1371],N,N],[14,"ioctl_write_int",E,"Generates a wrapper function for a ioctl that writes an…",N,N],[14,"ioctl_write_int_bad",E,R[1371],N,N],[14,"ioctl_readwrite",E,R[1373],N,N],[14,"ioctl_readwrite_bad",E,R[1372],N,N],[14,"ioctl_read_buf",E,"Generates a wrapper function for an ioctl that reads an…",N,N],[14,"ioctl_write_buf",E,"Generates a wrapper function for an ioctl that writes an…",N,N],[14,"ioctl_readwrite_buf",E,R[1373],N,N],[14,"cmsg_space",E,"Create a buffer large enough for storing some control…",N,N],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",R[1429],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[43],E,E,142,[[],["i"]]],[11,R[12],E,E,142,[[[U]],[R[13]]]],[11,R[14],E,E,142,[[],[R[13]]]],[11,R[15],E,E,142,[[["self"]],[T]]],[11,R[41],E,E,142,[[["self"]],[T]]],[11,R[19],E,E,142,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],R[1411],E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",R[1407],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",R[1374],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[43],E,E,143,[[],["i"]]],[11,R[12],E,E,143,[[[U]],[R[13]]]],[11,R[14],E,E,143,[[],[R[13]]]],[11,R[15],E,E,143,[[["self"]],[T]]],[11,R[41],E,E,143,[[["self"]],[T]]],[11,R[19],E,E,143,[[["self"]],[R[42]]]],[11,"from",R[1412],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[[T],["self"]]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",R[1408],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[[T],["self"]]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[[T],["self"]]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",R[1375],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[[T],["self"]]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[[T],["self"]]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[[T],["self"]]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",R[1376],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[[T],["self"]]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"from",R[1413],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[[T],["self"]]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[[T],["self"]]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"from",R[1443],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[[T],["self"]]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[[T],["self"]]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[[T],["self"]]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[12],E,E,144,[[[U]],[R[13]]]],[11,R[14],E,E,144,[[],[R[13]]]],[11,R[15],E,E,144,[[["self"]],[T]]],[11,R[41],E,E,144,[[["self"]],[T]]],[11,R[19],E,E,144,[[["self"]],[R[42]]]],[11,"from",R[1409],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[[T],["self"]]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[[T],["self"]]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,"from",R[1377],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[[T],["self"]]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[[T],["self"]]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[[T],["self"]]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[[T],["self"]]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",R[1378],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[[T],["self"]]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[[T],["self"]]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[[T],["self"]]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[[T],["self"]]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",R[1379],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[[T],["self"]]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,"from",R[1380],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[[T],["self"]]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"from",R[1381],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[[T],["self"]]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[[T],["self"]]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[[T],["self"]]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[[T],["self"]]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"from",R[1382],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[[T],["self"]]]],[11,R[12],E,E,50,[[[U]],[R[13]]]],[11,R[14],E,E,50,[[],[R[13]]]],[11,R[15],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[R[42]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[[T],["self"]]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[[T],["self"]]]],[11,R[12],E,E,49,[[[U]],[R[13]]]],[11,R[14],E,E,49,[[],[R[13]]]],[11,R[15],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[R[42]]]],[11,"from",R[1383],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[[T],["self"]]]],[11,R[12],E,E,53,[[[U]],[R[13]]]],[11,R[14],E,E,53,[[],[R[13]]]],[11,R[15],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[R[42]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[[T],["self"]]]],[11,R[12],E,E,54,[[[U]],[R[13]]]],[11,R[14],E,E,54,[[],[R[13]]]],[11,R[15],E,E,54,[[["self"]],[T]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[R[42]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[[T],["self"]]]],[11,R[12],E,E,51,[[[U]],[R[13]]]],[11,R[14],E,E,51,[[],[R[13]]]],[11,R[15],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[["self"]],[R[42]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[[T],["self"]]]],[11,R[12],E,E,52,[[[U]],[R[13]]]],[11,R[14],E,E,52,[[],[R[13]]]],[11,R[15],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[["self"]],[R[42]]]],[11,"from",R[1384],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[[T],["self"]]]],[11,R[12],E,E,55,[[[U]],[R[13]]]],[11,R[14],E,E,55,[[],[R[13]]]],[11,R[15],E,E,55,[[["self"]],[T]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[R[42]]]],[11,"from",R[1385],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[[T],["self"]]]],[11,R[12],E,E,56,[[[U]],[R[13]]]],[11,R[14],E,E,56,[[],[R[13]]]],[11,R[15],E,E,56,[[["self"]],[T]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[R[42]]]],[11,"from",R[1287],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[17],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[[T],["self"]]]],[11,R[12],E,E,61,[[[U]],[R[13]]]],[11,R[14],E,E,61,[[],[R[13]]]],[11,R[15],E,E,61,[[["self"]],[T]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[19],E,E,61,[[["self"]],[R[42]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[43],E,E,145,[[],["i"]]],[11,R[17],E,E,145,[[["self"]],[T]]],[11,R[18],E,E,145,[[[T],["self"]]]],[11,R[12],E,E,145,[[[U]],[R[13]]]],[11,R[14],E,E,145,[[],[R[13]]]],[11,R[15],E,E,145,[[["self"]],[T]]],[11,R[41],E,E,145,[[["self"]],[T]]],[11,R[19],E,E,145,[[["self"]],[R[42]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[17],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[[T],["self"]]]],[11,R[12],E,E,62,[[[U]],[R[13]]]],[11,R[14],E,E,62,[[],[R[13]]]],[11,R[15],E,E,62,[[["self"]],[T]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[19],E,E,62,[[["self"]],[R[42]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[17],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[[T],["self"]]]],[11,R[12],E,E,63,[[[U]],[R[13]]]],[11,R[14],E,E,63,[[],[R[13]]]],[11,R[15],E,E,63,[[["self"]],[T]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[19],E,E,63,[[["self"]],[R[42]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[17],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[[T],["self"]]]],[11,R[12],E,E,64,[[[U]],[R[13]]]],[11,R[14],E,E,64,[[],[R[13]]]],[11,R[15],E,E,64,[[["self"]],[T]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[19],E,E,64,[[["self"]],[R[42]]]],[11,R[62],E,E,57,[[["self"]],["string"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[17],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[[T],["self"]]]],[11,R[12],E,E,57,[[[U]],[R[13]]]],[11,R[14],E,E,57,[[],[R[13]]]],[11,R[15],E,E,57,[[["self"]],[T]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[R[42]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[17],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[[T],["self"]]]],[11,R[12],E,E,58,[[[U]],[R[13]]]],[11,R[14],E,E,58,[[],[R[13]]]],[11,R[15],E,E,58,[[["self"]],[T]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[R[42]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[[T],["self"]]]],[11,R[12],E,E,59,[[[U]],[R[13]]]],[11,R[14],E,E,59,[[],[R[13]]]],[11,R[15],E,E,59,[[["self"]],[T]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[R[42]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[17],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[[T],["self"]]]],[11,R[12],E,E,60,[[[U]],[R[13]]]],[11,R[14],E,E,60,[[],[R[13]]]],[11,R[15],E,E,60,[[["self"]],[T]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[19],E,E,60,[[["self"]],[R[42]]]],[11,"from",R[1386],E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[17],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[[T],["self"]]]],[11,R[12],E,E,65,[[[U]],[R[13]]]],[11,R[14],E,E,65,[[],[R[13]]]],[11,R[15],E,E,65,[[["self"]],[T]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[19],E,E,65,[[["self"]],[R[42]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[17],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[[T],["self"]]]],[11,R[12],E,E,66,[[[U]],[R[13]]]],[11,R[14],E,E,66,[[],[R[13]]]],[11,R[15],E,E,66,[[["self"]],[T]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[19],E,E,66,[[["self"]],[R[42]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[43],E,E,67,[[],["i"]]],[11,R[17],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[[T],["self"]]]],[11,R[12],E,E,67,[[[U]],[R[13]]]],[11,R[14],E,E,67,[[],[R[13]]]],[11,R[15],E,E,67,[[["self"]],[T]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[19],E,E,67,[[["self"]],[R[42]]]],[11,"from",R[1317],E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[17],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[[T],["self"]]]],[11,R[12],E,E,68,[[[U]],[R[13]]]],[11,R[14],E,E,68,[[],[R[13]]]],[11,R[15],E,E,68,[[["self"]],[T]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[19],E,E,68,[[["self"]],[R[42]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[17],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[[T],["self"]]]],[11,R[12],E,E,69,[[[U]],[R[13]]]],[11,R[14],E,E,69,[[],[R[13]]]],[11,R[15],E,E,69,[[["self"]],[T]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[19],E,E,69,[[["self"]],[R[42]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[17],E,E,70,[[["self"]],[T]]],[11,R[18],E,E,70,[[[T],["self"]]]],[11,R[12],E,E,70,[[[U]],[R[13]]]],[11,R[14],E,E,70,[[],[R[13]]]],[11,R[15],E,E,70,[[["self"]],[T]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[19],E,E,70,[[["self"]],[R[42]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[17],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[[T],["self"]]]],[11,R[12],E,E,71,[[[U]],[R[13]]]],[11,R[14],E,E,71,[[],[R[13]]]],[11,R[15],E,E,71,[[["self"]],[T]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[19],E,E,71,[[["self"]],[R[42]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[17],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[[T],["self"]]]],[11,R[12],E,E,72,[[[U]],[R[13]]]],[11,R[14],E,E,72,[[],[R[13]]]],[11,R[15],E,E,72,[[["self"]],[T]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[19],E,E,72,[[["self"]],[R[42]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[17],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[[T],["self"]]]],[11,R[12],E,E,73,[[[U]],[R[13]]]],[11,R[14],E,E,73,[[],[R[13]]]],[11,R[15],E,E,73,[[["self"]],[T]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[19],E,E,73,[[["self"]],[R[42]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[17],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[[T],["self"]]]],[11,R[12],E,E,74,[[[U]],[R[13]]]],[11,R[14],E,E,74,[[],[R[13]]]],[11,R[15],E,E,74,[[["self"]],[T]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[19],E,E,74,[[["self"]],[R[42]]]],[11,R[62],E,E,75,[[["self"]],["string"]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[17],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[[T],["self"]]]],[11,R[12],E,E,75,[[[U]],[R[13]]]],[11,R[14],E,E,75,[[],[R[13]]]],[11,R[15],E,E,75,[[["self"]],[T]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[19],E,E,75,[[["self"]],[R[42]]]],[11,R[62],E,E,76,[[["self"]],["string"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[17],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[[T],["self"]]]],[11,R[12],E,E,76,[[[U]],[R[13]]]],[11,R[14],E,E,76,[[],[R[13]]]],[11,R[15],E,E,76,[[["self"]],[T]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[19],E,E,76,[[["self"]],[R[42]]]],[11,R[62],E,E,77,[[["self"]],["string"]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[17],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[[T],["self"]]]],[11,R[12],E,E,77,[[[U]],[R[13]]]],[11,R[14],E,E,77,[[],[R[13]]]],[11,R[15],E,E,77,[[["self"]],[T]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[19],E,E,77,[[["self"]],[R[42]]]],[11,R[62],E,E,78,[[["self"]],["string"]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[17],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[[T],["self"]]]],[11,R[12],E,E,78,[[[U]],[R[13]]]],[11,R[14],E,E,78,[[],[R[13]]]],[11,R[15],E,E,78,[[["self"]],[T]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[19],E,E,78,[[["self"]],[R[42]]]],[11,R[62],E,E,79,[[["self"]],["string"]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[17],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[[T],["self"]]]],[11,R[12],E,E,79,[[[U]],[R[13]]]],[11,R[14],E,E,79,[[],[R[13]]]],[11,R[15],E,E,79,[[["self"]],[T]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[19],E,E,79,[[["self"]],[R[42]]]],[11,R[62],E,E,80,[[["self"]],["string"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[17],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[[T],["self"]]]],[11,R[12],E,E,80,[[[U]],[R[13]]]],[11,R[14],E,E,80,[[],[R[13]]]],[11,R[15],E,E,80,[[["self"]],[T]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[19],E,E,80,[[["self"]],[R[42]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[17],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[[T],["self"]]]],[11,R[12],E,E,95,[[[U]],[R[13]]]],[11,R[14],E,E,95,[[],[R[13]]]],[11,R[15],E,E,95,[[["self"]],[T]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[19],E,E,95,[[["self"]],[R[42]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[17],E,E,96,[[["self"]],[T]]],[11,R[18],E,E,96,[[[T],["self"]]]],[11,R[12],E,E,96,[[[U]],[R[13]]]],[11,R[14],E,E,96,[[],[R[13]]]],[11,R[15],E,E,96,[[["self"]],[T]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[19],E,E,96,[[["self"]],[R[42]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[17],E,E,97,[[["self"]],[T]]],[11,R[18],E,E,97,[[[T],["self"]]]],[11,R[12],E,E,97,[[[U]],[R[13]]]],[11,R[14],E,E,97,[[],[R[13]]]],[11,R[15],E,E,97,[[["self"]],[T]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[19],E,E,97,[[["self"]],[R[42]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[17],E,E,98,[[["self"]],[T]]],[11,R[18],E,E,98,[[[T],["self"]]]],[11,R[12],E,E,98,[[[U]],[R[13]]]],[11,R[14],E,E,98,[[],[R[13]]]],[11,R[15],E,E,98,[[["self"]],[T]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[19],E,E,98,[[["self"]],[R[42]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[17],E,E,99,[[["self"]],[T]]],[11,R[18],E,E,99,[[[T],["self"]]]],[11,R[12],E,E,99,[[[U]],[R[13]]]],[11,R[14],E,E,99,[[],[R[13]]]],[11,R[15],E,E,99,[[["self"]],[T]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[19],E,E,99,[[["self"]],[R[42]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[12],E,E,100,[[[U]],[R[13]]]],[11,R[14],E,E,100,[[],[R[13]]]],[11,R[15],E,E,100,[[["self"]],[T]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[19],E,E,100,[[["self"]],[R[42]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[12],E,E,81,[[[U]],[R[13]]]],[11,R[14],E,E,81,[[],[R[13]]]],[11,R[15],E,E,81,[[["self"]],[T]]],[11,R[41],E,E,81,[[["self"]],[T]]],[11,R[19],E,E,81,[[["self"]],[R[42]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[43],E,E,146,[[],["i"]]],[11,R[12],E,E,146,[[[U]],[R[13]]]],[11,R[14],E,E,146,[[],[R[13]]]],[11,R[15],E,E,146,[[["self"]],[T]]],[11,R[41],E,E,146,[[["self"]],[T]]],[11,R[19],E,E,146,[[["self"]],[R[42]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[17],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[[T],["self"]]]],[11,R[12],E,E,82,[[[U]],[R[13]]]],[11,R[14],E,E,82,[[],[R[13]]]],[11,R[15],E,E,82,[[["self"]],[T]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[19],E,E,82,[[["self"]],[R[42]]]],[11,R[62],E,E,83,[[["self"]],["string"]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[17],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[[T],["self"]]]],[11,R[12],E,E,83,[[[U]],[R[13]]]],[11,R[14],E,E,83,[[],[R[13]]]],[11,R[15],E,E,83,[[["self"]],[T]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[19],E,E,83,[[["self"]],[R[42]]]],[11,R[62],E,E,84,[[["self"]],["string"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[17],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[[T],["self"]]]],[11,R[12],E,E,84,[[[U]],[R[13]]]],[11,R[14],E,E,84,[[],[R[13]]]],[11,R[15],E,E,84,[[["self"]],[T]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[19],E,E,84,[[["self"]],[R[42]]]],[11,R[62],E,E,85,[[["self"]],["string"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[17],E,E,85,[[["self"]],[T]]],[11,R[18],E,E,85,[[[T],["self"]]]],[11,R[12],E,E,85,[[[U]],[R[13]]]],[11,R[14],E,E,85,[[],[R[13]]]],[11,R[15],E,E,85,[[["self"]],[T]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[19],E,E,85,[[["self"]],[R[42]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[17],E,E,86,[[["self"]],[T]]],[11,R[18],E,E,86,[[[T],["self"]]]],[11,R[12],E,E,86,[[[U]],[R[13]]]],[11,R[14],E,E,86,[[],[R[13]]]],[11,R[15],E,E,86,[[["self"]],[T]]],[11,R[41],E,E,86,[[["self"]],[T]]],[11,R[19],E,E,86,[[["self"]],[R[42]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[17],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[[T],["self"]]]],[11,R[12],E,E,87,[[[U]],[R[13]]]],[11,R[14],E,E,87,[[],[R[13]]]],[11,R[15],E,E,87,[[["self"]],[T]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[19],E,E,87,[[["self"]],[R[42]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[12],E,E,88,[[[U]],[R[13]]]],[11,R[14],E,E,88,[[],[R[13]]]],[11,R[15],E,E,88,[[["self"]],[T]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[19],E,E,88,[[["self"]],[R[42]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[12],E,E,89,[[[U]],[R[13]]]],[11,R[14],E,E,89,[[],[R[13]]]],[11,R[15],E,E,89,[[["self"]],[T]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[19],E,E,89,[[["self"]],[R[42]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[17],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[[T],["self"]]]],[11,R[12],E,E,90,[[[U]],[R[13]]]],[11,R[14],E,E,90,[[],[R[13]]]],[11,R[15],E,E,90,[[["self"]],[T]]],[11,R[41],E,E,90,[[["self"]],[T]]],[11,R[19],E,E,90,[[["self"]],[R[42]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[17],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[[T],["self"]]]],[11,R[12],E,E,91,[[[U]],[R[13]]]],[11,R[14],E,E,91,[[],[R[13]]]],[11,R[15],E,E,91,[[["self"]],[T]]],[11,R[41],E,E,91,[[["self"]],[T]]],[11,R[19],E,E,91,[[["self"]],[R[42]]]],[11,"from",R[1387],E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[17],E,E,147,[[["self"]],[T]]],[11,R[18],E,E,147,[[[T],["self"]]]],[11,R[12],E,E,147,[[[U]],[R[13]]]],[11,R[14],E,E,147,[[],[R[13]]]],[11,R[15],E,E,147,[[["self"]],[T]]],[11,R[41],E,E,147,[[["self"]],[T]]],[11,R[19],E,E,147,[[["self"]],[R[42]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[17],E,E,148,[[["self"]],[T]]],[11,R[18],E,E,148,[[[T],["self"]]]],[11,R[12],E,E,148,[[[U]],[R[13]]]],[11,R[14],E,E,148,[[],[R[13]]]],[11,R[15],E,E,148,[[["self"]],[T]]],[11,R[41],E,E,148,[[["self"]],[T]]],[11,R[19],E,E,148,[[["self"]],[R[42]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[17],E,E,149,[[["self"]],[T]]],[11,R[18],E,E,149,[[[T],["self"]]]],[11,R[12],E,E,149,[[[U]],[R[13]]]],[11,R[14],E,E,149,[[],[R[13]]]],[11,R[15],E,E,149,[[["self"]],[T]]],[11,R[41],E,E,149,[[["self"]],[T]]],[11,R[19],E,E,149,[[["self"]],[R[42]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[17],E,E,150,[[["self"]],[T]]],[11,R[18],E,E,150,[[[T],["self"]]]],[11,R[12],E,E,150,[[[U]],[R[13]]]],[11,R[14],E,E,150,[[],[R[13]]]],[11,R[15],E,E,150,[[["self"]],[T]]],[11,R[41],E,E,150,[[["self"]],[T]]],[11,R[19],E,E,150,[[["self"]],[R[42]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[17],E,E,151,[[["self"]],[T]]],[11,R[18],E,E,151,[[[T],["self"]]]],[11,R[12],E,E,151,[[[U]],[R[13]]]],[11,R[14],E,E,151,[[],[R[13]]]],[11,R[15],E,E,151,[[["self"]],[T]]],[11,R[41],E,E,151,[[["self"]],[T]]],[11,R[19],E,E,151,[[["self"]],[R[42]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[17],E,E,152,[[["self"]],[T]]],[11,R[18],E,E,152,[[[T],["self"]]]],[11,R[12],E,E,152,[[[U]],[R[13]]]],[11,R[14],E,E,152,[[],[R[13]]]],[11,R[15],E,E,152,[[["self"]],[T]]],[11,R[41],E,E,152,[[["self"]],[T]]],[11,R[19],E,E,152,[[["self"]],[R[42]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[17],E,E,153,[[["self"]],[T]]],[11,R[18],E,E,153,[[[T],["self"]]]],[11,R[12],E,E,153,[[[U]],[R[13]]]],[11,R[14],E,E,153,[[],[R[13]]]],[11,R[15],E,E,153,[[["self"]],[T]]],[11,R[41],E,E,153,[[["self"]],[T]]],[11,R[19],E,E,153,[[["self"]],[R[42]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[17],E,E,154,[[["self"]],[T]]],[11,R[18],E,E,154,[[[T],["self"]]]],[11,R[12],E,E,154,[[[U]],[R[13]]]],[11,R[14],E,E,154,[[],[R[13]]]],[11,R[15],E,E,154,[[["self"]],[T]]],[11,R[41],E,E,154,[[["self"]],[T]]],[11,R[19],E,E,154,[[["self"]],[R[42]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[17],E,E,155,[[["self"]],[T]]],[11,R[18],E,E,155,[[[T],["self"]]]],[11,R[12],E,E,155,[[[U]],[R[13]]]],[11,R[14],E,E,155,[[],[R[13]]]],[11,R[15],E,E,155,[[["self"]],[T]]],[11,R[41],E,E,155,[[["self"]],[T]]],[11,R[19],E,E,155,[[["self"]],[R[42]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[17],E,E,156,[[["self"]],[T]]],[11,R[18],E,E,156,[[[T],["self"]]]],[11,R[12],E,E,156,[[[U]],[R[13]]]],[11,R[14],E,E,156,[[],[R[13]]]],[11,R[15],E,E,156,[[["self"]],[T]]],[11,R[41],E,E,156,[[["self"]],[T]]],[11,R[19],E,E,156,[[["self"]],[R[42]]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[17],E,E,157,[[["self"]],[T]]],[11,R[18],E,E,157,[[[T],["self"]]]],[11,R[12],E,E,157,[[[U]],[R[13]]]],[11,R[14],E,E,157,[[],[R[13]]]],[11,R[15],E,E,157,[[["self"]],[T]]],[11,R[41],E,E,157,[[["self"]],[T]]],[11,R[19],E,E,157,[[["self"]],[R[42]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[17],E,E,158,[[["self"]],[T]]],[11,R[18],E,E,158,[[[T],["self"]]]],[11,R[12],E,E,158,[[[U]],[R[13]]]],[11,R[14],E,E,158,[[],[R[13]]]],[11,R[15],E,E,158,[[["self"]],[T]]],[11,R[41],E,E,158,[[["self"]],[T]]],[11,R[19],E,E,158,[[["self"]],[R[42]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[17],E,E,159,[[["self"]],[T]]],[11,R[18],E,E,159,[[[T],["self"]]]],[11,R[12],E,E,159,[[[U]],[R[13]]]],[11,R[14],E,E,159,[[],[R[13]]]],[11,R[15],E,E,159,[[["self"]],[T]]],[11,R[41],E,E,159,[[["self"]],[T]]],[11,R[19],E,E,159,[[["self"]],[R[42]]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[17],E,E,160,[[["self"]],[T]]],[11,R[18],E,E,160,[[[T],["self"]]]],[11,R[12],E,E,160,[[[U]],[R[13]]]],[11,R[14],E,E,160,[[],[R[13]]]],[11,R[15],E,E,160,[[["self"]],[T]]],[11,R[41],E,E,160,[[["self"]],[T]]],[11,R[19],E,E,160,[[["self"]],[R[42]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[17],E,E,161,[[["self"]],[T]]],[11,R[18],E,E,161,[[[T],["self"]]]],[11,R[12],E,E,161,[[[U]],[R[13]]]],[11,R[14],E,E,161,[[],[R[13]]]],[11,R[15],E,E,161,[[["self"]],[T]]],[11,R[41],E,E,161,[[["self"]],[T]]],[11,R[19],E,E,161,[[["self"]],[R[42]]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[17],E,E,162,[[["self"]],[T]]],[11,R[18],E,E,162,[[[T],["self"]]]],[11,R[12],E,E,162,[[[U]],[R[13]]]],[11,R[14],E,E,162,[[],[R[13]]]],[11,R[15],E,E,162,[[["self"]],[T]]],[11,R[41],E,E,162,[[["self"]],[T]]],[11,R[19],E,E,162,[[["self"]],[R[42]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[17],E,E,163,[[["self"]],[T]]],[11,R[18],E,E,163,[[[T],["self"]]]],[11,R[12],E,E,163,[[[U]],[R[13]]]],[11,R[14],E,E,163,[[],[R[13]]]],[11,R[15],E,E,163,[[["self"]],[T]]],[11,R[41],E,E,163,[[["self"]],[T]]],[11,R[19],E,E,163,[[["self"]],[R[42]]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[17],E,E,164,[[["self"]],[T]]],[11,R[18],E,E,164,[[[T],["self"]]]],[11,R[12],E,E,164,[[[U]],[R[13]]]],[11,R[14],E,E,164,[[],[R[13]]]],[11,R[15],E,E,164,[[["self"]],[T]]],[11,R[41],E,E,164,[[["self"]],[T]]],[11,R[19],E,E,164,[[["self"]],[R[42]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[17],E,E,165,[[["self"]],[T]]],[11,R[18],E,E,165,[[[T],["self"]]]],[11,R[12],E,E,165,[[[U]],[R[13]]]],[11,R[14],E,E,165,[[],[R[13]]]],[11,R[15],E,E,165,[[["self"]],[T]]],[11,R[41],E,E,165,[[["self"]],[T]]],[11,R[19],E,E,165,[[["self"]],[R[42]]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[17],E,E,166,[[["self"]],[T]]],[11,R[18],E,E,166,[[[T],["self"]]]],[11,R[12],E,E,166,[[[U]],[R[13]]]],[11,R[14],E,E,166,[[],[R[13]]]],[11,R[15],E,E,166,[[["self"]],[T]]],[11,R[41],E,E,166,[[["self"]],[T]]],[11,R[19],E,E,166,[[["self"]],[R[42]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[17],E,E,167,[[["self"]],[T]]],[11,R[18],E,E,167,[[[T],["self"]]]],[11,R[12],E,E,167,[[[U]],[R[13]]]],[11,R[14],E,E,167,[[],[R[13]]]],[11,R[15],E,E,167,[[["self"]],[T]]],[11,R[41],E,E,167,[[["self"]],[T]]],[11,R[19],E,E,167,[[["self"]],[R[42]]]],[11,"from",E,E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[17],E,E,168,[[["self"]],[T]]],[11,R[18],E,E,168,[[[T],["self"]]]],[11,R[12],E,E,168,[[[U]],[R[13]]]],[11,R[14],E,E,168,[[],[R[13]]]],[11,R[15],E,E,168,[[["self"]],[T]]],[11,R[41],E,E,168,[[["self"]],[T]]],[11,R[19],E,E,168,[[["self"]],[R[42]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[17],E,E,169,[[["self"]],[T]]],[11,R[18],E,E,169,[[[T],["self"]]]],[11,R[12],E,E,169,[[[U]],[R[13]]]],[11,R[14],E,E,169,[[],[R[13]]]],[11,R[15],E,E,169,[[["self"]],[T]]],[11,R[41],E,E,169,[[["self"]],[T]]],[11,R[19],E,E,169,[[["self"]],[R[42]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[17],E,E,170,[[["self"]],[T]]],[11,R[18],E,E,170,[[[T],["self"]]]],[11,R[12],E,E,170,[[[U]],[R[13]]]],[11,R[14],E,E,170,[[],[R[13]]]],[11,R[15],E,E,170,[[["self"]],[T]]],[11,R[41],E,E,170,[[["self"]],[T]]],[11,R[19],E,E,170,[[["self"]],[R[42]]]],[11,"from",E,E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[17],E,E,171,[[["self"]],[T]]],[11,R[18],E,E,171,[[[T],["self"]]]],[11,R[12],E,E,171,[[[U]],[R[13]]]],[11,R[14],E,E,171,[[],[R[13]]]],[11,R[15],E,E,171,[[["self"]],[T]]],[11,R[41],E,E,171,[[["self"]],[T]]],[11,R[19],E,E,171,[[["self"]],[R[42]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[17],E,E,172,[[["self"]],[T]]],[11,R[18],E,E,172,[[[T],["self"]]]],[11,R[12],E,E,172,[[[U]],[R[13]]]],[11,R[14],E,E,172,[[],[R[13]]]],[11,R[15],E,E,172,[[["self"]],[T]]],[11,R[41],E,E,172,[[["self"]],[T]]],[11,R[19],E,E,172,[[["self"]],[R[42]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[17],E,E,173,[[["self"]],[T]]],[11,R[18],E,E,173,[[[T],["self"]]]],[11,R[12],E,E,173,[[[U]],[R[13]]]],[11,R[14],E,E,173,[[],[R[13]]]],[11,R[15],E,E,173,[[["self"]],[T]]],[11,R[41],E,E,173,[[["self"]],[T]]],[11,R[19],E,E,173,[[["self"]],[R[42]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[17],E,E,174,[[["self"]],[T]]],[11,R[18],E,E,174,[[[T],["self"]]]],[11,R[12],E,E,174,[[[U]],[R[13]]]],[11,R[14],E,E,174,[[],[R[13]]]],[11,R[15],E,E,174,[[["self"]],[T]]],[11,R[41],E,E,174,[[["self"]],[T]]],[11,R[19],E,E,174,[[["self"]],[R[42]]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[17],E,E,175,[[["self"]],[T]]],[11,R[18],E,E,175,[[[T],["self"]]]],[11,R[12],E,E,175,[[[U]],[R[13]]]],[11,R[14],E,E,175,[[],[R[13]]]],[11,R[15],E,E,175,[[["self"]],[T]]],[11,R[41],E,E,175,[[["self"]],[T]]],[11,R[19],E,E,175,[[["self"]],[R[42]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[17],E,E,176,[[["self"]],[T]]],[11,R[18],E,E,176,[[[T],["self"]]]],[11,R[12],E,E,176,[[[U]],[R[13]]]],[11,R[14],E,E,176,[[],[R[13]]]],[11,R[15],E,E,176,[[["self"]],[T]]],[11,R[41],E,E,176,[[["self"]],[T]]],[11,R[19],E,E,176,[[["self"]],[R[42]]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[17],E,E,177,[[["self"]],[T]]],[11,R[18],E,E,177,[[[T],["self"]]]],[11,R[12],E,E,177,[[[U]],[R[13]]]],[11,R[14],E,E,177,[[],[R[13]]]],[11,R[15],E,E,177,[[["self"]],[T]]],[11,R[41],E,E,177,[[["self"]],[T]]],[11,R[19],E,E,177,[[["self"]],[R[42]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[17],E,E,178,[[["self"]],[T]]],[11,R[18],E,E,178,[[[T],["self"]]]],[11,R[12],E,E,178,[[[U]],[R[13]]]],[11,R[14],E,E,178,[[],[R[13]]]],[11,R[15],E,E,178,[[["self"]],[T]]],[11,R[41],E,E,178,[[["self"]],[T]]],[11,R[19],E,E,178,[[["self"]],[R[42]]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[17],E,E,179,[[["self"]],[T]]],[11,R[18],E,E,179,[[[T],["self"]]]],[11,R[12],E,E,179,[[[U]],[R[13]]]],[11,R[14],E,E,179,[[],[R[13]]]],[11,R[15],E,E,179,[[["self"]],[T]]],[11,R[41],E,E,179,[[["self"]],[T]]],[11,R[19],E,E,179,[[["self"]],[R[42]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[17],E,E,180,[[["self"]],[T]]],[11,R[18],E,E,180,[[[T],["self"]]]],[11,R[12],E,E,180,[[[U]],[R[13]]]],[11,R[14],E,E,180,[[],[R[13]]]],[11,R[15],E,E,180,[[["self"]],[T]]],[11,R[41],E,E,180,[[["self"]],[T]]],[11,R[19],E,E,180,[[["self"]],[R[42]]]],[11,"from",R[1388],E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[17],E,E,101,[[["self"]],[T]]],[11,R[18],E,E,101,[[[T],["self"]]]],[11,R[12],E,E,101,[[[U]],[R[13]]]],[11,R[14],E,E,101,[[],[R[13]]]],[11,R[15],E,E,101,[[["self"]],[T]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[19],E,E,101,[[["self"]],[R[42]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[17],E,E,104,[[["self"]],[T]]],[11,R[18],E,E,104,[[[T],["self"]]]],[11,R[12],E,E,104,[[[U]],[R[13]]]],[11,R[14],E,E,104,[[],[R[13]]]],[11,R[15],E,E,104,[[["self"]],[T]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[19],E,E,104,[[["self"]],[R[42]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[17],E,E,105,[[["self"]],[T]]],[11,R[18],E,E,105,[[[T],["self"]]]],[11,R[12],E,E,105,[[[U]],[R[13]]]],[11,R[14],E,E,105,[[],[R[13]]]],[11,R[15],E,E,105,[[["self"]],[T]]],[11,R[41],E,E,105,[[["self"]],[T]]],[11,R[19],E,E,105,[[["self"]],[R[42]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[17],E,E,102,[[["self"]],[T]]],[11,R[18],E,E,102,[[[T],["self"]]]],[11,R[12],E,E,102,[[[U]],[R[13]]]],[11,R[14],E,E,102,[[],[R[13]]]],[11,R[15],E,E,102,[[["self"]],[T]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[19],E,E,102,[[["self"]],[R[42]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[17],E,E,103,[[["self"]],[T]]],[11,R[18],E,E,103,[[[T],["self"]]]],[11,R[12],E,E,103,[[[U]],[R[13]]]],[11,R[14],E,E,103,[[],[R[13]]]],[11,R[15],E,E,103,[[["self"]],[T]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[19],E,E,103,[[["self"]],[R[42]]]],[11,"from",R[1389],E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[17],E,E,106,[[["self"]],[T]]],[11,R[18],E,E,106,[[[T],["self"]]]],[11,R[12],E,E,106,[[[U]],[R[13]]]],[11,R[14],E,E,106,[[],[R[13]]]],[11,R[15],E,E,106,[[["self"]],[T]]],[11,R[41],E,E,106,[[["self"]],[T]]],[11,R[19],E,E,106,[[["self"]],[R[42]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[17],E,E,107,[[["self"]],[T]]],[11,R[18],E,E,107,[[[T],["self"]]]],[11,R[12],E,E,107,[[[U]],[R[13]]]],[11,R[14],E,E,107,[[],[R[13]]]],[11,R[15],E,E,107,[[["self"]],[T]]],[11,R[41],E,E,107,[[["self"]],[T]]],[11,R[19],E,E,107,[[["self"]],[R[42]]]],[11,"from",R[1390],E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[17],E,E,108,[[["self"]],[T]]],[11,R[18],E,E,108,[[[T],["self"]]]],[11,R[12],E,E,108,[[[U]],[R[13]]]],[11,R[14],E,E,108,[[],[R[13]]]],[11,R[15],E,E,108,[[["self"]],[T]]],[11,R[41],E,E,108,[[["self"]],[T]]],[11,R[19],E,E,108,[[["self"]],[R[42]]]],[11,"from",R[1391],E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[17],E,E,109,[[["self"]],[T]]],[11,R[18],E,E,109,[[[T],["self"]]]],[11,R[12],E,E,109,[[[U]],[R[13]]]],[11,R[14],E,E,109,[[],[R[13]]]],[11,R[15],E,E,109,[[["self"]],[T]]],[11,R[41],E,E,109,[[["self"]],[T]]],[11,R[19],E,E,109,[[["self"]],[R[42]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[17],E,E,115,[[["self"]],[T]]],[11,R[18],E,E,115,[[[T],["self"]]]],[11,R[12],E,E,115,[[[U]],[R[13]]]],[11,R[14],E,E,115,[[],[R[13]]]],[11,R[15],E,E,115,[[["self"]],[T]]],[11,R[41],E,E,115,[[["self"]],[T]]],[11,R[19],E,E,115,[[["self"]],[R[42]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[17],E,E,116,[[["self"]],[T]]],[11,R[18],E,E,116,[[[T],["self"]]]],[11,R[12],E,E,116,[[[U]],[R[13]]]],[11,R[14],E,E,116,[[],[R[13]]]],[11,R[15],E,E,116,[[["self"]],[T]]],[11,R[41],E,E,116,[[["self"]],[T]]],[11,R[19],E,E,116,[[["self"]],[R[42]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[17],E,E,117,[[["self"]],[T]]],[11,R[18],E,E,117,[[[T],["self"]]]],[11,R[12],E,E,117,[[[U]],[R[13]]]],[11,R[14],E,E,117,[[],[R[13]]]],[11,R[15],E,E,117,[[["self"]],[T]]],[11,R[41],E,E,117,[[["self"]],[T]]],[11,R[19],E,E,117,[[["self"]],[R[42]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[17],E,E,118,[[["self"]],[T]]],[11,R[18],E,E,118,[[[T],["self"]]]],[11,R[12],E,E,118,[[[U]],[R[13]]]],[11,R[14],E,E,118,[[],[R[13]]]],[11,R[15],E,E,118,[[["self"]],[T]]],[11,R[41],E,E,118,[[["self"]],[T]]],[11,R[19],E,E,118,[[["self"]],[R[42]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[17],E,E,110,[[["self"]],[T]]],[11,R[18],E,E,110,[[[T],["self"]]]],[11,R[12],E,E,110,[[[U]],[R[13]]]],[11,R[14],E,E,110,[[],[R[13]]]],[11,R[15],E,E,110,[[["self"]],[T]]],[11,R[41],E,E,110,[[["self"]],[T]]],[11,R[19],E,E,110,[[["self"]],[R[42]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[17],E,E,111,[[["self"]],[T]]],[11,R[18],E,E,111,[[[T],["self"]]]],[11,R[12],E,E,111,[[[U]],[R[13]]]],[11,R[14],E,E,111,[[],[R[13]]]],[11,R[15],E,E,111,[[["self"]],[T]]],[11,R[41],E,E,111,[[["self"]],[T]]],[11,R[19],E,E,111,[[["self"]],[R[42]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[17],E,E,112,[[["self"]],[T]]],[11,R[18],E,E,112,[[[T],["self"]]]],[11,R[12],E,E,112,[[[U]],[R[13]]]],[11,R[14],E,E,112,[[],[R[13]]]],[11,R[15],E,E,112,[[["self"]],[T]]],[11,R[41],E,E,112,[[["self"]],[T]]],[11,R[19],E,E,112,[[["self"]],[R[42]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[17],E,E,113,[[["self"]],[T]]],[11,R[18],E,E,113,[[[T],["self"]]]],[11,R[12],E,E,113,[[[U]],[R[13]]]],[11,R[14],E,E,113,[[],[R[13]]]],[11,R[15],E,E,113,[[["self"]],[T]]],[11,R[41],E,E,113,[[["self"]],[T]]],[11,R[19],E,E,113,[[["self"]],[R[42]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[17],E,E,114,[[["self"]],[T]]],[11,R[18],E,E,114,[[[T],["self"]]]],[11,R[12],E,E,114,[[[U]],[R[13]]]],[11,R[14],E,E,114,[[],[R[13]]]],[11,R[15],E,E,114,[[["self"]],[T]]],[11,R[41],E,E,114,[[["self"]],[T]]],[11,R[19],E,E,114,[[["self"]],[R[42]]]],[11,R[62],R[1392],E,120,[[["self"]],["string"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[17],E,E,120,[[["self"]],[T]]],[11,R[18],E,E,120,[[[T],["self"]]]],[11,R[12],E,E,120,[[[U]],[R[13]]]],[11,R[14],E,E,120,[[],[R[13]]]],[11,R[15],E,E,120,[[["self"]],[T]]],[11,R[41],E,E,120,[[["self"]],[T]]],[11,R[19],E,E,120,[[["self"]],[R[42]]]],[11,R[62],E,E,121,[[["self"]],["string"]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[17],E,E,121,[[["self"]],[T]]],[11,R[18],E,E,121,[[[T],["self"]]]],[11,R[12],E,E,121,[[[U]],[R[13]]]],[11,R[14],E,E,121,[[],[R[13]]]],[11,R[15],E,E,121,[[["self"]],[T]]],[11,R[41],E,E,121,[[["self"]],[T]]],[11,R[19],E,E,121,[[["self"]],[R[42]]]],[11,"from",R[1393],E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[17],E,E,122,[[["self"]],[T]]],[11,R[18],E,E,122,[[[T],["self"]]]],[11,R[12],E,E,122,[[[U]],[R[13]]]],[11,R[14],E,E,122,[[],[R[13]]]],[11,R[15],E,E,122,[[["self"]],[T]]],[11,R[41],E,E,122,[[["self"]],[T]]],[11,R[19],E,E,122,[[["self"]],[R[42]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[12],E,E,123,[[[U]],[R[13]]]],[11,R[14],E,E,123,[[],[R[13]]]],[11,R[15],E,E,123,[[["self"]],[T]]],[11,R[41],E,E,123,[[["self"]],[T]]],[11,R[19],E,E,123,[[["self"]],[R[42]]]],[11,"from",R[1394],E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[17],E,E,124,[[["self"]],[T]]],[11,R[18],E,E,124,[[[T],["self"]]]],[11,R[12],E,E,124,[[[U]],[R[13]]]],[11,R[14],E,E,124,[[],[R[13]]]],[11,R[15],E,E,124,[[["self"]],[T]]],[11,R[41],E,E,124,[[["self"]],[T]]],[11,R[19],E,E,124,[[["self"]],[R[42]]]],[11,"from",R[1395],E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[17],E,E,126,[[["self"]],[T]]],[11,R[18],E,E,126,[[[T],["self"]]]],[11,R[12],E,E,126,[[[U]],[R[13]]]],[11,R[14],E,E,126,[[],[R[13]]]],[11,R[15],E,E,126,[[["self"]],[T]]],[11,R[41],E,E,126,[[["self"]],[T]]],[11,R[19],E,E,126,[[["self"]],[R[42]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[17],E,E,125,[[["self"]],[T]]],[11,R[18],E,E,125,[[[T],["self"]]]],[11,R[12],E,E,125,[[[U]],[R[13]]]],[11,R[14],E,E,125,[[],[R[13]]]],[11,R[15],E,E,125,[[["self"]],[T]]],[11,R[41],E,E,125,[[["self"]],[T]]],[11,R[19],E,E,125,[[["self"]],[R[42]]]],[11,"from",R[1518],E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[17],E,E,128,[[["self"]],[T]]],[11,R[18],E,E,128,[[[T],["self"]]]],[11,R[12],E,E,128,[[[U]],[R[13]]]],[11,R[14],E,E,128,[[],[R[13]]]],[11,R[15],E,E,128,[[["self"]],[T]]],[11,R[41],E,E,128,[[["self"]],[T]]],[11,R[19],E,E,128,[[["self"]],[R[42]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[17],E,E,129,[[["self"]],[T]]],[11,R[18],E,E,129,[[[T],["self"]]]],[11,R[12],E,E,129,[[[U]],[R[13]]]],[11,R[14],E,E,129,[[],[R[13]]]],[11,R[15],E,E,129,[[["self"]],[T]]],[11,R[41],E,E,129,[[["self"]],[T]]],[11,R[19],E,E,129,[[["self"]],[R[42]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[17],E,E,130,[[["self"]],[T]]],[11,R[18],E,E,130,[[[T],["self"]]]],[11,R[12],E,E,130,[[[U]],[R[13]]]],[11,R[14],E,E,130,[[],[R[13]]]],[11,R[15],E,E,130,[[["self"]],[T]]],[11,R[41],E,E,130,[[["self"]],[T]]],[11,R[19],E,E,130,[[["self"]],[R[42]]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[17],E,E,181,[[["self"]],[T]]],[11,R[18],E,E,181,[[[T],["self"]]]],[11,R[12],E,E,181,[[[U]],[R[13]]]],[11,R[14],E,E,181,[[],[R[13]]]],[11,R[15],E,E,181,[[["self"]],[T]]],[11,R[41],E,E,181,[[["self"]],[T]]],[11,R[19],E,E,181,[[["self"]],[R[42]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[12],E,E,127,[[[U]],[R[13]]]],[11,R[14],E,E,127,[[],[R[13]]]],[11,R[15],E,E,127,[[["self"]],[T]]],[11,R[41],E,E,127,[[["self"]],[T]]],[11,R[19],E,E,127,[[["self"]],[R[42]]]],[11,"from",R[1396],E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[17],E,E,131,[[["self"]],[T]]],[11,R[18],E,E,131,[[[T],["self"]]]],[11,R[12],E,E,131,[[[U]],[R[13]]]],[11,R[14],E,E,131,[[],[R[13]]]],[11,R[15],E,E,131,[[["self"]],[T]]],[11,R[41],E,E,131,[[["self"]],[T]]],[11,R[19],E,E,131,[[["self"]],[R[42]]]],[11,R[62],R[1357],E,137,[[["self"]],["string"]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[17],E,E,137,[[["self"]],[T]]],[11,R[18],E,E,137,[[[T],["self"]]]],[11,R[12],E,E,137,[[[U]],[R[13]]]],[11,R[14],E,E,137,[[],[R[13]]]],[11,R[15],E,E,137,[[["self"]],[T]]],[11,R[41],E,E,137,[[["self"]],[T]]],[11,R[19],E,E,137,[[["self"]],[R[42]]]],[11,R[62],E,E,138,[[["self"]],["string"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[17],E,E,138,[[["self"]],[T]]],[11,R[18],E,E,138,[[[T],["self"]]]],[11,R[12],E,E,138,[[[U]],[R[13]]]],[11,R[14],E,E,138,[[],[R[13]]]],[11,R[15],E,E,138,[[["self"]],[T]]],[11,R[41],E,E,138,[[["self"]],[T]]],[11,R[19],E,E,138,[[["self"]],[R[42]]]],[11,R[62],E,E,139,[[["self"]],["string"]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[17],E,E,139,[[["self"]],[T]]],[11,R[18],E,E,139,[[[T],["self"]]]],[11,R[12],E,E,139,[[[U]],[R[13]]]],[11,R[14],E,E,139,[[],[R[13]]]],[11,R[15],E,E,139,[[["self"]],[T]]],[11,R[41],E,E,139,[[["self"]],[T]]],[11,R[19],E,E,139,[[["self"]],[R[42]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[17],E,E,140,[[["self"]],[T]]],[11,R[18],E,E,140,[[[T],["self"]]]],[11,R[12],E,E,140,[[[U]],[R[13]]]],[11,R[14],E,E,140,[[],[R[13]]]],[11,R[15],E,E,140,[[["self"]],[T]]],[11,R[41],E,E,140,[[["self"]],[T]]],[11,R[19],E,E,140,[[["self"]],[R[42]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[17],E,E,132,[[["self"]],[T]]],[11,R[18],E,E,132,[[[T],["self"]]]],[11,R[12],E,E,132,[[[U]],[R[13]]]],[11,R[14],E,E,132,[[],[R[13]]]],[11,R[15],E,E,132,[[["self"]],[T]]],[11,R[41],E,E,132,[[["self"]],[T]]],[11,R[19],E,E,132,[[["self"]],[R[42]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[17],E,E,133,[[["self"]],[T]]],[11,R[18],E,E,133,[[[T],["self"]]]],[11,R[12],E,E,133,[[[U]],[R[13]]]],[11,R[14],E,E,133,[[],[R[13]]]],[11,R[15],E,E,133,[[["self"]],[T]]],[11,R[41],E,E,133,[[["self"]],[T]]],[11,R[19],E,E,133,[[["self"]],[R[42]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[17],E,E,134,[[["self"]],[T]]],[11,R[18],E,E,134,[[[T],["self"]]]],[11,R[12],E,E,134,[[[U]],[R[13]]]],[11,R[14],E,E,134,[[],[R[13]]]],[11,R[15],E,E,134,[[["self"]],[T]]],[11,R[41],E,E,134,[[["self"]],[T]]],[11,R[19],E,E,134,[[["self"]],[R[42]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[17],E,E,135,[[["self"]],[T]]],[11,R[18],E,E,135,[[[T],["self"]]]],[11,R[12],E,E,135,[[[U]],[R[13]]]],[11,R[14],E,E,135,[[],[R[13]]]],[11,R[15],E,E,135,[[["self"]],[T]]],[11,R[41],E,E,135,[[["self"]],[T]]],[11,R[19],E,E,135,[[["self"]],[R[42]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[17],E,E,136,[[["self"]],[T]]],[11,R[18],E,E,136,[[[T],["self"]]]],[11,R[12],E,E,136,[[[U]],[R[13]]]],[11,R[14],E,E,136,[[],[R[13]]]],[11,R[15],E,E,136,[[["self"]],[T]]],[11,R[41],E,E,136,[[["self"]],[T]]],[11,R[19],E,E,136,[[["self"]],[R[42]]]],[11,"clone",R[1388],E,101,[[["self"]],["stat"]]],[11,"clone",R[1317],E,69,[[["self"]],["msghdr"]]],[11,"clone",E,E,73,[[["self"]],[R[462]]]],[11,"clone",R[1443],E,25,[[["self"]],["winsize"]]],[11,"clone",R[1317],E,72,[[["self"]],[R[454]]]],[11,"clone",E,E,71,[[["self"]],[R[453]]]],[11,"clone",E,E,74,[[["self"]],[R[461]]]],[11,"clone",E,E,70,[[["self"]],[R[515]]]],[11,"clone",R[1386],E,65,[[["self"]],[R[463]]]],[11,"clone",R[1317],E,68,[[["self"]],["cmsghdr"]]],[11,R[262],E,E,100,[[["self"]]]],[11,"get",R[1387],E,147,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,148,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,149,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,150,[[["self"],["rawfd"]],[[R[13],["linger"]],["linger"]]]],[11,"get",E,E,155,[[["self"],["rawfd"]],[[R[13],["u8"]],["u8"]]]],[11,"get",E,E,156,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,157,[[["self"],["rawfd"]],[[R[13],["timeval"]],["timeval"]]]],[11,"get",E,E,158,[[["self"],["rawfd"]],[[R[13],["timeval"]],["timeval"]]]],[11,"get",E,E,159,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,160,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,161,[[["self"],["rawfd"]],[[R[13],["i32"]],["i32"]]]],[11,"get",E,E,162,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,163,[[["self"],["rawfd"]],[[R[1397]],[R[13],[R[1397]]]]]],[11,"get",E,E,164,[[["self"],["rawfd"]],[[R[13],["u32"]],["u32"]]]],[11,"get",E,E,165,[[["self"],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[11,"get",E,E,166,[[["self"],["rawfd"]],[[R[13],[R[9]]],[R[9]]]]],[11,"get",E,E,169,[[["self"],["rawfd"]],[[R[1427]],[R[13],[R[1427]]]]]],[11,"get",E,E,170,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,171,[[["self"],["rawfd"]],[[R[453]],[R[13],[R[453]]]]]],[11,"get",E,E,172,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,173,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,174,[[["self"],["rawfd"]],[[R[13],["u32"]],["u32"]]]],[11,"get",E,E,175,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,176,[[["self"],["rawfd"]],[["osstring"],[R[13],["osstring"]]]]],[11,"get",E,E,177,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"get",E,E,178,[[["self"],["rawfd"]],[[R[13],["bool"]],["bool"]]]],[11,"set",E,E,147,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,148,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,149,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,150,[[["self"],["rawfd"],["linger"]],[R[13]]]],[11,"set",E,E,151,[[["self"],["rawfd"],[R[1398]]],[R[13]]]],[11,"set",E,E,152,[[["self"],["rawfd"],[R[1398]]],[R[13]]]],[11,"set",E,E,153,[[["self"],["rawfd"],[R[1399]]],[R[13]]]],[11,"set",E,E,154,[[["self"],["rawfd"],[R[1399]]],[R[13]]]],[11,"set",E,E,155,[[["u8"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,156,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,157,[[["self"],["rawfd"],["timeval"]],[R[13]]]],[11,"set",E,E,158,[[["self"],["rawfd"],["timeval"]],[R[13]]]],[11,"set",E,E,159,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,160,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,162,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,164,[[["self"],["rawfd"],["u32"]],[R[13]]]],[11,"set",E,E,165,[[["self"],["rawfd"],[R[9]]],[R[13]]]],[11,"set",E,E,166,[[["self"],["rawfd"],[R[9]]],[R[13]]]],[11,"set",E,E,167,[[["self"],["rawfd"],[R[9]]],[R[13]]]],[11,"set",E,E,168,[[["self"],["rawfd"],[R[9]]],[R[13]]]],[11,"set",E,E,172,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,173,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,174,[[["self"],["rawfd"],["u32"]],[R[13]]]],[11,"set",E,E,175,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,176,[[["self"],["rawfd"],["osstring"]],[R[13]]]],[11,"set",E,E,177,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,178,[[["bool"],["self"],["rawfd"]],[R[13]]]],[11,"set",E,E,179,[[["self"],["rawfd"],[R[9]]],[R[13]]]],[11,"set",E,E,180,[[[T],["self"],["rawfd"]],[R[13]]]],[11,"seconds",R[1392],E,120,[[["i64"]],[R[513]]]],[11,R[1400],E,E,120,[[["i64"]],[R[513]]]],[11,R[1401],E,"Makes a new `TimeSpec` with given number of microseconds.",120,[[["i64"]],[R[513]]]],[11,R[1402],E,"Makes a new `TimeSpec` with given number of nanoseconds.",120,[[["i64"]],[R[513]]]],[11,R[1403],E,E,120,[[["self"]],["i64"]]],[11,R[1404],E,E,120,[[["self"]],["i64"]]],[11,R[1405],E,E,120,[[["self"]],["i64"]]],[11,R[1406],E,E,120,[[["self"]],["i64"]]],[11,"seconds",E,E,121,[[["i64"]],["timeval"]]],[11,R[1400],E,E,121,[[["i64"]],["timeval"]]],[11,R[1401],E,"Makes a new `TimeVal` with given number of microseconds.",121,[[["i64"]],["timeval"]]],[11,R[1402],E,"Makes a new `TimeVal` with given number of nanoseconds.…",121,[[["i64"]],["timeval"]]],[11,R[1403],E,E,121,[[["self"]],["i64"]]],[11,R[1404],E,E,121,[[["self"]],["i64"]]],[11,R[1405],E,E,121,[[["self"]],["i64"]]],[11,R[1406],E,E,121,[[["self"]],["i64"]]],[11,"extend",R[1407],E,8,[[["self"],[R[44]]]]],[11,"extend",E,E,9,[[["self"],[R[44]]]]],[11,"extend",E,E,10,[[["self"],[R[44]]]]],[11,"extend",E,E,11,[[["self"],[R[44]]]]],[11,"extend",E,E,12,[[["self"],[R[44]]]]],[11,"extend",E,E,13,[[["self"],[R[44]]]]],[11,"extend",R[1412],E,15,[[["self"],[R[44]]]]],[11,"extend",E,E,16,[[["self"],[R[44]]]]],[11,"extend",R[1408],E,17,[[["self"],[R[44]]]]],[11,"extend",E,E,18,[[["self"],[R[44]]]]],[11,"extend",R[1375],E,19,[[["self"],[R[44]]]]],[11,"extend",E,E,20,[[["self"],[R[44]]]]],[11,"extend",R[1376],E,22,[[["self"],[R[44]]]]],[11,"extend",R[1413],E,24,[[["self"],[R[44]]]]],[11,"extend",R[1409],E,28,[[["self"],[R[44]]]]],[11,"extend",R[1378],E,38,[[["self"],[R[44]]]]],[11,"extend",E,E,39,[[["self"],[R[44]]]]],[11,"extend",R[1379],E,41,[[["self"],[R[44]]]]],[11,"extend",R[1380],E,42,[[["self"],[R[44]]]]],[11,"extend",R[1381],E,44,[[["self"],[R[44]]]]],[11,"extend",E,E,45,[[["self"],[R[44]]]]],[11,"extend",E,E,46,[[["self"],[R[44]]]]],[11,"extend",E,E,47,[[["self"],[R[44]]]]],[11,"extend",R[1382],E,50,[[["self"],[R[44]]]]],[11,"extend",R[1383],E,53,[[["self"],[R[44]]]]],[11,"extend",R[1287],E,62,[[["self"],[R[44]]]]],[11,"extend",R[1386],E,66,[[["self"],[R[44]]]]],[11,"extend",R[1317],E,95,[[["self"],[R[44]]]]],[11,"extend",E,E,96,[[["self"],[R[44]]]]],[11,"extend",R[1388],E,104,[[["self"],[R[44]]]]],[11,"extend",E,E,105,[[["self"],[R[44]]]]],[11,"extend",R[1389],E,106,[[["self"],[R[44]]]]],[11,"extend",R[1391],E,115,[[["self"],[R[44]]]]],[11,"extend",E,E,116,[[["self"],[R[44]]]]],[11,"extend",E,E,117,[[["self"],[R[44]]]]],[11,"extend",E,E,118,[[["self"],[R[44]]]]],[11,"extend",R[1395],E,126,[[["self"],[R[44]]]]],[11,"extend",R[1518],E,128,[[["self"],[R[44]]]]],[11,"extend",E,E,129,[[["self"],[R[44]]]]],[11,"extend",R[1357],E,140,[[["self"],[R[44]]]]],[11,R[77],R[1383],E,53,[[],[R[1279]]]],[11,R[77],E,E,54,[[],["dqblk"]]],[11,R[77],R[1387],E,180,[[],["self"]]],[11,R[77],R[1389],E,106,[[],["fsflags"]]],[11,"next",R[1429],E,142,[[["self"]],[R[45]]]],[11,"next",R[1374],E,143,[[["self"]],[R[45]]]],[11,"next",R[1287],E,145,[[["self"]],[[R[45],["signal"]],["signal"]]]],[11,"next",R[1386],E,67,[[["self"]],[R[45]]]],[11,"next",R[1317],E,146,[[["self"]],[[R[1519]],[R[45],[R[1519]]]]]],[11,"clone",R[1429],E,3,[[["self"]],["entry"]]],[11,"clone",E,E,1,[[["self"]],["type"]]],[11,"clone",R[1411],E,4,[[["self"]],["errno"]]],[11,"clone",R[1407],E,8,[[["self"]],["atflags"]]],[11,"clone",E,E,9,[[["self"]],["oflag"]]],[11,"clone",E,E,10,[[["self"]],[R[1093]]]],[11,"clone",E,E,11,[[["self"]],["fdflag"]]],[11,"clone",E,E,7,[[["self"]],["flockarg"]]],[11,"clone",E,E,12,[[["self"]],[R[1068]]]],[11,"clone",E,E,13,[[["self"]],[R[1105]]]],[11,"clone",R[1374],E,14,[[["self"]],[R[1426]]]],[11,"clone",R[1412],E,15,[[["self"]],[R[1109]]]],[11,"clone",E,E,16,[[["self"]],[R[1112]]]],[11,"clone",R[1408],E,17,[[["self"]],["msflags"]]],[11,"clone",E,E,18,[[["self"]],[R[1123]]]],[11,"clone",R[1375],E,19,[[["self"]],[R[1124]]]],[11,"clone",E,E,20,[[["self"]],["fdflag"]]],[11,"clone",E,E,21,[[["self"]],["mqattr"]]],[11,"clone",R[1376],E,22,[[["self"]],[R[1140]]]],[11,"clone",R[1413],E,23,[[["self"]],["pollfd"]]],[11,"clone",E,E,24,[[["self"]],[R[1497]]]],[11,"clone",R[1443],E,26,[[["self"]],[R[1145]]]],[11,"clone",E,E,27,[[["self"]],[R[1499]]]],[11,"clone",R[1409],E,28,[[["self"]],[R[1147]]]],[11,"clone",E,E,29,[[["self"]],["cpuset"]]],[11,"clone",R[1377],E,31,[[["self"]],[R[1414]]]],[11,"clone",E,E,32,[[["self"]],[R[1171]]]],[11,"clone",E,E,33,[[["self"]],["liomode"]]],[11,"clone",E,E,34,[[["self"]],[R[1168]]]],[11,"clone",R[1378],E,38,[[["self"]],[R[1182]]]],[11,"clone",E,E,37,[[["self"]],["epollop"]]],[11,"clone",E,E,39,[[["self"]],[R[1184]]]],[11,"clone",E,E,40,[[["self"]],["epollevent"]]],[11,"clone",R[1379],E,41,[[["self"]],[R[1188]]]],[11,"clone",R[1380],E,42,[[["self"]],[R[1191]]]],[11,"clone",R[1381],E,44,[[["self"]],[R[1210]]]],[11,"clone",E,E,45,[[["self"]],[R[1221]]]],[11,"clone",E,E,43,[[["self"]],[R[1422]]]],[11,"clone",E,E,46,[[["self"]],["msflags"]]],[11,"clone",E,E,47,[[["self"]],[R[1224]]]],[11,"clone",R[1382],E,48,[[["self"]],["request"]]],[11,"clone",E,E,49,[[["self"]],["event"]]],[11,"clone",E,E,50,[[["self"]],["options"]]],[11,"clone",R[1383],E,51,[[["self"]],[R[1276]]]],[11,"clone",E,E,52,[[["self"]],["quotafmt"]]],[11,"clone",E,E,53,[[["self"]],[R[1279]]]],[11,"clone",E,E,54,[[["self"]],["dqblk"]]],[11,"clone",R[1384],E,55,[[["self"]],[R[1423]]]],[11,"clone",R[1385],E,56,[[["self"]],["fdset"]]],[11,"clone",R[1287],E,57,[[["self"]],["signal"]]],[11,"clone",E,E,145,[[["self"]],[R[1415]]]],[11,"clone",E,E,62,[[["self"]],["saflags"]]],[11,"clone",E,E,58,[[["self"]],[R[1294]]]],[11,"clone",E,E,63,[[["self"]],["sigset"]]],[11,"clone",E,E,59,[[["self"]],[R[1416]]]],[11,"clone",E,E,64,[[["self"]],[R[448]]]],[11,"clone",E,E,60,[[["self"]],[R[1170]]]],[11,"clone",E,E,61,[[["self"]],[R[517]]]],[11,"clone",R[1386],E,66,[[["self"]],[R[1301]]]],[11,"clone",E,E,67,[[["self"]],[R[1302]]]],[11,"clone",R[1317],E,82,[[["self"]],[R[1310]]]],[11,"clone",E,E,84,[[["self"]],["inetaddr"]]],[11,"clone",E,E,85,[[["self"]],["ipaddr"]]],[11,"clone",E,E,76,[[["self"]],[R[843]]]],[11,"clone",E,E,77,[[["self"]],[R[1326]]]],[11,"clone",E,E,75,[[["self"]],["unixaddr"]]],[11,"clone",E,E,83,[[["self"]],[R[515]]]],[11,"clone",E,E,79,[[["self"]],[R[1417]]]],[11,"clone",E,E,80,[[["self"]],["algaddr"]]],[11,"clone",E,E,78,[[["self"]],["linkaddr"]]],[11,"clone",R[1387],E,147,[[["self"]],["reuseaddr"]]],[11,"clone",E,E,148,[[["self"]],["reuseport"]]],[11,"clone",E,E,149,[[["self"]],["tcpnodelay"]]],[11,"clone",E,E,150,[[["self"]],["linger"]]],[11,"clone",E,E,151,[[["self"]],["ipaddmembership"]]],[11,"clone",E,E,152,[[["self"]],["ipdropmembership"]]],[11,"clone",E,E,153,[[["self"]],["ipv6addmembership"]]],[11,"clone",E,E,154,[[["self"]],["ipv6dropmembership"]]],[11,"clone",E,E,155,[[["self"]],["ipmulticastttl"]]],[11,"clone",E,E,156,[[["self"]],["ipmulticastloop"]]],[11,"clone",E,E,157,[[["self"]],["receivetimeout"]]],[11,"clone",E,E,158,[[["self"]],["sendtimeout"]]],[11,"clone",E,E,159,[[["self"]],[R[862]]]],[11,"clone",E,E,160,[[["self"]],["oobinline"]]],[11,"clone",E,E,161,[[["self"]],["socketerror"]]],[11,"clone",E,E,162,[[["self"]],[R[3491]]]],[11,"clone",E,E,163,[[["self"]],["peercredentials"]]],[11,"clone",E,E,164,[[["self"]],["tcpkeepidle"]]],[11,"clone",E,E,165,[[["self"]],["rcvbuf"]]],[11,"clone",E,E,166,[[["self"]],["sndbuf"]]],[11,"clone",E,E,167,[[["self"]],["rcvbufforce"]]],[11,"clone",E,E,168,[[["self"]],["sndbufforce"]]],[11,"clone",E,E,169,[[["self"]],[R[1427]]]],[11,"clone",E,E,170,[[["self"]],["acceptconn"]]],[11,"clone",E,E,171,[[["self"]],["originaldst"]]],[11,"clone",E,E,172,[[["self"]],["receivetimestamp"]]],[11,"clone",E,E,173,[[["self"]],["iptransparent"]]],[11,"clone",E,E,174,[[["self"]],["mark"]]],[11,"clone",E,E,175,[[["self"]],["passcred"]]],[11,"clone",E,E,176,[[["self"]],["tcpcongestion"]]],[11,"clone",E,E,177,[[["self"]],["ipv4packetinfo"]]],[11,"clone",E,E,178,[[["self"]],["ipv6recvpacketinfo"]]],[11,"clone",E,E,179,[[["self"]],["algsetaeadauthsize"]]],[11,"clone",E,E,180,[[["self"]],["algsetkey"]]],[11,"clone",R[1317],E,86,[[["self"]],[R[1427]]]],[11,"clone",E,E,87,[[["self"]],[R[1311]]]],[11,"clone",E,E,95,[[["self"]],[R[1321]]]],[11,"clone",E,E,96,[[["self"]],[R[1325]]]],[11,"clone",E,E,97,[[["self"]],[R[1397]]]],[11,"clone",E,E,98,[[["self"]],[R[1398]]]],[11,"clone",E,E,99,[[["self"]],[R[1399]]]],[11,"clone",E,E,90,[[["self"]],["socklevel"]]],[11,"clone",E,E,91,[[["self"]],[R[3116]]]],[11,"clone",R[1388],E,104,[[["self"]],["sflag"]]],[11,"clone",E,E,105,[[["self"]],["mode"]]],[11,"clone",E,E,102,[[["self"]],[R[1418]]]],[11,"clone",E,E,103,[[["self"]],[R[1419]]]],[11,"clone",R[1389],E,106,[[["self"]],["fsflags"]]],[11,"clone",E,E,107,[[["self"]],["statvfs"]]],[11,"clone",R[1390],E,108,[[["self"]],["sysinfo"]]],[11,"clone",R[1391],E,109,[[["self"]],["termios"]]],[11,"clone",E,E,110,[[["self"]],[R[1424]]]],[11,"clone",E,E,111,[[["self"]],["setarg"]]],[11,"clone",E,E,112,[[["self"]],["flusharg"]]],[11,"clone",E,E,113,[[["self"]],["flowarg"]]],[11,"clone",E,E,114,[[["self"]],[R[1425]]]],[11,"clone",E,E,115,[[["self"]],[R[1345]]]],[11,"clone",E,E,116,[[["self"]],[R[1346]]]],[11,"clone",E,E,117,[[["self"]],[R[1348]]]],[11,"clone",E,E,118,[[["self"]],[R[1349]]]],[11,"clone",R[1392],E,120,[[["self"]],[R[513]]]],[11,"clone",E,E,121,[[["self"]],["timeval"]]],[11,"clone",R[1393],E,122,[[["self"]],["remoteiovec"]]],[11,"clone",R[1394],E,124,[[["self"]],["utsname"]]],[11,"clone",R[1395],E,126,[[["self"]],[R[1354]]]],[11,"clone",E,E,125,[[["self"]],[R[1355]]]],[11,"clone",R[1518],E,128,[[["self"]],[R[1513]]]],[11,"clone",E,E,129,[[["self"]],[R[1515]]]],[11,"clone",E,E,130,[[["self"]],["inotify"]]],[11,"clone",E,E,181,[[["self"]],[R[1516]]]],[11,"clone",R[1396],E,131,[[["self"]],["ucontext"]]],[11,"clone",R[1357],E,137,[[["self"]],["uid"]]],[11,"clone",E,E,138,[[["self"]],["gid"]]],[11,"clone",E,E,139,[[["self"]],["pid"]]],[11,"clone",E,E,132,[[["self"]],[R[1420]]]],[11,"clone",E,E,133,[[["self"]],[R[1421]]]],[11,"clone",E,E,134,[[["self"]],["whence"]]],[11,"clone",E,E,135,[[["self"]],[R[1370]]]],[11,"clone",E,E,136,[[["self"]],[R[1428]]]],[11,"clone",E,E,140,[[["self"]],[R[1517]]]],[11,"clone","nix",E,0,[[["self"]],["error"]]],[11,"cmp",R[1407],E,8,[[["self"],["atflags"]],[R[47]]]],[11,"cmp",E,E,9,[[["self"],["oflag"]],[R[47]]]],[11,"cmp",E,E,10,[[[R[1093]],["self"]],[R[47]]]],[11,"cmp",E,E,11,[[["self"],["fdflag"]],[R[47]]]],[11,"cmp",E,E,12,[[["self"],[R[1068]]],[R[47]]]],[11,"cmp",E,E,13,[[["self"],[R[1105]]],[R[47]]]],[11,"cmp",R[1412],E,15,[[["self"],[R[1109]]],[R[47]]]],[11,"cmp",E,E,16,[[["self"],[R[1112]]],[R[47]]]],[11,"cmp",R[1408],E,17,[[["self"],["msflags"]],[R[47]]]],[11,"cmp",E,E,18,[[["self"],[R[1123]]],[R[47]]]],[11,"cmp",R[1375],E,19,[[["self"],[R[1124]]],[R[47]]]],[11,"cmp",E,E,20,[[["self"],["fdflag"]],[R[47]]]],[11,"cmp",R[1376],E,22,[[["self"],[R[1140]]],[R[47]]]],[11,"cmp",R[1413],E,24,[[[R[1497]],["self"]],[R[47]]]],[11,"cmp",R[1409],E,28,[[["self"],[R[1147]]],[R[47]]]],[11,"cmp",R[1377],E,31,[[["self"],[R[1414]]],[R[47]]]],[11,"cmp",E,E,32,[[["self"],[R[1171]]],[R[47]]]],[11,"cmp",E,E,33,[[["liomode"],["self"]],[R[47]]]],[11,"cmp",R[1378],E,38,[[[R[1182]],["self"]],[R[47]]]],[11,"cmp",E,E,39,[[["self"],[R[1184]]],[R[47]]]],[11,"cmp",R[1379],E,41,[[["self"],[R[1188]]],[R[47]]]],[11,"cmp",R[1380],E,42,[[["self"],[R[1191]]],[R[47]]]],[11,"cmp",R[1381],E,44,[[["self"],[R[1210]]],[R[47]]]],[11,"cmp",E,E,45,[[[R[1221]],["self"]],[R[47]]]],[11,"cmp",E,E,43,[[[R[1422]],["self"]],[R[47]]]],[11,"cmp",E,E,46,[[["msflags"],["self"]],[R[47]]]],[11,"cmp",E,E,47,[[[R[1224]],["self"]],[R[47]]]],[11,"cmp",R[1382],E,48,[[["request"],["self"]],[R[47]]]],[11,"cmp",E,E,49,[[["self"],["event"]],[R[47]]]],[11,"cmp",E,E,50,[[["self"],["options"]],[R[47]]]],[11,"cmp",R[1383],E,51,[[["self"],[R[1276]]],[R[47]]]],[11,"cmp",E,E,52,[[["self"],["quotafmt"]],[R[47]]]],[11,"cmp",E,E,53,[[["self"],[R[1279]]],[R[47]]]],[11,"cmp",R[1384],E,55,[[["self"],[R[1423]]],[R[47]]]],[11,"cmp",R[1287],E,57,[[["self"],["signal"]],[R[47]]]],[11,"cmp",E,E,62,[[["saflags"],["self"]],[R[47]]]],[11,"cmp",E,E,58,[[[R[1294]],["self"]],[R[47]]]],[11,"cmp",R[1386],E,66,[[["self"],[R[1301]]],[R[47]]]],[11,"cmp",R[1317],E,95,[[["self"],[R[1321]]],[R[47]]]],[11,"cmp",E,E,96,[[["self"],[R[1325]]],[R[47]]]],[11,"cmp",R[1388],E,104,[[["sflag"],["self"]],[R[47]]]],[11,"cmp",E,E,105,[[["self"],["mode"]],[R[47]]]],[11,"cmp",R[1389],E,106,[[["self"],["fsflags"]],[R[47]]]],[11,"cmp",R[1391],E,110,[[["self"],[R[1424]]],[R[47]]]],[11,"cmp",E,E,111,[[["self"],["setarg"]],[R[47]]]],[11,"cmp",E,E,112,[[["self"],["flusharg"]],[R[47]]]],[11,"cmp",E,E,113,[[["self"],["flowarg"]],[R[47]]]],[11,"cmp",E,E,114,[[[R[1425]],["self"]],[R[47]]]],[11,"cmp",E,E,115,[[[R[1345]],["self"]],[R[47]]]],[11,"cmp",E,E,116,[[["self"],[R[1346]]],[R[47]]]],[11,"cmp",E,E,117,[[["self"],[R[1348]]],[R[47]]]],[11,"cmp",E,E,118,[[["self"],[R[1349]]],[R[47]]]],[11,"cmp",R[1392],E,120,[[[R[513]],["self"]],[R[47]]]],[11,"cmp",E,E,121,[[["self"],["timeval"]],[R[47]]]],[11,"cmp",R[1395],E,126,[[[R[1354]],["self"]],[R[47]]]],[11,"cmp",R[1518],E,128,[[["self"],[R[1513]]],[R[47]]]],[11,"cmp",E,E,129,[[[R[1515]],["self"]],[R[47]]]],[11,"cmp",E,E,181,[[["self"],[R[1516]]],[R[47]]]],[11,"cmp",R[1357],E,140,[[[R[1517]],["self"]],[R[47]]]],[11,"from",R[1377],E,30,[[["aiocb"],["vec",["aiocb"]]],["liocb"]]],[11,"from",R[1287],E,61,[[[R[517]]],["self"]]],[11,"from",R[1317],E,97,[[["ucred"]],["self"]]],[11,"from",R[1391],E,109,[[["termios"]],["self"]]],[11,"from",E,E,110,[[["speed_t"]],[R[1424]]]],[11,"from",R[1392],E,121,[[["timeval"]],["self"]]],[11,"from","nix",E,182,[[["pid"]],["self"]]],[11,"from",E,E,0,[[["errno"]],["error"]]],[11,"from",E,E,0,[[["fromutf8error"]],["error"]]],[11,"into",R[1317],E,97,[[],["ucred"]]],[11,"drop",R[1429],E,2,[[["self"]]]],[11,"drop",E,E,142,[[["self"]]]],[11,"drop",R[1374],E,143,[[["self"]]]],[11,"drop",R[1443],E,144,[[["self"]]]],[11,"drop",R[1377],"If the `AioCb` has no remaining state in the kernel, just…",36,[[["self"]]]],[11,"drop",R[1386],E,67,[[["self"]]]],[11,R[63],R[1407],E,8,[[["self"],["atflags"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"le",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"gt",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"ge",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,R[63],E,E,9,[[["self"],["oflag"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"le",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,R[63],E,E,10,[[[R[1093]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,10,[[[R[1093]],["self"]],["bool"]]],[11,"le",E,E,10,[[[R[1093]],["self"]],["bool"]]],[11,"gt",E,E,10,[[[R[1093]],["self"]],["bool"]]],[11,"ge",E,E,10,[[[R[1093]],["self"]],["bool"]]],[11,R[63],E,E,11,[[["self"],["fdflag"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,R[63],E,E,12,[[["self"],[R[1068]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,12,[[["self"],[R[1068]]],["bool"]]],[11,"le",E,E,12,[[["self"],[R[1068]]],["bool"]]],[11,"gt",E,E,12,[[["self"],[R[1068]]],["bool"]]],[11,"ge",E,E,12,[[["self"],[R[1068]]],["bool"]]],[11,R[63],E,E,13,[[["self"],[R[1105]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,13,[[["self"],[R[1105]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[1105]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[1105]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[1105]]],["bool"]]],[11,R[63],R[1412],E,15,[[["self"],[R[1109]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,15,[[["self"],[R[1109]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[1109]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[1109]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[1109]]],["bool"]]],[11,R[63],E,E,16,[[["self"],[R[1112]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,16,[[["self"],[R[1112]]],["bool"]]],[11,"le",E,E,16,[[["self"],[R[1112]]],["bool"]]],[11,"gt",E,E,16,[[["self"],[R[1112]]],["bool"]]],[11,"ge",E,E,16,[[["self"],[R[1112]]],["bool"]]],[11,R[63],R[1408],E,17,[[["self"],["msflags"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,17,[[["self"],["msflags"]],["bool"]]],[11,"le",E,E,17,[[["self"],["msflags"]],["bool"]]],[11,"gt",E,E,17,[[["self"],["msflags"]],["bool"]]],[11,"ge",E,E,17,[[["self"],["msflags"]],["bool"]]],[11,R[63],E,E,18,[[["self"],[R[1123]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,18,[[["self"],[R[1123]]],["bool"]]],[11,"le",E,E,18,[[["self"],[R[1123]]],["bool"]]],[11,"gt",E,E,18,[[["self"],[R[1123]]],["bool"]]],[11,"ge",E,E,18,[[["self"],[R[1123]]],["bool"]]],[11,R[63],R[1375],E,19,[[["self"],[R[1124]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,19,[[["self"],[R[1124]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[1124]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[1124]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[1124]]],["bool"]]],[11,R[63],E,E,20,[[["self"],["fdflag"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,R[63],R[1376],E,22,[[["self"],[R[1140]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,22,[[["self"],[R[1140]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[1140]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[1140]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[1140]]],["bool"]]],[11,R[63],R[1413],E,24,[[[R[1497]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,24,[[[R[1497]],["self"]],["bool"]]],[11,"le",E,E,24,[[[R[1497]],["self"]],["bool"]]],[11,"gt",E,E,24,[[[R[1497]],["self"]],["bool"]]],[11,"ge",E,E,24,[[[R[1497]],["self"]],["bool"]]],[11,R[63],R[1409],E,28,[[["self"],[R[1147]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,28,[[["self"],[R[1147]]],["bool"]]],[11,"le",E,E,28,[[["self"],[R[1147]]],["bool"]]],[11,"gt",E,E,28,[[["self"],[R[1147]]],["bool"]]],[11,"ge",E,E,28,[[["self"],[R[1147]]],["bool"]]],[11,R[63],R[1377],E,31,[[["self"],[R[1414]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,32,[[["self"],[R[1171]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,33,[[["liomode"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],R[1378],E,38,[[[R[1182]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,38,[[[R[1182]],["self"]],["bool"]]],[11,"le",E,E,38,[[[R[1182]],["self"]],["bool"]]],[11,"gt",E,E,38,[[[R[1182]],["self"]],["bool"]]],[11,"ge",E,E,38,[[[R[1182]],["self"]],["bool"]]],[11,R[63],E,E,39,[[["self"],[R[1184]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,39,[[["self"],[R[1184]]],["bool"]]],[11,"le",E,E,39,[[["self"],[R[1184]]],["bool"]]],[11,"gt",E,E,39,[[["self"],[R[1184]]],["bool"]]],[11,"ge",E,E,39,[[["self"],[R[1184]]],["bool"]]],[11,R[63],R[1379],E,41,[[["self"],[R[1188]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,41,[[["self"],[R[1188]]],["bool"]]],[11,"le",E,E,41,[[["self"],[R[1188]]],["bool"]]],[11,"gt",E,E,41,[[["self"],[R[1188]]],["bool"]]],[11,"ge",E,E,41,[[["self"],[R[1188]]],["bool"]]],[11,R[63],R[1380],E,42,[[["self"],[R[1191]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,42,[[["self"],[R[1191]]],["bool"]]],[11,"le",E,E,42,[[["self"],[R[1191]]],["bool"]]],[11,"gt",E,E,42,[[["self"],[R[1191]]],["bool"]]],[11,"ge",E,E,42,[[["self"],[R[1191]]],["bool"]]],[11,R[63],R[1381],E,44,[[["self"],[R[1210]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,44,[[["self"],[R[1210]]],["bool"]]],[11,"le",E,E,44,[[["self"],[R[1210]]],["bool"]]],[11,"gt",E,E,44,[[["self"],[R[1210]]],["bool"]]],[11,"ge",E,E,44,[[["self"],[R[1210]]],["bool"]]],[11,R[63],E,E,45,[[[R[1221]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,45,[[[R[1221]],["self"]],["bool"]]],[11,"le",E,E,45,[[[R[1221]],["self"]],["bool"]]],[11,"gt",E,E,45,[[[R[1221]],["self"]],["bool"]]],[11,"ge",E,E,45,[[[R[1221]],["self"]],["bool"]]],[11,R[63],E,E,43,[[[R[1422]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,46,[[["msflags"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,46,[[["msflags"],["self"]],["bool"]]],[11,"le",E,E,46,[[["msflags"],["self"]],["bool"]]],[11,"gt",E,E,46,[[["msflags"],["self"]],["bool"]]],[11,"ge",E,E,46,[[["msflags"],["self"]],["bool"]]],[11,R[63],E,E,47,[[[R[1224]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,47,[[[R[1224]],["self"]],["bool"]]],[11,"le",E,E,47,[[[R[1224]],["self"]],["bool"]]],[11,"gt",E,E,47,[[[R[1224]],["self"]],["bool"]]],[11,"ge",E,E,47,[[[R[1224]],["self"]],["bool"]]],[11,R[63],R[1382],E,48,[[["request"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,49,[[["self"],["event"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,50,[[["self"],["options"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,50,[[["self"],["options"]],["bool"]]],[11,"le",E,E,50,[[["self"],["options"]],["bool"]]],[11,"gt",E,E,50,[[["self"],["options"]],["bool"]]],[11,"ge",E,E,50,[[["self"],["options"]],["bool"]]],[11,R[63],R[1383],E,51,[[["self"],[R[1276]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,52,[[["self"],["quotafmt"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,53,[[["self"],[R[1279]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,53,[[["self"],[R[1279]]],["bool"]]],[11,"le",E,E,53,[[["self"],[R[1279]]],["bool"]]],[11,"gt",E,E,53,[[["self"],[R[1279]]],["bool"]]],[11,"ge",E,E,53,[[["self"],[R[1279]]],["bool"]]],[11,R[63],R[1384],E,55,[[["self"],[R[1423]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],R[1287],E,57,[[["self"],["signal"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,62,[[["saflags"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,62,[[["saflags"],["self"]],["bool"]]],[11,"le",E,E,62,[[["saflags"],["self"]],["bool"]]],[11,"gt",E,E,62,[[["saflags"],["self"]],["bool"]]],[11,"ge",E,E,62,[[["saflags"],["self"]],["bool"]]],[11,R[63],E,E,58,[[[R[1294]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],R[1386],E,66,[[["self"],[R[1301]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,66,[[["self"],[R[1301]]],["bool"]]],[11,"le",E,E,66,[[["self"],[R[1301]]],["bool"]]],[11,"gt",E,E,66,[[["self"],[R[1301]]],["bool"]]],[11,"ge",E,E,66,[[["self"],[R[1301]]],["bool"]]],[11,R[63],R[1317],E,95,[[["self"],[R[1321]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,95,[[["self"],[R[1321]]],["bool"]]],[11,"le",E,E,95,[[["self"],[R[1321]]],["bool"]]],[11,"gt",E,E,95,[[["self"],[R[1321]]],["bool"]]],[11,"ge",E,E,95,[[["self"],[R[1321]]],["bool"]]],[11,R[63],E,E,96,[[["self"],[R[1325]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,96,[[["self"],[R[1325]]],["bool"]]],[11,"le",E,E,96,[[["self"],[R[1325]]],["bool"]]],[11,"gt",E,E,96,[[["self"],[R[1325]]],["bool"]]],[11,"ge",E,E,96,[[["self"],[R[1325]]],["bool"]]],[11,R[63],R[1388],E,104,[[["sflag"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"le",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"gt",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"ge",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,R[63],E,E,105,[[["self"],["mode"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"le",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"gt",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"ge",E,E,105,[[["self"],["mode"]],["bool"]]],[11,R[63],R[1389],E,106,[[["self"],["fsflags"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"le",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"gt",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"ge",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,R[63],R[1391],E,110,[[["self"],[R[1424]]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,111,[[["self"],["setarg"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,112,[[["self"],["flusharg"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,113,[[["self"],["flowarg"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,114,[[[R[1425]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,115,[[[R[1345]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,115,[[[R[1345]],["self"]],["bool"]]],[11,"le",E,E,115,[[[R[1345]],["self"]],["bool"]]],[11,"gt",E,E,115,[[[R[1345]],["self"]],["bool"]]],[11,"ge",E,E,115,[[[R[1345]],["self"]],["bool"]]],[11,R[63],E,E,116,[[["self"],[R[1346]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,116,[[["self"],[R[1346]]],["bool"]]],[11,"le",E,E,116,[[["self"],[R[1346]]],["bool"]]],[11,"gt",E,E,116,[[["self"],[R[1346]]],["bool"]]],[11,"ge",E,E,116,[[["self"],[R[1346]]],["bool"]]],[11,R[63],E,E,117,[[["self"],[R[1348]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,117,[[["self"],[R[1348]]],["bool"]]],[11,"le",E,E,117,[[["self"],[R[1348]]],["bool"]]],[11,"gt",E,E,117,[[["self"],[R[1348]]],["bool"]]],[11,"ge",E,E,117,[[["self"],[R[1348]]],["bool"]]],[11,R[63],E,E,118,[[["self"],[R[1349]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,118,[[["self"],[R[1349]]],["bool"]]],[11,"le",E,E,118,[[["self"],[R[1349]]],["bool"]]],[11,"gt",E,E,118,[[["self"],[R[1349]]],["bool"]]],[11,"ge",E,E,118,[[["self"],[R[1349]]],["bool"]]],[11,R[63],R[1392],E,120,[[[R[513]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,121,[[["self"],["timeval"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],R[1395],E,126,[[[R[1354]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,126,[[[R[1354]],["self"]],["bool"]]],[11,"le",E,E,126,[[[R[1354]],["self"]],["bool"]]],[11,"gt",E,E,126,[[[R[1354]],["self"]],["bool"]]],[11,"ge",E,E,126,[[[R[1354]],["self"]],["bool"]]],[11,R[63],R[1518],E,128,[[["self"],[R[1513]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,128,[[["self"],[R[1513]]],["bool"]]],[11,"le",E,E,128,[[["self"],[R[1513]]],["bool"]]],[11,"gt",E,E,128,[[["self"],[R[1513]]],["bool"]]],[11,"ge",E,E,128,[[["self"],[R[1513]]],["bool"]]],[11,R[63],E,E,129,[[[R[1515]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,129,[[[R[1515]],["self"]],["bool"]]],[11,"le",E,E,129,[[[R[1515]],["self"]],["bool"]]],[11,"gt",E,E,129,[[[R[1515]],["self"]],["bool"]]],[11,"ge",E,E,129,[[[R[1515]],["self"]],["bool"]]],[11,R[63],E,E,181,[[["self"],[R[1516]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,181,[[["self"],[R[1516]]],["bool"]]],[11,"le",E,E,181,[[["self"],[R[1516]]],["bool"]]],[11,"gt",E,E,181,[[["self"],[R[1516]]],["bool"]]],[11,"ge",E,E,181,[[["self"],[R[1516]]],["bool"]]],[11,R[63],R[1357],E,140,[[[R[1517]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,140,[[[R[1517]],["self"]],["bool"]]],[11,"le",E,E,140,[[[R[1517]],["self"]],["bool"]]],[11,"gt",E,E,140,[[[R[1517]],["self"]],["bool"]]],[11,"ge",E,E,140,[[[R[1517]],["self"]],["bool"]]],[11,"eq",R[1429],E,1,[[["self"],["type"]],["bool"]]],[11,"eq",R[1411],E,4,[[["self"],["errno"]],["bool"]]],[11,"eq",R[1407],E,8,[[["self"],["atflags"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"eq",E,E,10,[[[R[1093]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[1093]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[1068]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[1068]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1105]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1105]]],["bool"]]],[11,"eq",R[1374],E,14,[[["self"],[R[1426]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[1426]]],["bool"]]],[11,"eq",E,E,143,[[[R[1106]],["self"]],["bool"]]],[11,"ne",E,E,143,[[[R[1106]],["self"]],["bool"]]],[11,"eq",R[1412],E,15,[[["self"],[R[1109]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[1109]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1112]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1112]]],["bool"]]],[11,"eq",R[1408],E,17,[[["self"],["msflags"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["msflags"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[1123]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[1123]]],["bool"]]],[11,"eq",R[1375],E,19,[[["self"],[R[1124]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[1124]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["mqattr"]],["bool"]]],[11,"eq",R[1376],E,22,[[["self"],[R[1140]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1140]]],["bool"]]],[11,"eq",R[1413],E,24,[[[R[1497]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[1497]],["self"]],["bool"]]],[11,"eq",R[1409],E,28,[[["self"],[R[1147]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[1147]]],["bool"]]],[11,"eq",R[1377],E,31,[[["self"],[R[1414]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[1171]]],["bool"]]],[11,"eq",E,E,33,[[["liomode"],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[1168]]],["bool"]]],[11,"eq",R[1378],E,38,[[[R[1182]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[1182]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],["epollop"]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[1184]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[1184]]],["bool"]]],[11,"eq",R[1379],E,41,[[["self"],[R[1188]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[1188]]],["bool"]]],[11,"eq",R[1380],E,42,[[["self"],[R[1191]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[1191]]],["bool"]]],[11,"eq",R[1381],E,44,[[["self"],[R[1210]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[1210]]],["bool"]]],[11,"eq",E,E,45,[[[R[1221]],["self"]],["bool"]]],[11,"ne",E,E,45,[[[R[1221]],["self"]],["bool"]]],[11,"eq",E,E,43,[[[R[1422]],["self"]],["bool"]]],[11,"eq",E,E,46,[[["msflags"],["self"]],["bool"]]],[11,"ne",E,E,46,[[["msflags"],["self"]],["bool"]]],[11,"eq",E,E,47,[[[R[1224]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[1224]],["self"]],["bool"]]],[11,"eq",R[1382],E,48,[[["request"],["self"]],["bool"]]],[11,"eq",E,E,49,[[["self"],["event"]],["bool"]]],[11,"eq",E,E,50,[[["self"],["options"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["options"]],["bool"]]],[11,"eq",R[1383],E,51,[[["self"],[R[1276]]],["bool"]]],[11,"eq",E,E,52,[[["self"],["quotafmt"]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[1279]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[1279]]],["bool"]]],[11,"eq",R[1384],E,55,[[["self"],[R[1423]]],["bool"]]],[11,"eq",R[1287],E,57,[[["self"],["signal"]],["bool"]]],[11,"eq",E,E,62,[[["saflags"],["self"]],["bool"]]],[11,"ne",E,E,62,[[["saflags"],["self"]],["bool"]]],[11,"eq",E,E,58,[[[R[1294]],["self"]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[1416]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[1416]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[1170]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[1170]]],["bool"]]],[11,"eq",R[1386],E,66,[[["self"],[R[1301]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[1301]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[1302]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[1302]]],["bool"]]],[11,"eq",R[1317],E,82,[[["self"],[R[1310]]],["bool"]]],[11,"eq",E,E,84,[[["self"],["inetaddr"]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[843]]],["bool"]]],[11,"eq",E,E,75,[[["self"],["unixaddr"]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[515]]],["bool"]]],[11,"eq",E,E,79,[[["self"]],["bool"]]],[11,"eq",E,E,80,[[["self"]],["bool"]]],[11,"eq",E,E,78,[[["self"]],["bool"]]],[11,"eq",E,E,86,[[[R[1427]],["self"]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[1311]]],["bool"]]],[11,"eq",E,E,95,[[["self"],[R[1321]]],["bool"]]],[11,"ne",E,E,95,[[["self"],[R[1321]]],["bool"]]],[11,"eq",E,E,96,[[["self"],[R[1325]]],["bool"]]],[11,"ne",E,E,96,[[["self"],[R[1325]]],["bool"]]],[11,"eq",E,E,97,[[["self"]],["bool"]]],[11,"eq",E,E,98,[[["self"]],["bool"]]],[11,"eq",E,E,99,[[["self"]],["bool"]]],[11,"eq",E,E,90,[[["self"],["socklevel"]],["bool"]]],[11,"eq",E,E,91,[[["self"],[R[3116]]],["bool"]]],[11,"eq",R[1388],E,104,[[["sflag"],["self"]],["bool"]]],[11,"ne",E,E,104,[[["sflag"],["self"]],["bool"]]],[11,"eq",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"ne",E,E,105,[[["self"],["mode"]],["bool"]]],[11,"eq",R[1389],E,106,[[["self"],["fsflags"]],["bool"]]],[11,"ne",E,E,106,[[["self"],["fsflags"]],["bool"]]],[11,"eq",R[1391],E,110,[[["self"],[R[1424]]],["bool"]]],[11,"eq",E,E,111,[[["self"],["setarg"]],["bool"]]],[11,"eq",E,E,112,[[["self"],["flusharg"]],["bool"]]],[11,"eq",E,E,113,[[["self"],["flowarg"]],["bool"]]],[11,"eq",E,E,114,[[[R[1425]],["self"]],["bool"]]],[11,"eq",E,E,115,[[[R[1345]],["self"]],["bool"]]],[11,"ne",E,E,115,[[[R[1345]],["self"]],["bool"]]],[11,"eq",E,E,116,[[["self"],[R[1346]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[1346]]],["bool"]]],[11,"eq",E,E,117,[[["self"],[R[1348]]],["bool"]]],[11,"ne",E,E,117,[[["self"],[R[1348]]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[1349]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[1349]]],["bool"]]],[11,"eq",R[1392],E,120,[[[R[513]],["self"]],["bool"]]],[11,"eq",E,E,121,[[["self"],["timeval"]],["bool"]]],[11,"eq",R[1395],E,126,[[[R[1354]],["self"]],["bool"]]],[11,"ne",E,E,126,[[[R[1354]],["self"]],["bool"]]],[11,"eq",E,E,125,[[["self"],[R[1355]]],["bool"]]],[11,"ne",E,E,125,[[["self"],[R[1355]]],["bool"]]],[11,"eq",R[1518],E,128,[[["self"],[R[1513]]],["bool"]]],[11,"ne",E,E,128,[[["self"],[R[1513]]],["bool"]]],[11,"eq",E,E,129,[[[R[1515]],["self"]],["bool"]]],[11,"ne",E,E,129,[[[R[1515]],["self"]],["bool"]]],[11,"eq",E,E,181,[[["self"],[R[1516]]],["bool"]]],[11,"ne",E,E,181,[[["self"],[R[1516]]],["bool"]]],[11,"eq",R[1357],E,137,[[["self"],["uid"]],["bool"]]],[11,"ne",E,E,137,[[["self"],["uid"]],["bool"]]],[11,"eq",E,E,138,[[["self"],["gid"]],["bool"]]],[11,"ne",E,E,138,[[["self"],["gid"]],["bool"]]],[11,"eq",E,E,139,[[["self"],["pid"]],["bool"]]],[11,"ne",E,E,139,[[["self"],["pid"]],["bool"]]],[11,"eq",E,E,135,[[[R[1370]],["self"]],["bool"]]],[11,"eq",E,E,136,[[[R[1428]],["self"]],["bool"]]],[11,"eq",E,E,140,[[[R[1517]],["self"]],["bool"]]],[11,"ne",E,E,140,[[[R[1517]],["self"]],["bool"]]],[11,"eq","nix",E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"as_ref",R[1287],E,57,[[["self"]],["str"]]],[11,"as_ref",E,E,63,[[["self"]],[R[539]]]],[11,"as_ref",R[1392],E,120,[[["self"]],[R[513]]]],[11,"as_ref",E,E,121,[[["self"]],["timeval"]]],[11,"fmt",R[1429],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,142,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1411],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1407],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1374],E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,143,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1412],E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1408],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1375],E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1376],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1413],E,23,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1443],E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,144,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1409],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1377],E,31,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,33,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,34,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,35,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,36,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,30,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1378],E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1379],E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1380],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1381],E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,43,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1382],E,48,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,49,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1383],E,51,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,52,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,53,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1384],E,55,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1287],E,57,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,62,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,58,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,59,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,60,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,61,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1386],E,66,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,67,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,82,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,84,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,85,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,76,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,77,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,75,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,83,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,79,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,80,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,78,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1387],E,147,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,148,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,149,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,150,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,151,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,152,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,153,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,154,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,155,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,156,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,157,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,158,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,159,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,160,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,161,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,162,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,163,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,164,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,165,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,166,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,167,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,168,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,169,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,170,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,171,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,172,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,173,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,174,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,175,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,176,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,177,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,178,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,179,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,180,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,86,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,87,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,95,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,97,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,98,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,99,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,90,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,91,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1388],E,104,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,102,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,103,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1389],E,106,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1391],E,110,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,111,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,112,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,113,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,114,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,115,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,116,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,118,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1392],E,120,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,121,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1395],E,126,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,125,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1518],E,128,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,130,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,181,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,127,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1357],E,137,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,138,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,139,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,132,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,133,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,134,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,135,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,136,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,140,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","nix",E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1411],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1287],E,57,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,84,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,85,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,76,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,77,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,75,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,83,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,79,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,80,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,78,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1392],E,120,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,121,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1357],E,137,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,138,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,139,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","nix",E,0,[[["self"],[R[30]]],[R[13]]]],[11,R[551],R[1287],E,57,[[["str"]],[["signal"],[R[13],["signal"]]]]],[11,"add",R[1392],E,120,[[[R[513]]],[R[513]]]],[11,"add",E,E,121,[[["timeval"]],["timeval"]]],[11,"sub",R[1407],R[1430],8,[[["atflags"]],["atflags"]]],[11,"sub",E,R[1430],9,[[["oflag"]],["oflag"]]],[11,"sub",E,R[1430],10,[[[R[1093]]],[R[1093]]]],[11,"sub",E,R[1430],11,[[["fdflag"]],["fdflag"]]],[11,"sub",E,R[1430],12,[[[R[1068]]],[R[1068]]]],[11,"sub",E,R[1430],13,[[[R[1105]]],[R[1105]]]],[11,"sub",R[1412],R[1430],15,[[[R[1109]]],[R[1109]]]],[11,"sub",E,R[1430],16,[[[R[1112]]],[R[1112]]]],[11,"sub",R[1408],R[1430],17,[[["msflags"]],["msflags"]]],[11,"sub",E,R[1430],18,[[[R[1123]]],[R[1123]]]],[11,"sub",R[1375],R[1430],19,[[[R[1124]]],[R[1124]]]],[11,"sub",E,R[1430],20,[[["fdflag"]],["fdflag"]]],[11,"sub",R[1376],R[1430],22,[[[R[1140]]],[R[1140]]]],[11,"sub",R[1413],R[1430],24,[[[R[1497]]],[R[1497]]]],[11,"sub",R[1409],R[1430],28,[[[R[1147]]],[R[1147]]]],[11,"sub",R[1378],R[1430],38,[[[R[1182]]],[R[1182]]]],[11,"sub",E,R[1430],39,[[[R[1184]]],[R[1184]]]],[11,"sub",R[1379],R[1430],41,[[[R[1188]]],[R[1188]]]],[11,"sub",R[1380],R[1430],42,[[[R[1191]]],[R[1191]]]],[11,"sub",R[1381],R[1430],44,[[[R[1210]]],[R[1210]]]],[11,"sub",E,R[1430],45,[[[R[1221]]],[R[1221]]]],[11,"sub",E,R[1430],46,[[["msflags"]],["msflags"]]],[11,"sub",E,R[1430],47,[[[R[1224]]],[R[1224]]]],[11,"sub",R[1382],R[1430],50,[[["options"]],["options"]]],[11,"sub",R[1383],R[1430],53,[[[R[1279]]],[R[1279]]]],[11,"sub",R[1287],R[1430],62,[[["saflags"]],["saflags"]]],[11,"sub",R[1386],R[1430],66,[[[R[1301]]],[R[1301]]]],[11,"sub",R[1317],R[1430],95,[[[R[1321]]],[R[1321]]]],[11,"sub",E,R[1430],96,[[[R[1325]]],[R[1325]]]],[11,"sub",R[1388],R[1430],104,[[["sflag"]],["sflag"]]],[11,"sub",E,R[1430],105,[[["mode"]],["mode"]]],[11,"sub",R[1389],R[1430],106,[[["fsflags"]],["fsflags"]]],[11,"sub",R[1391],R[1430],115,[[[R[1345]]],[R[1345]]]],[11,"sub",E,R[1430],116,[[[R[1346]]],[R[1346]]]],[11,"sub",E,R[1430],117,[[[R[1348]]],[R[1348]]]],[11,"sub",E,R[1430],118,[[[R[1349]]],[R[1349]]]],[11,"sub",R[1392],E,120,[[[R[513]]],[R[513]]]],[11,"sub",E,E,121,[[["timeval"]],["timeval"]]],[11,"sub",R[1395],R[1430],126,[[[R[1354]]],[R[1354]]]],[11,"sub",R[1518],R[1430],128,[[[R[1513]]],[R[1513]]]],[11,"sub",E,R[1430],129,[[[R[1515]]],[R[1515]]]],[11,"sub",R[1357],R[1430],140,[[[R[1517]]],[R[1517]]]],[11,"mul",R[1392],E,120,[[["i32"]],[R[513]]]],[11,"mul",E,E,121,[[["i32"]],["timeval"]]],[11,"div",E,E,120,[[["i32"]],[R[513]]]],[11,"div",E,E,121,[[["i32"]],["timeval"]]],[11,"neg",E,E,120,[[],[R[513]]]],[11,"neg",E,E,121,[[],["timeval"]]],[11,R[1432],R[1407],R[1431],8,[[["self"],["atflags"]]]],[11,R[1432],E,R[1431],9,[[["self"],["oflag"]]]],[11,R[1432],E,R[1431],10,[[["self"],[R[1093]]]]],[11,R[1432],E,R[1431],11,[[["self"],["fdflag"]]]],[11,R[1432],E,R[1431],12,[[["self"],[R[1068]]]]],[11,R[1432],E,R[1431],13,[[["self"],[R[1105]]]]],[11,R[1432],R[1412],R[1431],15,[[["self"],[R[1109]]]]],[11,R[1432],E,R[1431],16,[[["self"],[R[1112]]]]],[11,R[1432],R[1408],R[1431],17,[[["self"],["msflags"]]]],[11,R[1432],E,R[1431],18,[[["self"],[R[1123]]]]],[11,R[1432],R[1375],R[1431],19,[[["self"],[R[1124]]]]],[11,R[1432],E,R[1431],20,[[["self"],["fdflag"]]]],[11,R[1432],R[1376],R[1431],22,[[["self"],[R[1140]]]]],[11,R[1432],R[1413],R[1431],24,[[["self"],[R[1497]]]]],[11,R[1432],R[1409],R[1431],28,[[["self"],[R[1147]]]]],[11,R[1432],R[1378],R[1431],38,[[["self"],[R[1182]]]]],[11,R[1432],E,R[1431],39,[[["self"],[R[1184]]]]],[11,R[1432],R[1379],R[1431],41,[[["self"],[R[1188]]]]],[11,R[1432],R[1380],R[1431],42,[[["self"],[R[1191]]]]],[11,R[1432],R[1381],R[1431],44,[[["self"],[R[1210]]]]],[11,R[1432],E,R[1431],45,[[["self"],[R[1221]]]]],[11,R[1432],E,R[1431],46,[[["self"],["msflags"]]]],[11,R[1432],E,R[1431],47,[[["self"],[R[1224]]]]],[11,R[1432],R[1382],R[1431],50,[[["self"],["options"]]]],[11,R[1432],R[1383],R[1431],53,[[["self"],[R[1279]]]]],[11,R[1432],R[1287],R[1431],62,[[["self"],["saflags"]]]],[11,R[1432],R[1386],R[1431],66,[[["self"],[R[1301]]]]],[11,R[1432],R[1317],R[1431],95,[[["self"],[R[1321]]]]],[11,R[1432],E,R[1431],96,[[["self"],[R[1325]]]]],[11,R[1432],R[1388],R[1431],104,[[["self"],["sflag"]]]],[11,R[1432],E,R[1431],105,[[["self"],["mode"]]]],[11,R[1432],R[1389],R[1431],106,[[["self"],["fsflags"]]]],[11,R[1432],R[1391],R[1431],115,[[["self"],[R[1345]]]]],[11,R[1432],E,R[1431],116,[[["self"],[R[1346]]]]],[11,R[1432],E,R[1431],117,[[["self"],[R[1348]]]]],[11,R[1432],E,R[1431],118,[[["self"],[R[1349]]]]],[11,R[1432],R[1395],R[1431],126,[[["self"],[R[1354]]]]],[11,R[1432],R[1518],R[1431],128,[[["self"],[R[1513]]]]],[11,R[1432],E,R[1431],129,[[["self"],[R[1515]]]]],[11,R[1432],R[1357],R[1431],140,[[["self"],[R[1517]]]]],[11,"not",R[1407],R[1433],8,[[],["atflags"]]],[11,"not",E,R[1433],9,[[],["oflag"]]],[11,"not",E,R[1433],10,[[],[R[1093]]]],[11,"not",E,R[1433],11,[[],["fdflag"]]],[11,"not",E,R[1433],12,[[],[R[1068]]]],[11,"not",E,R[1433],13,[[],[R[1105]]]],[11,"not",R[1412],R[1433],15,[[],[R[1109]]]],[11,"not",E,R[1433],16,[[],[R[1112]]]],[11,"not",R[1408],R[1433],17,[[],["msflags"]]],[11,"not",E,R[1433],18,[[],[R[1123]]]],[11,"not",R[1375],R[1433],19,[[],[R[1124]]]],[11,"not",E,R[1433],20,[[],["fdflag"]]],[11,"not",R[1376],R[1433],22,[[],[R[1140]]]],[11,"not",R[1413],R[1433],24,[[],[R[1497]]]],[11,"not",R[1409],R[1433],28,[[],[R[1147]]]],[11,"not",R[1378],R[1433],38,[[],[R[1182]]]],[11,"not",E,R[1433],39,[[],[R[1184]]]],[11,"not",R[1379],R[1433],41,[[],[R[1188]]]],[11,"not",R[1380],R[1433],42,[[],[R[1191]]]],[11,"not",R[1381],R[1433],44,[[],[R[1210]]]],[11,"not",E,R[1433],45,[[],[R[1221]]]],[11,"not",E,R[1433],46,[[],["msflags"]]],[11,"not",E,R[1433],47,[[],[R[1224]]]],[11,"not",R[1382],R[1433],50,[[],["options"]]],[11,"not",R[1383],R[1433],53,[[],[R[1279]]]],[11,"not",R[1287],R[1433],62,[[],["saflags"]]],[11,"not",R[1386],R[1433],66,[[],[R[1301]]]],[11,"not",R[1317],R[1433],95,[[],[R[1321]]]],[11,"not",E,R[1433],96,[[],[R[1325]]]],[11,"not",R[1388],R[1433],104,[[],["sflag"]]],[11,"not",E,R[1433],105,[[],["mode"]]],[11,"not",R[1389],R[1433],106,[[],["fsflags"]]],[11,"not",R[1391],R[1433],115,[[],[R[1345]]]],[11,"not",E,R[1433],116,[[],[R[1346]]]],[11,"not",E,R[1433],117,[[],[R[1348]]]],[11,"not",E,R[1433],118,[[],[R[1349]]]],[11,"not",R[1395],R[1433],126,[[],[R[1354]]]],[11,"not",R[1518],R[1433],128,[[],[R[1513]]]],[11,"not",E,R[1433],129,[[],[R[1515]]]],[11,"not",R[1357],R[1433],140,[[],[R[1517]]]],[11,"bitand",R[1407],R[1434],8,[[["atflags"]],["atflags"]]],[11,"bitand",E,R[1434],9,[[["oflag"]],["oflag"]]],[11,"bitand",E,R[1434],10,[[[R[1093]]],[R[1093]]]],[11,"bitand",E,R[1434],11,[[["fdflag"]],["fdflag"]]],[11,"bitand",E,R[1434],12,[[[R[1068]]],[R[1068]]]],[11,"bitand",E,R[1434],13,[[[R[1105]]],[R[1105]]]],[11,"bitand",R[1412],R[1434],15,[[[R[1109]]],[R[1109]]]],[11,"bitand",E,R[1434],16,[[[R[1112]]],[R[1112]]]],[11,"bitand",R[1408],R[1434],17,[[["msflags"]],["msflags"]]],[11,"bitand",E,R[1434],18,[[[R[1123]]],[R[1123]]]],[11,"bitand",R[1375],R[1434],19,[[[R[1124]]],[R[1124]]]],[11,"bitand",E,R[1434],20,[[["fdflag"]],["fdflag"]]],[11,"bitand",R[1376],R[1434],22,[[[R[1140]]],[R[1140]]]],[11,"bitand",R[1413],R[1434],24,[[[R[1497]]],[R[1497]]]],[11,"bitand",R[1409],R[1434],28,[[[R[1147]]],[R[1147]]]],[11,"bitand",R[1378],R[1434],38,[[[R[1182]]],[R[1182]]]],[11,"bitand",E,R[1434],39,[[[R[1184]]],[R[1184]]]],[11,"bitand",R[1379],R[1434],41,[[[R[1188]]],[R[1188]]]],[11,"bitand",R[1380],R[1434],42,[[[R[1191]]],[R[1191]]]],[11,"bitand",R[1381],R[1434],44,[[[R[1210]]],[R[1210]]]],[11,"bitand",E,R[1434],45,[[[R[1221]]],[R[1221]]]],[11,"bitand",E,R[1434],46,[[["msflags"]],["msflags"]]],[11,"bitand",E,R[1434],47,[[[R[1224]]],[R[1224]]]],[11,"bitand",R[1382],R[1434],50,[[["options"]],["options"]]],[11,"bitand",R[1383],R[1434],53,[[[R[1279]]],[R[1279]]]],[11,"bitand",R[1287],R[1434],62,[[["saflags"]],["saflags"]]],[11,"bitand",R[1386],R[1434],66,[[[R[1301]]],[R[1301]]]],[11,"bitand",R[1317],R[1434],95,[[[R[1321]]],[R[1321]]]],[11,"bitand",E,R[1434],96,[[[R[1325]]],[R[1325]]]],[11,"bitand",R[1388],R[1434],104,[[["sflag"]],["sflag"]]],[11,"bitand",E,R[1434],105,[[["mode"]],["mode"]]],[11,"bitand",R[1389],R[1434],106,[[["fsflags"]],["fsflags"]]],[11,"bitand",R[1391],R[1434],115,[[[R[1345]]],[R[1345]]]],[11,"bitand",E,R[1434],116,[[[R[1346]]],[R[1346]]]],[11,"bitand",E,R[1434],117,[[[R[1348]]],[R[1348]]]],[11,"bitand",E,R[1434],118,[[[R[1349]]],[R[1349]]]],[11,"bitand",R[1395],R[1434],126,[[[R[1354]]],[R[1354]]]],[11,"bitand",R[1518],R[1434],128,[[[R[1513]]],[R[1513]]]],[11,"bitand",E,R[1434],129,[[[R[1515]]],[R[1515]]]],[11,"bitand",R[1357],R[1434],140,[[[R[1517]]],[R[1517]]]],[11,"bitor",R[1407],R[1435],8,[[["atflags"]],["atflags"]]],[11,"bitor",E,R[1435],9,[[["oflag"]],["oflag"]]],[11,"bitor",E,R[1435],10,[[[R[1093]]],[R[1093]]]],[11,"bitor",E,R[1435],11,[[["fdflag"]],["fdflag"]]],[11,"bitor",E,R[1435],12,[[[R[1068]]],[R[1068]]]],[11,"bitor",E,R[1435],13,[[[R[1105]]],[R[1105]]]],[11,"bitor",R[1412],R[1435],15,[[[R[1109]]],[R[1109]]]],[11,"bitor",E,R[1435],16,[[[R[1112]]],[R[1112]]]],[11,"bitor",R[1408],R[1435],17,[[["msflags"]],["msflags"]]],[11,"bitor",E,R[1435],18,[[[R[1123]]],[R[1123]]]],[11,"bitor",R[1375],R[1435],19,[[[R[1124]]],[R[1124]]]],[11,"bitor",E,R[1435],20,[[["fdflag"]],["fdflag"]]],[11,"bitor",R[1376],R[1435],22,[[[R[1140]]],[R[1140]]]],[11,"bitor",R[1413],R[1435],24,[[[R[1497]]],[R[1497]]]],[11,"bitor",R[1409],R[1435],28,[[[R[1147]]],[R[1147]]]],[11,"bitor",R[1378],R[1435],38,[[[R[1182]]],[R[1182]]]],[11,"bitor",E,R[1435],39,[[[R[1184]]],[R[1184]]]],[11,"bitor",R[1379],R[1435],41,[[[R[1188]]],[R[1188]]]],[11,"bitor",R[1380],R[1435],42,[[[R[1191]]],[R[1191]]]],[11,"bitor",R[1381],R[1435],44,[[[R[1210]]],[R[1210]]]],[11,"bitor",E,R[1435],45,[[[R[1221]]],[R[1221]]]],[11,"bitor",E,R[1435],46,[[["msflags"]],["msflags"]]],[11,"bitor",E,R[1435],47,[[[R[1224]]],[R[1224]]]],[11,"bitor",R[1382],R[1435],50,[[["options"]],["options"]]],[11,"bitor",R[1383],R[1435],53,[[[R[1279]]],[R[1279]]]],[11,"bitor",R[1287],R[1435],62,[[["saflags"]],["saflags"]]],[11,"bitor",R[1386],R[1435],66,[[[R[1301]]],[R[1301]]]],[11,"bitor",R[1317],R[1435],95,[[[R[1321]]],[R[1321]]]],[11,"bitor",E,R[1435],96,[[[R[1325]]],[R[1325]]]],[11,"bitor",R[1388],R[1435],104,[[["sflag"]],["sflag"]]],[11,"bitor",E,R[1435],105,[[["mode"]],["mode"]]],[11,"bitor",R[1389],R[1435],106,[[["fsflags"]],["fsflags"]]],[11,"bitor",R[1391],R[1435],115,[[[R[1345]]],[R[1345]]]],[11,"bitor",E,R[1435],116,[[[R[1346]]],[R[1346]]]],[11,"bitor",E,R[1435],117,[[[R[1348]]],[R[1348]]]],[11,"bitor",E,R[1435],118,[[[R[1349]]],[R[1349]]]],[11,"bitor",R[1395],R[1435],126,[[[R[1354]]],[R[1354]]]],[11,"bitor",R[1518],R[1435],128,[[[R[1513]]],[R[1513]]]],[11,"bitor",E,R[1435],129,[[[R[1515]]],[R[1515]]]],[11,"bitor",R[1357],R[1435],140,[[[R[1517]]],[R[1517]]]],[11,"bitxor",R[1407],R[1436],8,[[["atflags"]],["atflags"]]],[11,"bitxor",E,R[1436],9,[[["oflag"]],["oflag"]]],[11,"bitxor",E,R[1436],10,[[[R[1093]]],[R[1093]]]],[11,"bitxor",E,R[1436],11,[[["fdflag"]],["fdflag"]]],[11,"bitxor",E,R[1436],12,[[[R[1068]]],[R[1068]]]],[11,"bitxor",E,R[1436],13,[[[R[1105]]],[R[1105]]]],[11,"bitxor",R[1412],R[1436],15,[[[R[1109]]],[R[1109]]]],[11,"bitxor",E,R[1436],16,[[[R[1112]]],[R[1112]]]],[11,"bitxor",R[1408],R[1436],17,[[["msflags"]],["msflags"]]],[11,"bitxor",E,R[1436],18,[[[R[1123]]],[R[1123]]]],[11,"bitxor",R[1375],R[1436],19,[[[R[1124]]],[R[1124]]]],[11,"bitxor",E,R[1436],20,[[["fdflag"]],["fdflag"]]],[11,"bitxor",R[1376],R[1436],22,[[[R[1140]]],[R[1140]]]],[11,"bitxor",R[1413],R[1436],24,[[[R[1497]]],[R[1497]]]],[11,"bitxor",R[1409],R[1436],28,[[[R[1147]]],[R[1147]]]],[11,"bitxor",R[1378],R[1436],38,[[[R[1182]]],[R[1182]]]],[11,"bitxor",E,R[1436],39,[[[R[1184]]],[R[1184]]]],[11,"bitxor",R[1379],R[1436],41,[[[R[1188]]],[R[1188]]]],[11,"bitxor",R[1380],R[1436],42,[[[R[1191]]],[R[1191]]]],[11,"bitxor",R[1381],R[1436],44,[[[R[1210]]],[R[1210]]]],[11,"bitxor",E,R[1436],45,[[[R[1221]]],[R[1221]]]],[11,"bitxor",E,R[1436],46,[[["msflags"]],["msflags"]]],[11,"bitxor",E,R[1436],47,[[[R[1224]]],[R[1224]]]],[11,"bitxor",R[1382],R[1436],50,[[["options"]],["options"]]],[11,"bitxor",R[1383],R[1436],53,[[[R[1279]]],[R[1279]]]],[11,"bitxor",R[1287],R[1436],62,[[["saflags"]],["saflags"]]],[11,"bitxor",R[1386],R[1436],66,[[[R[1301]]],[R[1301]]]],[11,"bitxor",R[1317],R[1436],95,[[[R[1321]]],[R[1321]]]],[11,"bitxor",E,R[1436],96,[[[R[1325]]],[R[1325]]]],[11,"bitxor",R[1388],R[1436],104,[[["sflag"]],["sflag"]]],[11,"bitxor",E,R[1436],105,[[["mode"]],["mode"]]],[11,"bitxor",R[1389],R[1436],106,[[["fsflags"]],["fsflags"]]],[11,"bitxor",R[1391],R[1436],115,[[[R[1345]]],[R[1345]]]],[11,"bitxor",E,R[1436],116,[[[R[1346]]],[R[1346]]]],[11,"bitxor",E,R[1436],117,[[[R[1348]]],[R[1348]]]],[11,"bitxor",E,R[1436],118,[[[R[1349]]],[R[1349]]]],[11,"bitxor",R[1395],R[1436],126,[[[R[1354]]],[R[1354]]]],[11,"bitxor",R[1518],R[1436],128,[[[R[1513]]],[R[1513]]]],[11,"bitxor",E,R[1436],129,[[[R[1515]]],[R[1515]]]],[11,"bitxor",R[1357],R[1436],140,[[[R[1517]]],[R[1517]]]],[11,R[1437],R[1407],R[1438],8,[[["self"],["atflags"]]]],[11,R[1437],E,R[1438],9,[[["self"],["oflag"]]]],[11,R[1437],E,R[1438],10,[[["self"],[R[1093]]]]],[11,R[1437],E,R[1438],11,[[["self"],["fdflag"]]]],[11,R[1437],E,R[1438],12,[[["self"],[R[1068]]]]],[11,R[1437],E,R[1438],13,[[["self"],[R[1105]]]]],[11,R[1437],R[1412],R[1438],15,[[["self"],[R[1109]]]]],[11,R[1437],E,R[1438],16,[[["self"],[R[1112]]]]],[11,R[1437],R[1408],R[1438],17,[[["self"],["msflags"]]]],[11,R[1437],E,R[1438],18,[[["self"],[R[1123]]]]],[11,R[1437],R[1375],R[1438],19,[[["self"],[R[1124]]]]],[11,R[1437],E,R[1438],20,[[["self"],["fdflag"]]]],[11,R[1437],R[1376],R[1438],22,[[["self"],[R[1140]]]]],[11,R[1437],R[1413],R[1438],24,[[["self"],[R[1497]]]]],[11,R[1437],R[1409],R[1438],28,[[["self"],[R[1147]]]]],[11,R[1437],R[1378],R[1438],38,[[["self"],[R[1182]]]]],[11,R[1437],E,R[1438],39,[[["self"],[R[1184]]]]],[11,R[1437],R[1379],R[1438],41,[[["self"],[R[1188]]]]],[11,R[1437],R[1380],R[1438],42,[[["self"],[R[1191]]]]],[11,R[1437],R[1381],R[1438],44,[[["self"],[R[1210]]]]],[11,R[1437],E,R[1438],45,[[["self"],[R[1221]]]]],[11,R[1437],E,R[1438],46,[[["self"],["msflags"]]]],[11,R[1437],E,R[1438],47,[[["self"],[R[1224]]]]],[11,R[1437],R[1382],R[1438],50,[[["self"],["options"]]]],[11,R[1437],R[1383],R[1438],53,[[["self"],[R[1279]]]]],[11,R[1437],R[1287],R[1438],62,[[["self"],["saflags"]]]],[11,R[1437],R[1386],R[1438],66,[[["self"],[R[1301]]]]],[11,R[1437],R[1317],R[1438],95,[[["self"],[R[1321]]]]],[11,R[1437],E,R[1438],96,[[["self"],[R[1325]]]]],[11,R[1437],R[1388],R[1438],104,[[["self"],["sflag"]]]],[11,R[1437],E,R[1438],105,[[["self"],["mode"]]]],[11,R[1437],R[1389],R[1438],106,[[["self"],["fsflags"]]]],[11,R[1437],R[1391],R[1438],115,[[["self"],[R[1345]]]]],[11,R[1437],E,R[1438],116,[[["self"],[R[1346]]]]],[11,R[1437],E,R[1438],117,[[["self"],[R[1348]]]]],[11,R[1437],E,R[1438],118,[[["self"],[R[1349]]]]],[11,R[1437],R[1395],R[1438],126,[[["self"],[R[1354]]]]],[11,R[1437],R[1518],R[1438],128,[[["self"],[R[1513]]]]],[11,R[1437],E,R[1438],129,[[["self"],[R[1515]]]]],[11,R[1437],R[1357],R[1438],140,[[["self"],[R[1517]]]]],[11,R[1439],R[1407],R[1440],8,[[["self"],["atflags"]]]],[11,R[1439],E,R[1440],9,[[["self"],["oflag"]]]],[11,R[1439],E,R[1440],10,[[["self"],[R[1093]]]]],[11,R[1439],E,R[1440],11,[[["self"],["fdflag"]]]],[11,R[1439],E,R[1440],12,[[["self"],[R[1068]]]]],[11,R[1439],E,R[1440],13,[[["self"],[R[1105]]]]],[11,R[1439],R[1412],R[1440],15,[[["self"],[R[1109]]]]],[11,R[1439],E,R[1440],16,[[["self"],[R[1112]]]]],[11,R[1439],R[1408],R[1440],17,[[["self"],["msflags"]]]],[11,R[1439],E,R[1440],18,[[["self"],[R[1123]]]]],[11,R[1439],R[1375],R[1440],19,[[["self"],[R[1124]]]]],[11,R[1439],E,R[1440],20,[[["self"],["fdflag"]]]],[11,R[1439],R[1376],R[1440],22,[[["self"],[R[1140]]]]],[11,R[1439],R[1413],R[1440],24,[[["self"],[R[1497]]]]],[11,R[1439],R[1409],R[1440],28,[[["self"],[R[1147]]]]],[11,R[1439],R[1378],R[1440],38,[[["self"],[R[1182]]]]],[11,R[1439],E,R[1440],39,[[["self"],[R[1184]]]]],[11,R[1439],R[1379],R[1440],41,[[["self"],[R[1188]]]]],[11,R[1439],R[1380],R[1440],42,[[["self"],[R[1191]]]]],[11,R[1439],R[1381],R[1440],44,[[["self"],[R[1210]]]]],[11,R[1439],E,R[1440],45,[[["self"],[R[1221]]]]],[11,R[1439],E,R[1440],46,[[["self"],["msflags"]]]],[11,R[1439],E,R[1440],47,[[["self"],[R[1224]]]]],[11,R[1439],R[1382],R[1440],50,[[["self"],["options"]]]],[11,R[1439],R[1383],R[1440],53,[[["self"],[R[1279]]]]],[11,R[1439],R[1287],R[1440],62,[[["self"],["saflags"]]]],[11,R[1439],R[1386],R[1440],66,[[["self"],[R[1301]]]]],[11,R[1439],R[1317],R[1440],95,[[["self"],[R[1321]]]]],[11,R[1439],E,R[1440],96,[[["self"],[R[1325]]]]],[11,R[1439],R[1388],R[1440],104,[[["self"],["sflag"]]]],[11,R[1439],E,R[1440],105,[[["self"],["mode"]]]],[11,R[1439],R[1389],R[1440],106,[[["self"],["fsflags"]]]],[11,R[1439],R[1391],R[1440],115,[[["self"],[R[1345]]]]],[11,R[1439],E,R[1440],116,[[["self"],[R[1346]]]]],[11,R[1439],E,R[1440],117,[[["self"],[R[1348]]]]],[11,R[1439],E,R[1440],118,[[["self"],[R[1349]]]]],[11,R[1439],R[1395],R[1440],126,[[["self"],[R[1354]]]]],[11,R[1439],R[1518],R[1440],128,[[["self"],[R[1513]]]]],[11,R[1439],E,R[1440],129,[[["self"],[R[1515]]]]],[11,R[1439],R[1357],R[1440],140,[[["self"],[R[1517]]]]],[11,R[1441],R[1407],R[1442],8,[[["self"],["atflags"]]]],[11,R[1441],E,R[1442],9,[[["self"],["oflag"]]]],[11,R[1441],E,R[1442],10,[[["self"],[R[1093]]]]],[11,R[1441],E,R[1442],11,[[["self"],["fdflag"]]]],[11,R[1441],E,R[1442],12,[[["self"],[R[1068]]]]],[11,R[1441],E,R[1442],13,[[["self"],[R[1105]]]]],[11,R[1441],R[1412],R[1442],15,[[["self"],[R[1109]]]]],[11,R[1441],E,R[1442],16,[[["self"],[R[1112]]]]],[11,R[1441],R[1408],R[1442],17,[[["self"],["msflags"]]]],[11,R[1441],E,R[1442],18,[[["self"],[R[1123]]]]],[11,R[1441],R[1375],R[1442],19,[[["self"],[R[1124]]]]],[11,R[1441],E,R[1442],20,[[["self"],["fdflag"]]]],[11,R[1441],R[1376],R[1442],22,[[["self"],[R[1140]]]]],[11,R[1441],R[1413],R[1442],24,[[["self"],[R[1497]]]]],[11,R[1441],R[1409],R[1442],28,[[["self"],[R[1147]]]]],[11,R[1441],R[1378],R[1442],38,[[["self"],[R[1182]]]]],[11,R[1441],E,R[1442],39,[[["self"],[R[1184]]]]],[11,R[1441],R[1379],R[1442],41,[[["self"],[R[1188]]]]],[11,R[1441],R[1380],R[1442],42,[[["self"],[R[1191]]]]],[11,R[1441],R[1381],R[1442],44,[[["self"],[R[1210]]]]],[11,R[1441],E,R[1442],45,[[["self"],[R[1221]]]]],[11,R[1441],E,R[1442],46,[[["self"],["msflags"]]]],[11,R[1441],E,R[1442],47,[[["self"],[R[1224]]]]],[11,R[1441],R[1382],R[1442],50,[[["self"],["options"]]]],[11,R[1441],R[1383],R[1442],53,[[["self"],[R[1279]]]]],[11,R[1441],R[1287],R[1442],62,[[["self"],["saflags"]]]],[11,R[1441],R[1386],R[1442],66,[[["self"],[R[1301]]]]],[11,R[1441],R[1317],R[1442],95,[[["self"],[R[1321]]]]],[11,R[1441],E,R[1442],96,[[["self"],[R[1325]]]]],[11,R[1441],R[1388],R[1442],104,[[["self"],["sflag"]]]],[11,R[1441],E,R[1442],105,[[["self"],["mode"]]]],[11,R[1441],R[1389],R[1442],106,[[["self"],["fsflags"]]]],[11,R[1441],R[1391],R[1442],115,[[["self"],[R[1345]]]]],[11,R[1441],E,R[1442],116,[[["self"],[R[1346]]]]],[11,R[1441],E,R[1442],117,[[["self"],[R[1348]]]]],[11,R[1441],E,R[1442],118,[[["self"],[R[1349]]]]],[11,R[1441],R[1395],R[1442],126,[[["self"],[R[1354]]]]],[11,R[1441],R[1518],R[1442],128,[[["self"],[R[1513]]]]],[11,R[1441],E,R[1442],129,[[["self"],[R[1515]]]]],[11,R[1441],R[1357],R[1442],140,[[["self"],[R[1517]]]]],[11,"hash",R[1407],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",R[1374],E,14,[[["self"],["__h"]]]],[11,"hash",E,E,143,[[["self"],["__h"]]]],[11,"hash",R[1412],E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",R[1408],E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",R[1375],E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",R[1376],E,22,[[["self"],["__h"]]]],[11,"hash",R[1413],E,24,[[["self"],["__h"]]]],[11,"hash",R[1409],E,28,[[["self"],["__h"]]]],[11,"hash",R[1377],E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",R[1378],E,38,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",R[1379],E,41,[[["self"],["__h"]]]],[11,"hash",R[1380],E,42,[[["self"],["__h"]]]],[11,"hash",R[1381],E,44,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",R[1382],E,48,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",R[1383],E,51,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",R[1384],E,55,[[["self"],["__h"]]]],[11,"hash",R[1287],E,57,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",R[1386],E,66,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",R[1317],E,82,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["h"]]]],[11,"hash",E,E,76,[[["self"],["h"]]]],[11,"hash",E,E,75,[[["self"],["h"]]]],[11,"hash",E,E,83,[[["self"],["h"]]]],[11,"hash",E,E,79,[[["self"],["h"]]]],[11,"hash",E,E,80,[[["self"],["h"]]]],[11,"hash",E,E,78,[[["self"],["h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,95,[[["self"],["__h"]]]],[11,"hash",E,E,96,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",E,E,91,[[["self"],["__h"]]]],[11,"hash",R[1388],E,104,[[["self"],["__h"]]]],[11,"hash",E,E,105,[[["self"],["__h"]]]],[11,"hash",R[1389],E,106,[[["self"],["__h"]]]],[11,"hash",R[1391],E,110,[[["self"],["__h"]]]],[11,"hash",E,E,111,[[["self"],["__h"]]]],[11,"hash",E,E,112,[[["self"],["__h"]]]],[11,"hash",E,E,113,[[["self"],["__h"]]]],[11,"hash",E,E,114,[[["self"],["__h"]]]],[11,"hash",E,E,115,[[["self"],["__h"]]]],[11,"hash",E,E,116,[[["self"],["__h"]]]],[11,"hash",E,E,117,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",R[1395],E,126,[[["self"],["__h"]]]],[11,"hash",R[1518],E,128,[[["self"],["__h"]]]],[11,"hash",E,E,129,[[["self"],["__h"]]]],[11,"hash",E,E,181,[[["self"],["__h"]]]],[11,"hash",R[1357],E,137,[[["self"],["__h"]]]],[11,"hash",E,E,138,[[["self"],["__h"]]]],[11,"hash",E,E,139,[[["self"],["__h"]]]],[11,"hash",E,E,135,[[["self"],["__h"]]]],[11,"hash",E,E,136,[[["self"],["__h"]]]],[11,"hash",E,E,140,[[["self"],["__h"]]]],[11,R[196],R[1407],E,8,[[[R[44]]],["atflags"]]],[11,R[196],E,E,9,[[[R[44]]],["oflag"]]],[11,R[196],E,E,10,[[[R[44]]],[R[1093]]]],[11,R[196],E,E,11,[[[R[44]]],["fdflag"]]],[11,R[196],E,E,12,[[[R[44]]],[R[1068]]]],[11,R[196],E,E,13,[[[R[44]]],[R[1105]]]],[11,R[196],R[1412],E,15,[[[R[44]]],[R[1109]]]],[11,R[196],E,E,16,[[[R[44]]],[R[1112]]]],[11,R[196],R[1408],E,17,[[[R[44]]],["msflags"]]],[11,R[196],E,E,18,[[[R[44]]],[R[1123]]]],[11,R[196],R[1375],E,19,[[[R[44]]],[R[1124]]]],[11,R[196],E,E,20,[[[R[44]]],["fdflag"]]],[11,R[196],R[1376],E,22,[[[R[44]]],[R[1140]]]],[11,R[196],R[1413],E,24,[[[R[44]]],[R[1497]]]],[11,R[196],R[1409],E,28,[[[R[44]]],[R[1147]]]],[11,R[196],R[1378],E,38,[[[R[44]]],[R[1182]]]],[11,R[196],E,E,39,[[[R[44]]],[R[1184]]]],[11,R[196],R[1379],E,41,[[[R[44]]],[R[1188]]]],[11,R[196],R[1380],E,42,[[[R[44]]],[R[1191]]]],[11,R[196],R[1381],E,44,[[[R[44]]],[R[1210]]]],[11,R[196],E,E,45,[[[R[44]]],[R[1221]]]],[11,R[196],E,E,46,[[[R[44]]],["msflags"]]],[11,R[196],E,E,47,[[[R[44]]],[R[1224]]]],[11,R[196],R[1382],E,50,[[[R[44]]],["options"]]],[11,R[196],R[1383],E,53,[[[R[44]]],[R[1279]]]],[11,R[196],R[1287],E,62,[[[R[44]]],["saflags"]]],[11,R[196],R[1386],E,66,[[[R[44]]],[R[1301]]]],[11,R[196],R[1317],E,95,[[[R[44]]],[R[1321]]]],[11,R[196],E,E,96,[[[R[44]]],[R[1325]]]],[11,R[196],R[1388],E,104,[[[R[44]]],["sflag"]]],[11,R[196],E,E,105,[[[R[44]]],["mode"]]],[11,R[196],R[1389],E,106,[[[R[44]]],["fsflags"]]],[11,R[196],R[1391],E,115,[[[R[44]]],[R[1345]]]],[11,R[196],E,E,116,[[[R[44]]],[R[1346]]]],[11,R[196],E,E,117,[[[R[44]]],[R[1348]]]],[11,R[196],E,E,118,[[[R[44]]],[R[1349]]]],[11,R[196],R[1395],E,126,[[[R[44]]],[R[1354]]]],[11,R[196],R[1518],E,128,[[[R[44]]],[R[1513]]]],[11,R[196],E,E,129,[[[R[44]]],[R[1515]]]],[11,R[196],R[1357],E,140,[[[R[44]]],[R[1517]]]],[11,"fmt",R[1407],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1412],E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1408],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1375],E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1376],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1413],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1409],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1378],E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1379],E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1380],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1381],E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1382],E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1383],E,53,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1287],E,62,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1386],E,66,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,95,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1388],E,104,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1389],E,106,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1391],E,115,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,116,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,118,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1395],E,126,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1518],E,128,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1357],E,140,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1407],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1412],E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1408],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1375],E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1376],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1413],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1409],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1378],E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1379],E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1380],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1381],E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1382],E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1383],E,53,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1287],E,62,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1386],E,66,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,95,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1388],E,104,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1389],E,106,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1391],E,115,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,116,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,118,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1395],E,126,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1518],E,128,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1357],E,140,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1407],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1412],E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1408],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1375],E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1376],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1413],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1409],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1378],E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1379],E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1380],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1381],E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1382],E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1383],E,53,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1287],E,62,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1386],E,66,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,95,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1388],E,104,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1389],E,106,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1391],E,115,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,116,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,118,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1395],E,126,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1518],E,128,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1357],E,140,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1407],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1412],E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1408],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1375],E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1376],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1413],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1409],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1378],E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1379],E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1380],E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1381],E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1382],E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1383],E,53,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1287],E,62,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1386],E,66,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1317],E,95,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1388],E,104,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1389],E,106,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1391],E,115,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,116,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,118,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1395],E,126,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1518],E,128,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1357],E,140,[[["self"],[R[30]]],[R[13]]]],[11,R[31],R[1411],E,4,[[["self"]],["str"]]],[11,R[31],"nix",E,0,[[["self"]],["str"]]],[11,R[853],R[1429],E,2,[[["self"]],["rawfd"]]],[11,R[853],R[1443],E,144,[[["self"]],["rawfd"]]],[11,R[853],R[1386],E,67,[[["self"]],["rawfd"]]],[11,R[853],R[1518],E,130,[[["self"]],["rawfd"]]],[11,R[854],E,E,130,[[["rawfd"]],["self"]]],[11,R[2351],R[1443],E,144,[[],["rawfd"]]]],"p":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,R[1444]],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[3,R[1445]],[3,R[1446]],[3,R[1447]],[3,R[1448]],[3,R[1449]],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,R[1450]],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,R[1451]],[3,R[1520]],[3,"CloneFlags"],[3,"CpuSet"],[3,"LioCb"],[4,R[1452]],[4,"LioOpcode"],[4,"LioMode"],[4,R[1453]],[4,"Buffer"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,R[1454]],[3,"EpollEvent"],[3,"EfdFlags"],[3,R[1455]],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,R[1456]],[4,"Request"],[4,"Event"],[3,"Options"],[4,"QuotaType"],[4,"QuotaFmt"],[3,R[1457]],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,R[1458]],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,R[515]],[3,R[453]],[3,R[454]],[3,R[462]],[3,R[461]],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,R[1459]],[3,"AlgAddr"],[3,"RecvMsg"],[4,R[1460]],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,R[1461]],[4,R[1521]],[4,R[1462]],[4,"SockLevel"],[4,R[3282]],[8,"CmsgBuffer"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,R[1463]],[3,R[1464]],[3,R[1465]],[3,"CmsgSpace"],[3,"FileStat"],[4,R[1466]],[4,R[1467]],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,R[1468]],[3,"InputFlags"],[3,R[1469]],[3,R[1470]],[3,"LocalFlags"],[8,R[1471]],[3,"TimeSpec"],[3,"TimeVal"],[3,R[1472]],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,R[1473]],[3,R[1522]],[3,R[1523]],[3,"InitFlags"],[3,"Inotify"],[3,"UContext"],[4,"ForkResult"],[4,R[1474]],[4,"Whence"],[4,R[1475]],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[3,R[1524]],[8,"NixPath"],[3,"Iter"],[3,R[1476]],[3,"PtyMaster"],[3,R[1477]],[3,R[1478]],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,R[1479]],[3,R[1480]],[3,R[1481]],[3,R[1482]],[3,R[1483]],[3,R[1484]],[3,R[1485]],[3,R[1486]],[3,"Broadcast"],[3,"OobInline"],[3,R[1487]],[3,"KeepAlive"],[3,R[1488]],[3,R[1489]],[3,"RcvBuf"],[3,"SndBuf"],[3,R[1490]],[3,R[1491]],[3,"SockType"],[3,"AcceptConn"],[3,R[1492]],[3,R[1493]],[3,R[1494]],[3,"Mark"],[3,"PassCred"],[3,R[1525]],[3,R[1503]],[3,R[1526]],[3,R[1527]],[3,"AlgSetKey"],[3,R[1528]],[6,"SessionId"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],["nodrop"]]],[11,R[118],E,"Extract the inner value.",0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,R[60],E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,"NoDrop"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],[R[9]]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],[R[9]]]]],"p":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[2284],"num_integer","Greatest common divisor and Bézout coefficients",N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[2285],E,"An iterator over binomial coefficients.",N,N],[5,"cbrt",E,R[2281],N,[[["roots"]],["roots"]]],[5,"nth_root",E,R[2279],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[2280],N,[[["roots"]],["roots"]]],[5,"div_rem",E,"Simultaneous integer division and modulus",N,[[["integer"]]]],[5,"div_floor",E,"Floored integer division",N,[[["integer"]],["integer"]]],[5,"mod_floor",E,"Floored integer modulus",N,[[["integer"]],["integer"]]],[5,R[2282],E,"Simultaneous floored integer division and modulus",N,[[["integer"]]]],[5,"div_ceil",E,"Ceiled integer division",N,[[["integer"]],["integer"]]],[5,"gcd",E,"Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["integer"]],["integer"]]],[5,"lcm",E,"Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["integer"]],["integer"]]],[5,"gcd_lcm",E,"Calculates the Greatest Common Divisor (GCD) and Lowest…",N,[[["integer"]]]],[5,"binomial",E,"Calculate the binomial coefficient.",N,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial",E,"Calculate the multinomial coefficient.",N,[[],[["integer"],["clone"]]]],[8,"Roots",E,"Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root",E,R[2279],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[2280],1,[[["self"]],["self"]]],[11,"cbrt",E,R[2281],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,"div_floor",E,"Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor",E,"Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil",E,"Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd",E,"Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm",E,"Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm",E,"Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd",E,"Greatest common divisor and Bézout coefficients.",2,[[["self"]],[R[2283]]]],[11,"extended_gcd_lcm",E,"Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides",E,"Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of",E,"Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even",E,"Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd",E,"Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem",E,"Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,R[2282],E,"Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of",E,"Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of",E,"Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new",E,"For a given n, iterate over all binomial coefficients…",3,[[[T]],["iterbinomial"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[43],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"eq",E,E,0,[[["self"],[R[2283]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2283]]],["bool"]]],[11,"fmt",E,E,0,[[[R[30]],["self"]],[R[13]]]],[11,"next",E,E,3,[[["self"]],[R[45]]]],[11,"clone",E,E,0,[[["self"]],[R[2283]]]],[11,"sqrt",E,R[2280],1,[[["self"]],["self"]]],[11,"cbrt",E,R[2281],1,[[["self"]],["self"]]]],"p":[[3,R[2284]],[8,"Roots"],[8,"Integer"],[3,R[2285]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[8,"Bounded",R[957],R[2186],N,N],[10,R[958],E,R[2187],0,[[],["self"]]],[10,R[959],E,R[2188],0,[[],["self"]]],[8,"Float",E,R[2189],N,N],[10,"nan",E,R[2190],1,[[],["self"]]],[10,"infinity",E,R[2191],1,[[],["self"]]],[10,R[960],E,R[2192],1,[[],["self"]]],[10,"neg_zero",E,R[961],1,[[],["self"]]],[10,R[958],E,R[962],1,[[],["self"]]],[10,R[963],E,R[964],1,[[],["self"]]],[11,R[82],E,R[965],1,[[],["self"]]],[10,R[959],E,R[966],1,[[],["self"]]],[10,"is_nan",E,R[2193],1,[[],["bool"]]],[10,R[967],E,R[2194],1,[[],["bool"]]],[10,R[968],E,R[2195],1,[[],["bool"]]],[10,R[969],E,R[970],1,[[],["bool"]]],[10,"classify",E,R[971],1,[[],[R[972]]]],[10,"floor",E,R[973],1,[[],["self"]]],[10,"ceil",E,R[974],1,[[],["self"]]],[10,"round",E,R[975],1,[[],["self"]]],[10,"trunc",E,R[976],1,[[],["self"]]],[10,"fract",E,R[977],1,[[],["self"]]],[10,"abs",E,R[978],1,[[],["self"]]],[10,"signum",E,R[979],1,[[],["self"]]],[10,R[980],E,R[996],1,[[],["bool"]]],[10,R[981],E,R[997],1,[[],["bool"]]],[10,"mul_add",E,R[992],1,[[],["self"]]],[10,"recip",E,R[998],1,[[],["self"]]],[10,"powi",E,R[982],1,[[["i32"]],["self"]]],[10,"powf",E,R[2196],1,[[],["self"]]],[10,"sqrt",E,R[999],1,[[],["self"]]],[10,"exp",E,R[1000],1,[[],["self"]]],[10,"exp2",E,R[1001],1,[[],["self"]]],[10,"ln",E,R[1002],1,[[],["self"]]],[10,"log",E,R[1003],1,[[],["self"]]],[10,"log2",E,R[1004],1,[[],["self"]]],[10,"log10",E,R[1005],1,[[],["self"]]],[11,R[983],E,R[1006],1,[[],["self"]]],[11,R[984],E,R[1007],1,[[],["self"]]],[10,"max",E,R[985],1,[[],["self"]]],[10,"min",E,R[986],1,[[],["self"]]],[10,"abs_sub",E,R[1008],1,[[],["self"]]],[10,"cbrt",E,R[1009],1,[[],["self"]]],[10,"hypot",E,R[1010],1,[[],["self"]]],[10,"sin",E,R[1011],1,[[],["self"]]],[10,"cos",E,R[1012],1,[[],["self"]]],[10,"tan",E,R[1013],1,[[],["self"]]],[10,"asin",E,R[1014],1,[[],["self"]]],[10,"acos",E,R[1015],1,[[],["self"]]],[10,"atan",E,R[1016],1,[[],["self"]]],[10,"atan2",E,R[1017],1,[[],["self"]]],[10,"sin_cos",E,R[1018],1,[[]]],[10,"exp_m1",E,R[1019],1,[[],["self"]]],[10,"ln_1p",E,R[1020],1,[[],["self"]]],[10,"sinh",E,R[1021],1,[[],["self"]]],[10,"cosh",E,R[1022],1,[[],["self"]]],[10,"tanh",E,R[1023],1,[[],["self"]]],[10,"asinh",E,R[1024],1,[[],["self"]]],[10,"acosh",E,R[1025],1,[[],["self"]]],[10,"atanh",E,R[1026],1,[[],["self"]]],[10,R[987],E,R[988],1,[[]]],[8,R[2271],E,E,N,N],[10,"E",E,R[2197],2,[[],["self"]]],[10,"FRAC_1_PI",E,R[2198],2,[[],["self"]]],[10,R[2199],E,R[2200],2,[[],["self"]]],[10,"FRAC_2_PI",E,R[2201],2,[[],["self"]]],[10,R[2202],E,R[2203],2,[[],["self"]]],[10,"FRAC_PI_2",E,R[2204],2,[[],["self"]]],[10,"FRAC_PI_3",E,R[2205],2,[[],["self"]]],[10,"FRAC_PI_4",E,R[2206],2,[[],["self"]]],[10,"FRAC_PI_6",E,R[2207],2,[[],["self"]]],[10,"FRAC_PI_8",E,R[2208],2,[[],["self"]]],[10,"LN_10",E,R[2209],2,[[],["self"]]],[10,"LN_2",E,R[2210],2,[[],["self"]]],[10,"LOG10_E",E,R[2211],2,[[],["self"]]],[10,"LOG2_E",E,R[2212],2,[[],["self"]]],[10,"PI",E,R[2213],2,[[],["self"]]],[10,"SQRT_2",E,R[2214],2,[[],["self"]]],[8,"Zero",E,R[2140],N,N],[10,"zero",E,R[2141],3,[[],["self"]]],[11,"set_zero",E,R[2142],3,[[["self"]]]],[10,"is_zero",E,R[2143],3,[[["self"]],["bool"]]],[8,"One",E,R[2144],N,N],[10,"one",E,R[2145],4,[[],["self"]]],[11,"set_one",E,R[2146],4,[[["self"]]]],[11,"is_one",E,R[2147],4,[[["self"]],["bool"]]],[5,"zero",E,R[2148],N,[[],[T]]],[5,"one",E,R[2149],N,[[],[T]]],[8,R[2272],E,R[2161],N,N],[10,R[1040],E,R[2162],5,[[["self"]],[R[45]]]],[8,R[2273],E,R[2163],N,N],[10,R[1041],E,R[2164],6,[[["self"]],[R[45]]]],[8,R[2274],E,R[2165],N,N],[10,R[2166],E,R[2167],7,[[["self"]],[R[45]]]],[8,R[2275],E,R[2168],N,N],[10,R[2169],E,R[2170],8,[[["self"]],[R[45]]]],[8,R[2276],E,R[2171],N,N],[10,R[2172],E,R[2173],9,[[["self"],["u32"]],[R[45]]]],[8,R[2277],E,R[2174],N,N],[10,R[2175],E,R[2176],10,[[["self"],["u32"]],[R[45]]]],[8,R[1035],E,R[2177],N,N],[10,R[2178],E,R[2179],11,[[["self"]],["self"]]],[8,R[1037],E,R[2180],N,N],[10,R[2181],E,R[2182],12,[[["self"]],["self"]]],[8,R[1036],E,R[2183],N,N],[10,R[2184],E,R[2185],13,[[["self"]],["self"]]],[8,R[2278],E,R[2156],N,N],[10,R[2157],E,R[2158],14,[[],["self"]]],[10,R[2159],E,R[2160],14,[[],["self"]]],[8,"Signed",E,R[2150],N,N],[10,"abs",E,R[1027],15,[[["self"]],["self"]]],[10,"abs_sub",E,R[1008],15,[[["self"]],["self"]]],[10,"signum",E,R[1028],15,[[["self"]],["self"]]],[10,R[2151],E,R[2152],15,[[["self"]],["bool"]]],[10,R[2153],E,R[2154],15,[[["self"]],["bool"]]],[8,"Unsigned",E,R[2155],N,N],[5,"abs",E,R[1027],N,[[[T]],[T]]],[5,"abs_sub",E,R[1008],N,[[[T]],[T]]],[5,"signum",E,R[1028],N,[[[T]],[T]]],[8,R[1033],E,R[2215],N,N],[10,"as_",E,R[2216],16,[[],[T]]],[8,R[1032],E,R[2217],N,N],[11,R[2292],E,R[2218],17,[[["isize"]],[R[45]]]],[11,"from_i8",E,R[2219],17,[[["i8"]],[R[45]]]],[11,"from_i16",E,R[2220],17,[[["i16"]],[R[45]]]],[11,"from_i32",E,R[2221],17,[[["i32"]],[R[45]]]],[10,"from_i64",E,R[2222],17,[[["i64"]],[R[45]]]],[11,"from_i128",E,R[2223],17,[[["i128"]],[R[45]]]],[11,R[2293],E,R[2224],17,[[[R[9]]],[R[45]]]],[11,"from_u8",E,R[2225],17,[[["u8"]],[R[45]]]],[11,"from_u16",E,R[2226],17,[[["u16"]],[R[45]]]],[11,"from_u32",E,R[2227],17,[[["u32"]],[R[45]]]],[10,"from_u64",E,R[2228],17,[[["u64"]],[R[45]]]],[11,"from_u128",E,R[2229],17,[[["u128"]],[R[45]]]],[11,"from_f32",E,R[2230],17,[[["f32"]],[R[45]]]],[11,"from_f64",E,R[2231],17,[[["f64"]],[R[45]]]],[8,R[1031],E,R[2232],N,N],[11,"to_isize",E,R[2233],18,[[["self"]],[["isize"],[R[45],["isize"]]]]],[11,"to_i8",E,R[2234],18,[[["self"]],[[R[45],["i8"]],["i8"]]]],[11,"to_i16",E,R[2235],18,[[["self"]],[["i16"],[R[45],["i16"]]]]],[11,"to_i32",E,R[2236],18,[[["self"]],[[R[45],["i32"]],["i32"]]]],[10,"to_i64",E,R[2237],18,[[["self"]],[["i64"],[R[45],["i64"]]]]],[11,"to_i128",E,R[2238],18,[[["self"]],[[R[45],["i128"]],["i128"]]]],[11,"to_usize",E,R[2239],18,[[["self"]],[[R[9]],[R[45],[R[9]]]]]],[11,"to_u8",E,R[2240],18,[[["self"]],[[R[45],["u8"]],["u8"]]]],[11,"to_u16",E,R[2241],18,[[["self"]],[["u16"],[R[45],["u16"]]]]],[11,"to_u32",E,R[2242],18,[[["self"]],[["u32"],[R[45],["u32"]]]]],[10,"to_u64",E,R[2243],18,[[["self"]],[["u64"],[R[45],["u64"]]]]],[11,"to_u128",E,R[2244],18,[[["self"]],[["u128"],[R[45],["u128"]]]]],[11,"to_f32",E,R[2245],18,[[["self"]],[["f32"],[R[45],["f32"]]]]],[11,"to_f64",E,R[2246],18,[[["self"]],[["f64"],[R[45],["f64"]]]]],[8,"NumCast",E,R[2247],N,N],[10,"from",E,R[2248],19,[[[T]],[R[45]]]],[5,"cast",E,R[2249],N,[[[T]],[R[45]]]],[8,"PrimInt",E,R[2250],N,N],[10,"count_ones",E,R[2251],20,[[],["u32"]]],[10,R[2252],E,R[2253],20,[[],["u32"]]],[10,R[2254],E,R[2255],20,[[],["u32"]]],[10,R[2256],E,R[2257],20,[[],["u32"]]],[10,R[2258],E,R[989],20,[[["u32"]],["self"]]],[10,R[2259],E,R[990],20,[[["u32"]],["self"]]],[10,"signed_shl",E,R[989],20,[[["u32"]],["self"]]],[10,"signed_shr",E,R[990],20,[[["u32"]],["self"]]],[10,R[2260],E,R[989],20,[[["u32"]],["self"]]],[10,R[2261],E,R[990],20,[[["u32"]],["self"]]],[10,"swap_bytes",E,R[2262],20,[[],["self"]]],[10,"from_be",E,R[2263],20,[[],["self"]]],[10,"from_le",E,R[2264],20,[[],["self"]]],[10,"to_be",E,R[2265],20,[[],["self"]]],[10,"to_le",E,R[2266],20,[[],["self"]]],[10,"pow",E,R[2267],20,[[["u32"]],["self"]]],[5,"pow",E,R[2268],N,[[[T],[R[9]]],[T]]],[5,R[2269],E,R[2270],N,[[[T],[R[9]]],[R[45]]]],[8,"Num",E,"The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr",E,E,21,N],[10,R[2294],E,"Convert from a string and radix <= 36.",21,[[["u32"],["str"]],[R[13]]]],[8,"NumOps",E,"The trait for types implementing basic numeric operations",N,N],[8,"NumRef",E,"The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum",E,"The trait for references which implement numeric…",N,N],[8,"NumAssignOps",E,"The trait for types implementing numeric assignment…",N,N],[8,"NumAssign",E,"The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef",E,"The trait for `NumAssign` types which also implement…",N,N],[4,R[1030],E,E,N,N],[13,"Empty",E,E,22,N],[13,"Invalid",E,E,22,N],[3,R[1029],E,E,N,N],[12,"kind",E,E,23,N],[5,"clamp",E,"A value bounded by a minimum and a maximum",N,[[[T]],[T]]],[0,"identities",E,E,N,N],[8,"Zero","num_traits::identities",R[2140],N,N],[10,"zero",E,R[2141],3,[[],["self"]]],[11,"set_zero",E,R[2142],3,[[["self"]]]],[10,"is_zero",E,R[2143],3,[[["self"]],["bool"]]],[8,"One",E,R[2144],N,N],[10,"one",E,R[2145],4,[[],["self"]]],[11,"set_one",E,R[2146],4,[[["self"]]]],[11,"is_one",E,R[2147],4,[[["self"]],["bool"]]],[5,"zero",E,R[2148],N,[[],[T]]],[5,"one",E,R[2149],N,[[],[T]]],[0,"sign",R[957],E,N,N],[8,"Signed","num_traits::sign",R[2150],N,N],[10,"abs",E,R[1027],15,[[["self"]],["self"]]],[10,"abs_sub",E,R[1008],15,[[["self"]],["self"]]],[10,"signum",E,R[1028],15,[[["self"]],["self"]]],[10,R[2151],E,R[2152],15,[[["self"]],["bool"]]],[10,R[2153],E,R[2154],15,[[["self"]],["bool"]]],[8,"Unsigned",E,R[2155],N,N],[5,"abs",E,R[1027],N,[[[T]],[T]]],[5,"abs_sub",E,R[1008],N,[[[T]],[T]]],[5,"signum",E,R[1028],N,[[[T]],[T]]],[0,"ops",R[957],E,N,N],[0,"saturating",R[991],E,N,N],[8,R[2278],"num_traits::ops::saturating",R[2156],N,N],[10,R[2157],E,R[2158],14,[[],["self"]]],[10,R[2159],E,R[2160],14,[[],["self"]]],[0,"checked",R[991],E,N,N],[8,R[2272],"num_traits::ops::checked",R[2161],N,N],[10,R[1040],E,R[2162],5,[[["self"]],[R[45]]]],[8,R[2273],E,R[2163],N,N],[10,R[1041],E,R[2164],6,[[["self"]],[R[45]]]],[8,R[2274],E,R[2165],N,N],[10,R[2166],E,R[2167],7,[[["self"]],[R[45]]]],[8,R[2275],E,R[2168],N,N],[10,R[2169],E,R[2170],8,[[["self"]],[R[45]]]],[8,R[2276],E,R[2171],N,N],[10,R[2172],E,R[2173],9,[[["self"],["u32"]],[R[45]]]],[8,R[2277],E,R[2174],N,N],[10,R[2175],E,R[2176],10,[[["self"],["u32"]],[R[45]]]],[0,"wrapping",R[991],E,N,N],[8,R[1035],"num_traits::ops::wrapping",R[2177],N,N],[10,R[2178],E,R[2179],11,[[["self"]],["self"]]],[8,R[1037],E,R[2180],N,N],[10,R[2181],E,R[2182],12,[[["self"]],["self"]]],[8,R[1036],E,R[2183],N,N],[10,R[2184],E,R[2185],13,[[["self"]],["self"]]],[0,"bounds",R[957],E,N,N],[8,"Bounded","num_traits::bounds",R[2186],N,N],[10,R[958],E,R[2187],0,[[],["self"]]],[10,R[959],E,R[2188],0,[[],["self"]]],[0,"float",R[957],E,N,N],[8,"Float","num_traits::float",R[2189],N,N],[10,"nan",E,R[2190],1,[[],["self"]]],[10,"infinity",E,R[2191],1,[[],["self"]]],[10,R[960],E,R[2192],1,[[],["self"]]],[10,"neg_zero",E,R[961],1,[[],["self"]]],[10,R[958],E,R[962],1,[[],["self"]]],[10,R[963],E,R[964],1,[[],["self"]]],[11,R[82],E,R[965],1,[[],["self"]]],[10,R[959],E,R[966],1,[[],["self"]]],[10,"is_nan",E,R[2193],1,[[],["bool"]]],[10,R[967],E,R[2194],1,[[],["bool"]]],[10,R[968],E,R[2195],1,[[],["bool"]]],[10,R[969],E,R[970],1,[[],["bool"]]],[10,"classify",E,R[971],1,[[],[R[972]]]],[10,"floor",E,R[973],1,[[],["self"]]],[10,"ceil",E,R[974],1,[[],["self"]]],[10,"round",E,R[975],1,[[],["self"]]],[10,"trunc",E,R[976],1,[[],["self"]]],[10,"fract",E,R[977],1,[[],["self"]]],[10,"abs",E,R[978],1,[[],["self"]]],[10,"signum",E,R[979],1,[[],["self"]]],[10,R[980],E,R[996],1,[[],["bool"]]],[10,R[981],E,R[997],1,[[],["bool"]]],[10,"mul_add",E,R[992],1,[[],["self"]]],[10,"recip",E,R[998],1,[[],["self"]]],[10,"powi",E,R[982],1,[[["i32"]],["self"]]],[10,"powf",E,R[2196],1,[[],["self"]]],[10,"sqrt",E,R[999],1,[[],["self"]]],[10,"exp",E,R[1000],1,[[],["self"]]],[10,"exp2",E,R[1001],1,[[],["self"]]],[10,"ln",E,R[1002],1,[[],["self"]]],[10,"log",E,R[1003],1,[[],["self"]]],[10,"log2",E,R[1004],1,[[],["self"]]],[10,"log10",E,R[1005],1,[[],["self"]]],[11,R[983],E,R[1006],1,[[],["self"]]],[11,R[984],E,R[1007],1,[[],["self"]]],[10,"max",E,R[985],1,[[],["self"]]],[10,"min",E,R[986],1,[[],["self"]]],[10,"abs_sub",E,R[1008],1,[[],["self"]]],[10,"cbrt",E,R[1009],1,[[],["self"]]],[10,"hypot",E,R[1010],1,[[],["self"]]],[10,"sin",E,R[1011],1,[[],["self"]]],[10,"cos",E,R[1012],1,[[],["self"]]],[10,"tan",E,R[1013],1,[[],["self"]]],[10,"asin",E,R[1014],1,[[],["self"]]],[10,"acos",E,R[1015],1,[[],["self"]]],[10,"atan",E,R[1016],1,[[],["self"]]],[10,"atan2",E,R[1017],1,[[],["self"]]],[10,"sin_cos",E,R[1018],1,[[]]],[10,"exp_m1",E,R[1019],1,[[],["self"]]],[10,"ln_1p",E,R[1020],1,[[],["self"]]],[10,"sinh",E,R[1021],1,[[],["self"]]],[10,"cosh",E,R[1022],1,[[],["self"]]],[10,"tanh",E,R[1023],1,[[],["self"]]],[10,"asinh",E,R[1024],1,[[],["self"]]],[10,"acosh",E,R[1025],1,[[],["self"]]],[10,"atanh",E,R[1026],1,[[],["self"]]],[10,R[987],E,R[988],1,[[]]],[8,R[2271],E,E,N,N],[10,"E",E,R[2197],2,[[],["self"]]],[10,"FRAC_1_PI",E,R[2198],2,[[],["self"]]],[10,R[2199],E,R[2200],2,[[],["self"]]],[10,"FRAC_2_PI",E,R[2201],2,[[],["self"]]],[10,R[2202],E,R[2203],2,[[],["self"]]],[10,"FRAC_PI_2",E,R[2204],2,[[],["self"]]],[10,"FRAC_PI_3",E,R[2205],2,[[],["self"]]],[10,"FRAC_PI_4",E,R[2206],2,[[],["self"]]],[10,"FRAC_PI_6",E,R[2207],2,[[],["self"]]],[10,"FRAC_PI_8",E,R[2208],2,[[],["self"]]],[10,"LN_10",E,R[2209],2,[[],["self"]]],[10,"LN_2",E,R[2210],2,[[],["self"]]],[10,"LOG10_E",E,R[2211],2,[[],["self"]]],[10,"LOG2_E",E,R[2212],2,[[],["self"]]],[10,"PI",E,R[2213],2,[[],["self"]]],[10,"SQRT_2",E,R[2214],2,[[],["self"]]],[0,"real",R[957],E,N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,R[958],E,R[962],24,[[],["self"]]],[10,R[963],E,R[964],24,[[],["self"]]],[10,R[82],E,R[965],24,[[],["self"]]],[10,R[959],E,R[966],24,[[],["self"]]],[10,"floor",E,R[973],24,[[],["self"]]],[10,"ceil",E,R[974],24,[[],["self"]]],[10,"round",E,R[975],24,[[],["self"]]],[10,"trunc",E,R[976],24,[[],["self"]]],[10,"fract",E,R[977],24,[[],["self"]]],[10,"abs",E,R[978],24,[[],["self"]]],[10,"signum",E,R[979],24,[[],["self"]]],[10,R[980],E,R[996],24,[[],["bool"]]],[10,R[981],E,R[997],24,[[],["bool"]]],[10,"mul_add",E,R[992],24,[[],["self"]]],[10,"recip",E,R[998],24,[[],["self"]]],[10,"powi",E,R[982],24,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a real number power.",24,[[],["self"]]],[10,"sqrt",E,R[999],24,[[],["self"]]],[10,"exp",E,R[1000],24,[[],["self"]]],[10,"exp2",E,R[1001],24,[[],["self"]]],[10,"ln",E,R[1002],24,[[],["self"]]],[10,"log",E,R[1003],24,[[],["self"]]],[10,"log2",E,R[1004],24,[[],["self"]]],[10,"log10",E,R[1005],24,[[],["self"]]],[10,R[983],E,R[1006],24,[[],["self"]]],[10,R[984],E,R[1007],24,[[],["self"]]],[10,"max",E,R[985],24,[[],["self"]]],[10,"min",E,R[986],24,[[],["self"]]],[10,"abs_sub",E,R[1008],24,[[],["self"]]],[10,"cbrt",E,R[1009],24,[[],["self"]]],[10,"hypot",E,R[1010],24,[[],["self"]]],[10,"sin",E,R[1011],24,[[],["self"]]],[10,"cos",E,R[1012],24,[[],["self"]]],[10,"tan",E,R[1013],24,[[],["self"]]],[10,"asin",E,R[1014],24,[[],["self"]]],[10,"acos",E,R[1015],24,[[],["self"]]],[10,"atan",E,R[1016],24,[[],["self"]]],[10,"atan2",E,R[1017],24,[[],["self"]]],[10,"sin_cos",E,R[1018],24,[[]]],[10,"exp_m1",E,R[1019],24,[[],["self"]]],[10,"ln_1p",E,R[1020],24,[[],["self"]]],[10,"sinh",E,R[1021],24,[[],["self"]]],[10,"cosh",E,R[1022],24,[[],["self"]]],[10,"tanh",E,R[1023],24,[[],["self"]]],[10,"asinh",E,R[1024],24,[[],["self"]]],[10,"acosh",E,R[1025],24,[[],["self"]]],[10,"atanh",E,R[1026],24,[[],["self"]]],[0,"cast",R[957],E,N,N],[8,R[1033],"num_traits::cast",R[2215],N,N],[10,"as_",E,R[2216],16,[[],[T]]],[8,R[1032],E,R[2217],N,N],[11,R[2292],E,R[2218],17,[[["isize"]],[R[45]]]],[11,"from_i8",E,R[2219],17,[[["i8"]],[R[45]]]],[11,"from_i16",E,R[2220],17,[[["i16"]],[R[45]]]],[11,"from_i32",E,R[2221],17,[[["i32"]],[R[45]]]],[10,"from_i64",E,R[2222],17,[[["i64"]],[R[45]]]],[11,"from_i128",E,R[2223],17,[[["i128"]],[R[45]]]],[11,R[2293],E,R[2224],17,[[[R[9]]],[R[45]]]],[11,"from_u8",E,R[2225],17,[[["u8"]],[R[45]]]],[11,"from_u16",E,R[2226],17,[[["u16"]],[R[45]]]],[11,"from_u32",E,R[2227],17,[[["u32"]],[R[45]]]],[10,"from_u64",E,R[2228],17,[[["u64"]],[R[45]]]],[11,"from_u128",E,R[2229],17,[[["u128"]],[R[45]]]],[11,"from_f32",E,R[2230],17,[[["f32"]],[R[45]]]],[11,"from_f64",E,R[2231],17,[[["f64"]],[R[45]]]],[8,R[1031],E,R[2232],N,N],[11,"to_isize",E,R[2233],18,[[["self"]],[["isize"],[R[45],["isize"]]]]],[11,"to_i8",E,R[2234],18,[[["self"]],[[R[45],["i8"]],["i8"]]]],[11,"to_i16",E,R[2235],18,[[["self"]],[["i16"],[R[45],["i16"]]]]],[11,"to_i32",E,R[2236],18,[[["self"]],[[R[45],["i32"]],["i32"]]]],[10,"to_i64",E,R[2237],18,[[["self"]],[["i64"],[R[45],["i64"]]]]],[11,"to_i128",E,R[2238],18,[[["self"]],[[R[45],["i128"]],["i128"]]]],[11,"to_usize",E,R[2239],18,[[["self"]],[[R[9]],[R[45],[R[9]]]]]],[11,"to_u8",E,R[2240],18,[[["self"]],[[R[45],["u8"]],["u8"]]]],[11,"to_u16",E,R[2241],18,[[["self"]],[["u16"],[R[45],["u16"]]]]],[11,"to_u32",E,R[2242],18,[[["self"]],[["u32"],[R[45],["u32"]]]]],[10,"to_u64",E,R[2243],18,[[["self"]],[["u64"],[R[45],["u64"]]]]],[11,"to_u128",E,R[2244],18,[[["self"]],[["u128"],[R[45],["u128"]]]]],[11,"to_f32",E,R[2245],18,[[["self"]],[["f32"],[R[45],["f32"]]]]],[11,"to_f64",E,R[2246],18,[[["self"]],[["f64"],[R[45],["f64"]]]]],[8,"NumCast",E,R[2247],N,N],[10,"from",E,R[2248],19,[[[T]],[R[45]]]],[5,"cast",E,R[2249],N,[[[T]],[R[45]]]],[0,"int",R[957],E,N,N],[8,"PrimInt","num_traits::int",R[2250],N,N],[10,"count_ones",E,R[2251],20,[[],["u32"]]],[10,R[2252],E,R[2253],20,[[],["u32"]]],[10,R[2254],E,R[2255],20,[[],["u32"]]],[10,R[2256],E,R[2257],20,[[],["u32"]]],[10,R[2258],E,R[989],20,[[["u32"]],["self"]]],[10,R[2259],E,R[990],20,[[["u32"]],["self"]]],[10,"signed_shl",E,R[989],20,[[["u32"]],["self"]]],[10,"signed_shr",E,R[990],20,[[["u32"]],["self"]]],[10,R[2260],E,R[989],20,[[["u32"]],["self"]]],[10,R[2261],E,R[990],20,[[["u32"]],["self"]]],[10,"swap_bytes",E,R[2262],20,[[],["self"]]],[10,"from_be",E,R[2263],20,[[],["self"]]],[10,"from_le",E,R[2264],20,[[],["self"]]],[10,"to_be",E,R[2265],20,[[],["self"]]],[10,"to_le",E,R[2266],20,[[],["self"]]],[10,"pow",E,R[2267],20,[[["u32"]],["self"]]],[0,"pow",R[957],E,N,N],[5,"pow","num_traits::pow",R[2268],N,[[[T],[R[9]]],[T]]],[5,R[2269],E,R[2270],N,[[[T],[R[9]]],[R[45]]]],[11,"from",R[957],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,R[62],E,E,23,[[["self"]],["string"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,22,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]]],"p":[[8,"Bounded"],[8,"Float"],[8,R[2271]],[8,"Zero"],[8,"One"],[8,R[2272]],[8,R[2273]],[8,R[2274]],[8,R[2275]],[8,R[2276]],[8,R[2277]],[8,R[1035]],[8,R[1037]],[8,R[1036]],[8,R[2278]],[8,"Signed"],[8,R[1033]],[8,R[1032]],[8,R[1031]],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,R[1030]],[3,R[1029]],[8,"Real"]]};
searchIndex["ordered_float"]={"doc":"Wrappers for total order on Floats.","i":[[3,R[2295],"ordered_float",R[2286],N,N],[12,"0",E,E,0,N],[3,"NotNan",E,R[2286],N,N],[3,"FloatIsNan",E,R[2287],N,N],[4,R[2296],E,"An error indicating a parse error from a string for…",N,N],[13,R[1029],E,"A plain parse error from the underlying float type.",1,N],[13,"IsNaN",E,"The parsed float value resulted in a NaN.",1,N],[6,"NotNaN",E,R[2286],N,N],[6,"FloatIsNaN",E,R[2287],N,N],[11,R[118],E,R[2288],0,[[],[T]]],[11,"new",E,"Create a NotNan value.",2,[[[T]],[[R[2289]],[R[13],[R[2289]]]]]],[11,"unchecked_new",E,"Create a NotNan value from a value that is guaranteed to…",2,[[[T]],["self"]]],[11,R[118],E,R[2288],2,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"eq",E,E,0,[[["self"],[R[2291]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2289]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2290]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2290]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[47]]]],[11,"cmp",E,E,2,[[["self"],["notnan"]],[R[47]]]],[11,R[63],E,E,0,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,2,[[["self"],["notnan"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"le",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"fmt",E,E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,2,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,3,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,R[551],E,"Convert a &str to `OrderedFloat`. Returns an error if the…",0,[[["str"]],[R[13]]]],[11,R[551],E,"Convert a &str to `NotNan`. Returns an error if the string…",2,[[["str"]],[R[13]]]],[11,"add",E,E,2,[[],["self"]]],[11,"add",E,E,2,[[[T]],["self"]]],[11,"sub",E,E,2,[[],["self"]]],[11,"sub",E,E,2,[[[T]],["self"]]],[11,"mul",E,E,2,[[],["self"]]],[11,"mul",E,E,2,[[[T]],["self"]]],[11,"div",E,E,2,[[],["self"]]],[11,"div",E,E,2,[[[T]],["self"]]],[11,"rem",E,E,2,[[],["self"]]],[11,"rem",E,E,2,[[[T]],["self"]]],[11,"neg",E,E,2,[[],["self"]]],[11,R[2478],E,E,2,[[["self"]]]],[11,R[2478],E,E,2,[[["self"],[T]]]],[11,R[1432],E,E,2,[[["self"]]]],[11,R[1432],E,E,2,[[["self"],[T]]]],[11,R[2712],E,E,2,[[["self"]]]],[11,R[2712],E,E,2,[[["self"],[T]]]],[11,R[2713],E,E,2,[[["self"]]]],[11,R[2713],E,E,2,[[["self"],[T]]]],[11,R[2714],E,E,2,[[["self"]]]],[11,R[2714],E,E,2,[[["self"],[T]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,2,[[["self"]]]],[11,R[60],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,2,[[["self"],["h"]]]],[11,"as_ref",E,E,0,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"as_mut",E,E,0,[[["self"]],[T]]],[11,"into",E,E,0,[[],["f32"]]],[11,"into",E,E,0,[[],["f64"]]],[11,"into",E,E,3,[[],["error"]]],[11,"clone",E,E,0,[[["self"]],[R[2291]]]],[11,"clone",E,E,2,[[["self"]],["notnan"]]],[11,"clone",E,E,3,[[["self"]],[R[2289]]]],[11,"clone",E,E,1,[[["self"]],[R[2290]]]],[11,R[77],E,E,0,[[],[R[2291]]]],[11,R[77],E,E,2,[[],["notnan"]]],[11,R[958],E,E,0,[[],["self"]]],[11,R[959],E,E,0,[[],["self"]]],[11,R[958],E,E,2,[[],["self"]]],[11,R[959],E,E,2,[[],["self"]]],[11,"to_i64",E,E,2,[[["self"]],[[R[45],["i64"]],["i64"]]]],[11,"to_u64",E,E,2,[[["self"]],[[R[45],["u64"]],["u64"]]]],[11,"to_isize",E,E,2,[[["self"]],[["isize"],[R[45],["isize"]]]]],[11,"to_i8",E,E,2,[[["self"]],[[R[45],["i8"]],["i8"]]]],[11,"to_i16",E,E,2,[[["self"]],[[R[45],["i16"]],["i16"]]]],[11,"to_i32",E,E,2,[[["self"]],[["i32"],[R[45],["i32"]]]]],[11,"to_usize",E,E,2,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,"to_u8",E,E,2,[[["self"]],[[R[45],["u8"]],["u8"]]]],[11,"to_u16",E,E,2,[[["self"]],[["u16"],[R[45],["u16"]]]]],[11,"to_u32",E,E,2,[[["self"]],[[R[45],["u32"]],["u32"]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],[R[45],["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[[R[45],["f64"]],["f64"]]]],[11,"from_i64",E,E,2,[[["i64"]],[R[45]]]],[11,"from_u64",E,E,2,[[["u64"]],[R[45]]]],[11,R[2292],E,E,2,[[["isize"]],[R[45]]]],[11,"from_i8",E,E,2,[[["i8"]],[R[45]]]],[11,"from_i16",E,E,2,[[["i16"]],[R[45]]]],[11,"from_i32",E,E,2,[[["i32"]],[R[45]]]],[11,R[2293],E,E,2,[[[R[9]]],[R[45]]]],[11,"from_u8",E,E,2,[[["u8"]],[R[45]]]],[11,"from_u16",E,E,2,[[["u16"]],[R[45]]]],[11,"from_u32",E,E,2,[[["u32"]],[R[45]]]],[11,"from_f32",E,E,2,[[["f32"]],[R[45]]]],[11,"from_f64",E,E,2,[[["f64"]],[R[45]]]],[11,"from",E,E,2,[[["toprimitive"]],[R[45]]]],[11,R[2294],E,E,2,[[["u32"],["str"]],[R[13]]]],[11,"zero",E,E,2,[[],["self"]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["self"]]],[11,"abs",E,E,2,[[["self"]],["self"]]],[11,"abs_sub",E,E,2,[[["self"]],["self"]]],[11,"signum",E,E,2,[[["self"]],["self"]]],[11,R[2151],E,E,2,[[["self"]],["bool"]]],[11,R[2153],E,E,2,[[["self"]],["bool"]]],[11,R[31],E,E,3,[[["self"]],["str"]]],[11,R[31],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[2295]],[4,R[2296]],[3,"NotNan"],[3,"FloatIsNan"]]};
searchIndex["os_balloon"]={"doc":"OpenStratos balloon software.","i":[[5,"run",R[3319],"The main logic of the program.",N,[[],[[R[13],["error"]],["error"]]]],[5,"initialize_data_filesystem",E,"Initializes the data file system for videos and images.",N,[[],[[R[13],["error"]],["error"]]]],[5,"generate_error_string",E,"Generates a stack trace string of an error.",N,[[["s"],["error"]],["string"]]],[5,"init_loggers",E,"Initializes all loggers.",N,[[],[[R[13],["handle","error"]],["error"],["handle"]]]],[0,"config",E,"Configuration module.",N,N],[3,"CONFIG",R[3332],R[3285],N,N],[12,R[3320],E,E,0,N],[3,"Config",E,R[3285],N,N],[12,"debug",E,"Wether the application should run in debug mode or not.",1,N],[12,"data_dir",E,"The data directory.",1,N],[12,"flight",E,"Flight configuration.",1,N],[12,"battery",E,"Battery configuration.",1,N],[12,"video",E,"Video configuration.",1,N],[12,"picture",E,"Picture configuration.",1,N],[12,"gps",E,"GPS configuration.",1,N],[12,"fona",E,"FONA module configuration.",1,N],[12,R[3331],E,"Telemetry configuration.",1,N],[3,"Flight",E,"Flight configuration structure.",N,N],[12,"length",E,"Approximate expected flight length, in minutes.",2,N],[12,R[3298],E,"Approximate expected maximum height, in meters.",2,N],[3,"Battery",E,"Battery configuration structure.",N,N],[12,"main_min",E,"Minimum voltage for the main battery when empty, at 0%, in…",3,N],[12,"main_max",E,"Maximum voltage for the main battery when full, at 100%,…",3,N],[12,"fona_min",E,"Minimum voltage for the FONA battery when empty, at 0%, in…",3,N],[12,"fona_max",E,"Maximum voltage for the FONA battery when full, at 100%,…",3,N],[12,R[3299],E,"Minimum admissible percentage for main battery for the…",3,N],[12,R[3300],E,"Minimum admissible percentage for FONA battery for the…",3,N],[3,"Video",E,"Video configuration structure.",N,N],[12,"height",E,"Height of the video, in px.",4,N],[12,"width",E,"Width of the video, in px.",4,N],[12,"rotation",E,R[3286],4,N],[12,"fps",E,"Frames per second (FPS) for the video.",4,N],[12,"bitrate",E,"Bit rate for the video, in bps (bits per second).",4,N],[12,R[3306],E,R[3287],4,N],[12,R[3301],E,R[3288],4,N],[12,"contrast",E,R[3289],4,N],[12,R[3307],E,R[3290],4,N],[12,R[3302],E,R[3291],4,N],[12,"iso",E,R[3292],4,N],[12,R[3303],E,"Video stabilization.",4,N],[12,"ev",E,R[3293],4,N],[12,R[3294],E,R[3295],4,N],[3,"Picture",E,"Picture configuration structure.",N,N],[12,"height",E,"Height of the picture, in px.",5,N],[12,"width",E,"Width of the picture, in px.",5,N],[12,"rotation",E,R[3286],5,N],[12,"quality",E,"Quality of the picture, in px.",5,N],[12,"exif",E,"Wether to add EXIF data to pictures or not.",5,N],[12,"raw",E,"Wether to save the raw sensor data as JPG metadata.",5,N],[12,R[3306],E,R[3287],5,N],[12,R[3301],E,R[3288],5,N],[12,"contrast",E,R[3289],5,N],[12,R[3307],E,R[3290],5,N],[12,R[3302],E,R[3291],5,N],[12,"iso",E,R[3292],5,N],[12,"ev",E,R[3293],5,N],[12,R[3294],E,R[3295],5,N],[12,R[3386],E,"Interval between pictures during flight.",5,N],[12,"repeat",E,"Repeat each picture after these seconds (for issues with…",5,N],[12,R[3308],E,"Timeout for first picture after launch, in seconds.",5,N],[3,"Gps",E,"GPS configuration structure.",N,N],[12,"uart",E,R[3296],6,N],[12,R[3226],E,R[3297],6,N],[12,R[3309],E,"Power GPIO pin.",6,N],[3,"Fona",E,"Fona configuration structure",N,N],[12,"uart",E,R[3296],7,N],[12,R[3226],E,R[3297],7,N],[12,R[3309],E,"Power control GPIO pin.",7,N],[12,R[3313],E,"Status GPIO pin.",7,N],[12,"sms_phone",E,"SMS receiver phone number.",7,N],[12,R[3314],E,"Operator GSM location service domain.",7,N],[3,R[3344],E,"Phone number representation.",N,N],[12,"0",E,E,8,N],[3,"Telemetry",E,"Telemetry configuration structure.",N,N],[12,"uart",E,R[3296],9,N],[12,R[3226],E,R[3297],9,N],[4,"Exposure",E,"Exposure setting.",N,N],[13,"Off",E,"Turns off exposure control.",10,N],[13,"Auto",E,"Use automatic exposure mode.",10,N],[13,"Night",E,"Select setting for night shooting.",10,N],[13,"NightPreview",E,"Night preview mode.",10,N],[13,"BackLight",E,"Select setting for back-lit subject.",10,N],[13,"SpotLight",E,"Spot light mode.",10,N],[13,"Sports",E,"Select setting for sports (fast shutter etc.).",10,N],[13,"Snow",E,"Select setting optimized for snowy scenery.",10,N],[13,"Beach",E,"Select setting optimized for beach.",10,N],[13,"VeryLong",E,"Select setting for long exposures.",10,N],[13,"FixedFps",E,"Constrain fps to a fixed value.",10,N],[13,"AntiShake",E,"Anti-shake mode.",10,N],[13,"Fireworks",E,"Select setting optimized for fireworks.",10,N],[4,R[3345],E,"White balance setting.",N,N],[13,"Off",E,"Turn off white balance calculation.",11,N],[13,"Auto",E,"Automatic mode (default).",11,N],[13,"Sun",E,"Sunny mode.",11,N],[13,"CloudShade",E,"Cloudy mode.",11,N],[13,"Tungsten",E,"Tungsten lighting mode.",11,N],[13,"Fluorescent",E,"Fluorescent lighting mode.",11,N],[13,"Incandescent",E,"Incandescent lighting mode.",11,N],[13,"Flash",E,"Flash mode.",11,N],[13,"Horizon",E,"Horizon mode.",11,N],[5,"deserialize_pin",E,"Deserializes a Raspberry Pi pin number into a `Pin`…",N,[[["d"]],[[R[13],["pin"]],["pin"]]]],[7,"CONFIG",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Config",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Flight",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Battery",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Video",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Picture",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Exposure",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_WhiteBalance",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Gps",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Fona",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Telemetry",E,E,N,N],[11,"from_file",E,"Creates a new configuration object from a path.",1,[[["path"],["asref",["path"]]],[["config"],[R[13],["config","error"]],["error"]]]],[11,"verify",E,"Verify the correctness of the configuration, and return a…",1,[[["self"]]]],[11,"debug",E,"Gets wether OpenStratos should run in debug mode.",1,[[["self"]],["bool"]]],[11,"flight",E,"Gets the flight information.",1,[[["self"]],["flight"]]],[11,"battery",E,"Gets battery configuration",1,[[["self"]],["battery"]]],[11,"video",E,"Gets the configuration for video.",1,[[["self"]],["video"]]],[11,"picture",E,"Gets the configuration for pictures.",1,[[["self"]],["picture"]]],[11,"gps",E,"Gets the GPS configuration.",1,[[["self"]],["gps"]]],[11,"fona",E,"Gets the FONA module configuration.",1,[[["self"]],["fona"]]],[11,R[3331],E,"Gets the telemetry configuration.",1,[[["self"]],[R[3331]]]],[11,"data_dir",E,"Gets the configured data directory.",1,[[["self"]],["path"]]],[11,"length",E,"Gets the approximate expected flight length, in minutes.",2,[[],["u32"]]],[11,R[3298],E,"Gets the approximate expected maximum height, in meters.",2,[[],["u32"]]],[11,"main_min",E,"Gets the minimum voltage for the main battery when empty,…",3,[[],["f32"]]],[11,"main_max",E,"Gets the maximum voltage for the main battery when full,…",3,[[],["f32"]]],[11,"fona_min",E,"Gets the minimum voltage for the FONA battery when empty,…",3,[[],["f32"]]],[11,"fona_max",E,"Gets the maximum voltage for the FONA battery when full,…",3,[[],["f32"]]],[11,R[3299],E,"Gets the minimum admissible percentage for main battery…",3,[[],["f32"]]],[11,R[3300],E,"Gets the minimum admissible percentage for FONA battery…",3,[[],["f32"]]],[11,"height",E,"Gets the configured video height for the camera, in pixels.",4,[[],["u16"]]],[11,"width",E,"Gets the configured video width for the camera, in pixels.",4,[[],["u16"]]],[11,"rotation",E,R[3305],4,[[],[["u16"],[R[45],["u16"]]]]],[11,"fps",E,"Gets the configured video framerate for the camera, in…",4,[[],["u8"]]],[11,"bitrate",E,"Gets the configured bitrate for videos.",4,[[],["u32"]]],[11,R[3306],E,"Gets the configured exposure for videos.",4,[[],[[R[45],[R[3306]]],[R[3306]]]]],[11,R[3301],E,"Gets the configured brightness for videos.",4,[[],[[R[45],["u8"]],["u8"]]]],[11,"contrast",E,"Gets the configured contrast for videos.",4,[[],[[R[45],["i8"]],["i8"]]]],[11,R[3307],E,"Gets the configured sharpness for videos.",4,[[],[[R[45],["i8"]],["i8"]]]],[11,R[3302],E,"Gets the configured saturation for videos.",4,[[],[[R[45],["i8"]],["i8"]]]],[11,"iso",E,"Gets the configured ISO for videos.",4,[[],[["u16"],[R[45],["u16"]]]]],[11,R[3303],E,"Gets if video stabilization needs to be turned on.",4,[[],["bool"]]],[11,"ev",E,"Gets the configured EV compensation for videos.",4,[[],[[R[45],["i8"]],["i8"]]]],[11,R[3294],E,"Gets the configured automatic white balance for videos.",4,[[],[[R[3304]],[R[45],[R[3304]]]]]],[11,"height",E,"Gets the configured picture height for the camera, in…",5,[[],["u16"]]],[11,"width",E,"Gets the configured picture width for the camera, in pixels.",5,[[],["u16"]]],[11,"rotation",E,R[3305],5,[[],[["u16"],[R[45],["u16"]]]]],[11,"quality",E,"Gets the configured picture quality for the camera.",5,[[],["u8"]]],[11,"exif",E,"Gets wether the camera should add available EXIF…",5,[[],["bool"]]],[11,"raw",E,"Gets wether the camera should add raw sensor data to…",5,[[],["bool"]]],[11,R[3306],E,"Gets the configured exposure for pictures.",5,[[],[[R[45],[R[3306]]],[R[3306]]]]],[11,R[3301],E,"Gets the configured brightness for pictures.",5,[[],[[R[45],["u8"]],["u8"]]]],[11,"contrast",E,"Gets the configured contrast for pictures.",5,[[],[[R[45],["i8"]],["i8"]]]],[11,R[3307],E,"Gets the configured sharpness for pictures.",5,[[],[[R[45],["i8"]],["i8"]]]],[11,R[3302],E,"Gets the configured saturation for pictures.",5,[[],[[R[45],["i8"]],["i8"]]]],[11,"iso",E,"Gets the configured ISO for pictures.",5,[[],[["u16"],[R[45],["u16"]]]]],[11,"ev",E,"Gets the configured EV compensation for pictures.",5,[[],[[R[45],["i8"]],["i8"]]]],[11,R[3294],E,"Gets the configured automatic white balance for pictures.",5,[[],[[R[3304]],[R[45],[R[3304]]]]]],[11,R[3386],E,"Gets the interval between pictures during flight.",5,[[],["u32"]]],[11,"repeat",E,"Gets the timeout for repeated picture.",5,[[],[["u32"],[R[45],["u32"]]]]],[11,R[3308],E,"Gets the timeout for first picture after launch, in seconds.",5,[[],["u32"]]],[11,"uart",E,R[3310],6,[[["self"]],["path"]]],[11,R[3226],E,R[3311],6,[[["self"]],["u32"]]],[11,R[3309],E,R[3312],6,[[["self"]],["pin"]]],[11,"uart",E,R[3310],7,[[["self"]],["path"]]],[11,R[3226],E,R[3311],7,[[["self"]],["u32"]]],[11,R[3309],E,R[3312],7,[[["self"]],["pin"]]],[11,R[3313],E,"Gets the status GPIO pin.",7,[[["self"]],["pin"]]],[11,"sms_phone",E,"Gets the phone number for SMSs.",7,[[["self"]],[R[3343]]]],[11,R[3314],E,"Gets the location service for GSM location retrieval.",7,[[["self"]],["str"]]],[11,"as_str",E,"Gets the phone number as a string.",8,[[["self"]],["str"]]],[11,"uart",E,R[3310],9,[[["self"]],["path"]]],[11,R[3226],E,R[3311],9,[[["self"]],["u32"]]],[0,"error",R[3319],"Error module.",N,N],[4,"Logic",R[3315],"Errors that happened in a certain part of the logic.",N,N],[13,"Init",E,"Initialization error.",12,N],[4,"Gps",E,"GPS errors.",N,N],[13,"Init",E,"GPS initialization error.",13,N],[13,"AlreadyInitialized",E,"The GPS was already initialized when trying to initialize…",13,N],[13,"InvalidStatus",E,"Invalid GPS status code.",13,N],[12,"status","os_balloon::error::Gps","The invalid GPS status code that was received",13,N],[4,"Config",R[3315],"Configuration errors.",N,N],[13,"Open",E,"Error opening the configuration file.",14,N],[12,"path",R[3316],R[3317],14,N],[13,"Read",R[3315],"Error reading the configuration file.",14,N],[12,"path",R[3316],R[3317],14,N],[13,"InvalidToml",R[3315],"Invalid TOML found in the configuration file.",14,N],[12,"path",R[3316],R[3317],14,N],[13,"Invalid",R[3315],"Invalid configuration options.",14,N],[12,"errors",R[3316],"The list of errors in the configuration.",14,N],[4,"Fs",R[3315],"Errors dealing with the file system.",N,N],[13,"DataInit",E,"Error initializing the `data` filesystem.",15,N],[13,"DirectoryCreation",E,"Error creating a directory.",15,N],[12,"path","os_balloon::error::Fs","Path to the directory meant to be created.",15,N],[4,"Log",R[3315],"Errors handling loggers and logs.",N,N],[13,"Appender",E,"Error creating a log appender.",16,N],[12,"name","os_balloon::error::Log","The name of the log appender.",16,N],[13,"Build",R[3315],"Error building the logger.",16,N],[4,"LastState",E,"Errors related to reading and modifying the last known…",N,N],[13,"FileOpen",E,"Error opening the last state file.",17,N],[13,"FileRead",E,"Error reading the last state file.",17,N],[13,"FileWrite",E,"Error writing the last state file.",17,N],[13,"Read",E,"Error reading the last state.",17,N],[13,"Invalid",E,"Invalid last state found.",17,N],[12,"state","os_balloon::error::LastState","The invalid state found.",17,N],[4,"Fona",R[3315],"Errors related to the use of the Adafruit FONA module.",N,N],[13,"Init",E,"Error initializing the FONA module.",18,N],[13,"PowerOn",E,"Error turning the FONA module on.",18,N],[13,"EchoOff",E,"Error turning the FONA module's \"echo\" functionality off.",18,N],[13,"NoSerial",E,"There was no open serial connection when trying to send a…",18,N],[13,"SerialEnd",E,"`EOF` was found in the FONA serial.",18,N],[13,"LongSms",E,"SMS was too long to be sent.",18,N],[13,"SmsAtCmgf",E,"Error sending SMS on `AT+CMGF=1` response.",18,N],[13,"SmsAtCmgs",E,"Error sending `AT+CMGS` message when sending an SMS.",18,N],[13,"SmsCmgs",E,"Error reading `+CMGS` response sending SMS.",18,N],[13,"SmsOk",E,"No OK received after sending SMS.",18,N],[13,"LocAtCmgf",E,"Error getting location on `AT+CMGF=1` response.",18,N],[13,"LocAtCgatt",E,"Error getting location on `AT+CGATT=1` response.",18,N],[13,"LocAtSapbr",E,"Error getting location on `AT+SAPBR=1,1` response.",18,N],[13,"LocAtSapbrContype",E,"Error getting location on `AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"`…",18,N],[13,"LocAtSapbrApn",E,"Error getting location on…",18,N],[13,"LocAtCipgsmloc",E,"Error getting location on `AT+CIPGSMLOC=1,1` response.",18,N],[13,"LocAtGprsDown",E,"Error turning GPRS down.",18,N],[13,"LocLon",E,"Error getting longitude via GPRS.",18,N],[13,"LocLat",E,"Error getting latitude via GPRS.",18,N],[13,"SendCommandCrlf",E,"Error reading CRLF (\\r\\n) after sending command to FONA.",18,N],[13,"PartialResponse",E,"FONA serial found EOF.",18,N],[12,"response","os_balloon::error::Fona","Contents of the partial response.",18,N],[13,"Command",R[3315],"Error sending command to FONA.",18,N],[13,"CBCInvalidResponse",E,"Invalid response to AT+CBC (battery charge) command.",18,N],[13,"CADCInvalidResponse",E,"Invalid response to AT+CADC? (read ADC) command.",18,N],[4,"Raspicam",E,"Errors related to the Raspicam camera.",N,N],[13,"AlreadyRecording",E,"Camera was already recording.",19,N],[13,"FileExists",E,"Camera output file already exists.",19,N],[12,"file",R[3318],"File that wasn't supposed to exist.",19,N],[13,"Test",R[3315],"Camera testing error.",19,N],[13,"TestRemove",E,"Error removing camera test file.",19,N],[12,"test_file",R[3318],"Output file for the test.",19,N],[4,"Init",R[3315],"Errors related to logic initialization.",N,N],[13,"Gps",E,"Error initializing GPS module.",20,N],[13,"Fona",E,"Error initializing FONA module.",20,N],[13,"CheckGsmConnectivity",E,"Error checking GSM connectivity.",20,N],[13,"CheckBatteries",E,"Error checking battery status.",20,N],[13,"NotEnoughBattery",E,"Not enough battery for the flight.",20,N],[17,"_DERIVE_failure_Fail_FOR_Logic",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_Logic",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Gps",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_Gps",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Config",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Fs",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Log",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_Log",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_LastState",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Fona",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_Fona",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Raspicam",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_Init",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_Init",E,E,N,N],[0,"fona",R[3319],"Adafruit FONA GSM module.",N,N],[3,"FONA",R[3334],"The FONA module control structure.",N,N],[12,R[3320],E,E,21,N],[3,"Fona",E,"Adafruit FONA control structure.",N,N],[12,"serial",E,E,22,N],[3,"Location",E,"Structure representing the location of the probe as…",N,N],[12,"latitude",E,"Latitude of the location, in degrees (°).",23,N],[12,R[3323],E,"Longitude of the location, in degrees (°).",23,N],[7,"FONA",E,E,N,N],[11,R[3321],E,"Initializes the Adafruit FONA module.",22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"is_on",E,"Checks if the FONA module is on.",22,[[["self"]],[[R[13],["bool","error"]],["error"],["bool"]]]],[11,"turn_on",E,"Turns on the FONA module.",22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"turn_off",E,"Tuns off the FONA module.",22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"send_sms",E,"Sends an SMS with the given text to the given phone number.",22,[[["self"],["m"]],[[R[13],["error"]],["error"]]]],[11,"location",E,"Gets the current location using GPRS.",22,[[["self"]],[[R[13],["location","error"]],["location"],["error"]]]],[11,"battery_percent",E,"Checks the FONA battery level, in percentage.",22,[[["self"]],[["f32"],[R[13],["f32","error"]],["error"]]]],[11,"battery_voltage",E,"Checks the FONA battery voltage, in volts (`V`).",22,[[["self"]],[["f32"],[R[13],["f32","error"]],["error"]]]],[11,"adc_voltage",E,"Gets the ADC (Analog-Digital converter) voltage of the…",22,[[["self"]],[["f32"],[R[13],["f32","error"]],["error"]]]],[11,"has_connectivity",E,"Checks if the FONA module has GSM connectivity.",22,[[["self"]],[[R[13],["bool","error"]],["error"],["bool"]]]],[11,"send_command_read",E,"Sends a command to the FONA module and reads the response.",22,[[["self"],["c"]],[["string"],[R[13],["string","error"]],["error"]]]],[11,"send_command_read_limit",E,"Sends a command and reads a limited amount of characters.",22,[[["self"],["c"],[R[9]]],[["string"],[R[13],["string","error"]],["error"]]]],[11,"send_command",E,"Sends a command to the FONA serial.",22,[[["self"],["c"]],[[R[13],["error"]],["error"]]]],[11,"read_line",E,"Reads a line from the serial.",22,[[["self"]],[["string"],[R[13],["string","error"]],["error"]]]],[11,"latitude",E,"Gets the latitude of the location, in degrees (°).",23,[[],["f32"]]],[11,R[3323],E,"Gets the longitude of the location, in degrees (°).",23,[[],["f32"]]],[0,"gps",R[3319],"GPS module.",N,N],[3,"GPS",R[3335],"GPS data for concurrent check.",N,N],[12,R[3320],E,E,24,N],[3,"Gps",E,"GPS information structure.",N,N],[12,R[4224],E,E,25,N],[3,"Frame",E,"This structure represents a GPS frame.",N,N],[12,"fix_time",E,"Time of the current fix.",26,N],[12,"status",E,R[3322],26,N],[12,"satellites",E,"Number of satellites connected.",26,N],[12,"latitude",E,"Latitude of the GPS antenna, in ° (degrees).",26,N],[12,R[3323],E,"Longitude of the GPS antenna, in ° (degrees).",26,N],[12,"altitude",E,"Altitude of the GPS antenna from sea level, in m.",26,N],[12,"pdop",E,"Position dilution of precision (3D).",26,N],[12,"hdop",E,"Horizontal dilution of precision (2D).",26,N],[12,"vdop",E,"Vertical dilution of precision (1D).",26,N],[12,"speed",E,"Speed of the velocity vector, in m/s.",26,N],[12,"course",E,"Course of the velocity vector, in ° (degrees).",26,N],[4,"FixStatus",E,R[3322],N,N],[13,"Active",E,"GPS fix active.",27,N],[13,"Void",E,"GPS fix not valid.",27,N],[7,"GPS",E,E,N,N],[11,R[3321],E,"Initializes the GPS.",25,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"is_on",E,"Checks if the GPS is on.",25,[[["self"]],[[R[13],["bool","error"]],["error"],["bool"]]]],[11,"turn_on",E,"Turns the GPS on.",25,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"turn_off",E,"Turns the GPS off.",25,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"enter_airborne_1g_mode",E,"Enters airborne (<1g) GPS mode.",25,[[["serial"]],[[R[13],["error"]],["error"]]]],[11,R[4224],E,"Gets the latest GPS data.",25,[[["self"]],[["frame"],[R[45],["frame"]]]]],[11,"parse_frame",E,"Parses a GPS frame.",25,[[["error"],["string"],[R[13],["string","error"]]],[[R[13],["frame","error"]],["frame"],["error"]]]],[11,"fix_time",E,"Gets the time of the current fix.",26,[[["self"]],[["utc"],[R[2369],["utc"]]]]],[11,"status",E,"Gets the GPS fix status.",26,[[["self"]],[R[3342]]]],[11,"is_valid",E,"Checks if the frame is from a valid fix.",26,[[["self"]],["bool"]]],[11,"satellites",E,"Gets the number of satellites connected.",26,[[["self"]],["u8"]]],[11,"latitude",E,"Gets the latitude of the GPS antenna, in ° (degrees).",26,[[["self"]],["f32"]]],[11,R[3323],E,"Gets the longitude of the GPS antenna, in ° (degrees).",26,[[["self"]],["f32"]]],[11,"altitude",E,"Gets the altitude of the GPS antenna from sea level, in m.",26,[[["self"]],["f32"]]],[11,"pdop",E,"Gets the position dilution of precision (3D).",26,[[["self"]],["f32"]]],[11,"hdop",E,"Gets the horizontal dilution of precision (2D).",26,[[["self"]],["f32"]]],[11,"vdop",E,"Gets the vertical dilution of precision (1D).",26,[[["self"]],["f32"]]],[11,"speed",E,"Gets the speed of the velocity vector, in m/s.",26,[[["self"]],["f32"]]],[11,"course",E,"Gets the course of the velocity vector, in ° (degrees).",26,[[["self"]],["f32"]]],[0,"logic",R[3319],"Logic module.",N,N],[3,R[3329],R[3328],E,N,N],[12,R[3320],E,E,28,N],[3,R[3346],E,"Main OpenStratos state machine",N,N],[12,"state",E,"State of the logic item, only for compile time checks, no…",29,N],[3,"Init",E,"Initialization state.",N,N],[3,R[3324],E,"Acquiring fix state.",N,N],[3,R[3325],E,"Fix acquired state.",N,N],[3,R[3326],E,"Waiting launch state.",N,N],[3,"GoingUp",E,"Going up state.",N,N],[3,"GoingDown",E,"Going down state.",N,N],[3,"Landed",E,"Landed state.",N,N],[3,"ShutDown",E,"Shut down state.",N,N],[3,"SafeMode",E,"Safe mode state.",N,N],[4,"State",E,"States of the onboard computer.",N,N],[13,"Init",E,"Initialization.",30,N],[13,R[3324],E,"Acquiring GPS fix.",30,N],[13,R[3325],E,"GPS fix has been acquired.",30,N],[13,R[3326],E,"Waiting for balloon launch.",30,N],[13,"GoingUp",E,"Going up.",30,N],[13,"GoingDown",E,"Going down.",30,N],[13,"Landed",E,"Probe landed.",30,N],[13,"ShutDown",E,"Shutting computer down.",30,N],[13,"SafeMode",E,"Safe mode operation.",30,N],[5,"save_current_state",E,"Saves the current state into the state file.",N,[[],[[R[13],["error"]],["error"]]]],[5,"init",E,"Initializes a new state machine.",N,[[],[["error"],[R[3327],["init"]],[R[13],[R[3327],"error"]]]]],[0,"acquiring_fix",E,"Acquiring fix logic.",N,N],[0,"fix_acquired",E,"Fix acquired logic.",N,N],[0,"going_down",E,"Going down logic.",N,N],[0,"going_up",E,"Going up logic.",N,N],[0,"init",E,"Initialization logic.",N,N],[5,"check_disk_space","os_balloon::logic::init","Checks if the available disk space is enough.",N,[[],[[R[13],["error"]],["error"]]]],[5,"initialize_gps",E,"Initializes the GPS module.",N,[[],[[R[13],["error"]],["error"]]]],[5,"initialize_fona",E,"Initializes the FONA module.",N,[[],[[R[13],["error"]],["error"]]]],[5,"check_batteries",E,"Checks the batteries of the probe using the FONA's…",N,[[],[[R[13],["error"]],["error"]]]],[5,"test_raspicam",E,"Performs a test in the Raspicam module.",N,[[],[[R[13],["error"]],["error"]]]],[5,"get_available_disk_space",E,"Gets the available disk space for OpenStratos.",N,[[],[["error"],[R[13],["u64","error"]],["u64"]]]],[5,"power_off",E,"Powers the system off.",N,[[],[["error"],[R[13],["error"]]]]],[17,"TEST_VIDEO_FILE",E,"Test video file.",N,N],[0,"landed",R[3328],"Landed logic.",N,N],[0,"safe_mode",E,"Safe mode logic.",N,N],[0,"shut_down",E,"Shut down logic.",N,N],[0,"waiting_launch",E,"Waiting launch logic.",N,N],[7,R[3329],E,E,N,N],[8,R[3347],E,"Trait representing a state machine.",N,N],[16,"Next",E,"The logic to run after the current state.",31,N],[10,"execute",E,"Executes this state and returns the next one.",31,[[],[[R[13],["error"]],["error"]]]],[8,"GetState",E,"Trait to get the current state in the `State` enum for the…",N,N],[10,R[3337],E,"Gets the state enumeration variant for the current state.",32,[[["self"]],["state"]]],[8,"MainLogic",E,"Trait implementing the main logic of the program.",N,N],[10,R[3338],E,"Performs the main logic of the state.",33,[[],[[R[13],["error"]],["error"]]]],[11,"get_last",E,"Gets the last state of the application if there is one.",30,[[],[[R[13],[R[45],"error"]],[R[45]],["error"]]]],[11,"as_str",E,"Gets the state as a string to be stored in the…",30,[[["self"]],["str"]]],[0,"raspicam",R[3319],"Raspberry Pi camera module.",N,N],[3,"CAMERA",R[3336],"Shared static camera object.",N,N],[12,R[3320],E,E,34,N],[3,"Camera",E,"Camera structure.",N,N],[12,"video_dir",E,"Directory to save video files.",35,N],[12,"picture_dir",E,"Directory to save picture files.",35,N],[12,"process",E,"Video process handle.",35,N],[3,"ExifData",E,"Structure representing EXIF data for a picture.",N,N],[12,"gps_latitude",E,"GPS latitude and reference.",36,N],[12,"gps_longitude",E,"GPS longitude and reference.",36,N],[12,"gps_altitude",E,"GPS altitude from sea level.",36,N],[12,"gps_satellites",E,"Number of GPS satellites.",36,N],[12,"gps_status",E,R[3322],36,N],[12,"gps_dop",E,"GPS position dilution of precision.",36,N],[12,"gps_speed",E,"GPS speed.",36,N],[12,"gps_track",E,"GPS course.",36,N],[4,R[3348],E,R[3330],N,N],[13,"North",E,"North reference.",37,N],[13,"South",E,"South reference.",37,N],[4,R[3349],E,R[3330],N,N],[13,"East",E,"East reference.",38,N],[13,"West",E,"West reference.",38,N],[7,"CAMERA",E,E,N,N],[17,"VIDEO_DIR",E,"Video directory inside data directory.",N,N],[17,"IMG_DIR",E,"Image directory inside data directory.",N,N],[11,"record",E,"Starts recording video with the camera.",35,[[["self"],["fn"],[T]],[[R[13],["error"]],["error"]]]],[11,"generate_video_command",E,"Generates the video command with the configured parameters.",35,[[["pathbuf"],[R[45],[R[411]]],[R[411]]],["command"]]],[11,"stop_recording",E,"Stops the video recording.",35,[[["self"]],[["error"],[R[13],["error"]]]]],[11,"is_recording",E,"Checks if the camera is recording.",35,[[["self"]],["bool"]]],[11,"is_really_recording",E,"Checks if there is a `raspivid` process currently…",35,[[],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,"kill_process",E,"Forcefully kills the `raspivid` process.",35,[[],[["error"],[R[13],["error"]]]]],[11,"take_picture",E,"Takes a picture with the camera.",35,[[["self"],["fn"]],[[R[13],["error"]],["error"]]]],[11,"generate_picture_command",E,"Generates the picture command with the configured…",35,[[["pathbuf"]],["command"]]],[11,"new",E,"Creates new EXIF data from GPS.",36,[[],["self"]]],[0,R[3331],R[3319],"Transparent serial telemetry module.",N,N],[17,"CONFIG_FILE",E,"Configuration file.",N,N],[17,"STATE_FILE",E,"Last state file, in the `data` directory.",N,N],[11,"from",R[3332],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[3333],E,E,2,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,2,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,2,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,2,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[3333],E,E,3,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,3,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,3,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,3,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[3333],E,E,4,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,4,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,4,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,4,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[3333],E,E,5,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,5,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,5,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,5,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,R[3333],E,E,10,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,10,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,10,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,10,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,R[3333],E,E,11,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,11,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,11,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,11,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],R[3315],E,12,[[["self"]],["string"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"as_fail",E,E,12,[[["self"]],["fail"]]],[11,R[3333],E,E,12,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,12,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,12,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,12,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,13,[[["self"]],["string"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"as_fail",E,E,13,[[["self"]],["fail"]]],[11,R[3333],E,E,13,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,13,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,13,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,13,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,14,[[["self"]],["string"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"as_fail",E,E,14,[[["self"]],["fail"]]],[11,R[62],E,E,15,[[["self"]],["string"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"as_fail",E,E,15,[[["self"]],["fail"]]],[11,R[62],E,E,16,[[["self"]],["string"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[[T],["self"]]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"as_fail",E,E,16,[[["self"]],["fail"]]],[11,R[3333],E,E,16,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,16,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,16,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,16,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,17,[[["self"]],["string"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[[T],["self"]]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"as_fail",E,E,17,[[["self"]],["fail"]]],[11,R[3333],E,E,17,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,17,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,17,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,17,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,18,[[["self"]],["string"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"as_fail",E,E,18,[[["self"]],["fail"]]],[11,R[62],E,E,19,[[["self"]],["string"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"as_fail",E,E,19,[[["self"]],["fail"]]],[11,R[62],E,E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[[T],["self"]]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"as_fail",E,E,20,[[["self"]],["fail"]]],[11,R[3333],E,E,20,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,20,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,20,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,20,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",R[3334],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[[T],["self"]]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,R[3333],E,E,23,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,23,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,23,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,23,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",R[3335],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[[T],["self"]]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,R[3333],E,E,26,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,26,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,26,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,26,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,27,[[["self"]],["string"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[[T],["self"]]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,R[3333],E,E,27,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,27,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,27,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,27,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",R[3328],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,R[3338],E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[[T],["self"]]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,R[3333],E,E,29,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,29,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,29,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,29,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[[T],["self"]]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,R[3333],E,E,39,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,39,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,39,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,39,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[[T],["self"]]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,R[3333],E,E,40,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,40,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,40,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,40,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[[T],["self"]]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,R[3333],E,E,41,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,41,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,41,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,41,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[[T],["self"]]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,R[3333],E,E,42,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,42,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,42,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,42,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,R[3333],E,E,43,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,43,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,43,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,43,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[[T],["self"]]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,R[3333],E,E,44,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,44,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,44,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,44,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[[T],["self"]]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,R[3333],E,E,45,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,45,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,45,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,45,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[[T],["self"]]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,R[3333],E,E,46,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,46,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,46,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,46,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[[T],["self"]]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,R[3333],E,E,47,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,47,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,47,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,47,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[[T],["self"]]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,R[3333],E,E,30,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,30,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,30,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,30,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"from",R[3336],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,R[62],E,E,36,[[["self"]],["string"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[[T],["self"]]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,R[3333],E,E,36,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,36,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,36,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,36,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,37,[[["self"]],["string"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[[T],["self"]]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,R[3333],E,E,37,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,37,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,37,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,37,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[62],E,E,38,[[["self"]],["string"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[[T],["self"]]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,R[3333],E,E,38,[[["self"]],[["box",[R[3157]]],[R[3157]]]]],[11,R[3158],E,E,38,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3159],E,E,38,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,R[3160],E,E,38,[[["self"]],[[R[3157]],["box",[R[3157]]]]]],[11,"execute",R[3328],E,29,[[],[[R[13],["error"]],["error"]]]],[11,"execute",E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,"execute",E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,"execute",E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,"execute",E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,"execute",E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,"execute",E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,R[3337],E,E,29,[[["self"]],["state"]]],[11,R[3337],E,E,39,[[["self"]],["state"]]],[11,R[3337],E,E,40,[[["self"]],["state"]]],[11,R[3337],E,E,41,[[["self"]],["state"]]],[11,R[3337],E,E,42,[[["self"]],["state"]]],[11,R[3337],E,E,43,[[["self"]],["state"]]],[11,R[3337],E,E,44,[[["self"]],["state"]]],[11,R[3337],E,E,45,[[["self"]],["state"]]],[11,R[3337],E,E,46,[[["self"]],["state"]]],[11,R[3337],E,E,47,[[["self"]],["state"]]],[11,R[3338],E,E,29,[[],[[R[13],["error"]],["error"]]]],[11,R[77],R[3335],E,25,[[],["gps"]]],[11,R[77],R[3336],E,36,[[],["exifdata"]]],[11,"clone",R[3332],E,2,[[["self"]],["flight"]]],[11,"clone",E,E,3,[[["self"]],["battery"]]],[11,"clone",E,E,4,[[["self"]],["video"]]],[11,"clone",E,E,5,[[["self"]],["picture"]]],[11,"clone",E,E,10,[[["self"]],[R[3306]]]],[11,"clone",E,E,11,[[["self"]],[R[3304]]]],[11,"clone",R[3315],E,12,[[["self"]],["logic"]]],[11,"clone",E,E,13,[[["self"]],["gps"]]],[11,"clone",E,E,16,[[["self"]],["log"]]],[11,"clone",E,E,17,[[["self"]],["laststate"]]],[11,"clone",E,E,20,[[["self"]],["init"]]],[11,"clone",R[3334],E,23,[[["self"]],["location"]]],[11,"clone",R[3335],E,26,[[["self"]],["frame"]]],[11,"clone",E,E,27,[[["self"]],[R[3342]]]],[11,"clone",R[3328],E,29,[[["self"]],[R[3327]]]],[11,"clone",E,E,30,[[["self"]],["state"]]],[11,"clone",E,E,39,[[["self"]],["init"]]],[11,"clone",E,E,40,[[["self"]],["acquiringfix"]]],[11,"clone",E,E,41,[[["self"]],["fixacquired"]]],[11,"clone",E,E,42,[[["self"]],["waitinglaunch"]]],[11,"clone",E,E,43,[[["self"]],["goingup"]]],[11,"clone",E,E,44,[[["self"]],["goingdown"]]],[11,"clone",E,E,45,[[["self"]],["landed"]]],[11,"clone",E,E,46,[[["self"]],[R[3116]]]],[11,"clone",E,E,47,[[["self"]],["safemode"]]],[11,"clone",R[3336],E,36,[[["self"]],["exifdata"]]],[11,"clone",E,E,37,[[["self"]],[R[3340]]]],[11,"clone",E,E,38,[[["self"]],[R[3341]]]],[11,R[62],E,E,36,[[["self"]],["string"]]],[11,"from",E,E,37,[[["f32"]],["self"]]],[11,"from",E,E,38,[[["f32"]],["self"]]],[11,R[3339],R[3332],E,10,[[["self"]]]],[11,R[3339],E,E,11,[[["self"]]]],[11,R[3339],R[3335],E,27,[[["self"]]]],[11,R[3339],R[3328],E,30,[[["self"]]]],[11,R[3339],R[3336],E,37,[[["self"]]]],[11,R[3339],E,E,38,[[["self"]]]],[11,"drop",R[3334],E,22,[[["self"]]]],[11,"drop",R[3335],E,25,[[["self"]]]],[11,"drop",R[3336],E,35,[[["self"]]]],[11,"eq",R[3332],E,10,[[[R[3306]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[3304]]],["bool"]]],[11,"eq",R[3335],E,27,[[[R[3342]],["self"]],["bool"]]],[11,"eq",R[3328],E,30,[[["self"],["state"]],["bool"]]],[11,"eq",R[3336],E,37,[[["self"],[R[3340]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[3341]]],["bool"]]],[11,"as_ref",R[3332],E,10,[[["self"]],["osstr"]]],[11,"as_ref",E,E,11,[[["self"]],["osstr"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3315],E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3334],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3335],E,25,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,26,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3328],E,29,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,30,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,40,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,43,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3336],E,35,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,36,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3315],E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3335],E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3336],E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,38,[[["self"],[R[30]]],[R[13]]]],[11,R[551],R[3335],E,27,[[["str"]],[[R[13],[R[3342]]],[R[3342]]]]],[11,R[551],R[3328],E,30,[[["str"]],[R[13]]]],[11,"deref",R[3332],E,0,[[["self"]],["config"]]],[11,"deref",R[3334],E,21,[[["self"]],["mutex"]]],[11,"deref",R[3335],E,24,[[["self"]],["mutex"]]],[11,"deref",R[3328],E,28,[[["self"]],["mutex"]]],[11,"deref",R[3336],E,34,[[["self"]],["mutex"]]],[11,R[3321],R[3332],E,0,[[["self"]]]],[11,R[3321],R[3334],E,21,[[["self"]]]],[11,R[3321],R[3335],E,24,[[["self"]]]],[11,R[3321],R[3328],E,28,[[["self"]]]],[11,R[3321],R[3336],E,34,[[["self"]]]],[11,"name",R[3315],E,12,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,12,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,12,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,13,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,13,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,13,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,14,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,14,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,14,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,15,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,15,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,15,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,16,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,16,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,16,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,17,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,17,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,17,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,18,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,18,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,18,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,19,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,19,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,19,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,"name",E,E,20,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"cause",E,E,20,[[["self"]],[["fail"],[R[45],["fail"]]]]],[11,R[2305],E,E,20,[[["self"]],[[R[2305]],[R[45],[R[2305]]]]]],[11,R[2809],R[3332],E,1,[[["__d"]],[R[13]]]],[11,R[2809],E,E,2,[[["__d"]],[R[13]]]],[11,R[2809],E,E,3,[[["__d"]],[R[13]]]],[11,R[2809],E,E,4,[[["__d"]],[R[13]]]],[11,R[2809],E,E,5,[[["__d"]],[R[13]]]],[11,R[2809],E,E,10,[[["__d"]],[R[13]]]],[11,R[2809],E,E,11,[[["__d"]],[R[13]]]],[11,R[2809],E,E,6,[[["__d"]],[R[13]]]],[11,R[2809],E,E,7,[[["__d"]],[R[13]]]],[11,R[2809],E,E,8,[[["d"]],[[R[3343]],[R[13],[R[3343]]]]]],[11,R[2809],E,E,9,[[["__d"]],[R[13]]]]],"p":[[3,"CONFIG"],[3,"Config"],[3,"Flight"],[3,"Battery"],[3,"Video"],[3,"Picture"],[3,"Gps"],[3,"Fona"],[3,R[3344]],[3,"Telemetry"],[4,"Exposure"],[4,R[3345]],[4,"Logic"],[4,"Gps"],[4,"Config"],[4,"Fs"],[4,"Log"],[4,"LastState"],[4,"Fona"],[4,"Raspicam"],[4,"Init"],[3,"FONA"],[3,"Fona"],[3,"Location"],[3,"GPS"],[3,"Gps"],[3,"Frame"],[4,"FixStatus"],[3,R[3329]],[3,R[3346]],[4,"State"],[8,R[3347]],[8,"GetState"],[8,"MainLogic"],[3,"CAMERA"],[3,"Camera"],[3,"ExifData"],[4,R[3348]],[4,R[3349]],[3,"Init"],[3,R[3324]],[3,R[3325]],[3,R[3326]],[3,"GoingUp"],[3,"GoingDown"],[3,"Landed"],[3,"ShutDown"],[3,"SafeMode"]]};
searchIndex["owning_ref"]={"doc":R[296],"i":[[8,"StableAddress","owning_ref",R[322],N,N],[8,"CloneStableAddress",E,R[323],N,N],[3,R[319],E,R[296],N,N],[3,R[320],E,"An mutable owning reference.",N,N],[3,R[321],E,"`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef",E,"Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef",E,"Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef",E,"Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef",E,"Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef",E,"Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef",E,"Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef",E,"Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef",E,"Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef",E,R[297],N,N],[6,"RwLockWriteGuardRef",E,R[297],N,N],[6,"BoxRefMut",E,"Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut",E,"Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut",E,"Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut",E,"Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut",E,R[298],N,N],[6,"RwLockWriteGuardRefMut",E,R[298],N,N],[6,"ErasedBoxRef",E,"Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef",E,"Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef",E,"Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut",E,"Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased",E,"Helper trait for an erased concrete type an owner…",N,N],[8,R[317],E,"Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased",E,"Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased",E,"Perform the type erasure.",0,[[]]],[8,"ToHandle",E,"Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle",E,R[299],1,N],[10,"to_handle",E,R[300],1,[[]]],[8,R[318],E,"Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut",E,R[299],2,N],[10,"to_handle_mut",E,R[300],2,[[]]],[11,"new",E,R[302],3,[[["o"]],["self"]]],[11,R[303],E,R[304],3,[[["o"]],["self"]]],[11,"map",E,"Converts `self` into a new owning reference that points at…",3,[[["f"]],[[R[301]],["sized"]]]],[11,R[724],E,"Tries to convert `self` into a new owning reference that…",3,[[["f"]],[[R[301]],[R[13],[R[301]]]]]],[11,R[306],E,R[307],3,[[["f"]],[R[301]]]],[11,R[308],E,R[309],3,[[],[[R[301],["box"]],["box"]]]],[11,R[310],E,R[311],3,[[],[R[301]]]],[11,R[316],E,R[312],3,[[["self"]],["o"]]],[11,R[313],E,R[314],3,[[],["o"]]],[11,"new",E,R[302],4,[[["o"]],["self"]]],[11,R[303],E,R[304],4,[[["o"]],["self"]]],[11,"map",E,"Converts `self` into a new shared owning reference that…",4,[[["f"]],[[R[301]],["sized"]]]],[11,"map_mut",E,"Converts `self` into a new mutable owning reference that…",4,[[["f"]],[[R[305]],["sized"]]]],[11,R[724],E,"Tries to convert `self` into a new shared owning reference…",4,[[["f"]],[[R[301]],[R[13],[R[301]]]]]],[11,"try_map_mut",E,"Tries to convert `self` into a new mutable owning…",4,[[["f"]],[[R[305]],[R[13],[R[305]]]]]],[11,R[306],E,R[307],4,[[["f"]],[R[305]]]],[11,R[308],E,R[309],4,[[],[["box"],[R[305],["box"]]]]],[11,R[310],E,R[311],4,[[],[R[305]]]],[11,R[316],E,R[312],4,[[["self"]],["o"]]],[11,"as_owner_mut",E,"A mutable reference to the underlying owner.",4,[[["self"]],["o"]]],[11,R[313],E,R[314],4,[[],["o"]]],[11,"new",E,"Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut",E,"Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn",E,R[315],5,[[["o"],["f"]],["self"]]],[11,"try_new",E,R[315],5,[[["o"],["f"]],[R[13]]]],[11,R[316],E,"A getter for the underlying owner.",5,[[["self"]],["o"]]],[11,R[313],E,"Discards the dependent object and returns the owner.",5,[[],["o"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[47]]]],[11,"cmp",E,E,4,[[["self"]],[R[47]]]],[11,"from",E,E,3,[[["o"]],["self"]]],[11,"from",E,E,4,[[["o"]],["self"]]],[11,"from",E,E,3,[[[R[305]]],["self"]]],[11,R[63],E,E,3,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,R[63],E,E,4,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"as_mut",E,E,4,[[["self"]],[T]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"as_ref",E,E,3,[[["self"]],[T]]],[11,"as_ref",E,E,4,[[["self"]],[T]]],[11,R[60],E,E,5,[[["self"]]]],[11,R[60],E,E,4,[[["self"]],[T]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[[R[13],["error"]],["error"]]]],[11,"deref",E,E,5,[[["self"]]]],[11,"deref",E,E,3,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,R[41],E,E,3,[[["self"]],[T]]]],"p":[[8,R[317]],[8,"ToHandle"],[8,R[318]],[3,R[319]],[3,R[320]],[3,R[321]],[8,"Erased"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,R[285],E,R[2732],N,N],[3,"Once",E,"A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex",E,"Raw mutex type backed by the parking lot.",N,N],[3,R[770],E,"Raw reader-writer lock type backed by the parking lot.",N,N],[3,R[2770],E,"Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState",E,"Current state of a `Once`.",N,N],[13,"New",E,"A closure has not been executed yet",0,N],[13,"Poisoned",E,"A closure was executed but panicked.",0,N],[13,"InProgress",E,"A thread is currently executing a closure.",0,N],[13,"Done",E,"A closure has completed successfully.",0,N],[11,"timed_out",E,"Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new",E,"Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one",E,"Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all",E,"Wakes up all blocked threads on this condvar.",2,[[["self"]],[R[9]]]],[11,"wait",E,"Blocks the current thread until this condition variable…",2,[[[R[280]],["self"]]]],[11,"wait_until",E,R[2733],2,[[[R[280]],["self"],["instant"]],[R[284]]]],[11,"wait_for",E,R[2733],2,[[[R[280]],["self"],[R[411]]],[R[284]]]],[11,"poisoned",E,"Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done",E,"Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new",E,"Creates a new `Once` value.",3,[[],["once"]]],[11,"state",E,"Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once",E,"Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force",E,"Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,R[760],E,R[2734],N,N],[6,"Mutex",E,R[2735],N,N],[6,R[286],E,R[2736],N,N],[6,R[763],E,R[2737],N,N],[6,R[761],E,R[2738],N,N],[6,R[762],E,R[2739],N,N],[6,R[765],E,R[2740],N,N],[6,R[766],E,R[2741],N,N],[6,"RwLock",E,R[2742],N,N],[6,R[288],E,R[2743],N,N],[6,R[764],E,R[2744],N,N],[6,R[289],E,R[2745],N,N],[17,"ONCE_INIT",E,"Initialization value for static `Once` values.",N,N],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[77],E,E,2,[[],["condvar"]]],[11,R[77],E,E,3,[[],["once"]]],[11,"clone",E,E,1,[[["self"]],[R[284]]]],[11,"clone",E,E,0,[[["self"]],["oncestate"]]],[11,"eq",E,E,1,[[[R[284]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[284]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["oncestate"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"lock",E,E,4,[[["self"]]]],[11,R[698],E,E,4,[[["self"]],["bool"]]],[11,"unlock",E,E,4,[[["self"]]]],[11,R[695],E,E,4,[[["self"]]]],[11,"bump",E,E,4,[[["self"]]]],[11,R[706],E,E,4,[[["instant"],["self"]],["bool"]]],[11,R[705],E,E,4,[[["self"],[R[411]]],["bool"]]],[11,R[2746],E,E,6,[[["self"]],[R[9]]]],[11,R[2747],E,E,5,[[["self"]]]],[11,R[2748],E,E,5,[[["self"]],["bool"]]],[11,R[2749],E,E,5,[[["self"]]]],[11,R[2750],E,E,5,[[["self"]]]],[11,R[2751],E,E,5,[[["self"]],["bool"]]],[11,R[2752],E,E,5,[[["self"]]]],[11,R[2753],E,E,5,[[["self"]]]],[11,R[2754],E,E,5,[[["self"]]]],[11,R[754],E,E,5,[[["self"]]]],[11,R[756],E,E,5,[[["self"]]]],[11,R[728],E,E,5,[[["self"]]]],[11,R[2755],E,E,5,[[["self"]],["bool"]]],[11,R[2756],E,E,5,[[["self"]],["bool"]]],[11,R[2757],E,E,5,[[["self"],[R[411]]],["bool"]]],[11,R[2758],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[2759],E,E,5,[[["self"]]]],[11,R[2760],E,E,5,[[["self"]],["bool"]]],[11,R[2761],E,E,5,[[["self"]],["bool"]]],[11,R[2762],E,E,5,[[["self"]],["bool"]]],[11,R[2763],E,E,5,[[["self"]]]],[11,R[2764],E,E,5,[[["self"]],["bool"]]],[11,R[2765],E,E,5,[[["self"]]]],[11,"upgrade",E,E,5,[[["self"]]]],[11,R[744],E,E,5,[[["self"]],["bool"]]],[11,R[2766],E,E,5,[[["self"]]]],[11,R[758],E,E,5,[[["self"]]]],[11,R[2767],E,E,5,[[["self"]]]],[11,R[746],E,E,5,[[["self"]]]],[11,R[2768],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[2769],E,E,5,[[["self"],[R[411]]],["bool"]]],[11,R[750],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[748],E,E,5,[[["self"],[R[411]]],["bool"]]]],"p":[[4,"OnceState"],[3,R[285]],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,R[770]],[3,R[2770]]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken",R[2726],"A value associated with a parked thread which can be used…",N,N],[12,"0",E,E,0,N],[3,R[2730],E,"Result of an unpark operation.",N,N],[12,"unparked_threads",E,"The number of threads that were unparked.",1,N],[12,"requeued_threads",E,"The number of threads that were requeued.",1,N],[12,"have_more_threads",E,"Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair",E,"This is set to true on average once every 0.5ms for any…",1,N],[3,R[2731],E,"A value which is passed from an unparker to a parked thread.",N,N],[12,"0",E,E,2,N],[3,"SpinWait",E,"A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp",E,"Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark",E,"Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip",E,"Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop",E,"Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult",E,"Result of a park operation.",N,N],[13,"Unparked",E,"We were unparked by another thread with the given token.",4,N],[13,"Invalid",E,"The validation callback returned false.",4,N],[13,"TimedOut",E,"The timeout expired.",4,N],[4,"RequeueOp",E,"Operation that `unpark_requeue` should perform.",N,N],[13,"Abort",E,"Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest",E,"Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll",E,"Requeue all threads onto the target queue.",5,N],[13,"UnparkOne",E,"Unpark one thread and leave the rest parked. No requeuing…",5,N],[13,"RequeueOne",E,"Requeue one thread and leave the rest parked on the…",5,N],[5,"park",E,"Parks the current thread in the queue associated with the…",N,[[[T],[R[45],["instant"]],[R[9]],["instant"],[R[2729]],["b"],["v"]],[R[2728]]]],[5,"unpark_all",E,"Unparks all threads in the queue associated with the given…",N,[[[R[9]],[R[2727]]],[R[9]]]],[5,"unpark_filter",E,"Unparks a number of threads from the front of the queue…",N,[[["c"],[R[9]],["f"]],[R[2725]]]],[5,"unpark_one",E,"Unparks one thread from the queue associated with the…",N,[[["c"],[R[9]]],[R[2725]]]],[5,"unpark_requeue",E,"Removes all threads from the queue associated with…",N,[[["c"],[R[9]],["v"]],[R[2725]]]],[11,"is_unparked",E,"Returns true if we were unparked by another thread.",4,[[],["bool"]]],[11,"new",E,"Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset",E,"Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin",E,"Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield",E,"Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock",E,"[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[[R[9]]]]],[5,"release_resource",E,"Release a resource identified by key in the deadlock…",N,[[[R[9]]]]],[17,"DEFAULT_PARK_TOKEN",R[2726],"A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN",E,"A default unpark token to use.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[77],E,E,1,[[],[R[2725]]]],[11,R[77],E,E,6,[[],["spinwait"]]],[11,"clone",E,E,4,[[["self"]],[R[2728]]]],[11,"clone",E,E,1,[[["self"]],[R[2725]]]],[11,"clone",E,E,5,[[["self"]],["requeueop"]]],[11,"clone",E,E,3,[[["self"]],["filterop"]]],[11,"clone",E,E,2,[[["self"]],[R[2727]]]],[11,"clone",E,E,0,[[["self"]],[R[2729]]]],[11,"eq",E,E,4,[[[R[2728]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[2728]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2725]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2725]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["requeueop"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["filterop"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2727]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2727]]],["bool"]]],[11,"eq",E,E,0,[[[R[2729]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[2729]],["self"]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]]],"p":[[3,"ParkToken"],[3,R[2730]],[3,R[2731]],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[554],R[542],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[1718],N,N],[3,"Literal",E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,R[552],E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal",E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,R[553],E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,R[1812],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[54],R[549],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[542],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[543]]]],[11,"empty",E,E,3,[[],[R[543]]]],[11,R[73],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[545],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[544]],[R[543]]],["group"]]],[11,R[544],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[544]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[543]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,R[545],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[545],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[2002],7,[[["span"],["str"]],["ident"]]],[11,"span",E,R[2003],7,[[["self"]],["span"]]],[11,R[545],E,R[2004],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[546],8,[[["u8"]],[R[547]]]],[11,"u16_suffixed",E,R[546],8,[[["u16"]],[R[547]]]],[11,"u32_suffixed",E,R[546],8,[[["u32"]],[R[547]]]],[11,"u64_suffixed",E,R[546],8,[[["u64"]],[R[547]]]],[11,"usize_suffixed",E,R[546],8,[[[R[9]]],[R[547]]]],[11,"i8_suffixed",E,R[546],8,[[["i8"]],[R[547]]]],[11,"i16_suffixed",E,R[546],8,[[["i16"]],[R[547]]]],[11,"i32_suffixed",E,R[546],8,[[["i32"]],[R[547]]]],[11,"i64_suffixed",E,R[546],8,[[["i64"]],[R[547]]]],[11,"isize_suffixed",E,R[546],8,[[["isize"]],[R[547]]]],[11,"u128_suffixed",E,R[546],8,[[["u128"]],[R[547]]]],[11,"i128_suffixed",E,R[546],8,[[["i128"]],[R[547]]]],[11,"u8_unsuffixed",E,R[548],8,[[["u8"]],[R[547]]]],[11,"u16_unsuffixed",E,R[548],8,[[["u16"]],[R[547]]]],[11,"u32_unsuffixed",E,R[548],8,[[["u32"]],[R[547]]]],[11,"u64_unsuffixed",E,R[548],8,[[["u64"]],[R[547]]]],[11,"usize_unsuffixed",E,R[548],8,[[[R[9]]],[R[547]]]],[11,"i8_unsuffixed",E,R[548],8,[[["i8"]],[R[547]]]],[11,"i16_unsuffixed",E,R[548],8,[[["i16"]],[R[547]]]],[11,"i32_unsuffixed",E,R[548],8,[[["i32"]],[R[547]]]],[11,"i64_unsuffixed",E,R[548],8,[[["i64"]],[R[547]]]],[11,"isize_unsuffixed",E,R[548],8,[[["isize"]],[R[547]]]],[11,"u128_unsuffixed",E,R[548],8,[[["u128"]],[R[547]]]],[11,"i128_unsuffixed",E,R[548],8,[[["i128"]],[R[547]]]],[11,"f64_unsuffixed",E,E,8,[[["f64"]],[R[547]]]],[11,"f64_suffixed",E,E,8,[[["f64"]],[R[547]]]],[11,"f32_unsuffixed",E,"Creates a new unsuffixed floating-point literal.",8,[[["f32"]],[R[547]]]],[11,"f32_suffixed",E,E,8,[[["f32"]],[R[547]]]],[11,"string",E,E,8,[[["str"]],[R[547]]]],[11,"character",E,E,8,[[["char"]],[R[547]]]],[11,"byte_string",E,E,8,[[],[R[547]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,R[545],E,E,8,[[["self"],["span"]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[43],E,E,3,[[],["i"]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[62],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[62],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[62],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",R[549],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[43],E,E,10,[[],["i"]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"extend",R[542],E,3,[[["self"],[R[44]]]]],[11,"extend",E,E,3,[[["self"],[R[44]]]]],[11,R[77],E,E,3,[[],["self"]]],[11,"next",R[549],E,10,[[["self"]],[[R[550]],[R[45],[R[550]]]]]],[11,"clone",R[542],E,3,[[["self"]],[R[543]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[550]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[544]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],[R[547]]]],[11,"clone",R[549],E,10,[[["self"]],["intoiter"]]],[11,"cmp",R[542],E,7,[[["self"],["ident"]],[R[47]]]],[11,"from",E,E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[543]]],[R[543]]]],[11,"from",E,E,0,[[["group"]],[R[550]]]],[11,"from",E,E,0,[[["ident"]],[R[550]]]],[11,"from",E,E,0,[[["punct"]],[R[550]]]],[11,"from",E,E,0,[[[R[547]]],[R[550]]]],[11,R[43],E,E,3,[[],["intoiter"]]],[11,R[63],E,E,7,[[["self"],["ident"]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",E,E,1,[[["self"],[R[544]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["spacing"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,7,[[[T],["self"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[549],E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[542],E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,R[551],E,E,3,[[["str"]],[[R[13],[R[543],"lexerror"]],["lexerror"],[R[543]]]]],[11,"hash",E,E,7,[[["self"],["h"]]]],[11,R[196],E,E,3,[[[R[44]]],["self"]]],[11,R[196],E,E,3,[[[R[44]]],["self"]]]],"p":[[4,R[552]],[4,R[553]],[4,"Spacing"],[3,R[554]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,R[54]]]};
searchIndex["quick_error"]={"doc":"A macro which makes errors easy to write","i":[[3,"Context",R[241],"Generic context type",N,N],[12,"0",E,E,0,N],[12,"1",E,E,0,N],[8,R[242],E,"Result extension trait adding a `context` method",N,N],[10,"context",E,"The method is use to add context information to current…",1,[[["x"]],[["context"],[R[13],["context"]]]]],[14,R[241],E,"Main macro that does all the work",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]]],"p":[[3,"Context"],[8,R[242]]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[944],"quote","TokenStream extension trait with methods for appending…",N,N],[10,"append",E,R[941],0,[[["self"],[U]]]],[10,"append_all",E,R[941],0,[[["self"],["i"]]]],[10,"append_separated",E,R[941],0,[[["self"],["i"],[U]]]],[10,"append_terminated",E,R[941],0,[[["self"],["i"],[U]]]],[8,"ToTokens",E,"Types that can be interpolated inside a [`quote!`]…",N,N],[10,R[2001],E,"Write `self` to the given `TokenStream`.",1,[[[R[543]],["self"]]]],[11,R[942],E,R[943],1,[[],[R[543]]]],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,R[942],E,R[943],1,[[],[R[543]]]]],"p":[[8,R[944]],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[2114],N,N],[10,R[20],E,R[2115],0,[[["self"]],["u32"]]],[10,R[21],E,R[2116],0,[[["self"]],["u64"]]],[10,R[22],E,R[905],0,[[["self"]]]],[10,R[23],E,R[2117],0,[[["self"]],[[R[13],["error"]],["error"]]]],[8,"CryptoRng",E,R[2118],N,N],[8,R[37],E,R[2119],N,N],[16,"Seed",E,R[2120],1,N],[10,R[24],E,R[2121],1,[[],["self"]]],[11,R[25],E,R[2122],1,[[["u64"]],["self"]]],[11,R[26],E,R[2123],1,[[["r"]],[["error"],[R[13],["error"]]]]],[4,R[33],E,R[2105],N,N],[13,R[2106],E,R[2107],2,N],[13,R[2297],E,R[2108],2,N],[13,"Transient",E,R[2109],2,N],[13,R[99],E,R[2110],2,N],[3,"Error",E,R[2111],N,N],[12,"kind",E,R[2112],3,N],[12,"msg",E,R[2113],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[891]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions.",N,N],[3,R[2098],R[864],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[2066],N,N],[3,R[2099],E,R[2065],N,N],[3,"Open01",E,R[2065],N,N],[3,"Bernoulli",E,"The Bernoulli distribution.",N,N],[3,R[2091],E,"A distribution using weighted sampling to pick a…",N,N],[3,R[2092],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,R[893],E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[895],E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[894],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",4,N],[12,"item",E,"The actual item which is being weighted",4,N],[3,R[898],E,"A distribution that selects from a finite collection of…",N,N],[4,R[2087],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided iterator contained no items.",5,N],[13,"NegativeWeight",E,"A weight lower than zero was used.",5,N],[13,"AllWeightsZero",E,"All items in the provided iterator had a weight of zero.",5,N],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[2077],R[2066],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[2100],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[2101],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[2088],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",6,N],[8,R[2089],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",7,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",7,[[["b2"],["b1"]],["self"]]],[10,R[2067],E,"Construct self, with inclusive bounds `[low, high]`.",7,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",7,[[["self"],["r"]]]],[11,R[2083],E,"Sample a single value uniformly from a range with…",7,[[["b2"],["b1"],["r"]]]],[8,R[2090],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[41],E,"Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new",E,R[2068],9,[[["b2"],["b1"]],["uniform"]]],[11,R[2067],E,R[2068],9,[[["b2"],["b1"]],["uniform"]]],[11,"new",R[864],"Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",10,[[["u32"]],["bernoulli"]]],[11,"new",E,"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[13],[R[2070],R[2069]]],[R[2069]],[R[2070]]]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[2085]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],[R[887]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],[R[889]]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],[R[9]]],["dirichlet"]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],["triangular"]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[2093],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[2071],E,"Create an iterator that generates random values of `T`,…",29,[[["r"],["self"]],["distiter"]]],[11,"new",E,"Create a new `WeightedChoice`.",30,[[],["weightedchoice"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng",E,"Pseudo-random number generators.",N,N],[0,"rngs",E,"Random number generators and adapters for common usage:",N,N],[3,R[295],R[2078],R[908],N,N],[4,R[294],E,R[2132],N,N],[13,"NoTimer",E,R[909],31,N],[13,R[910],E,R[911],31,N],[13,R[912],E,R[913],31,N],[13,R[914],E,R[915],31,N],[13,R[916],E,R[917],31,N],[3,"OsRng",E,R[927],N,N],[3,"EntropyRng",E,"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,R[903],E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[2080],"An RNG that reads random bytes straight from any type…",N,N],[3,R[899],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",33,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",33,[[["self"]],[["error"],[R[13],["error"]]]]],[11,"new",R[2078],"Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[2081],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[2102],R[2084],"Iterator over multiple choices, as returned by…",N,N],[5,R[2071],E,"Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],[R[9]]],[["vec"],[R[13],["vec","vec"]]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,[[["r"],[R[9]]],["vec"]]],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,[[["r"],[R[9]]],[["vec"],[T]]]],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[2082],"A vector of indices.",N,N],[4,R[2103],E,"Return type of `IndexVec::iter`.",N,N],[4,R[2104],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],[R[9]]],["indexvec"]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],[R[9]]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],[R[9]]],[R[9]]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[],[[R[9]],["vec",[R[9]]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[43],E,"Convert into an iterator over the indices as a sequence of…",36,[[],[R[2086]]]],[8,R[2094],R[2084],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],[R[45]]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],[R[45]]]],[10,R[2072],E,"Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],[R[9]]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[[R[2069]],[R[13],[R[2069]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[[R[13],[R[2069]]],[R[2069]]]]],[10,"shuffle",E,R[2076],37,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,[[["self"],["r"],[R[9]]]]],[8,R[2095],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["r"]],[R[45]]]],[11,"choose_multiple_fill",E,R[2073],38,[[["r"]],[R[9]]]],[11,R[2072],E,R[2073],38,[[["r"],[R[9]]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["self"],[R[2074]]],[T]]],[11,R[2071],E,"Create an iterator that generates values using the given…",39,[[["self"],["d"]],[["distiter"],[R[2074]]]]],[11,"fill",E,R[2075],39,[[["self"],[T]]]],[11,"try_fill",E,R[2075],39,[[["self"],[T]],[["error"],[R[13],["error"]]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["self"],["u32"]],["bool"]]],[11,"choose",E,"Return a random element from `values`.",39,[[["self"]],[[R[45]],[T]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",39,[[["self"]],[[T],[R[45]]]]],[11,"shuffle",E,R[2076],39,[[["self"]]]],[8,R[2096],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[2097],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[2079],E,"Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",R[864],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"from",R[2077],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",R[864],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[[T],["self"]]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[[T],["self"]]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[[T],["self"]]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[[T],["self"]]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[[T],["self"]]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[[T],["self"]]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[[T],["self"]]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[[T],["self"]]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[[T],["self"]]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[[T],["self"]]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[[T],["self"]]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[[T],["self"]]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[[T],["self"]]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[[T],["self"]]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[[T],["self"]]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[[T],["self"]]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[43],E,E,47,[[],["i"]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[[T],["self"]]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",R[2077],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[[T],["self"]]]],[11,R[12],E,E,49,[[[U]],[R[13]]]],[11,R[14],E,E,49,[[],[R[13]]]],[11,R[15],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[R[42]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[[T],["self"]]]],[11,R[12],E,E,50,[[[U]],[R[13]]]],[11,R[14],E,E,50,[[],[R[13]]]],[11,R[15],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[R[42]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[[T],["self"]]]],[11,R[12],E,E,51,[[[U]],[R[13]]]],[11,R[14],E,E,51,[[],[R[13]]]],[11,R[15],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[["self"]],[R[42]]]],[11,"from",R[2078],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[[T],["self"]]]],[11,R[12],E,E,52,[[[U]],[R[13]]]],[11,R[14],E,E,52,[[],[R[13]]]],[11,R[15],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[["self"]],[R[42]]]],[11,R[62],E,E,31,[[["self"]],["string"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[[T],["self"]]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[[T],["self"]]]],[11,R[12],E,E,53,[[[U]],[R[13]]]],[11,R[14],E,E,53,[[],[R[13]]]],[11,R[15],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[R[42]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,R[2079],E,E,54,[[],["r"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[[T],["self"]]]],[11,R[12],E,E,54,[[[U]],[R[13]]]],[11,R[14],E,E,54,[[],[R[13]]]],[11,R[15],E,E,54,[[["self"]],[T]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[R[42]]]],[11,R[2079],E,E,55,[[],["r"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[[T],["self"]]]],[11,R[12],E,E,55,[[[U]],[R[13]]]],[11,R[14],E,E,55,[[],[R[13]]]],[11,R[15],E,E,55,[[["self"]],[T]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[R[42]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[[T],["self"]]]],[11,R[12],E,E,56,[[[U]],[R[13]]]],[11,R[14],E,E,56,[[],[R[13]]]],[11,R[15],E,E,56,[[["self"]],[T]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[R[42]]]],[11,"from",R[2080],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[[T],["self"]]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,"from",R[2081],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[[T],["self"]]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",R[2084],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[43],E,E,57,[[],["i"]]],[11,R[12],E,E,57,[[[U]],[R[13]]]],[11,R[14],E,E,57,[[],[R[13]]]],[11,R[15],E,E,57,[[["self"]],[T]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[R[42]]]],[11,"from",R[2082],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[[T],["self"]]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[43],E,E,58,[[],["i"]]],[11,R[12],E,E,58,[[[U]],[R[13]]]],[11,R[14],E,E,58,[[],[R[13]]]],[11,R[15],E,E,58,[[["self"]],[T]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[R[42]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[43],E,E,59,[[],["i"]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[[T],["self"]]]],[11,R[12],E,E,59,[[[U]],[R[13]]]],[11,R[14],E,E,59,[[],[R[13]]]],[11,R[15],E,E,59,[[["self"]],[T]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[R[42]]]],[11,"from","rand",E,3,[[[R[292]]],["error"]]],[11,"eq",R[2078],E,31,[[["self"],[R[292]]],["bool"]]],[11,"fmt",E,E,31,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[20],E,E,52,[[["self"]],["u32"]]],[11,R[21],E,E,52,[[["self"]],["u64"]]],[11,R[22],E,E,52,[[["self"]]]],[11,R[23],E,E,52,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,52,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,31,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,31,[[["self"]],[R[292]]]],[11,"clone",E,E,52,[[["self"]],[R[293]]]],[11,R[31],E,E,31,[[["self"]],["str"]]],[11,"fmt","rand",E,3,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"eq",E,E,2,[[["self"],[R[1]]],["bool"]]],[11,"read",E,E,0,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[31],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[[R[45],["error"]],["error"]]]],[11,"clone",E,E,2,[[["self"]],[R[1]]]],[11,"fmt",R[2078],E,53,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,53,[[["self"]],["osrng"]]],[11,R[20],E,E,53,[[["self"]],["u32"]]],[11,R[21],E,E,53,[[["self"]],["u64"]]],[11,R[22],E,E,53,[[["self"]]]],[11,R[23],E,E,53,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"new",R[2077],E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2083],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]]]],[11,R[2083],E,E,50,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]]]],[11,R[2083],E,E,50,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,51,[[["b2"],["b1"]],["self"]]],[11,R[2067],E,E,51,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,51,[[["self"],["r"]],[R[411]]]],[11,"sample",E,E,9,[[["self"],["r"]],["x"]]],[11,"sample",R[864],E,10,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,11,[[["self"],["r"]],[R[9]]]],[11,"sample",E,E,12,[[["self"],["r"]]]],[11,"sample",E,E,13,[[["self"],["r"]]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,45,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,48,[[["self"],["r"]],[R[9]]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["char"]]],[11,"sample",E,E,42,[[["self"],["r"]],["char"]]],[11,"sample",E,E,48,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]],[R[45]]]],[11,"sample",E,E,48,[[["self"],["r"]],["wrapping"]]],[11,"sample",E,E,30,[[["self"],["r"]],[T]]],[11,R[77],R[2078],E,34,[[],["self"]]],[11,R[77],E,E,56,[[],[R[891]]]],[11,"next",R[864],E,47,[[["self"]],[R[45]]]],[11,R[46],E,E,47,[[["self"]]]],[11,"next",R[2082],E,58,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,R[46],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[45]]]],[11,R[46],E,E,59,[[["self"]]]],[11,"next",R[2084],E,57,[[["self"]],[R[45]]]],[11,R[46],E,E,57,[[["self"]]]],[11,"clone",R[2077],E,9,[[["self"]],["uniform"]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[864],E,10,[[["self"]],["bernoulli"]]],[11,"clone",E,E,11,[[["self"]],[R[2070]]]],[11,"clone",E,E,5,[[["self"]],[R[2069]]]],[11,"clone",E,E,12,[[["self"]],[R[2085]]]],[11,"clone",E,E,13,[[["self"]],["unitcircle"]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],[R[887]]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],[R[888]]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],[R[889]]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],["dirichlet"]]],[11,"clone",E,E,27,[[["self"]],["triangular"]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],["openclosed01"]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",E,E,4,[[["self"]],["weighted"]]],[11,"clone",R[2080],E,33,[[["self"]],[R[884]]]],[11,"clone",R[2081],E,35,[[["self"]],["steprng"]]],[11,"clone",R[2078],E,54,[[["self"]],["smallrng"]]],[11,"clone",E,E,55,[[["self"]],["stdrng"]]],[11,"clone",E,E,56,[[["self"]],[R[891]]]],[11,"clone",R[2082],E,36,[[["self"]],["indexvec"]]],[11,"clone",E,E,59,[[["self"]],[R[2086]]]],[11,"from",R[2077],E,9,[[["range"]],["uniform"]]],[11,"from",E,E,9,[[["rangeinclusive"]],["uniform"]]],[11,"from",R[2082],E,36,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,36,[[[R[9]],["vec",[R[9]]]],["self"]]],[11,"len",R[2084],E,57,[[["self"]],[R[9]]]],[11,"eq",R[864],E,5,[[["self"],[R[2069]]],["bool"]]],[11,"eq",R[2082],E,36,[[["indexvec"],["self"]],["bool"]]],[11,"fmt",R[2077],E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,49,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,51,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[864],E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,21,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,25,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,26,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,43,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,48,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,30,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2080],E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,33,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2078],E,34,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2081],E,35,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2078],E,54,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,55,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,56,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2082],E,36,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,58,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,59,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2084],E,57,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[864],E,5,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[20],R[2080],E,32,[[["self"]],["u32"]]],[11,R[21],E,E,32,[[["self"]],["u64"]]],[11,R[22],E,E,32,[[["self"]]]],[11,R[23],E,E,32,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],E,E,33,[[["self"]],["u32"]]],[11,R[21],E,E,33,[[["self"]],["u64"]]],[11,R[22],E,E,33,[[["self"]]]],[11,R[23],E,E,33,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],R[2078],E,34,[[["self"]],["u32"]]],[11,R[21],E,E,34,[[["self"]],["u64"]]],[11,R[22],E,E,34,[[["self"]]]],[11,R[23],E,E,34,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],R[2081],E,35,[[["self"]],["u32"]]],[11,R[21],E,E,35,[[["self"]],["u64"]]],[11,R[22],E,E,35,[[["self"]]]],[11,R[23],E,E,35,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],R[2078],E,54,[[["self"]],["u32"]]],[11,R[21],E,E,54,[[["self"]],["u64"]]],[11,R[22],E,E,54,[[["self"]]]],[11,R[23],E,E,54,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],E,E,55,[[["self"]],["u32"]]],[11,R[21],E,E,55,[[["self"]],["u64"]]],[11,R[22],E,E,55,[[["self"]]]],[11,R[23],E,E,55,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],E,E,56,[[["self"]],["u32"]]],[11,R[21],E,E,56,[[["self"]],["u64"]]],[11,R[22],E,E,56,[[["self"]]]],[11,R[23],E,E,56,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[24],E,E,54,[[],["self"]]],[11,R[26],E,E,54,[[[R[27]]],[[R[13],["error"]],["error"]]]],[11,R[24],E,E,55,[[],["self"]]],[11,R[26],E,E,55,[[[R[27]]],[[R[13],["error"]],["error"]]]],[11,R[2124],"rand",R[2125],2,[[],["bool"]]],[11,R[2126],E,R[2127],2,[[],["bool"]]],[11,R[31],E,R[2128],2,[[],["str"]]],[11,"new",E,R[2129],3,[[[R[1]],["str"]],["error"]]],[11,"with_cause",E,R[2130],3,[[["e"],[R[1]],["str"]],["error"]]],[11,"take_cause",E,R[2131],3,[[["self"]],[["box",["error"]],[R[45],["box"]]]]],[11,"new",R[2078],R[918],52,[[],[[R[292]],[R[293]],[R[13],[R[293],R[292]]]]]],[11,R[919],E,R[920],52,[[],[R[293]]]],[11,R[921],E,R[922],52,[[["self"],["u8"]]]],[11,R[923],E,R[924],52,[[["self"]],[[R[292]],[R[13],["u8",R[292]]],["u8"]]]],[11,R[925],E,R[926],52,[[["self"],["bool"]],["i64"]]],[11,"new",E,R[928],53,[[],[["osrng"],[R[13],["osrng","error"]],["error"]]]]],"p":[[8,"RngCore"],[8,R[37]],[4,R[33]],[3,"Error"],[3,"Weighted"],[4,R[2087]],[8,R[2088]],[8,R[2089]],[8,R[2090]],[3,"Uniform"],[3,"Bernoulli"],[3,R[2091]],[3,R[2092]],[3,"UnitCircle"],[3,"Gamma"],[3,R[893]],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,R[895]],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,R[2093]],[3,R[898]],[4,R[294]],[3,"ReadRng"],[3,R[899]],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,R[2094]],[8,R[2095]],[8,"Rng"],[8,R[2096]],[8,R[2097]],[3,R[2098]],[3,R[2099]],[3,"Open01"],[3,R[894]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[2100]],[3,R[2101]],[3,R[295]],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,R[903]],[3,R[2102]],[4,R[2103]],[4,R[2104]]]};
searchIndex["rand_chacha"]={"doc":R[947],"i":[[3,R[865],"rand_chacha",R[950],N,N],[3,R[949],E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[R[948]]],["self"]]],[11,"fmt",E,E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],[R[881]]]],[11,"clone",E,E,1,[[["self"]],[R[948]]]],[11,R[24],E,E,0,[[],["self"]]],[11,R[26],E,E,0,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[24],E,E,1,[[],["self"]]],[11,R[680],E,E,1,[[["self"]]]],[11,R[20],E,E,0,[[["self"]],["u32"]]],[11,R[21],E,E,0,[[["self"]],["u64"]]],[11,R[22],E,E,0,[[["self"]]]],[11,R[23],E,E,0,[[["self"]],[[R[13],["error"]],["error"]]]]],"p":[[3,R[865]],[3,R[949]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[4,R[33],R[10],R[2105],N,N],[13,R[2106],E,R[2107],0,N],[13,R[2297],E,R[2108],0,N],[13,"Transient",E,R[2109],0,N],[13,R[99],E,R[2110],0,N],[3,"Error",E,R[2111],N,N],[12,"kind",E,R[2112],1,N],[12,"msg",E,R[2113],1,N],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[8,R[36],R[16],"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",2,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",2,N],[10,R[680],E,"Generate a new block of results.",2,[[["self"]]]],[3,R[34],E,R[2],N,N],[12,"core",E,R[3],3,N],[3,R[35],E,R[2],N,N],[12,"core",E,R[3],4,N],[0,"impls",R[10],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[11],N,[[]]],[5,"fill_via_u64_chunks",E,R[11],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[10],"Little-Endian utilities",N,N],[5,R[592],"rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,R[593],E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[10],R[2114],N,N],[10,R[20],E,R[2115],5,[[["self"]],["u32"]]],[10,R[21],E,R[2116],5,[[["self"]],["u64"]]],[10,R[22],E,R[905],5,[[["self"]]]],[10,R[23],E,R[2117],5,[[["self"]],[["error"],[R[13],["error"]]]]],[8,"CryptoRng",E,R[2118],N,N],[8,R[37],E,R[2119],N,N],[16,"Seed",E,R[2120],6,N],[10,R[24],E,R[2121],6,[[],["self"]]],[11,R[25],E,R[2122],6,[[["u64"]],["self"]]],[11,R[26],E,R[2123],6,[[["r"]],[[R[13],["error"]],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",R[16],E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,"fmt",R[10],E,1,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[16],E,4,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[10],E,0,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"eq",E,E,0,[[["self"],[R[1]]],["bool"]]],[11,R[24],R[16],E,4,[[],[R[29]]]],[11,R[25],E,E,4,[[["u64"]],[R[29]]]],[11,R[26],E,E,4,[[["s"]],[[R[13],[R[29],"error"]],[R[29]],["error"]]]],[11,R[24],E,E,3,[[],[R[28]]]],[11,R[25],E,E,3,[[["u64"]],[R[28]]]],[11,R[26],E,E,3,[[["s"]],[[R[28]],["error"],[R[13],[R[28],"error"]]]]],[11,"read",R[10],E,5,[[["self"]],[["error"],[R[13],[R[9],"error"]],[R[9]]]]],[11,R[31],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[20],R[16],E,4,[[["self"]],["u32"]]],[11,R[21],E,E,4,[[["self"]],["u64"]]],[11,R[22],E,E,4,[[["self"]]]],[11,R[23],E,E,4,[[["self"]],[["error"],[R[13],["error"]]]]],[11,R[20],E,E,3,[[["self"]],["u32"]]],[11,R[21],E,E,3,[[["self"]],["u64"]]],[11,R[22],E,E,3,[[["self"]]]],[11,R[23],E,E,3,[[["self"]],[["error"],[R[13],["error"]]]]],[11,"clone",R[10],E,0,[[["self"]],[R[1]]]],[11,"clone",R[16],E,4,[[["self"]],[R[29]]]],[11,"clone",E,E,3,[[["self"]],[R[28]]]],[11,R[2124],R[10],R[2125],0,[[],["bool"]]],[11,R[2126],E,R[2127],0,[[],["bool"]]],[11,R[31],E,R[2128],0,[[],["str"]]],[11,"new",E,R[2129],1,[[[R[1]],["str"]],["error"]]],[11,"with_cause",E,R[2130],1,[[[R[1]],["e"],["str"]],["error"]]],[11,"take_cause",E,R[2131],1,[[["self"]],[[R[45],["box"]],["box",["error"]]]]],[11,"new",R[16],R[4],3,[[["r"]],[R[28]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,[[["self"]]]],[11,R[7],E,R[8],3,[[["self"],[R[9]]]]],[11,"new",E,R[4],4,[[["r"]],[R[29]]]],[11,"index",E,R[5],4,[[["self"]],[R[9]]]],[11,"reset",E,R[6],4,[[["self"]]]],[11,R[7],E,R[8],4,[[["self"],[R[9]]]]]],"p":[[4,R[33]],[3,"Error"],[8,R[36]],[3,R[34]],[3,R[35]],[8,"RngCore"],[8,R[37]]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc",R[950],N,N],[3,R[686],E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[24],E,E,0,[[],["self"]]],[11,R[26],E,E,0,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[24],E,"Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]],[11,R[680],E,E,1,[[["self"]]]],[11,R[20],E,E,0,[[["self"]],["u32"]]],[11,R[21],E,E,0,[[["self"]],["u64"]]],[11,R[22],E,E,0,[[["self"]]]],[11,R[23],E,E,0,[[["self"]],[[R[13],["error"]],["error"]]]]],"p":[[3,"Hc128Rng"],[3,R[686]]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[674],R[906],N,N],[3,R[900],R[677],"A random number generator that uses the ISAAC algorithm.",N,N],[3,R[685],E,"The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,R[675],E,R[679],0,[[["u64"]],["self"]]],[0,"isaac64",R[674],"The ISAAC-64 random number generator.",N,N],[3,R[683],R[678],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[684],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[675],E,R[676],1,[[["u64"]],["self"]]],[11,R[675],E,R[676],2,[[["u64"]],["self"]]],[11,"from",R[677],E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,"from",R[678],E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,"fmt",R[677],E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[678],E,1,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"clone",R[677],E,0,[[["self"]],[R[885]]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[678],E,1,[[["self"]],[R[882]]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[24],R[677],E,0,[[],["self"]]],[11,R[25],E,R[679],0,[[["u64"]],["self"]]],[11,R[26],E,E,0,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[24],E,E,3,[[],["self"]]],[11,R[25],E,R[679],3,[[["u64"]],["self"]]],[11,R[26],E,E,3,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[24],R[678],E,1,[[],["self"]]],[11,R[25],E,R[679],1,[[["u64"]],["self"]]],[11,R[26],E,E,1,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[24],E,E,2,[[],["self"]]],[11,R[25],E,E,2,[[["u64"]],["self"]]],[11,R[26],E,E,2,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[680],R[677],R[681],3,[[["self"],[R[682]]]]],[11,R[680],R[678],R[681],2,[[["self"],[R[682]]]]],[11,R[20],R[677],E,0,[[["self"]],["u32"]]],[11,R[21],E,E,0,[[["self"]],["u64"]]],[11,R[22],E,E,0,[[["self"]]]],[11,R[23],E,E,0,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[20],R[678],E,1,[[["self"]],["u32"]]],[11,R[21],E,E,1,[[["self"]],["u64"]]],[11,R[22],E,E,1,[[["self"]]]],[11,R[23],E,E,1,[[["self"]],[[R[13],["error"]],["error"]]]]],"p":[[3,R[900]],[3,R[683]],[3,R[684]],[3,R[685]]]};
searchIndex["rand_jitter"]={"doc":R[907],"i":[[3,R[295],"rand_jitter",R[908],N,N],[4,R[294],E,R[2132],N,N],[13,"NoTimer",E,R[909],0,N],[13,R[910],E,R[911],0,N],[13,R[912],E,R[913],0,N],[13,R[914],E,R[915],0,N],[13,R[916],E,R[917],0,N],[11,"new",E,R[918],1,[[],[[R[292]],[R[13],[R[293],R[292]]],[R[293]]]]],[11,R[919],E,R[920],1,[[],[R[293]]]],[11,R[921],E,R[922],1,[[["self"],["u8"]]]],[11,R[923],E,R[924],1,[[["self"]],[["u8"],[R[292]],[R[13],["u8",R[292]]]]]],[11,R[925],E,R[926],1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"eq",E,E,0,[[["self"],[R[292]]],["bool"]]],[11,"fmt",E,E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],[R[292]]]],[11,"clone",E,E,1,[[["self"]],[R[293]]]],[11,R[31],E,E,0,[[["self"]],["str"]]],[11,R[20],E,E,1,[[["self"]],["u32"]]],[11,R[21],E,E,1,[[["self"]],["u64"]]],[11,R[22],E,E,1,[[["self"]]]],[11,R[23],E,E,1,[[["self"]],[[R[13],["error"]],["error"]]]]],"p":[[4,R[294]],[3,R[295]]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[927],N,N],[11,"new",E,R[928],0,[[],[[R[13],["osrng","error"]],["osrng"],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,R[20],E,E,0,[[["self"]],["u32"]]],[11,R[21],E,E,0,[[["self"]],["u64"]]],[11,R[22],E,E,0,[[["self"]]]],[11,R[23],E,E,0,[[["self"]],[[R[13],["error"]],["error"]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","i":[[3,R[945],"rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[946],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[20],E,E,0,[[["self"]],["u32"]]],[11,R[21],E,E,0,[[["self"]],["u64"]]],[11,R[22],E,E,0,[[["self"]]]],[11,R[23],E,E,0,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[20],E,E,1,[[["self"]],["u32"]]],[11,R[21],E,E,1,[[["self"]],["u64"]]],[11,R[22],E,E,1,[[["self"]]]],[11,R[23],E,E,1,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[24],E,E,0,[[],["self"]]],[11,R[24],E,E,1,[[],["self"]]]],"p":[[3,R[945]],[3,R[946]]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","i":[[3,R[687],"rand_xorshift","An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],[R[870]]]],[11,R[24],E,E,0,[[],["self"]]],[11,R[26],E,E,0,[[[R[27]]],[["error"],[R[13],["error"]]]]],[11,R[20],E,E,0,[[["self"]],["u32"]]],[11,R[21],E,E,0,[[["self"]],["u64"]]],[11,R[22],E,E,0,[[["self"]]]],[11,R[23],E,E,0,[[["self"]],[[R[13],["error"]],["error"]]]]],"p":[[3,R[687]]]};
searchIndex["rgb"]={"doc":"Basic struct for `RGB` and `RGBA` pixels. Packed, with red…","i":[[3,"RGB","rgb","The RGB pixel",N,N],[12,"r",E,"Red",0,N],[12,"g",E,"Green",0,N],[12,"b",E,"Blue",0,N],[3,"RGBA",E,"The RGBA pixel",N,N],[12,"r",E,"Red",1,N],[12,"g",E,"Green",1,N],[12,"b",E,"Blue",1,N],[12,"a",E,"Alpha",1,N],[11,"new",E,R[256],0,[[[T]],["self"]]],[11,"iter",E,R[257],0,[[["self"]],[["cloned",["iter"]],["iter"]]]],[11,"alpha",E,E,0,[[["self"],[T]],["rgba"]]],[11,R[243],E,E,0,[[["a"],["self"]],["rgba"]]],[11,"new",E,R[244],1,[[[T]],["self"]]],[11,R[243],E,R[244],1,[[["a"],[T]],["self"]]],[11,"iter",E,R[258],1,[[["self"]],[["cloned",["iter"]],["iter"]]]],[11,"rgb",E,R[259],1,[[["self"]],["rgb"]]],[11,"rgb_mut",E,R[260],1,[[["self"]],["rgb"]]],[11,"map_rgb",E,R[261],1,[[["self"],["f"]],["rgba"]]],[0,"alt",E,"BGR/BGRA alernative layouts & grayscale",N,N],[3,"BGR",R[252],"RGB in reverse byte order",N,N],[12,"b",E,R[245],2,N],[12,"g",E,"Green",2,N],[12,"r",E,"Red last",2,N],[3,"BGRA",E,"BGR+A",N,N],[12,"b",E,R[245],3,N],[12,"g",E,"Green",3,N],[12,"r",E,"Red",3,N],[12,"a",E,"Alpha last",3,N],[3,"Gray",E,"Grayscale. Use `.0` or `*` (deref) to access the value.",N,N],[12,"0",E,R[246],4,N],[3,R[263],E,"Grayscale with alpha. Use `.0`/`.1` to access.",N,N],[12,"0",E,R[246],5,N],[12,"1",E,"alpha",5,N],[6,"BGR8",E,E,N,N],[6,"BGR16",E,R[247],N,N],[6,"BGRA8",E,E,N,N],[6,"BGRA16",E,R[247],N,N],[6,"GRAY8",E,E,N,N],[6,"GRAY16",E,R[248],N,N],[6,"GRAYA8",E,E,N,N],[6,"GRAYA16",E,R[248],N,N],[11,"gray",E,"Copy `Gray` component out of the `GrayAlpha` struct",5,[[["self"]],["gray"]]],[11,"gray_mut",E,"Provide a mutable view of only `Gray` component (leaving…",5,[[["self"]],["gray"]]],[11,"map_gray",E,"Create new `GrayAlpha` with the same alpha value, but…",5,[[["self"],["f"]],[R[253]]]],[6,"RGB8","rgb","8-bit RGB",N,N],[6,"RGB16",E,"16-bit RGB in machine's native endian",N,N],[6,"RGBA8",E,"8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.",N,N],[6,"RGBA16",E,"16-bit RGB in machine's native endian. 0 = transparent,…",N,N],[8,R[264],E,"Casting the struct to slices of its components",N,N],[10,R[251],E,"The components interpreted as an array, e.g. one `RGB`…",6,[[["self"]]]],[10,R[250],E,E,6,[[["self"]]]],[8,R[265],E,"Casting a slice of `RGB/A` values to a slice of `u8`",N,N],[11,"as_bytes",E,R[249],7,[[["self"]]]],[11,R[262],E,R[249],7,[[["self"]]]],[8,R[266],E,"Applying operation to every component",N,N],[10,"map",E,"Convenience function (equivalent of…",8,[[["self"],["callback"]],["destpixel"]]],[8,"AsPixels",E,"Casts a slice of bytes into a slice of pixels, e.g. `[u8]`…",N,N],[10,"as_pixels",E,"Reinterpret the slice as a read-only/shared slice of…",9,[[["self"]]]],[10,"as_pixels_mut",E,"Reinterpret the slice as a mutable/exclusive slice of…",9,[[["self"]]]],[8,R[267],E,"Cast a slice of component values (bytes) as a slice of…",N,N],[10,"as_rgb",E,"Reinterpert slice as RGB pixels",10,[[["self"]]]],[10,"as_rgba",E,"Reinterpert slice as RGBA pixels",10,[[["self"]]]],[10,"as_rgb_mut",E,"Reinterpert mutable slice as RGB pixels",10,[[["self"]]]],[10,"as_rgba_mut",E,"Reinterpert mutable slice as RGBA pixels",10,[[["self"]]]],[10,"as_bgr",E,"Reinterpert slice as reverse-order BGR pixels",10,[[["self"]]]],[10,"as_bgra",E,"Reinterpert slice as reverse-order BGRA pixels",10,[[["self"]]]],[10,"as_bgr_mut",E,"Reinterpert ntable slice as reverse-order BGR pixels",10,[[["self"]]]],[10,"as_bgra_mut",E,"Reinterpert mutable slice as reverse-order BGRA pixels",10,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",R[252],E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[251],"rgb",E,0,[[["self"]]]],[11,R[250],E,E,0,[[["self"]]]],[11,R[251],R[252],E,2,[[["self"]]]],[11,R[250],E,E,2,[[["self"]]]],[11,R[251],"rgb",E,1,[[["self"]]]],[11,R[250],E,E,1,[[["self"]]]],[11,R[251],R[252],E,3,[[["self"]]]],[11,R[250],E,E,3,[[["self"]]]],[11,R[251],E,E,5,[[["self"]]]],[11,R[250],E,E,5,[[["self"]]]],[11,R[251],E,E,4,[[["self"]]]],[11,R[250],E,E,4,[[["self"]]]],[11,"map","rgb",E,0,[[["self"],["f"]],["rgb"]]],[11,"map",R[252],E,2,[[["self"],["f"]],["bgr"]]],[11,"map","rgb",E,1,[[["self"],["f"]],["rgba"]]],[11,"map",R[252],E,3,[[["self"],["f"]],["bgra"]]],[11,"map",E,E,5,[[["self"],["f"]],[R[253]]]],[11,"eq",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"eq",E,E,3,[[["bgra"],["self"]],["bool"]]],[11,"ne",E,E,3,[[["bgra"],["self"]],["bool"]]],[11,"eq",E,E,4,[[["gray"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["gray"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[253]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[253]]],["bool"]]],[11,"eq","rgb",E,0,[[["self"],["rgb"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"cmp",R[252],E,2,[[["self"],["bgr"]],[R[47]]]],[11,"cmp",E,E,3,[[["bgra"],["self"]],[R[47]]]],[11,"cmp",E,E,4,[[["gray"],["self"]],[R[47]]]],[11,"cmp",E,E,5,[[["self"],[R[253]]],[R[47]]]],[11,"cmp","rgb",E,0,[[["self"],["rgb"]],[R[47]]]],[11,"cmp",E,E,1,[[["self"],["rgba"]],[R[47]]]],[11,R[63],R[252],E,2,[[["self"],["bgr"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"le",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,R[63],E,E,3,[[["bgra"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,3,[[["bgra"],["self"]],["bool"]]],[11,"le",E,E,3,[[["bgra"],["self"]],["bool"]]],[11,"gt",E,E,3,[[["bgra"],["self"]],["bool"]]],[11,"ge",E,E,3,[[["bgra"],["self"]],["bool"]]],[11,R[63],E,E,4,[[["gray"],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,4,[[["gray"],["self"]],["bool"]]],[11,"le",E,E,4,[[["gray"],["self"]],["bool"]]],[11,"gt",E,E,4,[[["gray"],["self"]],["bool"]]],[11,"ge",E,E,4,[[["gray"],["self"]],["bool"]]],[11,R[63],E,E,5,[[["self"],[R[253]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,5,[[["self"],[R[253]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[253]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[253]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[253]]],["bool"]]],[11,R[63],"rgb",E,0,[[["self"],["rgb"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"le",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,R[63],E,E,1,[[["self"],["rgba"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"le",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"from",E,E,1,[[["rgb"]],["self"]]],[11,"from",R[252],E,3,[[["rgb"]],["self"]]],[11,"from","rgb",E,1,[[["rgb"]],["self"]]],[11,"from",R[252],E,3,[[["rgb"]],["self"]]],[11,"from",E,E,3,[[["bgr"]],["self"]]],[11,"from","rgb",E,1,[[["bgr"]],["self"]]],[11,"from",R[252],E,3,[[["bgr"]],["self"]]],[11,"from","rgb",E,1,[[["bgr"]],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",R[252],E,2,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from","rgb",E,0,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",R[252],E,2,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from","rgb",E,0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from",E,E,0,[[["rgb",["u16"]],["u16"]],["self"]]],[11,"from",E,E,0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from",E,E,0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from",E,E,0,[[["rgb",["u16"]],["u16"]],["self"]]],[11,"from",E,E,0,[[["rgb",["u16"]],["u16"]],["self"]]],[11,"from",E,E,0,[[["i16"],["rgb",["i16"]]],["self"]]],[11,"from",E,E,0,[[["i16"],["rgb",["i16"]]],["self"]]],[11,"from",E,E,0,[[["rgb",["i32"]],["i32"]],["self"]]],[11,"from",E,E,0,[[["f32"],["rgb",["f32"]]],["self"]]],[11,"from",E,E,1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from",E,E,1,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from",E,E,1,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from",E,E,1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from",E,E,1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from",E,E,1,[[["i16"],["rgba",["i16"]]],["self"]]],[11,"from",E,E,1,[[["i16"],["rgba",["i16"]]],["self"]]],[11,"from",E,E,1,[[["rgba",["i32"]],["i32"]],["self"]]],[11,"from",E,E,1,[[["f32"],["rgba",["f32"]]],["self"]]],[11,"from",E,E,0,[[["gray"]],["self"]]],[11,"from",E,E,1,[[[R[253]]],["self"]]],[11,"from",R[252],E,2,[[["rgb"]],["self"]]],[11,"from",E,E,3,[[["rgba"]],["self"]]],[11,"from","rgb",E,0,[[["bgr"]],["self"]]],[11,"from",E,E,1,[[["bgra"]],["self"]]],[11,"from",R[252],E,4,[[[T]],["self"]]],[11,"from",E,E,5,[[["gray"]],["self"]]],[11,"from",E,E,5,[[["gray"]],["self"]]],[11,"fmt",E,E,2,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,3,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,4,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,5,[[[R[30]],["self"]],[R[13]]]],[11,"fmt","rgb",E,0,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[252],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","rgb",E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[252],E,3,[[["self"],[R[30]]],[R[13]]]],[11,"add","rgb",E,0,[[["rgb"]]]],[11,"add",E,E,1,[[["rgba"]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,1,[[[T]]]],[11,"sub",E,E,0,[[["rgb"]]]],[11,"sub",E,E,1,[[["rgba"]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,1,[[[T]]]],[11,"deref",R[252],E,4,[[["self"]],[T]]],[11,"hash",E,E,2,[[["self"],[R[254]]]]],[11,"hash",E,E,3,[[["self"],[R[255]]]]],[11,"hash",E,E,4,[[["self"],[R[254]]]]],[11,"hash",E,E,5,[[["self"],[R[255]]]]],[11,"hash","rgb",E,0,[[["self"],[R[254]]]]],[11,"hash",E,E,1,[[["self"],[R[255]]]]],[11,R[196],E,"Takes exactly 3 elements from the iterator and creates a…",0,[[[R[44]]],["self"]]],[11,R[196],E,"Takes exactly 4 elements from the iterator and creates a…",1,[[[R[44]]],["self"]]],[11,"as_ref",R[252],E,4,[[["self"]],[T]]],[11,"as_ref","rgb",E,0,[[["self"]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,"as_ref",R[252],E,5,[[["self"]],[T]]],[11,"as_mut",E,E,4,[[["self"]],[T]]],[11,"as_mut","rgb",E,0,[[["self"]]]],[11,"as_mut",E,E,1,[[["self"]]]],[11,"as_mut",R[252],E,5,[[["self"]],[T]]],[11,"into","rgb",E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",R[252],E,2,[[]]],[11,"into",E,E,3,[[]]],[11,"into","rgb",E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",R[252],E,2,[[]]],[11,"into",E,E,3,[[]]],[11,"clone",E,E,2,[[["self"]],["bgr"]]],[11,"clone",E,E,3,[[["self"]],["bgra"]]],[11,"clone",E,E,4,[[["self"]],["gray"]]],[11,"clone",E,E,5,[[["self"]],[R[253]]]],[11,"clone","rgb",E,0,[[["self"]],["rgb"]]],[11,"clone",E,E,1,[[["self"]],["rgba"]]],[11,R[77],R[252],E,2,[[],["bgr"]]],[11,R[77],E,E,3,[[],["bgra"]]],[11,R[77],E,E,4,[[],["gray"]]],[11,R[77],E,E,5,[[],[R[253]]]],[11,R[77],"rgb",E,0,[[],["rgb"]]],[11,R[77],E,E,1,[[],["rgba"]]],[11,"new",R[252],R[256],2,[[[T]],["self"]]],[11,"iter",E,R[257],2,[[["self"]],[["cloned",["iter"]],["iter"]]]],[11,"alpha",E,E,2,[[["self"],[T]],["bgra"]]],[11,R[243],E,E,2,[[["a"],["self"]],["bgra"]]],[11,"new",E,R[244],3,[[[T]],["self"]]],[11,R[243],E,R[244],3,[[["a"],[T]],["self"]]],[11,"iter",E,R[258],3,[[["self"]],[["cloned",["iter"]],["iter"]]]],[11,"rgb",E,R[259],3,[[["self"]],["bgr"]]],[11,"rgb_mut",E,R[260],3,[[["self"]],["bgr"]]],[11,"map_rgb",E,R[261],3,[[["self"],["f"]],["bgra"]]],[11,"as_bytes","rgb",R[249],7,[[["self"]]]],[11,R[262],E,R[249],7,[[["self"]]]]],"p":[[3,"RGB"],[3,"RGBA"],[3,"BGR"],[3,"BGRA"],[3,"Gray"],[3,R[263]],[8,R[264]],[8,R[265]],[8,R[266]],[8,"AsPixels"],[8,R[267]]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","i":[[3,R[97],"rustc_demangle","Representation of a demangled symbol name.",N,N],[3,R[98],E,"Error returned from the `try_demangle` function below when…",N,N],[5,R[95],E,"De-mangles a Rust symbol into a more readable version",N,[[["str"]],[R[95]]]],[5,"try_demangle",E,"The same as `demangle`, except return an `Err` if the…",N,[[["str"]],[[R[13],[R[95],R[96]]],[R[95]],[R[96]]]]],[11,"as_str",E,"Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"fmt",E,E,1,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"clone",E,E,1,[[["self"]],[R[96]]]]],"p":[[3,R[97]],[3,R[98]]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[59],R[56],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[56],["always"]],["always"]]]],[8,R[58],E,E,N,N],[10,R[57],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[56]]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind",E,"Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[57],E,E,2,[[],["bool"]]],[11,"fmt",E,E,2,[[[R[30]],["self"]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,R[60],E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[58]],[3,R[59]],[4,"Always"]]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny",R[2974],"An efficient way of discarding data from a deserializer.",N,N],[4,R[2297],E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",0,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char",E,"The input contained a `char` that was not expected.",0,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",0,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",0,N],[13,R[3035],E,"The input contained a newtype struct that was not expected.",0,N],[13,"Seq",E,"The input contained a sequence that was not expected.",0,N],[13,"Map",E,"The input contained a map that was not expected.",0,N],[13,"Enum",E,"The input contained an enum that was not expected.",0,N],[13,R[3036],E,"The input contained a unit variant that was not expected.",0,N],[13,R[3037],E,"The input contained a newtype variant that was not expected.",0,N],[13,R[3038],E,"The input contained a tuple variant that was not expected.",0,N],[13,R[3039],E,"The input contained a struct variant that was not expected.",0,N],[13,"Other",E,"A message stating what uncategorized thing the input…",0,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[2973],"A minimal representation of all possible errors that can…",N,N],[3,R[2997],E,"A deserializer holding a `()`.",N,N],[3,R[2998],E,"A deserializer holding a `bool`.",N,N],[3,R[2999],E,"A deserializer holding an `i8`.",N,N],[3,R[3000],E,"A deserializer holding an `i16`.",N,N],[3,R[3001],E,"A deserializer holding an `i32`.",N,N],[3,R[3002],E,"A deserializer holding an `i64`.",N,N],[3,R[3003],E,"A deserializer holding an `isize`.",N,N],[3,R[3004],E,"A deserializer holding a `u8`.",N,N],[3,R[3005],E,"A deserializer holding a `u16`.",N,N],[3,R[3006],E,"A deserializer holding a `u64`.",N,N],[3,R[3007],E,"A deserializer holding a `usize`.",N,N],[3,R[3008],E,"A deserializer holding an `f32`.",N,N],[3,R[3009],E,"A deserializer holding an `f64`.",N,N],[3,R[3010],E,"A deserializer holding a `char`.",N,N],[3,R[3011],E,"A deserializer holding an `i128`.",N,N],[3,R[3012],E,"A deserializer holding a `u128`.",N,N],[3,R[3013],E,"A deserializer holding a `u32`.",N,N],[3,R[3014],E,"A deserializer holding a `&str`.",N,N],[3,R[2987],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[3015],E,"A deserializer holding a `String`.",N,N],[3,R[3016],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[2988],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[2989],E,"A deserializer that iterates over a sequence.",N,N],[3,R[2990],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[2991],E,"A deserializer that iterates over a map.",N,N],[3,R[2992],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end",E,R[2808],3,[[],[R[13]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end",E,R[2808],5,[[],[R[13]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error",R[2974],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",7,[[[T]],["self"]]],[11,R[3050],E,"Raised when a `Deserialize` receives a type different from…",7,[[["expected"],[R[2986]]],["self"]]],[11,R[3051],E,"Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],[R[2986]]],["self"]]],[11,R[3052],E,"Raised when deserializing a sequence or map and the input…",7,[[["expected"],[R[9]]],["self"]]],[11,R[3053],E,"Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,R[3054],E,"Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,R[3055],E,"Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,R[3056],E,"Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",8,[[["self"],[R[30]]],[R[13]]]],[8,R[2833],E,R[2834],N,N],[10,R[2809],E,R[2835],9,[[["d"]],[R[13]]]],[8,"DeserializeOwned",E,"A data structure that can be deserialized without…",N,N],[8,R[2993],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",10,N],[10,R[2809],E,"Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],[R[13]]]],[8,R[2820],E,R[2836],N,N],[16,"Error",E,R[2813],11,N],[10,R[2837],E,R[2838],11,[[["v"]],[R[13]]]],[10,R[2839],E,R[2840],11,[[["v"]],[R[13]]]],[10,R[2841],E,R[2842],11,[[["v"]],[R[13]]]],[10,R[2843],E,R[2844],11,[[["v"]],[R[13]]]],[10,R[2845],E,R[2846],11,[[["v"]],[R[13]]]],[10,R[2847],E,R[2848],11,[[["v"]],[R[13]]]],[11,R[2849],E,R[2850],11,[[["v"]],[R[13]]]],[10,R[2851],E,R[2852],11,[[["v"]],[R[13]]]],[10,R[2853],E,R[2854],11,[[["v"]],[R[13]]]],[10,R[2855],E,R[2856],11,[[["v"]],[R[13]]]],[10,R[2857],E,R[2858],11,[[["v"]],[R[13]]]],[11,R[2859],E,R[2860],11,[[["v"]],[R[13]]]],[10,R[2861],E,R[2862],11,[[["v"]],[R[13]]]],[10,R[2863],E,R[2864],11,[[["v"]],[R[13]]]],[10,R[2865],E,R[2866],11,[[["v"]],[R[13]]]],[10,R[2867],E,R[2810],11,[[["v"]],[R[13]]]],[10,R[2868],E,R[2810],11,[[["v"]],[R[13]]]],[10,R[2869],E,R[2811],11,[[["v"]],[R[13]]]],[10,R[2870],E,R[2811],11,[[["v"]],[R[13]]]],[10,R[2871],E,R[2872],11,[[["v"]],[R[13]]]],[10,R[2873],E,R[2874],11,[[["v"]],[R[13]]]],[10,R[2875],E,R[2876],11,[[["v"],["str"]],[R[13]]]],[10,R[2877],E,R[2878],11,[[["v"],["str"]],[R[13]]]],[10,R[2879],E,R[2812],11,[[["v"]],[R[13]]]],[10,R[2880],E,R[2812],11,[[[R[9]],["v"]],[R[13]]]],[10,R[2881],E,R[2882],11,[[["v"],[R[9]],["str"]],[R[13]]]],[10,R[2883],E,R[2884],11,[[["v"]],[R[13]]]],[10,R[2885],E,R[2886],11,[[["v"],["str"]],[R[13]]]],[10,R[2887],E,R[2888],11,[[["v"],["str"]],[R[13]]]],[10,R[2889],E,R[2890],11,[[["v"]],[R[13]]]],[10,R[2891],E,R[2892],11,[[["v"]],[R[13]]]],[11,R[2821],E,R[2893],11,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",12,N],[10,"expecting",E,"Format a message stating what data this Visitor expects to…",12,[[["self"],[R[30]]],[R[13]]]],[11,R[3042],E,"The input contains a boolean.",12,[[["bool"]],[R[13]]]],[11,"visit_i8",E,"The input contains an `i8`.",12,[[["i8"]],[R[13]]]],[11,"visit_i16",E,"The input contains an `i16`.",12,[[["i16"]],[R[13]]]],[11,"visit_i32",E,"The input contains an `i32`.",12,[[["i32"]],[R[13]]]],[11,"visit_i64",E,"The input contains an `i64`.",12,[[["i64"]],[R[13]]]],[11,"visit_i128",E,"The input contains a `i128`.",12,[[["i128"]],[R[13]]]],[11,"visit_u8",E,"The input contains a `u8`.",12,[[["u8"]],[R[13]]]],[11,"visit_u16",E,"The input contains a `u16`.",12,[[["u16"]],[R[13]]]],[11,"visit_u32",E,"The input contains a `u32`.",12,[[["u32"]],[R[13]]]],[11,"visit_u64",E,"The input contains a `u64`.",12,[[["u64"]],[R[13]]]],[11,"visit_u128",E,"The input contains a `u128`.",12,[[["u128"]],[R[13]]]],[11,"visit_f32",E,"The input contains an `f32`.",12,[[["f32"]],[R[13]]]],[11,"visit_f64",E,"The input contains an `f64`.",12,[[["f64"]],[R[13]]]],[11,"visit_char",E,"The input contains a `char`.",12,[[["char"]],[R[13]]]],[11,"visit_str",E,"The input contains a string. The lifetime of the string is…",12,[[["str"]],[R[13]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",12,[[["str"]],[R[13]]]],[11,R[3043],E,"The input contains a string and ownership of the string is…",12,[[["string"]],[R[13]]]],[11,R[2976],E,"The input contains a byte array. The lifetime of the byte…",12,[[],[R[13]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",12,[[],[R[13]]]],[11,R[3048],E,"The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],[R[13]]]],[11,R[3045],E,"The input contains an optional that is absent.",12,[[],[R[13]]]],[11,R[3046],E,"The input contains an optional that is present.",12,[[["d"]],[R[13]]]],[11,R[3044],E,"The input contains a unit `()`.",12,[[],[R[13]]]],[11,R[2975],E,"The input contains a newtype struct.",12,[[["d"]],[R[13]]]],[11,"visit_seq",E,"The input contains a sequence of elements.",12,[[["a"]],[R[13]]]],[11,"visit_map",E,"The input contains a key-value map.",12,[[["a"]],[R[13]]]],[11,"visit_enum",E,"The input contains an enum.",12,[[["a"]],[R[13]]]],[8,"SeqAccess",E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[2813],13,N],[10,R[2977],E,R[2814],13,[[["self"],[T]],[[R[13],[R[45]]],[R[45]]]]],[11,"next_element",E,R[2814],13,[[["self"]],[[R[13],[R[45]]],[R[45]]]]],[11,R[46],E,"Returns the number of elements remaining in the sequence,…",13,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[8,"MapAccess",E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[2813],14,N],[10,R[2978],E,R[2815],14,[[["self"],["k"]],[[R[13],[R[45]]],[R[45]]]]],[10,R[2979],E,R[2816],14,[[["self"],["v"]],[R[13]]]],[11,R[2980],E,R[2817],14,[[["self"],["k"],["v"]],[[R[13],[R[45]]],[R[45]]]]],[11,"next_key",E,R[2815],14,[[["self"]],[[R[13],[R[45]]],[R[45]]]]],[11,"next_value",E,R[2816],14,[[["self"]],[R[13]]]],[11,"next_entry",E,R[2817],14,[[["self"]],[[R[13],[R[45]]],[R[45]]]]],[11,R[46],E,"Returns the number of entries remaining in the map, if…",14,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[8,"EnumAccess",E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[2813],15,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",15,N],[10,R[2981],E,R[2818],15,[[["v"]],[R[13]]]],[11,"variant",E,R[2818],15,[[],[R[13]]]],[8,R[2994],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[2813],16,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",16,[[],[R[13]]]],[10,"newtype_variant_seed",E,R[2819],16,[[[T]],[R[13]]]],[11,"newtype_variant",E,R[2819],16,[[],[R[13]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",16,[[[R[9]],["v"]],[R[13]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",16,[[["v"]],[R[13]]]],[8,R[2995],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[2820],E,"The type of the deserializer being converted into.",17,N],[10,R[3049],E,"Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible",R[2982],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",18,[[[T]],["self"]]],[8,R[3017],E,R[2894],N,N],[10,R[3033],E,R[2895],19,[[["self"],["s"]],[R[13]]]],[8,R[2996],E,R[2896],N,N],[16,"Ok",E,R[2897],20,N],[16,"Error",E,R[2898],20,N],[16,R[2822],E,R[2899],20,N],[16,R[2823],E,R[2900],20,N],[16,R[2827],E,R[2901],20,N],[16,R[2828],E,R[2902],20,N],[16,R[2830],E,R[2903],20,N],[16,R[2831],E,R[2904],20,N],[16,R[2832],E,R[2905],20,N],[10,R[2906],E,R[2907],20,[[["bool"]],[R[13]]]],[10,R[2908],E,R[2909],20,[[["i8"]],[R[13]]]],[10,R[2910],E,R[2911],20,[[["i16"]],[R[13]]]],[10,R[2912],E,R[2913],20,[[["i32"]],[R[13]]]],[10,R[2914],E,R[2915],20,[[["i64"]],[R[13]]]],[11,R[2916],E,R[2917],20,[[["i128"]],[R[13]]]],[10,R[2918],E,R[2919],20,[[["u8"]],[R[13]]]],[10,R[2920],E,R[2921],20,[[["u16"]],[R[13]]]],[10,R[2922],E,R[2923],20,[[["u32"]],[R[13]]]],[10,R[2924],E,R[2925],20,[[["u64"]],[R[13]]]],[11,R[2926],E,R[2927],20,[[["u128"]],[R[13]]]],[10,R[2928],E,R[2929],20,[[["f32"]],[R[13]]]],[10,R[2930],E,R[2931],20,[[["f64"]],[R[13]]]],[10,R[2932],E,R[2933],20,[[["char"]],[R[13]]]],[10,R[2934],E,R[2935],20,[[["str"]],[R[13]]]],[10,R[2936],E,R[2937],20,[[],[R[13]]]],[10,R[2938],E,R[2939],20,[[],[R[13]]]],[10,R[2940],E,R[2941],20,[[[T]],[R[13]]]],[10,R[2942],E,R[2943],20,[[],[R[13]]]],[10,R[2944],E,R[2945],20,[[["str"]],[R[13]]]],[10,R[2946],E,R[2947],20,[[["u32"],["str"]],[R[13]]]],[10,R[2948],E,R[2949],20,[[[T],["str"]],[R[13]]]],[10,R[2950],E,R[2951],20,[[[T],["u32"],["str"]],[R[13]]]],[10,R[2952],E,R[2953],20,[[[R[45],[R[9]]],[R[9]]],[R[13]]]],[10,R[2954],E,R[2955],20,[[[R[9]]],[R[13]]]],[10,R[2956],E,R[2957],20,[[[R[9]],["str"]],[R[13]]]],[10,R[2958],E,R[2959],20,[[["u32"],[R[9]],["str"]],[R[13]]]],[10,R[2960],E,R[2961],20,[[[R[45],[R[9]]],[R[9]]],[R[13]]]],[10,R[2962],E,R[2963],20,[[[R[9]],["str"]],[R[13]]]],[10,R[2964],E,R[2965],20,[[["u32"],[R[9]],["str"]],[R[13]]]],[11,R[2966],E,R[2967],20,[[["i"]],[R[13]]]],[11,R[2968],E,R[2969],20,[[["i"]],[R[13]]]],[11,R[2970],E,R[2971],20,[[[T]],[R[13]]]],[11,R[2821],E,R[2972],20,[[["self"]],["bool"]]],[8,R[2822],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[2824],21,N],[16,"Error",E,R[2825],21,N],[10,R[2826],E,"Serialize a sequence element.",21,[[["self"],[T]],[R[13]]]],[10,"end",E,"Finish serializing a sequence.",21,[[],[R[13]]]],[8,R[2823],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[2824],22,N],[16,"Error",E,R[2825],22,N],[10,R[2826],E,"Serialize a tuple element.",22,[[["self"],[T]],[R[13]]]],[10,"end",E,"Finish serializing a tuple.",22,[[],[R[13]]]],[8,R[2827],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[2824],23,N],[16,"Error",E,R[2825],23,N],[10,R[2829],E,"Serialize a tuple struct field.",23,[[["self"],[T]],[R[13]]]],[10,"end",E,"Finish serializing a tuple struct.",23,[[],[R[13]]]],[8,R[2828],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[2824],24,N],[16,"Error",E,R[2825],24,N],[10,R[2829],E,"Serialize a tuple variant field.",24,[[["self"],[T]],[R[13]]]],[10,"end",E,"Finish serializing a tuple variant.",24,[[],[R[13]]]],[8,R[2830],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[2824],25,N],[16,"Error",E,R[2825],25,N],[10,R[2983],E,"Serialize a map key.",25,[[["self"],[T]],[R[13]]]],[10,R[2984],E,"Serialize a map value.",25,[[["self"],[T]],[R[13]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",25,[[["self"],["v"],["k"]],[R[13]]]],[10,"end",E,"Finish serializing a map.",25,[[],[R[13]]]],[8,R[2831],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[2824],26,N],[16,"Error",E,R[2825],26,N],[10,R[2829],E,"Serialize a struct field.",26,[[["self"],[T],["str"]],[R[13]]]],[11,"skip_field",E,"Indicate that a struct field has been skipped.",26,[[["self"],["str"]],[R[13]]]],[10,"end",E,"Finish serializing a struct.",26,[[],[R[13]]]],[8,R[2832],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[2824],27,N],[16,"Error",E,R[2825],27,N],[10,R[2829],E,"Serialize a struct variant field.",27,[[["self"],[T],["str"]],[R[13]]]],[11,"skip_field",E,"Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],[R[13]]]],[10,"end",E,"Finish serializing a struct variant.",27,[[],[R[13]]]],[8,R[2833],"serde",R[2834],N,N],[10,R[2809],E,R[2835],9,[[["d"]],[R[13]]]],[8,R[2820],E,R[2836],N,N],[16,"Error",E,R[2813],11,N],[10,R[2837],E,R[2838],11,[[["v"]],[R[13]]]],[10,R[2839],E,R[2840],11,[[["v"]],[R[13]]]],[10,R[2841],E,R[2842],11,[[["v"]],[R[13]]]],[10,R[2843],E,R[2844],11,[[["v"]],[R[13]]]],[10,R[2845],E,R[2846],11,[[["v"]],[R[13]]]],[10,R[2847],E,R[2848],11,[[["v"]],[R[13]]]],[11,R[2849],E,R[2850],11,[[["v"]],[R[13]]]],[10,R[2851],E,R[2852],11,[[["v"]],[R[13]]]],[10,R[2853],E,R[2854],11,[[["v"]],[R[13]]]],[10,R[2855],E,R[2856],11,[[["v"]],[R[13]]]],[10,R[2857],E,R[2858],11,[[["v"]],[R[13]]]],[11,R[2859],E,R[2860],11,[[["v"]],[R[13]]]],[10,R[2861],E,R[2862],11,[[["v"]],[R[13]]]],[10,R[2863],E,R[2864],11,[[["v"]],[R[13]]]],[10,R[2865],E,R[2866],11,[[["v"]],[R[13]]]],[10,R[2867],E,R[2810],11,[[["v"]],[R[13]]]],[10,R[2868],E,R[2810],11,[[["v"]],[R[13]]]],[10,R[2869],E,R[2811],11,[[["v"]],[R[13]]]],[10,R[2870],E,R[2811],11,[[["v"]],[R[13]]]],[10,R[2871],E,R[2872],11,[[["v"]],[R[13]]]],[10,R[2873],E,R[2874],11,[[["v"]],[R[13]]]],[10,R[2875],E,R[2876],11,[[["v"],["str"]],[R[13]]]],[10,R[2877],E,R[2878],11,[[["v"],["str"]],[R[13]]]],[10,R[2879],E,R[2812],11,[[["v"]],[R[13]]]],[10,R[2880],E,R[2812],11,[[[R[9]],["v"]],[R[13]]]],[10,R[2881],E,R[2882],11,[[["v"],[R[9]],["str"]],[R[13]]]],[10,R[2883],E,R[2884],11,[[["v"]],[R[13]]]],[10,R[2885],E,R[2886],11,[[["v"],["str"]],[R[13]]]],[10,R[2887],E,R[2888],11,[[["v"],["str"]],[R[13]]]],[10,R[2889],E,R[2890],11,[[["v"]],[R[13]]]],[10,R[2891],E,R[2892],11,[[["v"]],[R[13]]]],[11,R[2821],E,R[2893],11,[[["self"]],["bool"]]],[8,R[3017],E,R[2894],N,N],[10,R[3033],E,R[2895],19,[[["self"],["s"]],[R[13]]]],[8,R[2996],E,R[2896],N,N],[16,"Ok",E,R[2897],20,N],[16,"Error",E,R[2898],20,N],[16,R[2822],E,R[2899],20,N],[16,R[2823],E,R[2900],20,N],[16,R[2827],E,R[2901],20,N],[16,R[2828],E,R[2902],20,N],[16,R[2830],E,R[2903],20,N],[16,R[2831],E,R[2904],20,N],[16,R[2832],E,R[2905],20,N],[10,R[2906],E,R[2907],20,[[["bool"]],[R[13]]]],[10,R[2908],E,R[2909],20,[[["i8"]],[R[13]]]],[10,R[2910],E,R[2911],20,[[["i16"]],[R[13]]]],[10,R[2912],E,R[2913],20,[[["i32"]],[R[13]]]],[10,R[2914],E,R[2915],20,[[["i64"]],[R[13]]]],[11,R[2916],E,R[2917],20,[[["i128"]],[R[13]]]],[10,R[2918],E,R[2919],20,[[["u8"]],[R[13]]]],[10,R[2920],E,R[2921],20,[[["u16"]],[R[13]]]],[10,R[2922],E,R[2923],20,[[["u32"]],[R[13]]]],[10,R[2924],E,R[2925],20,[[["u64"]],[R[13]]]],[11,R[2926],E,R[2927],20,[[["u128"]],[R[13]]]],[10,R[2928],E,R[2929],20,[[["f32"]],[R[13]]]],[10,R[2930],E,R[2931],20,[[["f64"]],[R[13]]]],[10,R[2932],E,R[2933],20,[[["char"]],[R[13]]]],[10,R[2934],E,R[2935],20,[[["str"]],[R[13]]]],[10,R[2936],E,R[2937],20,[[],[R[13]]]],[10,R[2938],E,R[2939],20,[[],[R[13]]]],[10,R[2940],E,R[2941],20,[[[T]],[R[13]]]],[10,R[2942],E,R[2943],20,[[],[R[13]]]],[10,R[2944],E,R[2945],20,[[["str"]],[R[13]]]],[10,R[2946],E,R[2947],20,[[["u32"],["str"]],[R[13]]]],[10,R[2948],E,R[2949],20,[[[T],["str"]],[R[13]]]],[10,R[2950],E,R[2951],20,[[[T],["u32"],["str"]],[R[13]]]],[10,R[2952],E,R[2953],20,[[[R[45],[R[9]]],[R[9]]],[R[13]]]],[10,R[2954],E,R[2955],20,[[[R[9]]],[R[13]]]],[10,R[2956],E,R[2957],20,[[[R[9]],["str"]],[R[13]]]],[10,R[2958],E,R[2959],20,[[["u32"],[R[9]],["str"]],[R[13]]]],[10,R[2960],E,R[2961],20,[[[R[45],[R[9]]],[R[9]]],[R[13]]]],[10,R[2962],E,R[2963],20,[[[R[9]],["str"]],[R[13]]]],[10,R[2964],E,R[2965],20,[[["u32"],[R[9]],["str"]],[R[13]]]],[11,R[2966],E,R[2967],20,[[["i"]],[R[13]]]],[11,R[2968],E,R[2969],20,[[["i"]],[R[13]]]],[11,R[2970],E,R[2971],20,[[[T]],[R[13]]]],[11,R[2821],E,R[2972],20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128",E,"Conditional compilation depending on whether Serde is…",N,N],[11,"fmt",R[2974],E,28,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[[T],["self"]]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],R[2973],E,29,[[["self"]],["string"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[[T],["self"]]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[[T],["self"]]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[[T],["self"]]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[[T],["self"]]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[[T],["self"]]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[[T],["self"]]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[[T],["self"]]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[[T],["self"]]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[[T],["self"]]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[[T],["self"]]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[[T],["self"]]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[[T],["self"]]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[[T],["self"]]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[[T],["self"]]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[[T],["self"]]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[[T],["self"]]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[[T],["self"]]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[[T],["self"]]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[[T],["self"]]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[[T],["self"]]]],[11,R[12],E,E,49,[[[U]],[R[13]]]],[11,R[14],E,E,49,[[],[R[13]]]],[11,R[15],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",R[2982],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[12],E,E,50,[[[U]],[R[13]]]],[11,R[14],E,E,50,[[],[R[13]]]],[11,R[15],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[R[42]]]],[11,R[2809],R[2974],E,28,[[["d"]],[[R[13],[R[2985]]],[R[2985]]]]],[11,R[2839],R[2973],E,30,[[["v"]],[R[13]]]],[11,R[2841],E,E,30,[[["v"]],[R[13]]]],[11,R[2843],E,E,30,[[["v"]],[R[13]]]],[11,R[2845],E,E,30,[[["v"]],[R[13]]]],[11,R[2847],E,E,30,[[["v"]],[R[13]]]],[11,R[2849],E,E,30,[[["v"]],[R[13]]]],[11,R[2851],E,E,30,[[["v"]],[R[13]]]],[11,R[2853],E,E,30,[[["v"]],[R[13]]]],[11,R[2855],E,E,30,[[["v"]],[R[13]]]],[11,R[2857],E,E,30,[[["v"]],[R[13]]]],[11,R[2859],E,E,30,[[["v"]],[R[13]]]],[11,R[2861],E,E,30,[[["v"]],[R[13]]]],[11,R[2863],E,E,30,[[["v"]],[R[13]]]],[11,R[2865],E,E,30,[[["v"]],[R[13]]]],[11,R[2867],E,E,30,[[["v"]],[R[13]]]],[11,R[2868],E,E,30,[[["v"]],[R[13]]]],[11,R[2869],E,E,30,[[["v"]],[R[13]]]],[11,R[2870],E,E,30,[[["v"]],[R[13]]]],[11,R[2873],E,E,30,[[["v"]],[R[13]]]],[11,R[2875],E,E,30,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,30,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,30,[[["v"]],[R[13]]]],[11,R[2880],E,E,30,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,30,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,30,[[["v"]],[R[13]]]],[11,R[2885],E,E,30,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,30,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,30,[[["v"]],[R[13]]]],[11,R[2891],E,E,30,[[["v"]],[R[13]]]],[11,R[2837],E,E,30,[[["v"]],[R[13]]]],[11,R[2871],E,E,30,[[["v"]],[R[13]]]],[11,R[2839],E,E,31,[[["v"]],[R[13]]]],[11,R[2841],E,E,31,[[["v"]],[R[13]]]],[11,R[2843],E,E,31,[[["v"]],[R[13]]]],[11,R[2845],E,E,31,[[["v"]],[R[13]]]],[11,R[2847],E,E,31,[[["v"]],[R[13]]]],[11,R[2849],E,E,31,[[["v"]],[R[13]]]],[11,R[2851],E,E,31,[[["v"]],[R[13]]]],[11,R[2853],E,E,31,[[["v"]],[R[13]]]],[11,R[2855],E,E,31,[[["v"]],[R[13]]]],[11,R[2857],E,E,31,[[["v"]],[R[13]]]],[11,R[2859],E,E,31,[[["v"]],[R[13]]]],[11,R[2861],E,E,31,[[["v"]],[R[13]]]],[11,R[2863],E,E,31,[[["v"]],[R[13]]]],[11,R[2865],E,E,31,[[["v"]],[R[13]]]],[11,R[2867],E,E,31,[[["v"]],[R[13]]]],[11,R[2868],E,E,31,[[["v"]],[R[13]]]],[11,R[2869],E,E,31,[[["v"]],[R[13]]]],[11,R[2870],E,E,31,[[["v"]],[R[13]]]],[11,R[2871],E,E,31,[[["v"]],[R[13]]]],[11,R[2873],E,E,31,[[["v"]],[R[13]]]],[11,R[2875],E,E,31,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,31,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,31,[[["v"]],[R[13]]]],[11,R[2880],E,E,31,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,31,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,31,[[["v"]],[R[13]]]],[11,R[2885],E,E,31,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,31,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,31,[[["v"]],[R[13]]]],[11,R[2891],E,E,31,[[["v"]],[R[13]]]],[11,R[2837],E,E,31,[[["v"]],[R[13]]]],[11,R[2839],E,E,32,[[["v"]],[R[13]]]],[11,R[2841],E,E,32,[[["v"]],[R[13]]]],[11,R[2843],E,E,32,[[["v"]],[R[13]]]],[11,R[2845],E,E,32,[[["v"]],[R[13]]]],[11,R[2847],E,E,32,[[["v"]],[R[13]]]],[11,R[2849],E,E,32,[[["v"]],[R[13]]]],[11,R[2851],E,E,32,[[["v"]],[R[13]]]],[11,R[2853],E,E,32,[[["v"]],[R[13]]]],[11,R[2855],E,E,32,[[["v"]],[R[13]]]],[11,R[2857],E,E,32,[[["v"]],[R[13]]]],[11,R[2859],E,E,32,[[["v"]],[R[13]]]],[11,R[2861],E,E,32,[[["v"]],[R[13]]]],[11,R[2863],E,E,32,[[["v"]],[R[13]]]],[11,R[2865],E,E,32,[[["v"]],[R[13]]]],[11,R[2867],E,E,32,[[["v"]],[R[13]]]],[11,R[2868],E,E,32,[[["v"]],[R[13]]]],[11,R[2869],E,E,32,[[["v"]],[R[13]]]],[11,R[2870],E,E,32,[[["v"]],[R[13]]]],[11,R[2871],E,E,32,[[["v"]],[R[13]]]],[11,R[2873],E,E,32,[[["v"]],[R[13]]]],[11,R[2875],E,E,32,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,32,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,32,[[["v"]],[R[13]]]],[11,R[2880],E,E,32,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,32,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,32,[[["v"]],[R[13]]]],[11,R[2885],E,E,32,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,32,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,32,[[["v"]],[R[13]]]],[11,R[2891],E,E,32,[[["v"]],[R[13]]]],[11,R[2837],E,E,32,[[["v"]],[R[13]]]],[11,R[2839],E,E,33,[[["v"]],[R[13]]]],[11,R[2841],E,E,33,[[["v"]],[R[13]]]],[11,R[2843],E,E,33,[[["v"]],[R[13]]]],[11,R[2845],E,E,33,[[["v"]],[R[13]]]],[11,R[2847],E,E,33,[[["v"]],[R[13]]]],[11,R[2849],E,E,33,[[["v"]],[R[13]]]],[11,R[2851],E,E,33,[[["v"]],[R[13]]]],[11,R[2853],E,E,33,[[["v"]],[R[13]]]],[11,R[2855],E,E,33,[[["v"]],[R[13]]]],[11,R[2857],E,E,33,[[["v"]],[R[13]]]],[11,R[2859],E,E,33,[[["v"]],[R[13]]]],[11,R[2861],E,E,33,[[["v"]],[R[13]]]],[11,R[2863],E,E,33,[[["v"]],[R[13]]]],[11,R[2865],E,E,33,[[["v"]],[R[13]]]],[11,R[2867],E,E,33,[[["v"]],[R[13]]]],[11,R[2868],E,E,33,[[["v"]],[R[13]]]],[11,R[2869],E,E,33,[[["v"]],[R[13]]]],[11,R[2870],E,E,33,[[["v"]],[R[13]]]],[11,R[2871],E,E,33,[[["v"]],[R[13]]]],[11,R[2873],E,E,33,[[["v"]],[R[13]]]],[11,R[2875],E,E,33,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,33,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,33,[[["v"]],[R[13]]]],[11,R[2880],E,E,33,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,33,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,33,[[["v"]],[R[13]]]],[11,R[2885],E,E,33,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,33,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,33,[[["v"]],[R[13]]]],[11,R[2891],E,E,33,[[["v"]],[R[13]]]],[11,R[2837],E,E,33,[[["v"]],[R[13]]]],[11,R[2839],E,E,34,[[["v"]],[R[13]]]],[11,R[2841],E,E,34,[[["v"]],[R[13]]]],[11,R[2843],E,E,34,[[["v"]],[R[13]]]],[11,R[2845],E,E,34,[[["v"]],[R[13]]]],[11,R[2847],E,E,34,[[["v"]],[R[13]]]],[11,R[2849],E,E,34,[[["v"]],[R[13]]]],[11,R[2851],E,E,34,[[["v"]],[R[13]]]],[11,R[2853],E,E,34,[[["v"]],[R[13]]]],[11,R[2855],E,E,34,[[["v"]],[R[13]]]],[11,R[2857],E,E,34,[[["v"]],[R[13]]]],[11,R[2859],E,E,34,[[["v"]],[R[13]]]],[11,R[2861],E,E,34,[[["v"]],[R[13]]]],[11,R[2863],E,E,34,[[["v"]],[R[13]]]],[11,R[2865],E,E,34,[[["v"]],[R[13]]]],[11,R[2867],E,E,34,[[["v"]],[R[13]]]],[11,R[2868],E,E,34,[[["v"]],[R[13]]]],[11,R[2869],E,E,34,[[["v"]],[R[13]]]],[11,R[2870],E,E,34,[[["v"]],[R[13]]]],[11,R[2871],E,E,34,[[["v"]],[R[13]]]],[11,R[2873],E,E,34,[[["v"]],[R[13]]]],[11,R[2875],E,E,34,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,34,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,34,[[["v"]],[R[13]]]],[11,R[2880],E,E,34,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,34,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,34,[[["v"]],[R[13]]]],[11,R[2885],E,E,34,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,34,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,34,[[["v"]],[R[13]]]],[11,R[2891],E,E,34,[[["v"]],[R[13]]]],[11,R[2837],E,E,34,[[["v"]],[R[13]]]],[11,R[2839],E,E,35,[[["v"]],[R[13]]]],[11,R[2841],E,E,35,[[["v"]],[R[13]]]],[11,R[2843],E,E,35,[[["v"]],[R[13]]]],[11,R[2845],E,E,35,[[["v"]],[R[13]]]],[11,R[2847],E,E,35,[[["v"]],[R[13]]]],[11,R[2849],E,E,35,[[["v"]],[R[13]]]],[11,R[2851],E,E,35,[[["v"]],[R[13]]]],[11,R[2853],E,E,35,[[["v"]],[R[13]]]],[11,R[2855],E,E,35,[[["v"]],[R[13]]]],[11,R[2857],E,E,35,[[["v"]],[R[13]]]],[11,R[2859],E,E,35,[[["v"]],[R[13]]]],[11,R[2861],E,E,35,[[["v"]],[R[13]]]],[11,R[2863],E,E,35,[[["v"]],[R[13]]]],[11,R[2865],E,E,35,[[["v"]],[R[13]]]],[11,R[2867],E,E,35,[[["v"]],[R[13]]]],[11,R[2868],E,E,35,[[["v"]],[R[13]]]],[11,R[2869],E,E,35,[[["v"]],[R[13]]]],[11,R[2870],E,E,35,[[["v"]],[R[13]]]],[11,R[2871],E,E,35,[[["v"]],[R[13]]]],[11,R[2873],E,E,35,[[["v"]],[R[13]]]],[11,R[2875],E,E,35,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,35,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,35,[[["v"]],[R[13]]]],[11,R[2880],E,E,35,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,35,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,35,[[["v"]],[R[13]]]],[11,R[2885],E,E,35,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,35,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,35,[[["v"]],[R[13]]]],[11,R[2891],E,E,35,[[["v"]],[R[13]]]],[11,R[2837],E,E,35,[[["v"]],[R[13]]]],[11,R[2839],E,E,36,[[["v"]],[R[13]]]],[11,R[2841],E,E,36,[[["v"]],[R[13]]]],[11,R[2843],E,E,36,[[["v"]],[R[13]]]],[11,R[2845],E,E,36,[[["v"]],[R[13]]]],[11,R[2847],E,E,36,[[["v"]],[R[13]]]],[11,R[2849],E,E,36,[[["v"]],[R[13]]]],[11,R[2851],E,E,36,[[["v"]],[R[13]]]],[11,R[2853],E,E,36,[[["v"]],[R[13]]]],[11,R[2855],E,E,36,[[["v"]],[R[13]]]],[11,R[2857],E,E,36,[[["v"]],[R[13]]]],[11,R[2859],E,E,36,[[["v"]],[R[13]]]],[11,R[2861],E,E,36,[[["v"]],[R[13]]]],[11,R[2863],E,E,36,[[["v"]],[R[13]]]],[11,R[2865],E,E,36,[[["v"]],[R[13]]]],[11,R[2867],E,E,36,[[["v"]],[R[13]]]],[11,R[2868],E,E,36,[[["v"]],[R[13]]]],[11,R[2869],E,E,36,[[["v"]],[R[13]]]],[11,R[2870],E,E,36,[[["v"]],[R[13]]]],[11,R[2871],E,E,36,[[["v"]],[R[13]]]],[11,R[2873],E,E,36,[[["v"]],[R[13]]]],[11,R[2875],E,E,36,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,36,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,36,[[["v"]],[R[13]]]],[11,R[2880],E,E,36,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,36,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,36,[[["v"]],[R[13]]]],[11,R[2885],E,E,36,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,36,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,36,[[["v"]],[R[13]]]],[11,R[2891],E,E,36,[[["v"]],[R[13]]]],[11,R[2837],E,E,36,[[["v"]],[R[13]]]],[11,R[2839],E,E,37,[[["v"]],[R[13]]]],[11,R[2841],E,E,37,[[["v"]],[R[13]]]],[11,R[2843],E,E,37,[[["v"]],[R[13]]]],[11,R[2845],E,E,37,[[["v"]],[R[13]]]],[11,R[2847],E,E,37,[[["v"]],[R[13]]]],[11,R[2849],E,E,37,[[["v"]],[R[13]]]],[11,R[2851],E,E,37,[[["v"]],[R[13]]]],[11,R[2853],E,E,37,[[["v"]],[R[13]]]],[11,R[2855],E,E,37,[[["v"]],[R[13]]]],[11,R[2857],E,E,37,[[["v"]],[R[13]]]],[11,R[2859],E,E,37,[[["v"]],[R[13]]]],[11,R[2861],E,E,37,[[["v"]],[R[13]]]],[11,R[2863],E,E,37,[[["v"]],[R[13]]]],[11,R[2865],E,E,37,[[["v"]],[R[13]]]],[11,R[2867],E,E,37,[[["v"]],[R[13]]]],[11,R[2868],E,E,37,[[["v"]],[R[13]]]],[11,R[2869],E,E,37,[[["v"]],[R[13]]]],[11,R[2870],E,E,37,[[["v"]],[R[13]]]],[11,R[2871],E,E,37,[[["v"]],[R[13]]]],[11,R[2873],E,E,37,[[["v"]],[R[13]]]],[11,R[2875],E,E,37,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,37,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,37,[[["v"]],[R[13]]]],[11,R[2880],E,E,37,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,37,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,37,[[["v"]],[R[13]]]],[11,R[2885],E,E,37,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,37,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,37,[[["v"]],[R[13]]]],[11,R[2891],E,E,37,[[["v"]],[R[13]]]],[11,R[2837],E,E,37,[[["v"]],[R[13]]]],[11,R[2839],E,E,38,[[["v"]],[R[13]]]],[11,R[2841],E,E,38,[[["v"]],[R[13]]]],[11,R[2843],E,E,38,[[["v"]],[R[13]]]],[11,R[2845],E,E,38,[[["v"]],[R[13]]]],[11,R[2847],E,E,38,[[["v"]],[R[13]]]],[11,R[2849],E,E,38,[[["v"]],[R[13]]]],[11,R[2851],E,E,38,[[["v"]],[R[13]]]],[11,R[2853],E,E,38,[[["v"]],[R[13]]]],[11,R[2855],E,E,38,[[["v"]],[R[13]]]],[11,R[2857],E,E,38,[[["v"]],[R[13]]]],[11,R[2859],E,E,38,[[["v"]],[R[13]]]],[11,R[2861],E,E,38,[[["v"]],[R[13]]]],[11,R[2863],E,E,38,[[["v"]],[R[13]]]],[11,R[2865],E,E,38,[[["v"]],[R[13]]]],[11,R[2867],E,E,38,[[["v"]],[R[13]]]],[11,R[2868],E,E,38,[[["v"]],[R[13]]]],[11,R[2869],E,E,38,[[["v"]],[R[13]]]],[11,R[2870],E,E,38,[[["v"]],[R[13]]]],[11,R[2871],E,E,38,[[["v"]],[R[13]]]],[11,R[2873],E,E,38,[[["v"]],[R[13]]]],[11,R[2875],E,E,38,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,38,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,38,[[["v"]],[R[13]]]],[11,R[2880],E,E,38,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,38,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,38,[[["v"]],[R[13]]]],[11,R[2885],E,E,38,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,38,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,38,[[["v"]],[R[13]]]],[11,R[2891],E,E,38,[[["v"]],[R[13]]]],[11,R[2837],E,E,38,[[["v"]],[R[13]]]],[11,R[2839],E,E,39,[[["v"]],[R[13]]]],[11,R[2841],E,E,39,[[["v"]],[R[13]]]],[11,R[2843],E,E,39,[[["v"]],[R[13]]]],[11,R[2845],E,E,39,[[["v"]],[R[13]]]],[11,R[2847],E,E,39,[[["v"]],[R[13]]]],[11,R[2849],E,E,39,[[["v"]],[R[13]]]],[11,R[2851],E,E,39,[[["v"]],[R[13]]]],[11,R[2853],E,E,39,[[["v"]],[R[13]]]],[11,R[2855],E,E,39,[[["v"]],[R[13]]]],[11,R[2857],E,E,39,[[["v"]],[R[13]]]],[11,R[2859],E,E,39,[[["v"]],[R[13]]]],[11,R[2861],E,E,39,[[["v"]],[R[13]]]],[11,R[2863],E,E,39,[[["v"]],[R[13]]]],[11,R[2865],E,E,39,[[["v"]],[R[13]]]],[11,R[2867],E,E,39,[[["v"]],[R[13]]]],[11,R[2868],E,E,39,[[["v"]],[R[13]]]],[11,R[2869],E,E,39,[[["v"]],[R[13]]]],[11,R[2870],E,E,39,[[["v"]],[R[13]]]],[11,R[2871],E,E,39,[[["v"]],[R[13]]]],[11,R[2873],E,E,39,[[["v"]],[R[13]]]],[11,R[2875],E,E,39,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,39,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,39,[[["v"]],[R[13]]]],[11,R[2880],E,E,39,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,39,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,39,[[["v"]],[R[13]]]],[11,R[2885],E,E,39,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,39,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,39,[[["v"]],[R[13]]]],[11,R[2891],E,E,39,[[["v"]],[R[13]]]],[11,R[2837],E,E,39,[[["v"]],[R[13]]]],[11,R[2839],E,E,40,[[["v"]],[R[13]]]],[11,R[2841],E,E,40,[[["v"]],[R[13]]]],[11,R[2843],E,E,40,[[["v"]],[R[13]]]],[11,R[2845],E,E,40,[[["v"]],[R[13]]]],[11,R[2847],E,E,40,[[["v"]],[R[13]]]],[11,R[2849],E,E,40,[[["v"]],[R[13]]]],[11,R[2851],E,E,40,[[["v"]],[R[13]]]],[11,R[2853],E,E,40,[[["v"]],[R[13]]]],[11,R[2855],E,E,40,[[["v"]],[R[13]]]],[11,R[2857],E,E,40,[[["v"]],[R[13]]]],[11,R[2859],E,E,40,[[["v"]],[R[13]]]],[11,R[2861],E,E,40,[[["v"]],[R[13]]]],[11,R[2863],E,E,40,[[["v"]],[R[13]]]],[11,R[2865],E,E,40,[[["v"]],[R[13]]]],[11,R[2867],E,E,40,[[["v"]],[R[13]]]],[11,R[2868],E,E,40,[[["v"]],[R[13]]]],[11,R[2869],E,E,40,[[["v"]],[R[13]]]],[11,R[2870],E,E,40,[[["v"]],[R[13]]]],[11,R[2871],E,E,40,[[["v"]],[R[13]]]],[11,R[2873],E,E,40,[[["v"]],[R[13]]]],[11,R[2875],E,E,40,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,40,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,40,[[["v"]],[R[13]]]],[11,R[2880],E,E,40,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,40,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,40,[[["v"]],[R[13]]]],[11,R[2885],E,E,40,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,40,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,40,[[["v"]],[R[13]]]],[11,R[2891],E,E,40,[[["v"]],[R[13]]]],[11,R[2837],E,E,40,[[["v"]],[R[13]]]],[11,R[2839],E,E,41,[[["v"]],[R[13]]]],[11,R[2841],E,E,41,[[["v"]],[R[13]]]],[11,R[2843],E,E,41,[[["v"]],[R[13]]]],[11,R[2845],E,E,41,[[["v"]],[R[13]]]],[11,R[2847],E,E,41,[[["v"]],[R[13]]]],[11,R[2849],E,E,41,[[["v"]],[R[13]]]],[11,R[2851],E,E,41,[[["v"]],[R[13]]]],[11,R[2853],E,E,41,[[["v"]],[R[13]]]],[11,R[2855],E,E,41,[[["v"]],[R[13]]]],[11,R[2857],E,E,41,[[["v"]],[R[13]]]],[11,R[2859],E,E,41,[[["v"]],[R[13]]]],[11,R[2861],E,E,41,[[["v"]],[R[13]]]],[11,R[2863],E,E,41,[[["v"]],[R[13]]]],[11,R[2865],E,E,41,[[["v"]],[R[13]]]],[11,R[2867],E,E,41,[[["v"]],[R[13]]]],[11,R[2868],E,E,41,[[["v"]],[R[13]]]],[11,R[2869],E,E,41,[[["v"]],[R[13]]]],[11,R[2870],E,E,41,[[["v"]],[R[13]]]],[11,R[2871],E,E,41,[[["v"]],[R[13]]]],[11,R[2873],E,E,41,[[["v"]],[R[13]]]],[11,R[2875],E,E,41,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,41,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,41,[[["v"]],[R[13]]]],[11,R[2880],E,E,41,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,41,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,41,[[["v"]],[R[13]]]],[11,R[2885],E,E,41,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,41,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,41,[[["v"]],[R[13]]]],[11,R[2891],E,E,41,[[["v"]],[R[13]]]],[11,R[2837],E,E,41,[[["v"]],[R[13]]]],[11,R[2839],E,E,42,[[["v"]],[R[13]]]],[11,R[2841],E,E,42,[[["v"]],[R[13]]]],[11,R[2843],E,E,42,[[["v"]],[R[13]]]],[11,R[2845],E,E,42,[[["v"]],[R[13]]]],[11,R[2847],E,E,42,[[["v"]],[R[13]]]],[11,R[2849],E,E,42,[[["v"]],[R[13]]]],[11,R[2851],E,E,42,[[["v"]],[R[13]]]],[11,R[2853],E,E,42,[[["v"]],[R[13]]]],[11,R[2855],E,E,42,[[["v"]],[R[13]]]],[11,R[2857],E,E,42,[[["v"]],[R[13]]]],[11,R[2859],E,E,42,[[["v"]],[R[13]]]],[11,R[2861],E,E,42,[[["v"]],[R[13]]]],[11,R[2863],E,E,42,[[["v"]],[R[13]]]],[11,R[2865],E,E,42,[[["v"]],[R[13]]]],[11,R[2867],E,E,42,[[["v"]],[R[13]]]],[11,R[2868],E,E,42,[[["v"]],[R[13]]]],[11,R[2869],E,E,42,[[["v"]],[R[13]]]],[11,R[2870],E,E,42,[[["v"]],[R[13]]]],[11,R[2871],E,E,42,[[["v"]],[R[13]]]],[11,R[2873],E,E,42,[[["v"]],[R[13]]]],[11,R[2875],E,E,42,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,42,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,42,[[["v"]],[R[13]]]],[11,R[2880],E,E,42,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,42,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,42,[[["v"]],[R[13]]]],[11,R[2885],E,E,42,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,42,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,42,[[["v"]],[R[13]]]],[11,R[2891],E,E,42,[[["v"]],[R[13]]]],[11,R[2837],E,E,42,[[["v"]],[R[13]]]],[11,R[2839],E,E,43,[[["v"]],[R[13]]]],[11,R[2841],E,E,43,[[["v"]],[R[13]]]],[11,R[2843],E,E,43,[[["v"]],[R[13]]]],[11,R[2845],E,E,43,[[["v"]],[R[13]]]],[11,R[2847],E,E,43,[[["v"]],[R[13]]]],[11,R[2849],E,E,43,[[["v"]],[R[13]]]],[11,R[2851],E,E,43,[[["v"]],[R[13]]]],[11,R[2853],E,E,43,[[["v"]],[R[13]]]],[11,R[2855],E,E,43,[[["v"]],[R[13]]]],[11,R[2857],E,E,43,[[["v"]],[R[13]]]],[11,R[2859],E,E,43,[[["v"]],[R[13]]]],[11,R[2861],E,E,43,[[["v"]],[R[13]]]],[11,R[2863],E,E,43,[[["v"]],[R[13]]]],[11,R[2865],E,E,43,[[["v"]],[R[13]]]],[11,R[2867],E,E,43,[[["v"]],[R[13]]]],[11,R[2868],E,E,43,[[["v"]],[R[13]]]],[11,R[2869],E,E,43,[[["v"]],[R[13]]]],[11,R[2870],E,E,43,[[["v"]],[R[13]]]],[11,R[2871],E,E,43,[[["v"]],[R[13]]]],[11,R[2873],E,E,43,[[["v"]],[R[13]]]],[11,R[2875],E,E,43,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,43,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,43,[[["v"]],[R[13]]]],[11,R[2880],E,E,43,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,43,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,43,[[["v"]],[R[13]]]],[11,R[2885],E,E,43,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,43,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,43,[[["v"]],[R[13]]]],[11,R[2891],E,E,43,[[["v"]],[R[13]]]],[11,R[2837],E,E,43,[[["v"]],[R[13]]]],[11,R[2839],E,E,44,[[["v"]],[R[13]]]],[11,R[2841],E,E,44,[[["v"]],[R[13]]]],[11,R[2843],E,E,44,[[["v"]],[R[13]]]],[11,R[2845],E,E,44,[[["v"]],[R[13]]]],[11,R[2847],E,E,44,[[["v"]],[R[13]]]],[11,R[2849],E,E,44,[[["v"]],[R[13]]]],[11,R[2851],E,E,44,[[["v"]],[R[13]]]],[11,R[2853],E,E,44,[[["v"]],[R[13]]]],[11,R[2855],E,E,44,[[["v"]],[R[13]]]],[11,R[2857],E,E,44,[[["v"]],[R[13]]]],[11,R[2859],E,E,44,[[["v"]],[R[13]]]],[11,R[2861],E,E,44,[[["v"]],[R[13]]]],[11,R[2863],E,E,44,[[["v"]],[R[13]]]],[11,R[2865],E,E,44,[[["v"]],[R[13]]]],[11,R[2867],E,E,44,[[["v"]],[R[13]]]],[11,R[2868],E,E,44,[[["v"]],[R[13]]]],[11,R[2869],E,E,44,[[["v"]],[R[13]]]],[11,R[2870],E,E,44,[[["v"]],[R[13]]]],[11,R[2871],E,E,44,[[["v"]],[R[13]]]],[11,R[2873],E,E,44,[[["v"]],[R[13]]]],[11,R[2875],E,E,44,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,44,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,44,[[["v"]],[R[13]]]],[11,R[2880],E,E,44,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,44,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,44,[[["v"]],[R[13]]]],[11,R[2885],E,E,44,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,44,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,44,[[["v"]],[R[13]]]],[11,R[2891],E,E,44,[[["v"]],[R[13]]]],[11,R[2837],E,E,44,[[["v"]],[R[13]]]],[11,R[2839],E,E,45,[[["v"]],[R[13]]]],[11,R[2841],E,E,45,[[["v"]],[R[13]]]],[11,R[2843],E,E,45,[[["v"]],[R[13]]]],[11,R[2845],E,E,45,[[["v"]],[R[13]]]],[11,R[2847],E,E,45,[[["v"]],[R[13]]]],[11,R[2849],E,E,45,[[["v"]],[R[13]]]],[11,R[2851],E,E,45,[[["v"]],[R[13]]]],[11,R[2853],E,E,45,[[["v"]],[R[13]]]],[11,R[2855],E,E,45,[[["v"]],[R[13]]]],[11,R[2857],E,E,45,[[["v"]],[R[13]]]],[11,R[2859],E,E,45,[[["v"]],[R[13]]]],[11,R[2861],E,E,45,[[["v"]],[R[13]]]],[11,R[2863],E,E,45,[[["v"]],[R[13]]]],[11,R[2865],E,E,45,[[["v"]],[R[13]]]],[11,R[2867],E,E,45,[[["v"]],[R[13]]]],[11,R[2868],E,E,45,[[["v"]],[R[13]]]],[11,R[2869],E,E,45,[[["v"]],[R[13]]]],[11,R[2870],E,E,45,[[["v"]],[R[13]]]],[11,R[2871],E,E,45,[[["v"]],[R[13]]]],[11,R[2873],E,E,45,[[["v"]],[R[13]]]],[11,R[2875],E,E,45,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,45,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,45,[[["v"]],[R[13]]]],[11,R[2880],E,E,45,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,45,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,45,[[["v"]],[R[13]]]],[11,R[2885],E,E,45,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,45,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,45,[[["v"]],[R[13]]]],[11,R[2891],E,E,45,[[["v"]],[R[13]]]],[11,R[2837],E,E,45,[[["v"]],[R[13]]]],[11,R[2839],E,E,46,[[["v"]],[R[13]]]],[11,R[2841],E,E,46,[[["v"]],[R[13]]]],[11,R[2843],E,E,46,[[["v"]],[R[13]]]],[11,R[2845],E,E,46,[[["v"]],[R[13]]]],[11,R[2847],E,E,46,[[["v"]],[R[13]]]],[11,R[2849],E,E,46,[[["v"]],[R[13]]]],[11,R[2851],E,E,46,[[["v"]],[R[13]]]],[11,R[2853],E,E,46,[[["v"]],[R[13]]]],[11,R[2855],E,E,46,[[["v"]],[R[13]]]],[11,R[2857],E,E,46,[[["v"]],[R[13]]]],[11,R[2859],E,E,46,[[["v"]],[R[13]]]],[11,R[2861],E,E,46,[[["v"]],[R[13]]]],[11,R[2863],E,E,46,[[["v"]],[R[13]]]],[11,R[2865],E,E,46,[[["v"]],[R[13]]]],[11,R[2867],E,E,46,[[["v"]],[R[13]]]],[11,R[2868],E,E,46,[[["v"]],[R[13]]]],[11,R[2869],E,E,46,[[["v"]],[R[13]]]],[11,R[2870],E,E,46,[[["v"]],[R[13]]]],[11,R[2871],E,E,46,[[["v"]],[R[13]]]],[11,R[2873],E,E,46,[[["v"]],[R[13]]]],[11,R[2875],E,E,46,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,46,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,46,[[["v"]],[R[13]]]],[11,R[2880],E,E,46,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,46,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,46,[[["v"]],[R[13]]]],[11,R[2885],E,E,46,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,46,[[["v"]],[R[13]]]],[11,R[2891],E,E,46,[[["v"]],[R[13]]]],[11,R[2837],E,E,46,[[["v"]],[R[13]]]],[11,R[2887],E,E,46,[[["v"],["str"]],[R[13]]]],[11,R[2837],E,E,47,[[["v"]],[R[13]]]],[11,R[2887],E,E,47,[[["v"],["str"]],[R[13]]]],[11,R[2839],E,E,47,[[["v"]],[R[13]]]],[11,R[2841],E,E,47,[[["v"]],[R[13]]]],[11,R[2843],E,E,47,[[["v"]],[R[13]]]],[11,R[2845],E,E,47,[[["v"]],[R[13]]]],[11,R[2847],E,E,47,[[["v"]],[R[13]]]],[11,R[2849],E,E,47,[[["v"]],[R[13]]]],[11,R[2851],E,E,47,[[["v"]],[R[13]]]],[11,R[2853],E,E,47,[[["v"]],[R[13]]]],[11,R[2855],E,E,47,[[["v"]],[R[13]]]],[11,R[2857],E,E,47,[[["v"]],[R[13]]]],[11,R[2859],E,E,47,[[["v"]],[R[13]]]],[11,R[2861],E,E,47,[[["v"]],[R[13]]]],[11,R[2863],E,E,47,[[["v"]],[R[13]]]],[11,R[2865],E,E,47,[[["v"]],[R[13]]]],[11,R[2867],E,E,47,[[["v"]],[R[13]]]],[11,R[2868],E,E,47,[[["v"]],[R[13]]]],[11,R[2869],E,E,47,[[["v"]],[R[13]]]],[11,R[2870],E,E,47,[[["v"]],[R[13]]]],[11,R[2871],E,E,47,[[["v"]],[R[13]]]],[11,R[2873],E,E,47,[[["v"]],[R[13]]]],[11,R[2875],E,E,47,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,47,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,47,[[["v"]],[R[13]]]],[11,R[2880],E,E,47,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,47,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,47,[[["v"]],[R[13]]]],[11,R[2885],E,E,47,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,47,[[["v"]],[R[13]]]],[11,R[2891],E,E,47,[[["v"]],[R[13]]]],[11,R[2837],E,E,1,[[["v"]],[R[13]]]],[11,R[2887],E,E,1,[[["v"],["str"]],[R[13]]]],[11,R[2839],E,E,1,[[["v"]],[R[13]]]],[11,R[2841],E,E,1,[[["v"]],[R[13]]]],[11,R[2843],E,E,1,[[["v"]],[R[13]]]],[11,R[2845],E,E,1,[[["v"]],[R[13]]]],[11,R[2847],E,E,1,[[["v"]],[R[13]]]],[11,R[2849],E,E,1,[[["v"]],[R[13]]]],[11,R[2851],E,E,1,[[["v"]],[R[13]]]],[11,R[2853],E,E,1,[[["v"]],[R[13]]]],[11,R[2855],E,E,1,[[["v"]],[R[13]]]],[11,R[2857],E,E,1,[[["v"]],[R[13]]]],[11,R[2859],E,E,1,[[["v"]],[R[13]]]],[11,R[2861],E,E,1,[[["v"]],[R[13]]]],[11,R[2863],E,E,1,[[["v"]],[R[13]]]],[11,R[2865],E,E,1,[[["v"]],[R[13]]]],[11,R[2867],E,E,1,[[["v"]],[R[13]]]],[11,R[2868],E,E,1,[[["v"]],[R[13]]]],[11,R[2869],E,E,1,[[["v"]],[R[13]]]],[11,R[2870],E,E,1,[[["v"]],[R[13]]]],[11,R[2871],E,E,1,[[["v"]],[R[13]]]],[11,R[2873],E,E,1,[[["v"]],[R[13]]]],[11,R[2875],E,E,1,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,1,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,1,[[["v"]],[R[13]]]],[11,R[2880],E,E,1,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,1,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,1,[[["v"]],[R[13]]]],[11,R[2885],E,E,1,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,1,[[["v"]],[R[13]]]],[11,R[2891],E,E,1,[[["v"]],[R[13]]]],[11,R[2837],E,E,48,[[["v"]],[R[13]]]],[11,R[2887],E,E,48,[[["v"],["str"]],[R[13]]]],[11,R[2839],E,E,48,[[["v"]],[R[13]]]],[11,R[2841],E,E,48,[[["v"]],[R[13]]]],[11,R[2843],E,E,48,[[["v"]],[R[13]]]],[11,R[2845],E,E,48,[[["v"]],[R[13]]]],[11,R[2847],E,E,48,[[["v"]],[R[13]]]],[11,R[2849],E,E,48,[[["v"]],[R[13]]]],[11,R[2851],E,E,48,[[["v"]],[R[13]]]],[11,R[2853],E,E,48,[[["v"]],[R[13]]]],[11,R[2855],E,E,48,[[["v"]],[R[13]]]],[11,R[2857],E,E,48,[[["v"]],[R[13]]]],[11,R[2859],E,E,48,[[["v"]],[R[13]]]],[11,R[2861],E,E,48,[[["v"]],[R[13]]]],[11,R[2863],E,E,48,[[["v"]],[R[13]]]],[11,R[2865],E,E,48,[[["v"]],[R[13]]]],[11,R[2867],E,E,48,[[["v"]],[R[13]]]],[11,R[2868],E,E,48,[[["v"]],[R[13]]]],[11,R[2869],E,E,48,[[["v"]],[R[13]]]],[11,R[2870],E,E,48,[[["v"]],[R[13]]]],[11,R[2871],E,E,48,[[["v"]],[R[13]]]],[11,R[2873],E,E,48,[[["v"]],[R[13]]]],[11,R[2875],E,E,48,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,48,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,48,[[["v"]],[R[13]]]],[11,R[2880],E,E,48,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,48,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,48,[[["v"]],[R[13]]]],[11,R[2885],E,E,48,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,48,[[["v"]],[R[13]]]],[11,R[2891],E,E,48,[[["v"]],[R[13]]]],[11,R[2837],E,E,49,[[["v"]],[R[13]]]],[11,R[2887],E,E,49,[[["v"],["str"]],[R[13]]]],[11,R[2839],E,E,49,[[["v"]],[R[13]]]],[11,R[2841],E,E,49,[[["v"]],[R[13]]]],[11,R[2843],E,E,49,[[["v"]],[R[13]]]],[11,R[2845],E,E,49,[[["v"]],[R[13]]]],[11,R[2847],E,E,49,[[["v"]],[R[13]]]],[11,R[2849],E,E,49,[[["v"]],[R[13]]]],[11,R[2851],E,E,49,[[["v"]],[R[13]]]],[11,R[2853],E,E,49,[[["v"]],[R[13]]]],[11,R[2855],E,E,49,[[["v"]],[R[13]]]],[11,R[2857],E,E,49,[[["v"]],[R[13]]]],[11,R[2859],E,E,49,[[["v"]],[R[13]]]],[11,R[2861],E,E,49,[[["v"]],[R[13]]]],[11,R[2863],E,E,49,[[["v"]],[R[13]]]],[11,R[2865],E,E,49,[[["v"]],[R[13]]]],[11,R[2867],E,E,49,[[["v"]],[R[13]]]],[11,R[2868],E,E,49,[[["v"]],[R[13]]]],[11,R[2869],E,E,49,[[["v"]],[R[13]]]],[11,R[2870],E,E,49,[[["v"]],[R[13]]]],[11,R[2871],E,E,49,[[["v"]],[R[13]]]],[11,R[2873],E,E,49,[[["v"]],[R[13]]]],[11,R[2875],E,E,49,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,49,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,49,[[["v"]],[R[13]]]],[11,R[2880],E,E,49,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,49,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,49,[[["v"]],[R[13]]]],[11,R[2885],E,E,49,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,49,[[["v"]],[R[13]]]],[11,R[2891],E,E,49,[[["v"]],[R[13]]]],[11,R[2837],E,E,2,[[["v"]],[R[13]]]],[11,R[2839],E,E,2,[[["v"]],[R[13]]]],[11,R[2841],E,E,2,[[["v"]],[R[13]]]],[11,R[2843],E,E,2,[[["v"]],[R[13]]]],[11,R[2845],E,E,2,[[["v"]],[R[13]]]],[11,R[2847],E,E,2,[[["v"]],[R[13]]]],[11,R[2849],E,E,2,[[["v"]],[R[13]]]],[11,R[2851],E,E,2,[[["v"]],[R[13]]]],[11,R[2853],E,E,2,[[["v"]],[R[13]]]],[11,R[2855],E,E,2,[[["v"]],[R[13]]]],[11,R[2857],E,E,2,[[["v"]],[R[13]]]],[11,R[2859],E,E,2,[[["v"]],[R[13]]]],[11,R[2861],E,E,2,[[["v"]],[R[13]]]],[11,R[2863],E,E,2,[[["v"]],[R[13]]]],[11,R[2865],E,E,2,[[["v"]],[R[13]]]],[11,R[2867],E,E,2,[[["v"]],[R[13]]]],[11,R[2868],E,E,2,[[["v"]],[R[13]]]],[11,R[2869],E,E,2,[[["v"]],[R[13]]]],[11,R[2870],E,E,2,[[["v"]],[R[13]]]],[11,R[2871],E,E,2,[[["v"]],[R[13]]]],[11,R[2873],E,E,2,[[["v"]],[R[13]]]],[11,R[2875],E,E,2,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,2,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,2,[[["v"]],[R[13]]]],[11,R[2880],E,E,2,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,2,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,2,[[["v"]],[R[13]]]],[11,R[2885],E,E,2,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,2,[[["v"]],[R[13]]]],[11,R[2891],E,E,2,[[["v"]],[R[13]]]],[11,R[2887],E,E,2,[[["v"],["str"]],[R[13]]]],[11,R[2837],E,E,3,[[["v"]],[R[13]]]],[11,R[2839],E,E,3,[[["v"]],[R[13]]]],[11,R[2841],E,E,3,[[["v"]],[R[13]]]],[11,R[2843],E,E,3,[[["v"]],[R[13]]]],[11,R[2845],E,E,3,[[["v"]],[R[13]]]],[11,R[2847],E,E,3,[[["v"]],[R[13]]]],[11,R[2849],E,E,3,[[["v"]],[R[13]]]],[11,R[2851],E,E,3,[[["v"]],[R[13]]]],[11,R[2853],E,E,3,[[["v"]],[R[13]]]],[11,R[2855],E,E,3,[[["v"]],[R[13]]]],[11,R[2857],E,E,3,[[["v"]],[R[13]]]],[11,R[2859],E,E,3,[[["v"]],[R[13]]]],[11,R[2861],E,E,3,[[["v"]],[R[13]]]],[11,R[2863],E,E,3,[[["v"]],[R[13]]]],[11,R[2865],E,E,3,[[["v"]],[R[13]]]],[11,R[2867],E,E,3,[[["v"]],[R[13]]]],[11,R[2868],E,E,3,[[["v"]],[R[13]]]],[11,R[2869],E,E,3,[[["v"]],[R[13]]]],[11,R[2870],E,E,3,[[["v"]],[R[13]]]],[11,R[2871],E,E,3,[[["v"]],[R[13]]]],[11,R[2873],E,E,3,[[["v"]],[R[13]]]],[11,R[2875],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,3,[[["v"]],[R[13]]]],[11,R[2880],E,E,3,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,3,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,3,[[["v"]],[R[13]]]],[11,R[2885],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,3,[[["v"]],[R[13]]]],[11,R[2891],E,E,3,[[["v"]],[R[13]]]],[11,R[2837],E,E,4,[[["v"]],[R[13]]]],[11,R[2839],E,E,4,[[["v"]],[R[13]]]],[11,R[2841],E,E,4,[[["v"]],[R[13]]]],[11,R[2843],E,E,4,[[["v"]],[R[13]]]],[11,R[2845],E,E,4,[[["v"]],[R[13]]]],[11,R[2847],E,E,4,[[["v"]],[R[13]]]],[11,R[2849],E,E,4,[[["v"]],[R[13]]]],[11,R[2851],E,E,4,[[["v"]],[R[13]]]],[11,R[2853],E,E,4,[[["v"]],[R[13]]]],[11,R[2855],E,E,4,[[["v"]],[R[13]]]],[11,R[2857],E,E,4,[[["v"]],[R[13]]]],[11,R[2859],E,E,4,[[["v"]],[R[13]]]],[11,R[2861],E,E,4,[[["v"]],[R[13]]]],[11,R[2863],E,E,4,[[["v"]],[R[13]]]],[11,R[2865],E,E,4,[[["v"]],[R[13]]]],[11,R[2867],E,E,4,[[["v"]],[R[13]]]],[11,R[2868],E,E,4,[[["v"]],[R[13]]]],[11,R[2869],E,E,4,[[["v"]],[R[13]]]],[11,R[2870],E,E,4,[[["v"]],[R[13]]]],[11,R[2871],E,E,4,[[["v"]],[R[13]]]],[11,R[2873],E,E,4,[[["v"]],[R[13]]]],[11,R[2875],E,E,4,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,4,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,4,[[["v"]],[R[13]]]],[11,R[2880],E,E,4,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,4,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,4,[[["v"]],[R[13]]]],[11,R[2885],E,E,4,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,4,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,4,[[["v"]],[R[13]]]],[11,R[2891],E,E,4,[[["v"]],[R[13]]]],[11,R[2837],E,E,5,[[["v"]],[R[13]]]],[11,R[2879],E,E,5,[[["v"]],[R[13]]]],[11,R[2880],E,E,5,[[[R[9]],["v"]],[R[13]]]],[11,R[2839],E,E,5,[[["v"]],[R[13]]]],[11,R[2841],E,E,5,[[["v"]],[R[13]]]],[11,R[2843],E,E,5,[[["v"]],[R[13]]]],[11,R[2845],E,E,5,[[["v"]],[R[13]]]],[11,R[2847],E,E,5,[[["v"]],[R[13]]]],[11,R[2849],E,E,5,[[["v"]],[R[13]]]],[11,R[2851],E,E,5,[[["v"]],[R[13]]]],[11,R[2853],E,E,5,[[["v"]],[R[13]]]],[11,R[2855],E,E,5,[[["v"]],[R[13]]]],[11,R[2857],E,E,5,[[["v"]],[R[13]]]],[11,R[2859],E,E,5,[[["v"]],[R[13]]]],[11,R[2861],E,E,5,[[["v"]],[R[13]]]],[11,R[2863],E,E,5,[[["v"]],[R[13]]]],[11,R[2865],E,E,5,[[["v"]],[R[13]]]],[11,R[2867],E,E,5,[[["v"]],[R[13]]]],[11,R[2868],E,E,5,[[["v"]],[R[13]]]],[11,R[2869],E,E,5,[[["v"]],[R[13]]]],[11,R[2870],E,E,5,[[["v"]],[R[13]]]],[11,R[2871],E,E,5,[[["v"]],[R[13]]]],[11,R[2873],E,E,5,[[["v"]],[R[13]]]],[11,R[2875],E,E,5,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,5,[[["v"],["str"]],[R[13]]]],[11,R[2881],E,E,5,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,5,[[["v"]],[R[13]]]],[11,R[2885],E,E,5,[[["v"],["str"]],[R[13]]]],[11,R[2887],E,E,5,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,5,[[["v"]],[R[13]]]],[11,R[2891],E,E,5,[[["v"]],[R[13]]]],[11,R[2837],E,E,6,[[["v"]],[R[13]]]],[11,R[2887],E,E,6,[[["v"],["str"]],[R[13]]]],[11,R[2839],E,E,6,[[["v"]],[R[13]]]],[11,R[2841],E,E,6,[[["v"]],[R[13]]]],[11,R[2843],E,E,6,[[["v"]],[R[13]]]],[11,R[2845],E,E,6,[[["v"]],[R[13]]]],[11,R[2847],E,E,6,[[["v"]],[R[13]]]],[11,R[2849],E,E,6,[[["v"]],[R[13]]]],[11,R[2851],E,E,6,[[["v"]],[R[13]]]],[11,R[2853],E,E,6,[[["v"]],[R[13]]]],[11,R[2855],E,E,6,[[["v"]],[R[13]]]],[11,R[2857],E,E,6,[[["v"]],[R[13]]]],[11,R[2859],E,E,6,[[["v"]],[R[13]]]],[11,R[2861],E,E,6,[[["v"]],[R[13]]]],[11,R[2863],E,E,6,[[["v"]],[R[13]]]],[11,R[2865],E,E,6,[[["v"]],[R[13]]]],[11,R[2867],E,E,6,[[["v"]],[R[13]]]],[11,R[2868],E,E,6,[[["v"]],[R[13]]]],[11,R[2869],E,E,6,[[["v"]],[R[13]]]],[11,R[2870],E,E,6,[[["v"]],[R[13]]]],[11,R[2871],E,E,6,[[["v"]],[R[13]]]],[11,R[2873],E,E,6,[[["v"]],[R[13]]]],[11,R[2875],E,E,6,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,6,[[["v"],["str"]],[R[13]]]],[11,R[2879],E,E,6,[[["v"]],[R[13]]]],[11,R[2880],E,E,6,[[[R[9]],["v"]],[R[13]]]],[11,R[2881],E,E,6,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2883],E,E,6,[[["v"]],[R[13]]]],[11,R[2885],E,E,6,[[["v"],["str"]],[R[13]]]],[11,R[2889],E,E,6,[[["v"]],[R[13]]]],[11,R[2891],E,E,6,[[["v"]],[R[13]]]],[11,"expecting",R[2974],E,28,[[["self"],[R[30]]],[R[13]]]],[11,R[3042],E,E,28,[[["bool"]],[R[13]]]],[11,"visit_i64",E,E,28,[[["i64"]],[R[13]]]],[11,"visit_u64",E,E,28,[[["u64"]],[R[13]]]],[11,"visit_f64",E,E,28,[[["f64"]],[R[13]]]],[11,"visit_str",E,E,28,[[["str"]],[R[13]]]],[11,R[3045],E,E,28,[[],[R[13]]]],[11,R[3046],E,E,28,[[["d"]],[R[13]]]],[11,R[2975],E,E,28,[[["d"]],[R[13]]]],[11,R[3044],E,E,28,[[],[R[13]]]],[11,"visit_seq",E,E,28,[[["a"]],[R[13]]]],[11,"visit_map",E,E,28,[[["a"]],[R[13]]]],[11,R[2976],E,E,28,[[],[R[13]]]],[11,"visit_enum",E,E,28,[[["a"]],[R[13]]]],[11,R[2977],R[2973],E,3,[[["self"],["v"]],[[R[45]],[R[13],[R[45]]]]]],[11,R[46],E,E,3,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,R[2977],E,E,5,[[["self"],[T]],[[R[13],[R[45]]],[R[45]]]]],[11,R[46],E,E,5,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,R[2978],E,E,5,[[["self"],[T]],[[R[45]],[R[13],[R[45]]]]]],[11,R[2979],E,E,5,[[["self"],[T]],[R[13]]]],[11,R[2980],E,E,5,[[["self"],["tv"],["tk"]],[[R[45]],[R[13],[R[45]]]]]],[11,R[46],E,E,5,[[["self"]],[[R[45],[R[9]]],[R[9]]]]],[11,R[2981],E,E,46,[[[T]],[R[13]]]],[11,R[2981],E,E,47,[[[T]],[R[13]]]],[11,R[2981],E,E,1,[[[T]],[R[13]]]],[11,R[2981],E,E,48,[[[T]],[R[13]]]],[11,R[2981],E,E,49,[[[T]],[R[13]]]],[11,R[2981],E,E,6,[[[T]],[R[13]]]],[11,R[2826],R[2982],E,50,[[["self"],[T]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,R[2826],E,E,50,[[["self"],[T]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,R[2829],E,E,50,[[["self"],[T]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,R[2829],E,E,50,[[["self"],[T]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,R[2983],E,E,50,[[["self"],[T]],[R[13]]]],[11,R[2984],E,E,50,[[["self"],[T]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,R[2829],E,E,50,[[["self"],[T],["str"]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,R[2829],E,E,50,[[["self"],[T],["str"]],[R[13]]]],[11,"end",E,E,50,[[],[R[13]]]],[11,"custom",R[2973],E,29,[[[T]],["self"]]],[11,"custom",E,E,29,[[[T]],["self"]]],[11,R[77],R[2974],E,28,[[],[R[2985]]]],[11,"clone",R[2973],E,29,[[["self"]],["error"]]],[11,"clone",E,E,30,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,39,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,49,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[2974],E,28,[[["self"]],[R[2985]]]],[11,"clone",E,E,0,[[["self"]],[R[2986]]]],[11,"eq",R[2973],E,29,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["error"]],["bool"]]],[11,"eq",R[2974],E,0,[[["self"],[R[2986]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2986]]],["bool"]]],[11,"fmt",R[2973],E,29,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,30,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,31,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,33,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,34,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,35,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,36,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,40,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,43,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,48,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,49,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2974],E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2973],E,29,[[["self"],[R[30]]],[[R[13],["error"]],["error"]]]],[11,"fmt",R[2974],E,0,[[["self"],[R[30]]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,R[31],R[2973],E,29,[[["self"]],["str"]]]],"p":[[4,R[2297]],[3,R[2987]],[3,R[2988]],[3,R[2989]],[3,R[2990]],[3,R[2991]],[3,R[2992]],[8,"Error"],[8,"Expected"],[8,R[2833]],[8,R[2993]],[8,R[2820]],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,R[2994]],[8,R[2995]],[8,"Error"],[8,R[3017]],[8,R[2996]],[8,R[2822]],[8,R[2823]],[8,R[2827]],[8,R[2828]],[8,R[2830]],[8,R[2831]],[8,R[2832]],[3,"IgnoredAny"],[3,"Error"],[3,R[2997]],[3,R[2998]],[3,R[2999]],[3,R[3000]],[3,R[3001]],[3,R[3002]],[3,R[3003]],[3,R[3004]],[3,R[3005]],[3,R[3006]],[3,R[3007]],[3,R[3008]],[3,R[3009]],[3,R[3010]],[3,R[3011]],[3,R[3012]],[3,R[3013]],[3,R[3014]],[3,R[3015]],[3,R[3016]],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","i":[[24,R[3017],"serde_derive",E,N,N],[24,R[2833],E,E,N,N]],"p":[]};
searchIndex["serde_value"]={"doc":E,"i":[[3,R[3059],"serde_value",E,N,N],[4,R[2297],E,E,N,N],[13,"Bool",E,E,0,N],[13,"Unsigned",E,E,0,N],[13,"Signed",E,E,0,N],[13,"Float",E,E,0,N],[13,"Char",E,E,0,N],[13,"Str",E,E,0,N],[13,"Bytes",E,E,0,N],[13,"Unit",E,E,0,N],[13,"Option",E,E,0,N],[13,R[3035],E,E,0,N],[13,"Seq",E,E,0,N],[13,"Map",E,E,0,N],[13,"Enum",E,E,0,N],[13,R[3036],E,E,0,N],[13,R[3037],E,E,0,N],[13,R[3038],E,E,0,N],[13,R[3039],E,E,0,N],[13,"Other",E,E,0,N],[4,R[3057],E,E,N,N],[13,"Custom",E,E,1,N],[13,"InvalidType",E,E,1,N],[13,"InvalidValue",E,E,1,N],[13,"InvalidLength",E,E,1,N],[13,"UnknownVariant",E,E,1,N],[13,"UnknownField",E,E,1,N],[13,"MissingField",E,E,1,N],[13,"DuplicateField",E,E,1,N],[4,R[3058],E,E,N,N],[13,"Custom",E,E,2,N],[4,"Value",E,E,N,N],[13,"Bool",E,E,3,N],[13,"U8",E,E,3,N],[13,"U16",E,E,3,N],[13,"U32",E,E,3,N],[13,"U64",E,E,3,N],[13,"I8",E,E,3,N],[13,"I16",E,E,3,N],[13,"I32",E,E,3,N],[13,"I64",E,E,3,N],[13,"F32",E,E,3,N],[13,"F64",E,E,3,N],[13,"Char",E,E,3,N],[13,"String",E,E,3,N],[13,"Unit",E,E,3,N],[13,"Option",E,E,3,N],[13,"Newtype",E,E,3,N],[13,"Seq",E,E,3,N],[13,"Map",E,E,3,N],[13,"Bytes",E,E,3,N],[5,"to_value",E,E,N,[[[R[3033]]],[[R[3040]],["value"],[R[13],["value",R[3040]]]]]],[11,"to_unexpected",E,E,0,[[["self"]],[R[2986]]]],[11,"to_error",E,E,1,[[["self"]],["error"]]],[11,"into_error",E,E,1,[[],["error"]]],[11,"deserialize_into",E,E,3,[[],[[R[13],[R[3041]]],[R[2809]],[R[3041]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"clone",E,E,3,[[["self"]],["value"]]],[11,"cmp",E,E,3,[[["self"]],[R[47]]]],[11,"from",E,E,0,[[[R[2986]]],[R[2986]]]],[11,"from",E,E,1,[[["error"]],[R[3041]]]],[11,R[63],E,E,3,[[["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,R[31],E,E,1,[[["self"]],["str"]]],[11,R[31],E,E,2,[[["self"]],["str"]]],[11,"expecting",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,R[3042],E,E,4,[[["bool"]],[["value"],[R[13],["value"]]]]],[11,"visit_i8",E,E,4,[[["i8"]],[["value"],[R[13],["value"]]]]],[11,"visit_i16",E,E,4,[[["i16"]],[["value"],[R[13],["value"]]]]],[11,"visit_i32",E,E,4,[[["i32"]],[["value"],[R[13],["value"]]]]],[11,"visit_i64",E,E,4,[[["i64"]],[["value"],[R[13],["value"]]]]],[11,"visit_u8",E,E,4,[[["u8"]],[["value"],[R[13],["value"]]]]],[11,"visit_u16",E,E,4,[[["u16"]],[["value"],[R[13],["value"]]]]],[11,"visit_u32",E,E,4,[[["u32"]],[["value"],[R[13],["value"]]]]],[11,"visit_u64",E,E,4,[[["u64"]],[["value"],[R[13],["value"]]]]],[11,"visit_f32",E,E,4,[[["f32"]],[["value"],[R[13],["value"]]]]],[11,"visit_f64",E,E,4,[[["f64"]],[["value"],[R[13],["value"]]]]],[11,"visit_char",E,E,4,[[["char"]],[["value"],[R[13],["value"]]]]],[11,"visit_str",E,E,4,[[["str"]],[["value"],[R[13],["value"]]]]],[11,R[3043],E,E,4,[[["string"]],[["value"],[R[13],["value"]]]]],[11,R[3044],E,E,4,[[],[["value"],[R[13],["value"]]]]],[11,R[3045],E,E,4,[[],[["value"],[R[13],["value"]]]]],[11,R[3046],E,E,4,[[[R[3047]]],[["value"],[R[13],["value"]]]]],[11,R[2975],E,E,4,[[[R[3047]]],[["value"],[R[13],["value"]]]]],[11,"visit_seq",E,E,4,[[["seqaccess"]],[[R[13],["value"]],["value"]]]],[11,"visit_map",E,E,4,[[["mapaccess"]],[["value"],[R[13],["value"]]]]],[11,R[2976],E,E,4,[[],[["value"],[R[13],["value"]]]]],[11,R[3048],E,E,4,[[["vec",["u8"]],["u8"]],[["value"],[R[13],["value"]]]]],[11,R[2837],E,E,3,[[["visitor"]],[R[13]]]],[11,R[2871],E,E,3,[[["visitor"]],[R[13]]]],[11,R[2887],E,E,3,[[["visitor"],["str"]],[R[13]]]],[11,R[2839],E,E,3,[[["v"]],[R[13]]]],[11,R[2851],E,E,3,[[["v"]],[R[13]]]],[11,R[2853],E,E,3,[[["v"]],[R[13]]]],[11,R[2855],E,E,3,[[["v"]],[R[13]]]],[11,R[2857],E,E,3,[[["v"]],[R[13]]]],[11,R[2841],E,E,3,[[["v"]],[R[13]]]],[11,R[2843],E,E,3,[[["v"]],[R[13]]]],[11,R[2845],E,E,3,[[["v"]],[R[13]]]],[11,R[2847],E,E,3,[[["v"]],[R[13]]]],[11,R[2861],E,E,3,[[["v"]],[R[13]]]],[11,R[2863],E,E,3,[[["v"]],[R[13]]]],[11,R[2865],E,E,3,[[["v"]],[R[13]]]],[11,R[2867],E,E,3,[[["v"]],[R[13]]]],[11,R[2868],E,E,3,[[["v"]],[R[13]]]],[11,R[2873],E,E,3,[[["v"]],[R[13]]]],[11,R[2879],E,E,3,[[["v"]],[R[13]]]],[11,R[2869],E,E,3,[[["v"]],[R[13]]]],[11,R[2870],E,E,3,[[["v"]],[R[13]]]],[11,R[2883],E,E,3,[[["v"]],[R[13]]]],[11,R[2875],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2877],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2881],E,E,3,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2885],E,E,3,[[["v"],["str"]],[R[13]]]],[11,R[2880],E,E,3,[[[R[9]],["v"]],[R[13]]]],[11,R[2891],E,E,3,[[["v"]],[R[13]]]],[11,R[2889],E,E,3,[[["v"]],[R[13]]]],[11,"custom",E,E,2,[[["display"]],[R[3040]]]],[11,R[3033],E,E,3,[[["self"],[R[3062]]],[R[13]]]],[11,R[3049],E,E,3,[[],["value"]]],[11,"custom",E,E,1,[[["display"]],["self"]]],[11,R[3050],E,E,1,[[["expected"],[R[2986]]],["self"]]],[11,R[3051],E,E,1,[[["expected"],[R[2986]]],["self"]]],[11,R[3052],E,E,1,[[[R[9]],["expected"]],["self"]]],[11,R[3053],E,E,1,[[["str"]],["self"]]],[11,R[3054],E,E,1,[[["str"]],["self"]]],[11,R[3055],E,E,1,[[["str"]],["self"]]],[11,R[3056],E,E,1,[[["str"]],["self"]]],[11,R[2809],E,E,3,[[[R[3047]]],[R[13]]]]],"p":[[4,R[2297]],[4,R[3057]],[4,R[3058]],[4,"Value"],[3,R[3059]]]};
searchIndex["serialport"]={"doc":"serialport-rs is a cross-platform serial port library.","i":[[3,"Error",R[2325],R[3222],N,N],[12,"kind",E,R[3223],0,N],[12,R[31],E,R[3224],0,N],[3,R[2352],E,R[3225],N,N],[12,R[3226],E,R[3227],1,N],[12,R[3228],E,R[3229],1,N],[12,R[2329],E,R[3230],1,N],[12,"parity",E,R[3231],1,N],[12,R[3232],E,R[3233],1,N],[12,"timeout",E,R[3234],1,N],[3,R[2353],E,"Contains all possible USB information about a `SerialPort`",N,N],[12,"vid",E,"Vendor ID",2,N],[12,"pid",E,"Product ID",2,N],[12,"serial_number",E,"Serial number (arbitrary string)",2,N],[12,"manufacturer",E,"Manufacturer (arbitrary string)",2,N],[12,"product",E,"Product name (arbitrary string)",2,N],[3,R[2354],E,R[3235],N,N],[12,"port_name",E,R[3236],3,N],[12,"port_type",E,R[3237],3,N],[4,R[33],E,R[3238],N,N],[13,"NoDevice",E,R[3239],4,N],[13,R[2324],E,R[3240],4,N],[13,"Unknown",E,R[3241],4,N],[13,"Io",E,R[3242],4,N],[4,"DataBits",E,R[3243],N,N],[13,"Five",E,R[3244],5,N],[13,"Six",E,R[3245],5,N],[13,"Seven",E,R[3246],5,N],[13,"Eight",E,R[3247],5,N],[4,"Parity",E,R[3248],N,N],[13,"None",E,R[3249],6,N],[13,"Odd",E,R[3250],6,N],[13,"Even",E,R[3251],6,N],[4,"StopBits",E,R[3252],N,N],[13,"One",E,R[3253],7,N],[13,"Two",E,R[3254],7,N],[4,R[2355],E,R[3255],N,N],[13,"None",E,R[3256],8,N],[13,"Software",E,R[3257],8,N],[13,"Hardware",E,R[3258],8,N],[4,R[2356],E,R[3259],N,N],[13,"Input",E,R[3260],9,N],[13,"Output",E,R[3261],9,N],[13,"All",E,R[3262],9,N],[4,R[2357],E,"The physical type of a `SerialPort`",N,N],[13,"UsbPort",E,"The serial port is connected via USB",10,N],[13,"PciPort",E,"The serial port is connected via PCI (permanent port)",10,N],[13,"BluetoothPort",E,"The serial port is connected via Bluetooth",10,N],[13,"Unknown",E,"It can't be determined how the serial port is connected",10,N],[5,"open",E,"Opens the serial port specified by the device path using…",N,[[[T]],[[R[13],["box"]],["box",[R[2325]]]]]],[5,"open_with_settings",E,"Opens the serial port specified by the device path with…",N,[[[T],[R[2328]]],[[R[13],["box"]],["box",[R[2325]]]]]],[5,R[2326],E,R[3263],N,[[],[[R[13],["vec"]],["vec",[R[2327]]]]]],[0,"prelude",E,"A module that exports types that are useful to have in…",N,N],[0,"posix",E,"The implementation of serialport for POSIX-based systems…",N,N],[3,"TTYPort",R[2332],"A TTY-based serial port implementation.",N,N],[5,R[2326],E,"Scans the system for serial ports and returns a list of…",N,[[],[[R[13],["vec"]],["vec",[R[2327]]]]]],[11,"open",E,"Opens a TTY device as a serial port.",11,[[["path"],[R[2328]]],[[R[13],["ttyport"]],["ttyport"]]]],[11,"exclusive",E,R[3264],11,[[["self"]],["bool"]]],[11,R[3265],E,R[3266],11,[[["self"],["bool"]],[R[13]]]],[11,"pair",E,R[3267],11,[[],[R[13]]]],[6,"Result",R[2325],R[3268],N,N],[8,R[3269],E,R[3270],N,N],[10,"name",E,R[3271],12,[[["self"]],[[R[45],["string"]],["string"]]]],[10,"settings",E,R[3200],12,[[["self"]],[R[2328]]]],[10,R[3226],E,R[3201],12,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,R[3228],E,R[3202],12,[[["self"]],[[R[2347]],[R[13],[R[2347]]]]]],[10,R[2329],E,R[3203],12,[[["self"]],[[R[2330]],[R[13],[R[2330]]]]]],[10,"parity",E,R[3204],12,[[["self"]],[[R[13],["parity"]],["parity"]]]],[10,R[3232],E,R[3205],12,[[["self"]],[[R[13],[R[2348]]],[R[2348]]]]],[10,"timeout",E,R[3272],12,[[["self"]],[R[411]]]],[10,"set_all",E,R[3206],12,[[["self"],[R[2328]]],[R[13]]]],[10,R[2333],E,R[3207],12,[[["self"],["u32"]],[R[13]]]],[10,R[2335],E,R[3208],12,[[["self"],[R[2347]]],[R[13]]]],[10,R[2334],E,R[3209],12,[[["self"],[R[2330]]],[R[13]]]],[10,R[3273],E,R[3210],12,[[["self"],["parity"]],[R[13]]]],[10,R[2336],E,R[3211],12,[[["self"],[R[2348]]],[R[13]]]],[10,R[2337],E,R[3274],12,[[["self"],[R[411]]],[R[13]]]],[10,R[2338],E,R[3212],12,[[["self"],["bool"]],[R[13]]]],[10,R[2339],E,R[3213],12,[[["self"],["bool"]],[R[13]]]],[10,R[2340],E,R[3214],12,[[["self"]],[[R[13],["bool"]],["bool"]]]],[10,R[2341],E,R[3215],12,[[["self"]],[[R[13],["bool"]],["bool"]]]],[10,R[2342],E,R[3216],12,[[["self"]],[[R[13],["bool"]],["bool"]]]],[10,R[2343],E,R[3217],12,[[["self"]],[[R[13],["bool"]],["bool"]]]],[10,R[2344],E,R[3218],12,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,R[2345],E,R[3219],12,[[["self"]],[["u32"],[R[13],["u32"]]]]],[10,"clear",E,R[3220],12,[[["self"],[R[2346]]],[R[13]]]],[10,R[3117],E,R[3221],12,[[["self"]],[[R[13],["box"]],["box",[R[2325]]]]]],[11,"new",E,R[3275],0,[[[R[1]],["string"],["into",["string"]]],["self"]]],[11,"kind",E,R[2331],0,[[["self"]],[R[1]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",R[2332],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"name",E,E,11,[[["self"]],[[R[45],["string"]],["string"]]]],[11,"settings",E,"Returns a struct with all port settings",11,[[["self"]],[R[2328]]]],[11,R[3226],E,"Returns the port's baud rate",11,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[3228],E,E,11,[[["self"]],[[R[2347]],[R[13],[R[2347]]]]]],[11,R[2329],E,E,11,[[["self"]],[[R[2330]],[R[13],[R[2330]]]]]],[11,"parity",E,E,11,[[["self"]],[[R[13],["parity"]],["parity"]]]],[11,R[3232],E,E,11,[[["self"]],[[R[13],[R[2348]]],[R[2348]]]]],[11,"timeout",E,E,11,[[["self"]],[R[411]]]],[11,"set_all",E,E,11,[[["self"],[R[2328]]],[R[13]]]],[11,R[2333],E,E,11,[[["self"],["u32"]],[R[13]]]],[11,R[2334],E,E,11,[[["self"],[R[2330]]],[R[13]]]],[11,R[3273],E,E,11,[[["self"],["parity"]],[R[13]]]],[11,R[2335],E,E,11,[[["self"],[R[2347]]],[R[13]]]],[11,R[2336],E,E,11,[[["self"],[R[2348]]],[R[13]]]],[11,R[2337],E,E,11,[[["self"],[R[411]]],[R[13]]]],[11,R[2338],E,E,11,[[["self"],["bool"]],[R[13]]]],[11,R[2339],E,E,11,[[["self"],["bool"]],[R[13]]]],[11,R[2340],E,E,11,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2341],E,E,11,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2342],E,E,11,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2343],E,E,11,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2344],E,E,11,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[2345],E,E,11,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,"clear",E,E,11,[[["self"],[R[2346]]],[R[13]]]],[11,R[3117],E,E,11,[[["self"]],[[R[13],["box"]],["box",[R[2325]]]]]],[11,R[77],R[2325],E,1,[[],[R[2328]]]],[11,"clone",E,E,4,[[["self"]],[R[1]]]],[11,"clone",E,E,5,[[["self"]],[R[2347]]]],[11,"clone",E,E,6,[[["self"]],["parity"]]],[11,"clone",E,E,7,[[["self"]],[R[2348]]]],[11,"clone",E,E,8,[[["self"]],[R[2330]]]],[11,"clone",E,E,9,[[["self"]],[R[2346]]]],[11,"clone",E,E,1,[[["self"]],[R[2328]]]],[11,"clone",E,E,2,[[["self"]],[R[2349]]]],[11,"clone",E,E,10,[[["self"]],[R[2350]]]],[11,"clone",E,E,3,[[["self"]],[R[2327]]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"drop",R[2332],E,11,[[["self"]]]],[11,"eq",R[2325],E,4,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,5,[[[R[2347]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["parity"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[2348]]],["bool"]]],[11,"eq",E,E,8,[[[R[2330]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[2346]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2328]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2328]]],["bool"]]],[11,"eq",E,E,2,[[[R[2349]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[2349]],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[2350]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[2350]],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2327]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[2327]]],["bool"]]],[11,"fmt",R[2332],E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[2325],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"write",R[2332],E,11,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,11,[[["self"]],[R[13]]]],[11,"read",E,E,11,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[31],R[2325],E,0,[[["self"]],["str"]]],[11,R[853],R[2332],E,11,[[["self"]],["rawfd"]]],[11,R[854],E,E,11,[[["rawfd"]],["self"]]],[11,R[2351],E,E,11,[[],["rawfd"]]]],"p":[[3,"Error"],[3,R[2352]],[3,R[2353]],[3,R[2354]],[4,R[33]],[4,"DataBits"],[4,"Parity"],[4,"StopBits"],[4,R[2355]],[4,R[2356]],[4,R[2357]],[3,"TTYPort"],[8,R[3269]]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,R[71],E,"A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter",E,"An iterator over the values stored in the `Slab`",N,N],[3,"IterMut",E,"A mutable iterator over the values stored in the `Slab`",N,N],[3,"Drain",E,"A draining iterator for `Slab`",N,N],[11,"new",E,"Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,R[72],E,"Construct a new, empty `Slab` with the specified capacity.",0,[[[R[9]]],["slab"]]],[11,R[74],E,"Return the number of values the slab can store without…",0,[[["self"]],[R[9]]]],[11,"reserve",E,"Reserve capacity for at least `additional` more values to…",0,[[["self"],[R[9]]]]],[11,R[75],E,"Reserve the minimum capacity required to store exactly…",0,[[["self"],[R[9]]]]],[11,R[76],E,"Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear",E,"Clear the slab of all values.",0,[[["self"]]]],[11,"len",E,"Return the number of stored values.",0,[[["self"]],[R[9]]]],[11,R[73],E,"Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter",E,"Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut",E,"Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get",E,R[69],0,[[["self"],[R[9]]],[[T],[R[45]]]]],[11,R[121],E,R[70],0,[[["self"],[R[9]]],[[R[45]],[T]]]],[11,"get_unchecked",E,R[69],0,[[["self"],[R[9]]],[T]]],[11,"get_unchecked_mut",E,R[70],0,[[["self"],[R[9]]],[T]]],[11,"insert",E,"Insert a value in the slab, returning key assigned to the…",0,[[["self"],[T]],[R[9]]]],[11,"vacant_entry",E,"Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove",E,"Remove and return the value associated with the given key.",0,[[["self"],[R[9]]],[T]]],[11,R[1110],E,"Return `true` if a value is associated with the given key.",0,[[["self"],[R[9]]],["bool"]]],[11,"retain",E,"Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"drain",E,"Return a draining iterator that removes all elements from…",0,[[["self"]],["drain"]]],[11,"insert",E,"Insert a value in the entry, returning a mutable reference…",1,[[[T]],[T]]],[11,"key",E,"Return the key associated with this entry.",1,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[43],E,E,2,[[],["i"]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[43],E,E,3,[[],["i"]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[43],E,E,4,[[],["i"]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[77],E,E,0,[[],["self"]]],[11,"next",E,E,2,[[["self"]],[R[45]]]],[11,"next",E,E,3,[[["self"]],[R[45]]]],[11,"next",E,E,4,[[["self"]],[R[45]]]],[11,"clone",E,E,0,[[["self"]],["slab"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"index",E,E,0,[[["self"],[R[9]]],[T]]],[11,R[49],E,E,0,[[["self"],[R[9]]],[T]]]],"p":[[3,"Slab"],[3,R[71]],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain",R[38],"An iterator that removes the items from a `SmallVec` and…",N,N],[3,R[53],E,"A `Vec`-like container that can store a small number of…",N,N],[3,R[54],E,"An iterator that consumes a `SmallVec` and yields its…",N,N],[5,R[61],E,"Hint to the optimizer that any code path which calls this…",N,[[]]],[8,"VecLike",E,"Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push",E,"Append an element to the vector.",0,[[["self"],[T]]]],[8,R[52],E,"Trait to be implemented by a collection that can be…",N,N],[10,R[40],E,"Extends a collection from a slice of its element type",1,[[["self"]]]],[8,"Array",E,"Types that can be used as the backing store for a SmallVec",N,N],[16,"Item",E,"The type of the array's elements.",2,N],[10,"size",E,"Returns the number of items the array can hold.",2,[[],[R[9]]]],[10,"ptr",E,"Returns a pointer to the first element of the array.",2,[[["self"]]]],[10,"ptr_mut",E,"Returns a mutable pointer to the first element of the array.",2,[[["self"]]]],[11,"new",E,"Construct an empty vector",3,[[],[R[38]]]],[11,R[72],E,"Construct an empty vector with enough capacity…",3,[[[R[9]]],["self"]]],[11,"from_vec",E,"Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],[R[38]]]],[11,"from_buf",E,R[39],3,[[["a"]],[R[38]]]],[11,"from_buf_and_len",E,R[39],3,[[["a"],[R[9]]],[R[38]]]],[11,"from_buf_and_len_unchecked",E,R[39],3,[[["a"],[R[9]]],[R[38]]]],[11,"set_len",E,"Sets the length of a vector.",3,[[["self"],[R[9]]]]],[11,"inline_size",E,"The maximum number of elements this vector can hold inline",3,[[["self"]],[R[9]]]],[11,"len",E,"The number of elements stored in the vector",3,[[["self"]],[R[9]]]],[11,R[73],E,"Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,R[74],E,"The number of items the vector can hold without reallocating",3,[[["self"]],[R[9]]]],[11,"spilled",E,"Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain",E,"Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push",E,"Append an item to the vector.",3,[[["self"]]]],[11,"pop",E,"Remove an item from the end of the vector and return it,…",3,[[["self"]],[R[45]]]],[11,"grow",E,"Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],[R[9]]]]],[11,"reserve",E,"Reserve capacity for `additional` more elements to be…",3,[[["self"],[R[9]]]]],[11,R[75],E,"Reserve the minimum capacity for `additional` more…",3,[[["self"],[R[9]]]]],[11,R[76],E,"Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,R[2724],E,"Shorten the vector, keeping the first `len` elements and…",3,[[["self"],[R[9]]]]],[11,R[251],E,"Extracts a slice containing the entire vector.",3,[[["self"]]]],[11,R[250],E,"Extracts a mutable slice of the entire vector.",3,[[["self"]]]],[11,R[3363],E,"Remove the element at position `index`, replacing it with…",3,[[["self"],[R[9]]]]],[11,"clear",E,"Remove all elements from the vector.",3,[[["self"]]]],[11,"remove",E,"Remove and return the element at position `index`,…",3,[[["self"],[R[9]]]]],[11,"insert",E,"Insert an element at position `index`, shifting all…",3,[[["self"],[R[9]]]]],[11,"insert_many",E,"Insert multiple elements at position `index`, shifting all…",3,[[["self"],[R[44]],[R[9]]]]],[11,"into_vec",E,"Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,R[118],E,"Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],[R[13]]]],[11,"retain",E,R[3364],3,[[["self"],["fnmut"]]]],[11,"dedup",E,"Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by",E,"Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key",E,"Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts",E,"Creates a `SmallVec` directly from the raw components of…",3,[[[R[9]]],[R[38]]]],[11,R[1495],E,"Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice",E,"Copy elements from a slice into the vector at position…",3,[[["self"],[R[9]]]]],[11,R[40],E,"Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize",E,"Resizes the vector so that its length is equal to `len`.",3,[[["self"],[R[9]]]]],[11,"from_elem",E,"Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[[R[9]]],["self"]]],[14,R[38],E,"Creates a [`SmallVec`] containing the arguments.",N,N],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[43],E,E,4,[[],["i"]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[43],E,E,3,[[],["i"]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[43],E,E,5,[[],["i"]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"push",E,E,3,[[["self"]]]],[11,R[40],E,E,3,[[["self"]]]],[11,"extend",E,E,3,[[["self"],[R[44]]]]],[11,R[77],E,E,3,[[],[R[38]]]],[11,"next",E,E,4,[[["self"]],[R[45]]]],[11,R[46],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[45]]]],[11,R[46],E,E,5,[[["self"]]]],[11,"clone",E,E,3,[[["self"]],[R[38]]]],[11,"cmp",E,E,3,[[["self"],[R[38]]],[R[47]]]],[11,"from",E,E,3,[[],[R[38]]]],[11,"from",E,E,3,[[["vec"]],[R[38]]]],[11,"from",E,E,3,[[["a"]],[R[38]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,R[43],E,E,3,[[]]],[11,R[63],E,E,3,[[["self"],[R[38]]],[[R[45],[R[47]]],[R[47]]]]],[11,"as_mut",E,E,3,[[["self"]]]],[11,R[48],E,E,4,[[["self"]],[R[45]]]],[11,R[48],E,E,5,[[["self"]],[R[45]]]],[11,"eq",E,E,3,[[["self"],[R[38]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[38]]],["bool"]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,R[60],E,E,3,[[["self"]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"deref",E,E,3,[[["self"]]]],[11,"index",E,E,3,[[["self"],[R[9]]]]],[11,"index",E,E,3,[[["self"],[R[9]],["range",[R[9]]]]]],[11,"index",E,E,3,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,"index",E,E,3,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,"index",E,E,3,[[["self"],[R[51]]]]],[11,R[49],E,E,3,[[["self"],[R[9]]]]],[11,R[49],E,E,3,[[["self"],[R[9]],["range",[R[9]]]]]],[11,R[49],E,E,3,[[["self"],[R[50],[R[9]]],[R[9]]]]],[11,R[49],E,E,3,[[["self"],["rangeto",[R[9]]],[R[9]]]]],[11,R[49],E,E,3,[[["self"],[R[51]]]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,R[196],E,E,3,[[[R[44]]],[R[38]]]],[11,R[15],E,E,3,[[["self"]]]],[11,R[41],E,E,3,[[["self"]]]],[11,"write",E,E,3,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[3170],E,E,3,[[["self"]],[R[13]]]],[11,"flush",E,E,3,[[["self"]],[R[13]]]]],"p":[[8,"VecLike"],[8,R[52]],[8,"Array"],[3,R[53]],[3,"Drain"],[3,R[54]]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait",R[322],N,N],[8,"CloneStableDeref",E,R[323],N,N]],"p":[]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[1718],N,N],[3,R[2139],E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[1720],E,E,0,N],[12,"path",E,E,0,N],[12,"tts",E,E,0,N],[3,"MetaList",E,R[1726],N,N],[12,"ident",E,E,1,N],[12,R[1719],E,E,1,N],[12,"nested",E,E,1,N],[3,R[2020],E,R[1727],N,N],[12,"ident",E,E,2,N],[12,"eq_token",E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the field.",3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[1721],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[2021],E,R[1728],N,N],[12,R[1723],E,E,4,N],[12,"named",E,E,4,N],[3,R[2022],E,R[1729],N,N],[12,R[1719],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,R[2309],E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[1731],N,N],[12,"crate_token",E,E,7,N],[3,"VisPublic",E,R[1730],N,N],[12,"pub_token",E,E,8,N],[3,R[2023],E,R[1732],N,N],[12,"pub_token",E,E,9,N],[12,R[1719],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"ExprArray",E,R[1735],N,N],[3,"ExprAssign",E,R[1753],N,N],[3,R[2056],E,R[1754],N,N],[3,"ExprAsync",E,R[1769],N,N],[3,"ExprBinary",E,R[1739],N,N],[12,"attrs",E,E,10,N],[12,"left",E,E,10,N],[12,"op",E,E,10,N],[12,"right",E,E,10,N],[3,"ExprBlock",E,R[1752],N,N],[3,"ExprBox",E,R[1733],N,N],[3,"ExprBreak",E,R[1760],N,N],[3,"ExprCall",E,R[1736],N,N],[12,"attrs",E,E,11,N],[12,"func",E,E,11,N],[12,R[1719],E,E,11,N],[12,"args",E,E,11,N],[3,"ExprCast",E,R[1742],N,N],[12,"attrs",E,E,12,N],[12,"expr",E,E,12,N],[12,"as_token",E,E,12,N],[12,"ty",E,E,12,N],[3,R[2057],E,R[1750],N,N],[3,R[2058],E,R[1761],N,N],[3,"ExprField",E,R[1755],N,N],[12,"attrs",E,E,13,N],[12,"base",E,E,13,N],[12,"dot_token",E,E,13,N],[12,"member",E,E,13,N],[3,R[2059],E,R[1747],N,N],[3,"ExprGroup",E,R[1767],N,N],[3,"ExprIf",E,R[1745],N,N],[3,R[2060],E,R[1734],N,N],[3,"ExprIndex",E,R[1756],N,N],[12,"attrs",E,E,14,N],[12,"expr",E,E,14,N],[12,R[1720],E,E,14,N],[12,"index",E,E,14,N],[3,"ExprLet",E,R[1744],N,N],[3,"ExprLit",E,R[1741],N,N],[12,"attrs",E,E,15,N],[12,"lit",E,E,15,N],[3,"ExprLoop",E,R[1748],N,N],[3,"ExprMacro",E,R[1763],N,N],[3,"ExprMatch",E,R[1749],N,N],[3,R[2061],E,R[1737],N,N],[3,"ExprParen",E,R[1766],N,N],[12,"attrs",E,E,16,N],[12,R[1719],E,E,16,N],[12,"expr",E,E,16,N],[3,"ExprPath",E,R[1758],N,N],[12,"attrs",E,E,17,N],[12,"qself",E,E,17,N],[12,"path",E,E,17,N],[3,"ExprRange",E,R[1757],N,N],[3,R[2062],E,R[1759],N,N],[3,"ExprRepeat",E,R[1765],N,N],[3,"ExprReturn",E,R[1762],N,N],[3,"ExprStruct",E,R[1764],N,N],[3,"ExprTry",E,R[1768],N,N],[3,R[2063],E,R[1770],N,N],[3,"ExprTuple",E,R[1738],N,N],[3,"ExprType",E,R[1743],N,N],[3,"ExprUnary",E,R[1740],N,N],[12,"attrs",E,E,18,N],[12,"op",E,E,18,N],[12,"expr",E,E,18,N],[3,"ExprUnsafe",E,R[1751],N,N],[3,R[2024],E,R[1772],N,N],[12,"tts",E,E,19,N],[3,"ExprWhile",E,R[1746],N,N],[3,"ExprYield",E,R[1771],N,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,20,N],[12,"span",E,E,20,N],[3,R[2025],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,21,N],[12,"lt_token",E,E,21,N],[12,R[1724],E,E,21,N],[12,"gt_token",E,E,21,N],[3,"ConstParam",E,R[1775],N,N],[12,"attrs",E,E,22,N],[12,R[1725],E,E,22,N],[12,"ident",E,E,22,N],[12,R[1721],E,E,22,N],[12,"ty",E,E,22,N],[12,"eq_token",E,E,22,N],[12,R[77],E,E,22,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token",E,E,23,N],[12,"params",E,E,23,N],[12,"gt_token",E,E,23,N],[12,"where_clause",E,E,23,N],[3,R[2026],E,R[1774],N,N],[12,"attrs",E,E,24,N],[12,R[1860],E,E,24,N],[12,R[1721],E,E,24,N],[12,"bounds",E,E,24,N],[3,R[2027],E,R[1778],N,N],[12,"lhs_ty",E,E,25,N],[12,"eq_token",E,E,25,N],[12,"rhs_ty",E,E,25,N],[3,R[2028],E,R[1777],N,N],[12,R[1860],E,E,26,N],[12,R[1721],E,E,26,N],[12,"bounds",E,E,26,N],[3,R[2029],E,R[1776],N,N],[12,R[1724],E,"Any lifetimes from a `for` binding",27,N],[12,"bounded_ty",E,"The type being bounded",27,N],[12,R[1721],E,E,27,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[1719],E,E,28,N],[12,"modifier",E,E,28,N],[12,R[1724],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam",E,R[1773],N,N],[12,"attrs",E,E,29,N],[12,"ident",E,E,29,N],[12,R[1721],E,E,29,N],[12,"bounds",E,E,29,N],[12,"eq_token",E,E,29,N],[12,R[77],E,E,29,N],[3,R[2030],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,30,N],[12,"predicates",E,E,30,N],[3,R[2064],E,R[1722],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[2051],E,R[1722],N,N],[3,"Lifetime",E,"A Rust lifetime: `'a`.",N,N],[12,"apostrophe",E,E,31,N],[12,"ident",E,E,31,N],[3,"LitBool",E,R[1785],N,N],[12,"value",E,E,32,N],[12,"span",E,E,32,N],[3,"LitByte",E,R[1781],N,N],[3,"LitByteStr",E,R[1780],N,N],[3,"LitChar",E,R[1782],N,N],[3,"LitFloat",E,R[1784],N,N],[3,"LitInt",E,R[1783],N,N],[3,"LitStr",E,R[1779],N,N],[3,R[2031],E,R[1786],N,N],[12,"token",E,E,33,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,34,N],[12,"bang_token",E,E,34,N],[12,R[544],E,E,34,N],[12,"tts",E,E,34,N],[3,"DataEnum",E,R[1788],N,N],[12,"enum_token",E,E,35,N],[12,R[1723],E,E,35,N],[12,"variants",E,E,35,N],[3,"DataStruct",E,R[1787],N,N],[12,"struct_token",E,E,36,N],[12,"fields",E,E,36,N],[12,"semi_token",E,E,36,N],[3,"DataUnion",E,R[1789],N,N],[12,"union_token",E,E,37,N],[12,"fields",E,E,37,N],[3,R[2032],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",38,N],[12,"vis",E,"Visibility of the struct or enum.",38,N],[12,"ident",E,"Name of the struct or enum.",38,N],[12,R[1995],E,"Generics required to complete the definition.",38,N],[12,"data",E,"Data within the struct or enum.",38,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token",E,E,39,N],[12,"name",E,E,39,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name",E,E,40,N],[12,"ty",E,E,40,N],[3,"TypeArray",E,R[1791],N,N],[12,R[1720],E,E,41,N],[12,"elem",E,E,41,N],[12,"semi_token",E,E,41,N],[12,"len",E,E,41,N],[3,"TypeBareFn",E,R[1794],N,N],[12,R[1724],E,E,42,N],[12,"unsafety",E,E,42,N],[12,"abi",E,E,42,N],[12,"fn_token",E,E,42,N],[12,R[1719],E,E,42,N],[12,"inputs",E,E,42,N],[12,"variadic",E,E,42,N],[12,"output",E,E,42,N],[3,"TypeGroup",E,R[1801],N,N],[12,"group_token",E,E,43,N],[12,"elem",E,E,43,N],[3,R[2033],E,R[1799],N,N],[12,"impl_token",E,E,44,N],[12,"bounds",E,E,44,N],[3,"TypeInfer",E,R[1802],N,N],[12,"underscore_token",E,E,45,N],[3,"TypeMacro",E,R[1803],N,N],[12,"mac",E,E,46,N],[3,"TypeNever",E,R[1795],N,N],[12,"bang_token",E,E,47,N],[3,"TypeParen",E,R[1800],N,N],[12,R[1719],E,E,48,N],[12,"elem",E,E,48,N],[3,"TypePath",E,R[1797],N,N],[12,"qself",E,E,49,N],[12,"path",E,E,49,N],[3,"TypePtr",E,R[1792],N,N],[12,"star_token",E,E,50,N],[12,R[1725],E,E,50,N],[12,"mutability",E,E,50,N],[12,"elem",E,E,50,N],[3,R[2034],E,R[1793],N,N],[12,"and_token",E,E,51,N],[12,R[1860],E,E,51,N],[12,"mutability",E,E,51,N],[12,"elem",E,E,51,N],[3,"TypeSlice",E,R[1790],N,N],[12,R[1720],E,E,52,N],[12,"elem",E,E,52,N],[3,R[2035],E,R[1798],N,N],[12,"dyn_token",E,E,53,N],[12,"bounds",E,E,53,N],[3,"TypeTuple",E,R[1796],N,N],[12,R[1719],E,E,54,N],[12,"elems",E,E,54,N],[3,R[2036],E,R[1804],N,N],[12,"tts",E,E,55,N],[3,R[2037],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token",E,E,56,N],[12,"lt_token",E,E,56,N],[12,"args",E,E,56,N],[12,"gt_token",E,E,56,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,57,N],[12,"eq_token",E,E,57,N],[12,"ty",E,E,57,N],[3,R[2038],E,R[1805],N,N],[12,"ident",E,E,58,N],[12,R[1721],E,E,58,N],[12,"bounds",E,E,58,N],[3,R[2039],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[1719],E,E,59,N],[12,"inputs",E,"`(A, B)`",59,N],[12,"output",E,"`C`",59,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,"leading_colon",E,E,60,N],[12,"segments",E,E,60,N],[3,R[2040],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,61,N],[12,R[3034],E,E,61,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token",E,E,62,N],[12,"ty",E,E,62,N],[12,"position",E,E,62,N],[12,"as_token",E,E,62,N],[12,"gt_token",E,E,62,N],[3,"Error",E,R[1930],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,63,N],[13,"Inner",E,E,63,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Word",E,E,64,N],[13,"List",E,R[1726],64,N],[13,"NameValue",E,R[1727],64,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",65,N],[13,"Literal",E,"A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[1728],66,N],[13,"Unnamed",E,R[1729],66,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",66,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[1730],67,N],[13,"Crate",E,R[1731],67,N],[13,"Restricted",E,R[1732],67,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",67,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Box",E,R[1733],68,N],[13,"InPlace",E,R[1734],68,N],[13,"Array",E,R[1735],68,N],[13,"Call",E,R[1736],68,N],[13,"MethodCall",E,R[1737],68,N],[13,"Tuple",E,R[1738],68,N],[13,"Binary",E,R[1739],68,N],[13,"Unary",E,R[1740],68,N],[13,"Lit",E,R[1741],68,N],[13,"Cast",E,R[1742],68,N],[13,"Type",E,R[1743],68,N],[13,"Let",E,R[1744],68,N],[13,"If",E,R[1745],68,N],[13,"While",E,R[1746],68,N],[13,"ForLoop",E,R[1747],68,N],[13,"Loop",E,R[1748],68,N],[13,"Match",E,R[1749],68,N],[13,"Closure",E,R[1750],68,N],[13,"Unsafe",E,R[1751],68,N],[13,"Block",E,R[1752],68,N],[13,"Assign",E,R[1753],68,N],[13,"AssignOp",E,R[1754],68,N],[13,"Field",E,R[1755],68,N],[13,"Index",E,R[1756],68,N],[13,"Range",E,R[1757],68,N],[13,"Path",E,R[1758],68,N],[13,"Reference",E,R[1759],68,N],[13,"Break",E,R[1760],68,N],[13,"Continue",E,R[1761],68,N],[13,"Return",E,R[1762],68,N],[13,"Macro",E,R[1763],68,N],[13,"Struct",E,R[1764],68,N],[13,"Repeat",E,R[1765],68,N],[13,"Paren",E,R[1766],68,N],[13,"Group",E,R[1767],68,N],[13,"Try",E,R[1768],68,N],[13,"Async",E,R[1769],68,N],[13,"TryBlock",E,R[1770],68,N],[13,"Yield",E,R[1771],68,N],[13,"Verbatim",E,R[1772],68,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",69,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",69,N],[4,R[2041],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[1773],70,N],[13,"Lifetime",E,R[1774],70,N],[13,"Const",E,R[1775],70,N],[4,R[2042],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,71,N],[13,"Maybe",E,E,71,N],[4,R[2043],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,72,N],[13,"Lifetime",E,E,72,N],[4,R[2044],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[1776],73,N],[13,"Lifetime",E,R[1777],73,N],[13,"Eq",E,R[1778],73,N],[4,R[2045],E,"The suffix on a floating point literal if any, like the…",N,N],[13,"F32",E,E,74,N],[13,"F64",E,E,74,N],[13,"None",E,E,74,N],[4,"IntSuffix",E,"The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8",E,E,75,N],[13,"I16",E,E,75,N],[13,"I32",E,E,75,N],[13,"I64",E,E,75,N],[13,"I128",E,E,75,N],[13,"Isize",E,E,75,N],[13,"U8",E,E,75,N],[13,"U16",E,E,75,N],[13,"U32",E,E,75,N],[13,"U64",E,E,75,N],[13,"U128",E,E,75,N],[13,"Usize",E,E,75,N],[13,"None",E,E,75,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[1779],76,N],[13,"ByteStr",E,R[1780],76,N],[13,"Byte",E,R[1781],76,N],[13,"Char",E,R[1782],76,N],[13,"Int",E,R[1783],76,N],[13,"Float",E,R[1784],76,N],[13,"Bool",E,R[1785],76,N],[13,"Verbatim",E,R[1786],76,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",77,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",77,N],[4,R[2046],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,78,N],[13,"Brace",E,E,78,N],[13,"Bracket",E,E,78,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[1787],79,N],[13,"Enum",E,R[1788],79,N],[13,"Union",E,R[1789],79,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",80,N],[13,"Sub",E,"The `-` operator (subtraction)",80,N],[13,"Mul",E,"The `*` operator (multiplication)",80,N],[13,"Div",E,"The `/` operator (division)",80,N],[13,"Rem",E,"The `%` operator (modulus)",80,N],[13,"And",E,"The `&&` operator (logical and)",80,N],[13,"Or",E,"The `||` operator (logical or)",80,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",80,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",80,N],[13,"BitOr",E,"The `|` operator (bitwise or)",80,N],[13,"Shl",E,"The `<<` operator (shift left)",80,N],[13,"Shr",E,"The `>>` operator (shift right)",80,N],[13,"Eq",E,"The `==` operator (equality)",80,N],[13,"Lt",E,"The `<` operator (less than)",80,N],[13,"Le",E,"The `<=` operator (less than or equal to)",80,N],[13,"Ne",E,"The `!=` operator (not equal to)",80,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",80,N],[13,"Gt",E,"The `>` operator (greater than)",80,N],[13,"AddEq",E,"The `+=` operator",80,N],[13,"SubEq",E,"The `-=` operator",80,N],[13,"MulEq",E,"The `*=` operator",80,N],[13,"DivEq",E,"The `/=` operator",80,N],[13,"RemEq",E,"The `%=` operator",80,N],[13,"BitXorEq",E,"The `^=` operator",80,N],[13,"BitAndEq",E,"The `&=` operator",80,N],[13,"BitOrEq",E,"The `|=` operator",80,N],[13,"ShlEq",E,"The `<<=` operator",80,N],[13,"ShrEq",E,"The `>>=` operator",80,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",81,N],[13,"Not",E,"The `!` operator for logical inversion",81,N],[13,"Neg",E,"The `-` operator for negation",81,N],[4,R[2047],E,"Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named",E,"Argument given a name.",82,N],[13,"Wild",E,"Argument not given a name, matched with `_`.",82,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",83,N],[13,"Type",E,"A particular type is returned.",83,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Slice",E,R[1790],84,N],[13,"Array",E,R[1791],84,N],[13,"Ptr",E,R[1792],84,N],[13,"Reference",E,R[1793],84,N],[13,"BareFn",E,R[1794],84,N],[13,"Never",E,R[1795],84,N],[13,"Tuple",E,R[1796],84,N],[13,"Path",E,R[1797],84,N],[13,"TraitObject",E,R[1798],84,N],[13,"ImplTrait",E,R[1799],84,N],[13,"Paren",E,R[1800],84,N],[13,"Group",E,R[1801],84,N],[13,"Infer",E,R[1802],84,N],[13,"Macro",E,R[1803],84,N],[13,"Verbatim",E,R[1804],84,N],[4,R[2048],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime",E,"A lifetime argument.",85,N],[13,"Type",E,"A type argument.",85,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",85,N],[13,R[2038],E,R[1805],85,N],[13,"Const",E,"A const expression. Must be inside of a block.",85,N],[4,R[2049],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,86,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse",E,R[1932],N,[[[R[543]]],[["parse"],[R[13]]]]],[5,"parse2",E,R[1931],N,[[[R[543]]],[["parse"],[R[13]]]]],[5,"parse_str",E,R[1933],N,[[["str"]],[["parse"],[R[13]]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[1942],"`_`",N,N],[12,"spans",E,E,87,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,88,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,89,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,90,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,91,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,92,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,93,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,94,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,95,N],[3,"Continue",E,"`continue`",N,N],[12,"span",E,E,96,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,97,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,98,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,99,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,100,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,101,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,102,N],[3,R[2050],E,"`existential`",N,N],[12,"span",E,E,103,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,104,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,105,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,106,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,107,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,108,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,109,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,110,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,111,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,112,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,113,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,114,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,115,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,116,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,117,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,118,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,119,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,120,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,121,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,122,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,123,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,124,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,125,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,126,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,127,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,128,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,129,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,130,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,131,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,132,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,133,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,134,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,135,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,136,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,137,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,138,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,139,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,140,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,141,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,142,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,143,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,144,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,145,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,146,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,147,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,148,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,149,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,150,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,151,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,152,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,153,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,154,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,155,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,156,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,157,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,158,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,159,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,160,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,161,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,162,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,163,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,164,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,165,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,166,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,167,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,168,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,169,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,170,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,171,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,172,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,173,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,174,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,175,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,176,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,177,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,178,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,179,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,180,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,181,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,182,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,183,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,184,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,185,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,186,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,187,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,188,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,189,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,"surround",E,E,186,[[[R[543]],["self"],["f"]]]],[11,"surround",E,E,187,[[[R[543]],["self"],["f"]]]],[11,"surround",E,E,188,[[[R[543]],["self"],["f"]]]],[11,"surround",E,E,189,[[[R[543]],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],[R[13],["meta"]]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[1806]]],[[R[13],["vec"]],["vec"]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[1806]]],[[R[13],["vec"]],["vec"]]]],[11,"name",E,"Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[1806]]],[R[13]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[1806]]],[R[13]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut",E,"Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,R[1724],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],[R[1724]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",23,[[["self"]],[R[1816]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",23,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],[R[1998]]]],[11,"new",E,E,24,[[[R[1860]]],["self"]]],[11,"new",E,"Panics",31,[[["span"],["str"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",76,[[[R[547]]],["self"]]],[11,"new",E,E,191,[[["span"],["str"]],["self"]]],[11,"value",E,E,191,[[["self"]],["string"]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",191,[[["self"]],[[R[13]],["parse"]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",191,[[["parser"],["self"]],[R[13]]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,R[545],E,E,191,[[["self"],["span"]]]],[11,"new",E,E,192,[[["span"]],["self"]]],[11,"value",E,E,192,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,R[545],E,E,192,[[["self"],["span"]]]],[11,"new",E,E,193,[[["span"],["u8"]],["self"]]],[11,"value",E,E,193,[[["self"]],["u8"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,R[545],E,E,193,[[["self"],["span"]]]],[11,"new",E,E,194,[[["char"],["span"]],["self"]]],[11,"value",E,E,194,[[["self"]],["char"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,R[545],E,E,194,[[["self"],["span"]]]],[11,"new",E,E,195,[[[R[1999]],["u64"],["span"]],["self"]]],[11,"value",E,E,195,[[["self"]],["u64"]]],[11,"suffix",E,E,195,[[["self"]],[R[1999]]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,R[545],E,E,195,[[["self"],["span"]]]],[11,"new",E,E,196,[[["f64"],[R[1807]],["span"]],["self"]]],[11,"value",E,E,196,[[["self"]],["f64"]]],[11,"suffix",E,E,196,[[["self"]],[R[1807]]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,R[545],E,E,196,[[["self"],["span"]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,R[545],E,E,33,[[["self"],["span"]]]],[11,"parse_body",E,R[1808],34,[[["self"]],[[R[13]],["parse"]]]],[11,"parse_body_with",E,R[1808],34,[[["parser"],["self"]],[R[13]]]],[11,R[1809],E,"In some positions, types may not contain the `+`…",84,[[[R[1806]]],[R[13]]]],[11,R[1809],E,E,83,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,83,[[["bool"],[R[1806]]],[R[13]]]],[11,R[1809],E,E,53,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,53,[[["bool"],[R[1806]]],[R[13]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",60,[[[R[1806]]],[R[13]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",60,[[["self"],["i"]],["bool"]]],[11,R[73],E,E,86,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[2052],R[1939],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[1810],197,[[[R[543]]],[R[1811]]]],[11,"new2",E,R[1810],197,[[[R[543]]],[R[1811]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",198,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",198,[[[R[544]]],[R[45]]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",198,[[],[R[45]]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",198,[[],[R[45]]]],[11,R[547],E,"If the cursor is pointing at a `Literal`, return it along…",198,[[],[R[45]]]],[11,R[1860],E,"If the cursor is pointing at a `Lifetime`, returns it…",198,[[],[R[45]]]],[11,R[1812],E,"Copies all remaining tokens visible from this cursor into…",198,[[],[R[543]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",198,[[],[R[45]]]],[11,"span",E,"Returns the `Span` of the current token, or…",198,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,"parse_any",E,"Parses any identifier including keywords.",199,[[[R[1806]]],[R[13]]]],[18,"peek_any",E,"Peeks any identifier including keywords. Usage:…",199,N],[10,"unraw",E,"Strips the raw marker `r#`, if any, from the beginning of…",199,[[["self"]],["ident"]]],[0,R[1936],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[2053],R[1940],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[54],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut",E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[2053],E,E,200,N],[13,"End",E,E,200,N],[11,"new",E,"Creates an empty punctuated sequence.",201,[[],[R[1936]]]],[11,R[73],E,"Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],[R[9]]]],[11,"first",E,"Borrows the first punctuated pair in this sequence.",201,[[["self"]],[[R[45],["pair"]],["pair"]]]],[11,"last",E,"Borrows the last punctuated pair in this sequence.",201,[[["self"]],[[R[45],["pair"]],["pair"]]]],[11,"last_mut",E,"Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],[[R[45],["pair"]],["pair"]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs",E,R[1813],201,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[1813],201,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[1813],201,[[],["intopairs"]]],[11,"push_value",E,R[1814],201,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",201,[[["self"]],[[R[45],["pair"]],["pair"]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push",E,R[1814],201,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",201,[[["self"],[R[9]],[T]]]],[11,R[1934],E,R[1935],201,[[[R[1806]]],[R[13]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",201,[[[R[1806]]],[R[13]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",201,[[[R[1806]]],[R[13]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",201,[[[R[1806]]],[R[13]]]],[11,"into_value",E,"Extracts the syntax tree node from this punctuated pair,…",200,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],[[R[45]],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",200,[[[R[45]],[T]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",200,[[]]],[0,"spanned","syn",R[1815],N,N],[8,"Spanned","syn::spanned",R[1815],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn",R[1817],N,N],[5,"visit_abi","syn::visit",E,N,[[["v"],["abi"]]]],[5,R[1818],E,E,N,[[["v"],[R[1819]]]]],[5,R[1820],E,E,N,[[["v"],[R[1978]]]]],[5,R[1821],E,E,N,[[["v"],[R[2005]]]]],[5,R[1822],E,E,N,[[["v"],[R[2000]]]]],[5,R[1823],E,E,N,[[["v"],[R[1824]]]]],[5,R[1825],E,E,N,[[["v"],["binop"]]]],[5,R[1826],E,E,N,[[["v"],["binding"]]]],[5,R[1827],E,E,N,[[["v"],[R[1828]]]]],[5,R[1829],E,E,N,[[["v"],[R[1946]]]]],[5,R[1830],E,E,N,[[["v"],[R[1952]]]]],[5,R[2006],E,E,N,[[["v"],["data"]]]],[5,R[1831],E,E,N,[[["v"],[R[2007]]]]],[5,R[1832],E,E,N,[[["v"],[R[1949]]]]],[5,R[1833],E,E,N,[[["v"],[R[1967]]]]],[5,R[1834],E,E,N,[[["v"],[R[1835]]]]],[5,R[2008],E,E,N,[[["v"],["expr"]]]],[5,R[1836],E,E,N,[[["v"],[R[1945]]]]],[5,R[1837],E,E,N,[[["v"],[R[2009]]]]],[5,R[1838],E,E,N,[[["v"],[R[2010]]]]],[5,R[1839],E,E,N,[[["v"],[R[1960]]]]],[5,R[1840],E,E,N,[[["v"],[R[1961]]]]],[5,R[1841],E,E,N,[[["v"],["exprlit"]]]],[5,R[1842],E,E,N,[[["v"],[R[1964]]]]],[5,R[1843],E,E,N,[[["v"],[R[2011]]]]],[5,R[1844],E,E,N,[[["v"],[R[1956]]]]],[5,R[1845],E,E,N,[[["v"],[R[1846]]]]],[5,R[1847],E,E,N,[[["v"],["field"]]]],[5,R[1848],E,E,N,[[["v"],["fields"]]]],[5,R[1849],E,E,N,[[["v"],[R[1850]]]]],[5,R[1851],E,E,N,[[["v"],[R[1852]]]]],[5,R[1853],E,E,N,[[["v"],[R[1854]]]]],[5,R[1855],E,E,N,[[["v"],[R[1856]]]]],[5,R[1857],E,E,N,[[["v"],[R[1995]]]]],[5,R[1858],E,E,N,[[["v"],["index"]]]],[5,R[1859],E,E,N,[[["v"],[R[1860]]]]],[5,R[1861],E,E,N,[[["v"],[R[1862]]]]],[5,"visit_lit",E,E,N,[[["v"],["lit"]]]],[5,R[1863],E,E,N,[[["v"],["litbool"]]]],[5,R[1864],E,E,N,[[["v"],["litbyte"]]]],[5,R[1865],E,E,N,[[["v"],[R[1948]]]]],[5,R[1866],E,E,N,[[["v"],["litchar"]]]],[5,R[1867],E,E,N,[[["v"],["litfloat"]]]],[5,R[1868],E,E,N,[[["v"],["litint"]]]],[5,R[1869],E,E,N,[[["v"],["litstr"]]]],[5,R[1870],E,E,N,[[["v"],[R[1871]]]]],[5,R[1872],E,E,N,[[["v"],["macro"]]]],[5,R[1873],E,E,N,[[["v"],[R[1874]]]]],[5,R[1875],E,E,N,[[["v"],["member"]]]],[5,R[2012],E,E,N,[[["v"],["meta"]]]],[5,R[1876],E,E,N,[[["v"],[R[2013]]]]],[5,R[1877],E,E,N,[[["v"],[R[1878]]]]],[5,R[1879],E,E,N,[[["v"],[R[1943]]]]],[5,R[1880],E,E,N,[[["v"],[R[1881]]]]],[5,R[2014],E,E,N,[[["v"],["path"]]]],[5,R[1882],E,E,N,[[["v"],[R[1883]]]]],[5,R[1884],E,E,N,[[["v"],[R[1885]]]]],[5,R[1886],E,E,N,[[["v"],[R[1887]]]]],[5,R[1888],E,E,N,[[["v"],[R[1889]]]]],[5,R[1890],E,E,N,[[["v"],[R[1891]]]]],[5,R[1892],E,E,N,[[["v"],["qself"]]]],[5,R[1893],E,E,N,[[["v"],[R[1951]]]]],[5,R[1894],E,E,N,[[["v"],[R[1947]]]]],[5,R[1895],E,E,N,[[["v"],[R[1896]]]]],[5,R[2015],E,E,N,[[["v"],["type"]]]],[5,R[1897],E,E,N,[[["v"],[R[1969]]]]],[5,R[1898],E,E,N,[[["v"],[R[1950]]]]],[5,R[1899],E,E,N,[[["v"],[R[1973]]]]],[5,R[1900],E,E,N,[[["v"],[R[1901]]]]],[5,R[1902],E,E,N,[[["v"],[R[1974]]]]],[5,R[1903],E,E,N,[[["v"],[R[1975]]]]],[5,R[1904],E,E,N,[[["v"],[R[1970]]]]],[5,R[1905],E,E,N,[[["v"],[R[1966]]]]],[5,R[1906],E,E,N,[[["v"],[R[1907]]]]],[5,R[1908],E,E,N,[[["v"],[R[1972]]]]],[5,R[1909],E,E,N,[[["v"],[R[2016]]]]],[5,R[1910],E,E,N,[[["v"],["typeptr"]]]],[5,R[1911],E,E,N,[[["v"],[R[1912]]]]],[5,R[1913],E,E,N,[[["v"],[R[1968]]]]],[5,R[1914],E,E,N,[[["v"],[R[1915]]]]],[5,R[1916],E,E,N,[[["v"],[R[1971]]]]],[5,R[1917],E,E,N,[[["v"],[R[1918]]]]],[5,R[1919],E,E,N,[[["v"],["unop"]]]],[5,R[1920],E,E,N,[[["v"],["variant"]]]],[5,R[1921],E,E,N,[[["v"],[R[2017]]]]],[5,R[1922],E,E,N,[[["v"],[R[1953]]]]],[5,R[1923],E,E,N,[[["v"],[R[1924]]]]],[5,R[1925],E,E,N,[[["v"],[R[1944]]]]],[5,R[1926],E,E,N,[[["v"],[R[1816]]]]],[5,R[1927],E,E,N,[[["v"],[R[1928]]]]],[5,R[2018],E,E,N,[[["v"],["span"]]]],[5,R[1929],E,E,N,[[["v"],["ident"]]]],[8,"Visit",E,R[1817],N,N],[11,"visit_abi",E,E,203,[[["self"],["abi"]]]],[11,R[1818],E,E,203,[[["self"],[R[1819]]]]],[11,R[1820],E,E,203,[[["self"],[R[1978]]]]],[11,R[1821],E,E,203,[[["self"],[R[2005]]]]],[11,R[1822],E,E,203,[[["self"],[R[2000]]]]],[11,R[1823],E,E,203,[[["self"],[R[1824]]]]],[11,R[1825],E,E,203,[[["self"],["binop"]]]],[11,R[1826],E,E,203,[[["self"],["binding"]]]],[11,R[1827],E,E,203,[[["self"],[R[1828]]]]],[11,R[1829],E,E,203,[[["self"],[R[1946]]]]],[11,R[1830],E,E,203,[[["self"],[R[1952]]]]],[11,R[2006],E,E,203,[[["self"],["data"]]]],[11,R[1831],E,E,203,[[["self"],[R[2007]]]]],[11,R[1832],E,E,203,[[["self"],[R[1949]]]]],[11,R[1833],E,E,203,[[["self"],[R[1967]]]]],[11,R[1834],E,E,203,[[["self"],[R[1835]]]]],[11,R[2008],E,E,203,[[["self"],["expr"]]]],[11,R[1836],E,E,203,[[["self"],[R[1945]]]]],[11,R[1837],E,E,203,[[["self"],[R[2009]]]]],[11,R[1838],E,E,203,[[["self"],[R[2010]]]]],[11,R[1839],E,E,203,[[["self"],[R[1960]]]]],[11,R[1840],E,E,203,[[["self"],[R[1961]]]]],[11,R[1841],E,E,203,[[["self"],["exprlit"]]]],[11,R[1842],E,E,203,[[["self"],[R[1964]]]]],[11,R[1843],E,E,203,[[["self"],[R[2011]]]]],[11,R[1844],E,E,203,[[["self"],[R[1956]]]]],[11,R[1845],E,E,203,[[["self"],[R[1846]]]]],[11,R[1847],E,E,203,[[["self"],["field"]]]],[11,R[1848],E,E,203,[[["self"],["fields"]]]],[11,R[1849],E,E,203,[[["self"],[R[1850]]]]],[11,R[1851],E,E,203,[[["self"],[R[1852]]]]],[11,R[1853],E,E,203,[[["self"],[R[1854]]]]],[11,R[1855],E,E,203,[[["self"],[R[1856]]]]],[11,R[1857],E,E,203,[[["self"],[R[1995]]]]],[11,R[1858],E,E,203,[[["self"],["index"]]]],[11,R[1859],E,E,203,[[["self"],[R[1860]]]]],[11,R[1861],E,E,203,[[["self"],[R[1862]]]]],[11,"visit_lit",E,E,203,[[["self"],["lit"]]]],[11,R[1863],E,E,203,[[["self"],["litbool"]]]],[11,R[1864],E,E,203,[[["self"],["litbyte"]]]],[11,R[1865],E,E,203,[[["self"],[R[1948]]]]],[11,R[1866],E,E,203,[[["self"],["litchar"]]]],[11,R[1867],E,E,203,[[["self"],["litfloat"]]]],[11,R[1868],E,E,203,[[["self"],["litint"]]]],[11,R[1869],E,E,203,[[["self"],["litstr"]]]],[11,R[1870],E,E,203,[[["self"],[R[1871]]]]],[11,R[1872],E,E,203,[[["self"],["macro"]]]],[11,R[1873],E,E,203,[[["self"],[R[1874]]]]],[11,R[1875],E,E,203,[[["self"],["member"]]]],[11,R[2012],E,E,203,[[["self"],["meta"]]]],[11,R[1876],E,E,203,[[["self"],[R[2013]]]]],[11,R[1877],E,E,203,[[["self"],[R[1878]]]]],[11,R[1879],E,E,203,[[["self"],[R[1943]]]]],[11,R[1880],E,E,203,[[["self"],[R[1881]]]]],[11,R[2014],E,E,203,[[["self"],["path"]]]],[11,R[1882],E,E,203,[[["self"],[R[1883]]]]],[11,R[1884],E,E,203,[[["self"],[R[1885]]]]],[11,R[1886],E,E,203,[[["self"],[R[1887]]]]],[11,R[1888],E,E,203,[[["self"],[R[1889]]]]],[11,R[1890],E,E,203,[[["self"],[R[1891]]]]],[11,R[1892],E,E,203,[[["self"],["qself"]]]],[11,R[1893],E,E,203,[[["self"],[R[1951]]]]],[11,R[1894],E,E,203,[[["self"],[R[1947]]]]],[11,R[1895],E,E,203,[[["self"],[R[1896]]]]],[11,R[2015],E,E,203,[[["self"],["type"]]]],[11,R[1897],E,E,203,[[["self"],[R[1969]]]]],[11,R[1898],E,E,203,[[["self"],[R[1950]]]]],[11,R[1899],E,E,203,[[["self"],[R[1973]]]]],[11,R[1900],E,E,203,[[["self"],[R[1901]]]]],[11,R[1902],E,E,203,[[["self"],[R[1974]]]]],[11,R[1903],E,E,203,[[["self"],[R[1975]]]]],[11,R[1904],E,E,203,[[["self"],[R[1970]]]]],[11,R[1905],E,E,203,[[["self"],[R[1966]]]]],[11,R[1906],E,E,203,[[["self"],[R[1907]]]]],[11,R[1908],E,E,203,[[["self"],[R[1972]]]]],[11,R[1909],E,E,203,[[["self"],[R[2016]]]]],[11,R[1910],E,E,203,[[["self"],["typeptr"]]]],[11,R[1911],E,E,203,[[["self"],[R[1912]]]]],[11,R[1913],E,E,203,[[["self"],[R[1968]]]]],[11,R[1914],E,E,203,[[["self"],[R[1915]]]]],[11,R[1916],E,E,203,[[["self"],[R[1971]]]]],[11,R[1917],E,E,203,[[["self"],[R[1918]]]]],[11,R[1919],E,E,203,[[["self"],["unop"]]]],[11,R[1920],E,E,203,[[["self"],["variant"]]]],[11,R[1921],E,E,203,[[["self"],[R[2017]]]]],[11,R[1922],E,E,203,[[["self"],[R[1953]]]]],[11,R[1923],E,E,203,[[["self"],[R[1924]]]]],[11,R[1925],E,E,203,[[["self"],[R[1944]]]]],[11,R[1926],E,E,203,[[["self"],[R[1816]]]]],[11,R[1927],E,E,203,[[["self"],[R[1928]]]]],[11,R[2018],E,E,203,[[["self"],["span"]]]],[11,R[1929],E,E,203,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[1941],R[1930],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[2055],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[0,"discouraged",E,"Extensions to the parsing API with niche applicability.",N,N],[8,R[2054],"syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",N,N],[10,"advance_to",E,"Advance this parse stream to the position of a forked…",204,[[["self"]]]],[6,"Result",R[1941],R[1938],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,205,[[[R[1806]]],[R[13]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,206,N],[10,"parse2",E,R[1931],206,[[[R[543]]],[R[13]]]],[11,"parse",E,R[1932],206,[[[R[543]]],[R[13]]]],[11,"parse_str",E,R[1933],206,[[["str"]],[R[13]]]],[11,"error",E,R[1937],207,[[["display"]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",208,[[["self"]],[[R[13]],["parse"]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",208,[[["self"]],[R[13]]]],[11,"peek",E,R[2019],208,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",208,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",208,[[["self"],["peek"]],["bool"]]],[11,R[1934],E,R[1935],208,[[["self"]],[[R[13],[R[1936]]],[R[1936]]]]],[11,R[73],E,"Returns whether there are tokens remaining in this stream.",208,[[["self"]],["bool"]]],[11,"lookahead1",E,"Constructs a helper for peeking at the next token in this…",208,[[["self"]],["lookahead1"]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",208,[[["self"]],["self"]]],[11,"error",E,R[1937],208,[[["self"],["display"]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",208,[[["self"],["f"]],[R[13]]]],[11,"cursor",E,"Provides low-level access to the token representation…",208,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",209,[[["display"],["span"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",209,[[["totokens"],["display"]],["self"]]],[11,"span",E,"The source location of the error.",209,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",209,[[["self"]],[R[543]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[1938],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation",E,"Define a type that supports parsing and printing a…",N,N],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"span",E,E,210,[[["self"]],["span"]]],[11,R[62],E,E,210,[[["self"]],["string"]]],[11,"from",E,E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[17],E,E,210,[[["self"]],[T]]],[11,R[18],E,E,210,[[[T],["self"]]]],[11,R[12],E,E,210,[[[U]],[R[13]]]],[11,R[14],E,E,210,[[],[R[13]]]],[11,R[15],E,E,210,[[["self"]],[T]]],[11,R[41],E,E,210,[[["self"]],[T]]],[11,R[19],E,E,210,[[["self"]],[R[42]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[17],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[[T],["self"]]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,211,[[[T]],[T]]],[11,"into",E,E,211,[[],[U]]],[11,R[17],E,E,211,[[["self"]],[T]]],[11,R[18],E,E,211,[[[T],["self"]]]],[11,R[12],E,E,211,[[[U]],[R[13]]]],[11,R[14],E,E,211,[[],[R[13]]]],[11,R[15],E,E,211,[[["self"]],[T]]],[11,R[41],E,E,211,[[["self"]],[T]]],[11,R[19],E,E,211,[[["self"]],[R[42]]]],[11,"from",E,E,212,[[[T]],[T]]],[11,"into",E,E,212,[[],[U]]],[11,R[17],E,E,212,[[["self"]],[T]]],[11,R[18],E,E,212,[[[T],["self"]]]],[11,R[12],E,E,212,[[[U]],[R[13]]]],[11,R[14],E,E,212,[[],[R[13]]]],[11,R[15],E,E,212,[[["self"]],[T]]],[11,R[41],E,E,212,[[["self"]],[T]]],[11,R[19],E,E,212,[[["self"]],[R[42]]]],[11,"from",E,E,213,[[[T]],[T]]],[11,"into",E,E,213,[[],[U]]],[11,R[17],E,E,213,[[["self"]],[T]]],[11,R[18],E,E,213,[[[T],["self"]]]],[11,R[12],E,E,213,[[[U]],[R[13]]]],[11,R[14],E,E,213,[[],[R[13]]]],[11,R[15],E,E,213,[[["self"]],[T]]],[11,R[41],E,E,213,[[["self"]],[T]]],[11,R[19],E,E,213,[[["self"]],[R[42]]]],[11,"from",E,E,214,[[[T]],[T]]],[11,"into",E,E,214,[[],[U]]],[11,R[17],E,E,214,[[["self"]],[T]]],[11,R[18],E,E,214,[[[T],["self"]]]],[11,R[12],E,E,214,[[[U]],[R[13]]]],[11,R[14],E,E,214,[[],[R[13]]]],[11,R[15],E,E,214,[[["self"]],[T]]],[11,R[41],E,E,214,[[["self"]],[T]]],[11,R[19],E,E,214,[[["self"]],[R[42]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,215,[[[T]],[T]]],[11,"into",E,E,215,[[],[U]]],[11,R[17],E,E,215,[[["self"]],[T]]],[11,R[18],E,E,215,[[[T],["self"]]]],[11,R[12],E,E,215,[[[U]],[R[13]]]],[11,R[14],E,E,215,[[],[R[13]]]],[11,R[15],E,E,215,[[["self"]],[T]]],[11,R[41],E,E,215,[[["self"]],[T]]],[11,R[19],E,E,215,[[["self"]],[R[42]]]],[11,"from",E,E,216,[[[T]],[T]]],[11,"into",E,E,216,[[],[U]]],[11,R[17],E,E,216,[[["self"]],[T]]],[11,R[18],E,E,216,[[[T],["self"]]]],[11,R[12],E,E,216,[[[U]],[R[13]]]],[11,R[14],E,E,216,[[],[R[13]]]],[11,R[15],E,E,216,[[["self"]],[T]]],[11,R[41],E,E,216,[[["self"]],[T]]],[11,R[19],E,E,216,[[["self"]],[R[42]]]],[11,"from",E,E,217,[[[T]],[T]]],[11,"into",E,E,217,[[],[U]]],[11,R[17],E,E,217,[[["self"]],[T]]],[11,R[18],E,E,217,[[[T],["self"]]]],[11,R[12],E,E,217,[[[U]],[R[13]]]],[11,R[14],E,E,217,[[],[R[13]]]],[11,R[15],E,E,217,[[["self"]],[T]]],[11,R[41],E,E,217,[[["self"]],[T]]],[11,R[19],E,E,217,[[["self"]],[R[42]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[17],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[[T],["self"]]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,218,[[[T]],[T]]],[11,"into",E,E,218,[[],[U]]],[11,R[17],E,E,218,[[["self"]],[T]]],[11,R[18],E,E,218,[[[T],["self"]]]],[11,R[12],E,E,218,[[[U]],[R[13]]]],[11,R[14],E,E,218,[[],[R[13]]]],[11,R[15],E,E,218,[[["self"]],[T]]],[11,R[41],E,E,218,[[["self"]],[T]]],[11,R[19],E,E,218,[[["self"]],[R[42]]]],[11,"from",E,E,219,[[[T]],[T]]],[11,"into",E,E,219,[[],[U]]],[11,R[17],E,E,219,[[["self"]],[T]]],[11,R[18],E,E,219,[[[T],["self"]]]],[11,R[12],E,E,219,[[[U]],[R[13]]]],[11,R[14],E,E,219,[[],[R[13]]]],[11,R[15],E,E,219,[[["self"]],[T]]],[11,R[41],E,E,219,[[["self"]],[T]]],[11,R[19],E,E,219,[[["self"]],[R[42]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,220,[[[T]],[T]]],[11,"into",E,E,220,[[],[U]]],[11,R[17],E,E,220,[[["self"]],[T]]],[11,R[18],E,E,220,[[[T],["self"]]]],[11,R[12],E,E,220,[[[U]],[R[13]]]],[11,R[14],E,E,220,[[],[R[13]]]],[11,R[15],E,E,220,[[["self"]],[T]]],[11,R[41],E,E,220,[[["self"]],[T]]],[11,R[19],E,E,220,[[["self"]],[R[42]]]],[11,"from",E,E,221,[[[T]],[T]]],[11,"into",E,E,221,[[],[U]]],[11,R[17],E,E,221,[[["self"]],[T]]],[11,R[18],E,E,221,[[[T],["self"]]]],[11,R[12],E,E,221,[[[U]],[R[13]]]],[11,R[14],E,E,221,[[],[R[13]]]],[11,R[15],E,E,221,[[["self"]],[T]]],[11,R[41],E,E,221,[[["self"]],[T]]],[11,R[19],E,E,221,[[["self"]],[R[42]]]],[11,"from",E,E,222,[[[T]],[T]]],[11,"into",E,E,222,[[],[U]]],[11,R[17],E,E,222,[[["self"]],[T]]],[11,R[18],E,E,222,[[[T],["self"]]]],[11,R[12],E,E,222,[[[U]],[R[13]]]],[11,R[14],E,E,222,[[],[R[13]]]],[11,R[15],E,E,222,[[["self"]],[T]]],[11,R[41],E,E,222,[[["self"]],[T]]],[11,R[19],E,E,222,[[["self"]],[R[42]]]],[11,"from",E,E,223,[[[T]],[T]]],[11,"into",E,E,223,[[],[U]]],[11,R[17],E,E,223,[[["self"]],[T]]],[11,R[18],E,E,223,[[[T],["self"]]]],[11,R[12],E,E,223,[[[U]],[R[13]]]],[11,R[14],E,E,223,[[],[R[13]]]],[11,R[15],E,E,223,[[["self"]],[T]]],[11,R[41],E,E,223,[[["self"]],[T]]],[11,R[19],E,E,223,[[["self"]],[R[42]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,"from",E,E,224,[[[T]],[T]]],[11,"into",E,E,224,[[],[U]]],[11,R[17],E,E,224,[[["self"]],[T]]],[11,R[18],E,E,224,[[[T],["self"]]]],[11,R[12],E,E,224,[[[U]],[R[13]]]],[11,R[14],E,E,224,[[],[R[13]]]],[11,R[15],E,E,224,[[["self"]],[T]]],[11,R[41],E,E,224,[[["self"]],[T]]],[11,R[19],E,E,224,[[["self"]],[R[42]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,225,[[[T]],[T]]],[11,"into",E,E,225,[[],[U]]],[11,R[17],E,E,225,[[["self"]],[T]]],[11,R[18],E,E,225,[[[T],["self"]]]],[11,R[12],E,E,225,[[[U]],[R[13]]]],[11,R[14],E,E,225,[[],[R[13]]]],[11,R[15],E,E,225,[[["self"]],[T]]],[11,R[41],E,E,225,[[["self"]],[T]]],[11,R[19],E,E,225,[[["self"]],[R[42]]]],[11,"from",E,E,226,[[[T]],[T]]],[11,"into",E,E,226,[[],[U]]],[11,R[17],E,E,226,[[["self"]],[T]]],[11,R[18],E,E,226,[[[T],["self"]]]],[11,R[12],E,E,226,[[[U]],[R[13]]]],[11,R[14],E,E,226,[[],[R[13]]]],[11,R[15],E,E,226,[[["self"]],[T]]],[11,R[41],E,E,226,[[["self"]],[T]]],[11,R[19],E,E,226,[[["self"]],[R[42]]]],[11,"from",E,E,227,[[[T]],[T]]],[11,"into",E,E,227,[[],[U]]],[11,R[17],E,E,227,[[["self"]],[T]]],[11,R[18],E,E,227,[[[T],["self"]]]],[11,R[12],E,E,227,[[[U]],[R[13]]]],[11,R[14],E,E,227,[[],[R[13]]]],[11,R[15],E,E,227,[[["self"]],[T]]],[11,R[41],E,E,227,[[["self"]],[T]]],[11,R[19],E,E,227,[[["self"]],[R[42]]]],[11,"from",E,E,228,[[[T]],[T]]],[11,"into",E,E,228,[[],[U]]],[11,R[17],E,E,228,[[["self"]],[T]]],[11,R[18],E,E,228,[[[T],["self"]]]],[11,R[12],E,E,228,[[[U]],[R[13]]]],[11,R[14],E,E,228,[[],[R[13]]]],[11,R[15],E,E,228,[[["self"]],[T]]],[11,R[41],E,E,228,[[["self"]],[T]]],[11,R[19],E,E,228,[[["self"]],[R[42]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[17],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[[T],["self"]]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[17],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[[T],["self"]]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,229,[[[T]],[T]]],[11,"into",E,E,229,[[],[U]]],[11,R[17],E,E,229,[[["self"]],[T]]],[11,R[18],E,E,229,[[[T],["self"]]]],[11,R[12],E,E,229,[[[U]],[R[13]]]],[11,R[14],E,E,229,[[],[R[13]]]],[11,R[15],E,E,229,[[["self"]],[T]]],[11,R[41],E,E,229,[[["self"]],[T]]],[11,R[19],E,E,229,[[["self"]],[R[42]]]],[11,"from",E,E,230,[[[T]],[T]]],[11,"into",E,E,230,[[],[U]]],[11,R[17],E,E,230,[[["self"]],[T]]],[11,R[18],E,E,230,[[[T],["self"]]]],[11,R[12],E,E,230,[[[U]],[R[13]]]],[11,R[14],E,E,230,[[],[R[13]]]],[11,R[15],E,E,230,[[["self"]],[T]]],[11,R[41],E,E,230,[[["self"]],[T]]],[11,R[19],E,E,230,[[["self"]],[R[42]]]],[11,"from",E,E,231,[[[T]],[T]]],[11,"into",E,E,231,[[],[U]]],[11,R[17],E,E,231,[[["self"]],[T]]],[11,R[18],E,E,231,[[[T],["self"]]]],[11,R[12],E,E,231,[[[U]],[R[13]]]],[11,R[14],E,E,231,[[],[R[13]]]],[11,R[15],E,E,231,[[["self"]],[T]]],[11,R[41],E,E,231,[[["self"]],[T]]],[11,R[19],E,E,231,[[["self"]],[R[42]]]],[11,"from",E,E,232,[[[T]],[T]]],[11,"into",E,E,232,[[],[U]]],[11,R[17],E,E,232,[[["self"]],[T]]],[11,R[18],E,E,232,[[[T],["self"]]]],[11,R[12],E,E,232,[[[U]],[R[13]]]],[11,R[14],E,E,232,[[],[R[13]]]],[11,R[15],E,E,232,[[["self"]],[T]]],[11,R[41],E,E,232,[[["self"]],[T]]],[11,R[19],E,E,232,[[["self"]],[R[42]]]],[11,"from",E,E,233,[[[T]],[T]]],[11,"into",E,E,233,[[],[U]]],[11,R[17],E,E,233,[[["self"]],[T]]],[11,R[18],E,E,233,[[[T],["self"]]]],[11,R[12],E,E,233,[[[U]],[R[13]]]],[11,R[14],E,E,233,[[],[R[13]]]],[11,R[15],E,E,233,[[["self"]],[T]]],[11,R[41],E,E,233,[[["self"]],[T]]],[11,R[19],E,E,233,[[["self"]],[R[42]]]],[11,"from",E,E,234,[[[T]],[T]]],[11,"into",E,E,234,[[],[U]]],[11,R[17],E,E,234,[[["self"]],[T]]],[11,R[18],E,E,234,[[[T],["self"]]]],[11,R[12],E,E,234,[[[U]],[R[13]]]],[11,R[14],E,E,234,[[],[R[13]]]],[11,R[15],E,E,234,[[["self"]],[T]]],[11,R[41],E,E,234,[[["self"]],[T]]],[11,R[19],E,E,234,[[["self"]],[R[42]]]],[11,"from",E,E,235,[[[T]],[T]]],[11,"into",E,E,235,[[],[U]]],[11,R[17],E,E,235,[[["self"]],[T]]],[11,R[18],E,E,235,[[[T],["self"]]]],[11,R[12],E,E,235,[[[U]],[R[13]]]],[11,R[14],E,E,235,[[],[R[13]]]],[11,R[15],E,E,235,[[["self"]],[T]]],[11,R[41],E,E,235,[[["self"]],[T]]],[11,R[19],E,E,235,[[["self"]],[R[42]]]],[11,"from",E,E,236,[[[T]],[T]]],[11,"into",E,E,236,[[],[U]]],[11,R[17],E,E,236,[[["self"]],[T]]],[11,R[18],E,E,236,[[[T],["self"]]]],[11,R[12],E,E,236,[[[U]],[R[13]]]],[11,R[14],E,E,236,[[],[R[13]]]],[11,R[15],E,E,236,[[["self"]],[T]]],[11,R[41],E,E,236,[[["self"]],[T]]],[11,R[19],E,E,236,[[["self"]],[R[42]]]],[11,"from",E,E,237,[[[T]],[T]]],[11,"into",E,E,237,[[],[U]]],[11,R[17],E,E,237,[[["self"]],[T]]],[11,R[18],E,E,237,[[[T],["self"]]]],[11,R[12],E,E,237,[[[U]],[R[13]]]],[11,R[14],E,E,237,[[],[R[13]]]],[11,R[15],E,E,237,[[["self"]],[T]]],[11,R[41],E,E,237,[[["self"]],[T]]],[11,R[19],E,E,237,[[["self"]],[R[42]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[17],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[[T],["self"]]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,"from",E,E,238,[[[T]],[T]]],[11,"into",E,E,238,[[],[U]]],[11,R[17],E,E,238,[[["self"]],[T]]],[11,R[18],E,E,238,[[[T],["self"]]]],[11,R[12],E,E,238,[[[U]],[R[13]]]],[11,R[14],E,E,238,[[],[R[13]]]],[11,R[15],E,E,238,[[["self"]],[T]]],[11,R[41],E,E,238,[[["self"]],[T]]],[11,R[19],E,E,238,[[["self"]],[R[42]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[17],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[[T],["self"]]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",E,E,239,[[[T]],[T]]],[11,"into",E,E,239,[[],[U]]],[11,R[17],E,E,239,[[["self"]],[T]]],[11,R[18],E,E,239,[[[T],["self"]]]],[11,R[12],E,E,239,[[[U]],[R[13]]]],[11,R[14],E,E,239,[[],[R[13]]]],[11,R[15],E,E,239,[[["self"]],[T]]],[11,R[41],E,E,239,[[["self"]],[T]]],[11,R[19],E,E,239,[[["self"]],[R[42]]]],[11,"from",E,E,240,[[[T]],[T]]],[11,"into",E,E,240,[[],[U]]],[11,R[17],E,E,240,[[["self"]],[T]]],[11,R[18],E,E,240,[[[T],["self"]]]],[11,R[12],E,E,240,[[[U]],[R[13]]]],[11,R[14],E,E,240,[[],[R[13]]]],[11,R[15],E,E,240,[[["self"]],[T]]],[11,R[41],E,E,240,[[["self"]],[T]]],[11,R[19],E,E,240,[[["self"]],[R[42]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[17],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[[T],["self"]]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[17],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[[T],["self"]]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[17],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[[T],["self"]]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[17],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[[T],["self"]]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[[T],["self"]]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[[T],["self"]]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[17],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[[T],["self"]]]],[11,R[12],E,E,26,[[[U]],[R[13]]]],[11,R[14],E,E,26,[[],[R[13]]]],[11,R[15],E,E,26,[[["self"]],[T]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[R[42]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[17],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[[T],["self"]]]],[11,R[12],E,E,27,[[[U]],[R[13]]]],[11,R[14],E,E,27,[[],[R[13]]]],[11,R[15],E,E,27,[[["self"]],[T]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[R[42]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[17],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[[T],["self"]]]],[11,R[12],E,E,28,[[[U]],[R[13]]]],[11,R[14],E,E,28,[[],[R[13]]]],[11,R[15],E,E,28,[[["self"]],[T]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[R[42]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[17],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[[T],["self"]]]],[11,R[12],E,E,29,[[[U]],[R[13]]]],[11,R[14],E,E,29,[[],[R[13]]]],[11,R[15],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[R[42]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[17],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[[T],["self"]]]],[11,R[12],E,E,30,[[[U]],[R[13]]]],[11,R[14],E,E,30,[[],[R[13]]]],[11,R[15],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[R[42]]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"from",E,E,241,[[[T]],[T]]],[11,"into",E,E,241,[[],[U]]],[11,R[17],E,E,241,[[["self"]],[T]]],[11,R[18],E,E,241,[[[T],["self"]]]],[11,R[12],E,E,241,[[[U]],[R[13]]]],[11,R[14],E,E,241,[[],[R[13]]]],[11,R[15],E,E,241,[[["self"]],[T]]],[11,R[41],E,E,241,[[["self"]],[T]]],[11,R[19],E,E,241,[[["self"]],[R[42]]]],[11,"span",E,E,242,[[["self"]],["span"]]],[11,"from",E,E,242,[[[T]],[T]]],[11,"into",E,E,242,[[],[U]]],[11,R[17],E,E,242,[[["self"]],[T]]],[11,R[18],E,E,242,[[[T],["self"]]]],[11,R[12],E,E,242,[[[U]],[R[13]]]],[11,R[14],E,E,242,[[],[R[13]]]],[11,R[15],E,E,242,[[["self"]],[T]]],[11,R[41],E,E,242,[[["self"]],[T]]],[11,R[19],E,E,242,[[["self"]],[R[42]]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[17],E,E,190,[[["self"]],[T]]],[11,R[18],E,E,190,[[[T],["self"]]]],[11,R[12],E,E,190,[[[U]],[R[13]]]],[11,R[14],E,E,190,[[],[R[13]]]],[11,R[15],E,E,190,[[["self"]],[T]]],[11,R[41],E,E,190,[[["self"]],[T]]],[11,R[19],E,E,190,[[["self"]],[R[42]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,"display",E,E,31,[[],["str"]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,R[62],E,E,31,[[["self"]],["string"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[17],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[[T],["self"]]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,"display",E,E,32,[[],["str"]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[[T],["self"]]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"from",E,E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[17],E,E,193,[[["self"]],[T]]],[11,R[18],E,E,193,[[[T],["self"]]]],[11,R[12],E,E,193,[[[U]],[R[13]]]],[11,R[14],E,E,193,[[],[R[13]]]],[11,R[15],E,E,193,[[["self"]],[T]]],[11,R[41],E,E,193,[[["self"]],[T]]],[11,R[19],E,E,193,[[["self"]],[R[42]]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[17],E,E,192,[[["self"]],[T]]],[11,R[18],E,E,192,[[[T],["self"]]]],[11,R[12],E,E,192,[[[U]],[R[13]]]],[11,R[14],E,E,192,[[],[R[13]]]],[11,R[15],E,E,192,[[["self"]],[T]]],[11,R[41],E,E,192,[[["self"]],[T]]],[11,R[19],E,E,192,[[["self"]],[R[42]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[17],E,E,194,[[["self"]],[T]]],[11,R[18],E,E,194,[[[T],["self"]]]],[11,R[12],E,E,194,[[[U]],[R[13]]]],[11,R[14],E,E,194,[[],[R[13]]]],[11,R[15],E,E,194,[[["self"]],[T]]],[11,R[41],E,E,194,[[["self"]],[T]]],[11,R[19],E,E,194,[[["self"]],[R[42]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"from",E,E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[17],E,E,196,[[["self"]],[T]]],[11,R[18],E,E,196,[[[T],["self"]]]],[11,R[12],E,E,196,[[[U]],[R[13]]]],[11,R[14],E,E,196,[[],[R[13]]]],[11,R[15],E,E,196,[[["self"]],[T]]],[11,R[41],E,E,196,[[["self"]],[T]]],[11,R[19],E,E,196,[[["self"]],[R[42]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"from",E,E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[17],E,E,195,[[["self"]],[T]]],[11,R[18],E,E,195,[[[T],["self"]]]],[11,R[12],E,E,195,[[[U]],[R[13]]]],[11,R[14],E,E,195,[[],[R[13]]]],[11,R[15],E,E,195,[[["self"]],[T]]],[11,R[41],E,E,195,[[["self"]],[T]]],[11,R[19],E,E,195,[[["self"]],[R[42]]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"from",E,E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[17],E,E,191,[[["self"]],[T]]],[11,R[18],E,E,191,[[[T],["self"]]]],[11,R[12],E,E,191,[[[U]],[R[13]]]],[11,R[14],E,E,191,[[],[R[13]]]],[11,R[15],E,E,191,[[["self"]],[T]]],[11,R[41],E,E,191,[[["self"]],[T]]],[11,R[19],E,E,191,[[["self"]],[R[42]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[17],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[[T],["self"]]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[17],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[[T],["self"]]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[[T],["self"]]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[17],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[[T],["self"]]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[[T],["self"]]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[17],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[[T],["self"]]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[17],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[[T],["self"]]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[17],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[[T],["self"]]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[[T],["self"]]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[17],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[[T],["self"]]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[17],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[[T],["self"]]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[17],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[[T],["self"]]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[17],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[[T],["self"]]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[17],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[[T],["self"]]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[17],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[[T],["self"]]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[17],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[[T],["self"]]]],[11,R[12],E,E,49,[[[U]],[R[13]]]],[11,R[14],E,E,49,[[],[R[13]]]],[11,R[15],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[R[42]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[17],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[[T],["self"]]]],[11,R[12],E,E,50,[[[U]],[R[13]]]],[11,R[14],E,E,50,[[],[R[13]]]],[11,R[15],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[R[42]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[17],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[[T],["self"]]]],[11,R[12],E,E,51,[[[U]],[R[13]]]],[11,R[14],E,E,51,[[],[R[13]]]],[11,R[15],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[["self"]],[R[42]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[17],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[[T],["self"]]]],[11,R[12],E,E,52,[[[U]],[R[13]]]],[11,R[14],E,E,52,[[],[R[13]]]],[11,R[15],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[["self"]],[R[42]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[17],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[[T],["self"]]]],[11,R[12],E,E,53,[[[U]],[R[13]]]],[11,R[14],E,E,53,[[],[R[13]]]],[11,R[15],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[R[42]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[17],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[[T],["self"]]]],[11,R[12],E,E,54,[[[U]],[R[13]]]],[11,R[14],E,E,54,[[],[R[13]]]],[11,R[15],E,E,54,[[["self"]],[T]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[R[42]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[17],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[[T],["self"]]]],[11,R[12],E,E,55,[[[U]],[R[13]]]],[11,R[14],E,E,55,[[],[R[13]]]],[11,R[15],E,E,55,[[["self"]],[T]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[R[42]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[17],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[[T],["self"]]]],[11,R[12],E,E,56,[[[U]],[R[13]]]],[11,R[14],E,E,56,[[],[R[13]]]],[11,R[15],E,E,56,[[["self"]],[T]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[R[42]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[17],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[[T],["self"]]]],[11,R[12],E,E,57,[[[U]],[R[13]]]],[11,R[14],E,E,57,[[],[R[13]]]],[11,R[15],E,E,57,[[["self"]],[T]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[R[42]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[17],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[[T],["self"]]]],[11,R[12],E,E,58,[[[U]],[R[13]]]],[11,R[14],E,E,58,[[],[R[13]]]],[11,R[15],E,E,58,[[["self"]],[T]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[R[42]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[17],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[[T],["self"]]]],[11,R[12],E,E,59,[[[U]],[R[13]]]],[11,R[14],E,E,59,[[],[R[13]]]],[11,R[15],E,E,59,[[["self"]],[T]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[R[42]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[17],E,E,60,[[["self"]],[T]]],[11,R[18],E,E,60,[[[T],["self"]]]],[11,R[12],E,E,60,[[[U]],[R[13]]]],[11,R[14],E,E,60,[[],[R[13]]]],[11,R[15],E,E,60,[[["self"]],[T]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[19],E,E,60,[[["self"]],[R[42]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[17],E,E,61,[[["self"]],[T]]],[11,R[18],E,E,61,[[[T],["self"]]]],[11,R[12],E,E,61,[[[U]],[R[13]]]],[11,R[14],E,E,61,[[],[R[13]]]],[11,R[15],E,E,61,[[["self"]],[T]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[19],E,E,61,[[["self"]],[R[42]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[17],E,E,62,[[["self"]],[T]]],[11,R[18],E,E,62,[[[T],["self"]]]],[11,R[12],E,E,62,[[[U]],[R[13]]]],[11,R[14],E,E,62,[[],[R[13]]]],[11,R[15],E,E,62,[[["self"]],[T]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[19],E,E,62,[[["self"]],[R[42]]]],[11,R[62],E,E,209,[[["self"]],["string"]]],[11,"from",E,E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[17],E,E,209,[[["self"]],[T]]],[11,R[18],E,E,209,[[[T],["self"]]]],[11,R[12],E,E,209,[[[U]],[R[13]]]],[11,R[14],E,E,209,[[],[R[13]]]],[11,R[15],E,E,209,[[["self"]],[T]]],[11,R[41],E,E,209,[[["self"]],[T]]],[11,R[19],E,E,209,[[["self"]],[R[42]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[17],E,E,63,[[["self"]],[T]]],[11,R[18],E,E,63,[[[T],["self"]]]],[11,R[12],E,E,63,[[[U]],[R[13]]]],[11,R[14],E,E,63,[[],[R[13]]]],[11,R[15],E,E,63,[[["self"]],[T]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[19],E,E,63,[[["self"]],[R[42]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[17],E,E,64,[[["self"]],[T]]],[11,R[18],E,E,64,[[[T],["self"]]]],[11,R[12],E,E,64,[[[U]],[R[13]]]],[11,R[14],E,E,64,[[],[R[13]]]],[11,R[15],E,E,64,[[["self"]],[T]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[19],E,E,64,[[["self"]],[R[42]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[17],E,E,65,[[["self"]],[T]]],[11,R[18],E,E,65,[[[T],["self"]]]],[11,R[12],E,E,65,[[[U]],[R[13]]]],[11,R[14],E,E,65,[[],[R[13]]]],[11,R[15],E,E,65,[[["self"]],[T]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[19],E,E,65,[[["self"]],[R[42]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[17],E,E,66,[[["self"]],[T]]],[11,R[18],E,E,66,[[[T],["self"]]]],[11,R[12],E,E,66,[[[U]],[R[13]]]],[11,R[14],E,E,66,[[],[R[13]]]],[11,R[15],E,E,66,[[["self"]],[T]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[19],E,E,66,[[["self"]],[R[42]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[17],E,E,67,[[["self"]],[T]]],[11,R[18],E,E,67,[[[T],["self"]]]],[11,R[12],E,E,67,[[[U]],[R[13]]]],[11,R[14],E,E,67,[[],[R[13]]]],[11,R[15],E,E,67,[[["self"]],[T]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[19],E,E,67,[[["self"]],[R[42]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[17],E,E,68,[[["self"]],[T]]],[11,R[18],E,E,68,[[[T],["self"]]]],[11,R[12],E,E,68,[[[U]],[R[13]]]],[11,R[14],E,E,68,[[],[R[13]]]],[11,R[15],E,E,68,[[["self"]],[T]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[19],E,E,68,[[["self"]],[R[42]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[17],E,E,69,[[["self"]],[T]]],[11,R[18],E,E,69,[[[T],["self"]]]],[11,R[12],E,E,69,[[[U]],[R[13]]]],[11,R[14],E,E,69,[[],[R[13]]]],[11,R[15],E,E,69,[[["self"]],[T]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[19],E,E,69,[[["self"]],[R[42]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[17],E,E,70,[[["self"]],[T]]],[11,R[18],E,E,70,[[[T],["self"]]]],[11,R[12],E,E,70,[[[U]],[R[13]]]],[11,R[14],E,E,70,[[],[R[13]]]],[11,R[15],E,E,70,[[["self"]],[T]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[19],E,E,70,[[["self"]],[R[42]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[17],E,E,71,[[["self"]],[T]]],[11,R[18],E,E,71,[[[T],["self"]]]],[11,R[12],E,E,71,[[[U]],[R[13]]]],[11,R[14],E,E,71,[[],[R[13]]]],[11,R[15],E,E,71,[[["self"]],[T]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[19],E,E,71,[[["self"]],[R[42]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[17],E,E,72,[[["self"]],[T]]],[11,R[18],E,E,72,[[[T],["self"]]]],[11,R[12],E,E,72,[[[U]],[R[13]]]],[11,R[14],E,E,72,[[],[R[13]]]],[11,R[15],E,E,72,[[["self"]],[T]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[19],E,E,72,[[["self"]],[R[42]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[17],E,E,73,[[["self"]],[T]]],[11,R[18],E,E,73,[[[T],["self"]]]],[11,R[12],E,E,73,[[[U]],[R[13]]]],[11,R[14],E,E,73,[[],[R[13]]]],[11,R[15],E,E,73,[[["self"]],[T]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[19],E,E,73,[[["self"]],[R[42]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[17],E,E,74,[[["self"]],[T]]],[11,R[18],E,E,74,[[[T],["self"]]]],[11,R[12],E,E,74,[[[U]],[R[13]]]],[11,R[14],E,E,74,[[],[R[13]]]],[11,R[15],E,E,74,[[["self"]],[T]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[19],E,E,74,[[["self"]],[R[42]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[17],E,E,75,[[["self"]],[T]]],[11,R[18],E,E,75,[[[T],["self"]]]],[11,R[12],E,E,75,[[[U]],[R[13]]]],[11,R[14],E,E,75,[[],[R[13]]]],[11,R[15],E,E,75,[[["self"]],[T]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[19],E,E,75,[[["self"]],[R[42]]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,"display",E,E,76,[[],["str"]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[17],E,E,76,[[["self"]],[T]]],[11,R[18],E,E,76,[[[T],["self"]]]],[11,R[12],E,E,76,[[[U]],[R[13]]]],[11,R[14],E,E,76,[[],[R[13]]]],[11,R[15],E,E,76,[[["self"]],[T]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[19],E,E,76,[[["self"]],[R[42]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[17],E,E,77,[[["self"]],[T]]],[11,R[18],E,E,77,[[[T],["self"]]]],[11,R[12],E,E,77,[[[U]],[R[13]]]],[11,R[14],E,E,77,[[],[R[13]]]],[11,R[15],E,E,77,[[["self"]],[T]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[19],E,E,77,[[["self"]],[R[42]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[17],E,E,78,[[["self"]],[T]]],[11,R[18],E,E,78,[[[T],["self"]]]],[11,R[12],E,E,78,[[[U]],[R[13]]]],[11,R[14],E,E,78,[[],[R[13]]]],[11,R[15],E,E,78,[[["self"]],[T]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[19],E,E,78,[[["self"]],[R[42]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[17],E,E,79,[[["self"]],[T]]],[11,R[18],E,E,79,[[[T],["self"]]]],[11,R[12],E,E,79,[[[U]],[R[13]]]],[11,R[14],E,E,79,[[],[R[13]]]],[11,R[15],E,E,79,[[["self"]],[T]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[19],E,E,79,[[["self"]],[R[42]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[17],E,E,80,[[["self"]],[T]]],[11,R[18],E,E,80,[[[T],["self"]]]],[11,R[12],E,E,80,[[[U]],[R[13]]]],[11,R[14],E,E,80,[[],[R[13]]]],[11,R[15],E,E,80,[[["self"]],[T]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[19],E,E,80,[[["self"]],[R[42]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[17],E,E,81,[[["self"]],[T]]],[11,R[18],E,E,81,[[[T],["self"]]]],[11,R[12],E,E,81,[[[U]],[R[13]]]],[11,R[14],E,E,81,[[],[R[13]]]],[11,R[15],E,E,81,[[["self"]],[T]]],[11,R[41],E,E,81,[[["self"]],[T]]],[11,R[19],E,E,81,[[["self"]],[R[42]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[17],E,E,82,[[["self"]],[T]]],[11,R[18],E,E,82,[[[T],["self"]]]],[11,R[12],E,E,82,[[[U]],[R[13]]]],[11,R[14],E,E,82,[[],[R[13]]]],[11,R[15],E,E,82,[[["self"]],[T]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[19],E,E,82,[[["self"]],[R[42]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[17],E,E,83,[[["self"]],[T]]],[11,R[18],E,E,83,[[[T],["self"]]]],[11,R[12],E,E,83,[[[U]],[R[13]]]],[11,R[14],E,E,83,[[],[R[13]]]],[11,R[15],E,E,83,[[["self"]],[T]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[19],E,E,83,[[["self"]],[R[42]]]],[11,"span",E,E,84,[[["self"]],["span"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[17],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[[T],["self"]]]],[11,R[12],E,E,84,[[[U]],[R[13]]]],[11,R[14],E,E,84,[[],[R[13]]]],[11,R[15],E,E,84,[[["self"]],[T]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[19],E,E,84,[[["self"]],[R[42]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[17],E,E,85,[[["self"]],[T]]],[11,R[18],E,E,85,[[[T],["self"]]]],[11,R[12],E,E,85,[[[U]],[R[13]]]],[11,R[14],E,E,85,[[],[R[13]]]],[11,R[15],E,E,85,[[["self"]],[T]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[19],E,E,85,[[["self"]],[R[42]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[17],E,E,86,[[["self"]],[T]]],[11,R[18],E,E,86,[[[T],["self"]]]],[11,R[12],E,E,86,[[[U]],[R[13]]]],[11,R[14],E,E,86,[[],[R[13]]]],[11,R[15],E,E,86,[[["self"]],[T]]],[11,R[41],E,E,86,[[["self"]],[T]]],[11,R[19],E,E,86,[[["self"]],[R[42]]]],[11,"peek",R[1942],E,87,[[["cursor"]],["bool"]]],[11,"display",E,E,87,[[],["str"]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[17],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[[T],["self"]]]],[11,R[12],E,E,87,[[[U]],[R[13]]]],[11,R[14],E,E,87,[[],[R[13]]]],[11,R[15],E,E,87,[[["self"]],[T]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[19],E,E,87,[[["self"]],[R[42]]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,"display",E,E,88,[[],["str"]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[17],E,E,88,[[["self"]],[T]]],[11,R[18],E,E,88,[[[T],["self"]]]],[11,R[12],E,E,88,[[[U]],[R[13]]]],[11,R[14],E,E,88,[[],[R[13]]]],[11,R[15],E,E,88,[[["self"]],[T]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[19],E,E,88,[[["self"]],[R[42]]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,"display",E,E,89,[[],["str"]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[17],E,E,89,[[["self"]],[T]]],[11,R[18],E,E,89,[[[T],["self"]]]],[11,R[12],E,E,89,[[[U]],[R[13]]]],[11,R[14],E,E,89,[[],[R[13]]]],[11,R[15],E,E,89,[[["self"]],[T]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[19],E,E,89,[[["self"]],[R[42]]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,"display",E,E,90,[[],["str"]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[17],E,E,90,[[["self"]],[T]]],[11,R[18],E,E,90,[[[T],["self"]]]],[11,R[12],E,E,90,[[[U]],[R[13]]]],[11,R[14],E,E,90,[[],[R[13]]]],[11,R[15],E,E,90,[[["self"]],[T]]],[11,R[41],E,E,90,[[["self"]],[T]]],[11,R[19],E,E,90,[[["self"]],[R[42]]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,"display",E,E,91,[[],["str"]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[17],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[[T],["self"]]]],[11,R[12],E,E,91,[[[U]],[R[13]]]],[11,R[14],E,E,91,[[],[R[13]]]],[11,R[15],E,E,91,[[["self"]],[T]]],[11,R[41],E,E,91,[[["self"]],[T]]],[11,R[19],E,E,91,[[["self"]],[R[42]]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,"display",E,E,92,[[],["str"]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[17],E,E,92,[[["self"]],[T]]],[11,R[18],E,E,92,[[[T],["self"]]]],[11,R[12],E,E,92,[[[U]],[R[13]]]],[11,R[14],E,E,92,[[],[R[13]]]],[11,R[15],E,E,92,[[["self"]],[T]]],[11,R[41],E,E,92,[[["self"]],[T]]],[11,R[19],E,E,92,[[["self"]],[R[42]]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,"display",E,E,93,[[],["str"]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[17],E,E,93,[[["self"]],[T]]],[11,R[18],E,E,93,[[[T],["self"]]]],[11,R[12],E,E,93,[[[U]],[R[13]]]],[11,R[14],E,E,93,[[],[R[13]]]],[11,R[15],E,E,93,[[["self"]],[T]]],[11,R[41],E,E,93,[[["self"]],[T]]],[11,R[19],E,E,93,[[["self"]],[R[42]]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,"display",E,E,94,[[],["str"]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[17],E,E,94,[[["self"]],[T]]],[11,R[18],E,E,94,[[[T],["self"]]]],[11,R[12],E,E,94,[[[U]],[R[13]]]],[11,R[14],E,E,94,[[],[R[13]]]],[11,R[15],E,E,94,[[["self"]],[T]]],[11,R[41],E,E,94,[[["self"]],[T]]],[11,R[19],E,E,94,[[["self"]],[R[42]]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,"display",E,E,95,[[],["str"]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[17],E,E,95,[[["self"]],[T]]],[11,R[18],E,E,95,[[[T],["self"]]]],[11,R[12],E,E,95,[[[U]],[R[13]]]],[11,R[14],E,E,95,[[],[R[13]]]],[11,R[15],E,E,95,[[["self"]],[T]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[19],E,E,95,[[["self"]],[R[42]]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,"display",E,E,96,[[],["str"]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[17],E,E,96,[[["self"]],[T]]],[11,R[18],E,E,96,[[[T],["self"]]]],[11,R[12],E,E,96,[[[U]],[R[13]]]],[11,R[14],E,E,96,[[],[R[13]]]],[11,R[15],E,E,96,[[["self"]],[T]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[19],E,E,96,[[["self"]],[R[42]]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,"display",E,E,97,[[],["str"]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[17],E,E,97,[[["self"]],[T]]],[11,R[18],E,E,97,[[[T],["self"]]]],[11,R[12],E,E,97,[[[U]],[R[13]]]],[11,R[14],E,E,97,[[],[R[13]]]],[11,R[15],E,E,97,[[["self"]],[T]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[19],E,E,97,[[["self"]],[R[42]]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,"display",E,E,98,[[],["str"]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[17],E,E,98,[[["self"]],[T]]],[11,R[18],E,E,98,[[[T],["self"]]]],[11,R[12],E,E,98,[[[U]],[R[13]]]],[11,R[14],E,E,98,[[],[R[13]]]],[11,R[15],E,E,98,[[["self"]],[T]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[19],E,E,98,[[["self"]],[R[42]]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,"display",E,E,99,[[],["str"]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[17],E,E,99,[[["self"]],[T]]],[11,R[18],E,E,99,[[[T],["self"]]]],[11,R[12],E,E,99,[[[U]],[R[13]]]],[11,R[14],E,E,99,[[],[R[13]]]],[11,R[15],E,E,99,[[["self"]],[T]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[19],E,E,99,[[["self"]],[R[42]]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[17],E,E,100,[[["self"]],[T]]],[11,R[18],E,E,100,[[[T],["self"]]]],[11,R[12],E,E,100,[[[U]],[R[13]]]],[11,R[14],E,E,100,[[],[R[13]]]],[11,R[15],E,E,100,[[["self"]],[T]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[19],E,E,100,[[["self"]],[R[42]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[17],E,E,101,[[["self"]],[T]]],[11,R[18],E,E,101,[[[T],["self"]]]],[11,R[12],E,E,101,[[[U]],[R[13]]]],[11,R[14],E,E,101,[[],[R[13]]]],[11,R[15],E,E,101,[[["self"]],[T]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[19],E,E,101,[[["self"]],[R[42]]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[17],E,E,102,[[["self"]],[T]]],[11,R[18],E,E,102,[[[T],["self"]]]],[11,R[12],E,E,102,[[[U]],[R[13]]]],[11,R[14],E,E,102,[[],[R[13]]]],[11,R[15],E,E,102,[[["self"]],[T]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[19],E,E,102,[[["self"]],[R[42]]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,"display",E,E,103,[[],["str"]]],[11,"span",E,E,103,[[["self"]],["span"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[17],E,E,103,[[["self"]],[T]]],[11,R[18],E,E,103,[[[T],["self"]]]],[11,R[12],E,E,103,[[[U]],[R[13]]]],[11,R[14],E,E,103,[[],[R[13]]]],[11,R[15],E,E,103,[[["self"]],[T]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[19],E,E,103,[[["self"]],[R[42]]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,"display",E,E,104,[[],["str"]]],[11,"span",E,E,104,[[["self"]],["span"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[17],E,E,104,[[["self"]],[T]]],[11,R[18],E,E,104,[[[T],["self"]]]],[11,R[12],E,E,104,[[[U]],[R[13]]]],[11,R[14],E,E,104,[[],[R[13]]]],[11,R[15],E,E,104,[[["self"]],[T]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[19],E,E,104,[[["self"]],[R[42]]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,"display",E,E,105,[[],["str"]]],[11,"span",E,E,105,[[["self"]],["span"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[17],E,E,105,[[["self"]],[T]]],[11,R[18],E,E,105,[[[T],["self"]]]],[11,R[12],E,E,105,[[[U]],[R[13]]]],[11,R[14],E,E,105,[[],[R[13]]]],[11,R[15],E,E,105,[[["self"]],[T]]],[11,R[41],E,E,105,[[["self"]],[T]]],[11,R[19],E,E,105,[[["self"]],[R[42]]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,"display",E,E,106,[[],["str"]]],[11,"span",E,E,106,[[["self"]],["span"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[17],E,E,106,[[["self"]],[T]]],[11,R[18],E,E,106,[[[T],["self"]]]],[11,R[12],E,E,106,[[[U]],[R[13]]]],[11,R[14],E,E,106,[[],[R[13]]]],[11,R[15],E,E,106,[[["self"]],[T]]],[11,R[41],E,E,106,[[["self"]],[T]]],[11,R[19],E,E,106,[[["self"]],[R[42]]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,"display",E,E,107,[[],["str"]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[17],E,E,107,[[["self"]],[T]]],[11,R[18],E,E,107,[[[T],["self"]]]],[11,R[12],E,E,107,[[[U]],[R[13]]]],[11,R[14],E,E,107,[[],[R[13]]]],[11,R[15],E,E,107,[[["self"]],[T]]],[11,R[41],E,E,107,[[["self"]],[T]]],[11,R[19],E,E,107,[[["self"]],[R[42]]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,"display",E,E,108,[[],["str"]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[17],E,E,108,[[["self"]],[T]]],[11,R[18],E,E,108,[[[T],["self"]]]],[11,R[12],E,E,108,[[[U]],[R[13]]]],[11,R[14],E,E,108,[[],[R[13]]]],[11,R[15],E,E,108,[[["self"]],[T]]],[11,R[41],E,E,108,[[["self"]],[T]]],[11,R[19],E,E,108,[[["self"]],[R[42]]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,"display",E,E,109,[[],["str"]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[17],E,E,109,[[["self"]],[T]]],[11,R[18],E,E,109,[[[T],["self"]]]],[11,R[12],E,E,109,[[[U]],[R[13]]]],[11,R[14],E,E,109,[[],[R[13]]]],[11,R[15],E,E,109,[[["self"]],[T]]],[11,R[41],E,E,109,[[["self"]],[T]]],[11,R[19],E,E,109,[[["self"]],[R[42]]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,"display",E,E,110,[[],["str"]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[17],E,E,110,[[["self"]],[T]]],[11,R[18],E,E,110,[[[T],["self"]]]],[11,R[12],E,E,110,[[[U]],[R[13]]]],[11,R[14],E,E,110,[[],[R[13]]]],[11,R[15],E,E,110,[[["self"]],[T]]],[11,R[41],E,E,110,[[["self"]],[T]]],[11,R[19],E,E,110,[[["self"]],[R[42]]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,"display",E,E,111,[[],["str"]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[17],E,E,111,[[["self"]],[T]]],[11,R[18],E,E,111,[[[T],["self"]]]],[11,R[12],E,E,111,[[[U]],[R[13]]]],[11,R[14],E,E,111,[[],[R[13]]]],[11,R[15],E,E,111,[[["self"]],[T]]],[11,R[41],E,E,111,[[["self"]],[T]]],[11,R[19],E,E,111,[[["self"]],[R[42]]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,"display",E,E,112,[[],["str"]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[17],E,E,112,[[["self"]],[T]]],[11,R[18],E,E,112,[[[T],["self"]]]],[11,R[12],E,E,112,[[[U]],[R[13]]]],[11,R[14],E,E,112,[[],[R[13]]]],[11,R[15],E,E,112,[[["self"]],[T]]],[11,R[41],E,E,112,[[["self"]],[T]]],[11,R[19],E,E,112,[[["self"]],[R[42]]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,"display",E,E,113,[[],["str"]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[17],E,E,113,[[["self"]],[T]]],[11,R[18],E,E,113,[[[T],["self"]]]],[11,R[12],E,E,113,[[[U]],[R[13]]]],[11,R[14],E,E,113,[[],[R[13]]]],[11,R[15],E,E,113,[[["self"]],[T]]],[11,R[41],E,E,113,[[["self"]],[T]]],[11,R[19],E,E,113,[[["self"]],[R[42]]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,"display",E,E,114,[[],["str"]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[17],E,E,114,[[["self"]],[T]]],[11,R[18],E,E,114,[[[T],["self"]]]],[11,R[12],E,E,114,[[[U]],[R[13]]]],[11,R[14],E,E,114,[[],[R[13]]]],[11,R[15],E,E,114,[[["self"]],[T]]],[11,R[41],E,E,114,[[["self"]],[T]]],[11,R[19],E,E,114,[[["self"]],[R[42]]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,"display",E,E,115,[[],["str"]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[17],E,E,115,[[["self"]],[T]]],[11,R[18],E,E,115,[[[T],["self"]]]],[11,R[12],E,E,115,[[[U]],[R[13]]]],[11,R[14],E,E,115,[[],[R[13]]]],[11,R[15],E,E,115,[[["self"]],[T]]],[11,R[41],E,E,115,[[["self"]],[T]]],[11,R[19],E,E,115,[[["self"]],[R[42]]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,"display",E,E,116,[[],["str"]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[17],E,E,116,[[["self"]],[T]]],[11,R[18],E,E,116,[[[T],["self"]]]],[11,R[12],E,E,116,[[[U]],[R[13]]]],[11,R[14],E,E,116,[[],[R[13]]]],[11,R[15],E,E,116,[[["self"]],[T]]],[11,R[41],E,E,116,[[["self"]],[T]]],[11,R[19],E,E,116,[[["self"]],[R[42]]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,"display",E,E,117,[[],["str"]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[17],E,E,117,[[["self"]],[T]]],[11,R[18],E,E,117,[[[T],["self"]]]],[11,R[12],E,E,117,[[[U]],[R[13]]]],[11,R[14],E,E,117,[[],[R[13]]]],[11,R[15],E,E,117,[[["self"]],[T]]],[11,R[41],E,E,117,[[["self"]],[T]]],[11,R[19],E,E,117,[[["self"]],[R[42]]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,"display",E,E,118,[[],["str"]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[17],E,E,118,[[["self"]],[T]]],[11,R[18],E,E,118,[[[T],["self"]]]],[11,R[12],E,E,118,[[[U]],[R[13]]]],[11,R[14],E,E,118,[[],[R[13]]]],[11,R[15],E,E,118,[[["self"]],[T]]],[11,R[41],E,E,118,[[["self"]],[T]]],[11,R[19],E,E,118,[[["self"]],[R[42]]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,"display",E,E,119,[[],["str"]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[17],E,E,119,[[["self"]],[T]]],[11,R[18],E,E,119,[[[T],["self"]]]],[11,R[12],E,E,119,[[[U]],[R[13]]]],[11,R[14],E,E,119,[[],[R[13]]]],[11,R[15],E,E,119,[[["self"]],[T]]],[11,R[41],E,E,119,[[["self"]],[T]]],[11,R[19],E,E,119,[[["self"]],[R[42]]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,"display",E,E,120,[[],["str"]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[17],E,E,120,[[["self"]],[T]]],[11,R[18],E,E,120,[[[T],["self"]]]],[11,R[12],E,E,120,[[[U]],[R[13]]]],[11,R[14],E,E,120,[[],[R[13]]]],[11,R[15],E,E,120,[[["self"]],[T]]],[11,R[41],E,E,120,[[["self"]],[T]]],[11,R[19],E,E,120,[[["self"]],[R[42]]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,"display",E,E,121,[[],["str"]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[17],E,E,121,[[["self"]],[T]]],[11,R[18],E,E,121,[[[T],["self"]]]],[11,R[12],E,E,121,[[[U]],[R[13]]]],[11,R[14],E,E,121,[[],[R[13]]]],[11,R[15],E,E,121,[[["self"]],[T]]],[11,R[41],E,E,121,[[["self"]],[T]]],[11,R[19],E,E,121,[[["self"]],[R[42]]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,"display",E,E,122,[[],["str"]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[17],E,E,122,[[["self"]],[T]]],[11,R[18],E,E,122,[[[T],["self"]]]],[11,R[12],E,E,122,[[[U]],[R[13]]]],[11,R[14],E,E,122,[[],[R[13]]]],[11,R[15],E,E,122,[[["self"]],[T]]],[11,R[41],E,E,122,[[["self"]],[T]]],[11,R[19],E,E,122,[[["self"]],[R[42]]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,"display",E,E,123,[[],["str"]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[17],E,E,123,[[["self"]],[T]]],[11,R[18],E,E,123,[[[T],["self"]]]],[11,R[12],E,E,123,[[[U]],[R[13]]]],[11,R[14],E,E,123,[[],[R[13]]]],[11,R[15],E,E,123,[[["self"]],[T]]],[11,R[41],E,E,123,[[["self"]],[T]]],[11,R[19],E,E,123,[[["self"]],[R[42]]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,"display",E,E,124,[[],["str"]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[17],E,E,124,[[["self"]],[T]]],[11,R[18],E,E,124,[[[T],["self"]]]],[11,R[12],E,E,124,[[[U]],[R[13]]]],[11,R[14],E,E,124,[[],[R[13]]]],[11,R[15],E,E,124,[[["self"]],[T]]],[11,R[41],E,E,124,[[["self"]],[T]]],[11,R[19],E,E,124,[[["self"]],[R[42]]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,"display",E,E,125,[[],["str"]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[17],E,E,125,[[["self"]],[T]]],[11,R[18],E,E,125,[[[T],["self"]]]],[11,R[12],E,E,125,[[[U]],[R[13]]]],[11,R[14],E,E,125,[[],[R[13]]]],[11,R[15],E,E,125,[[["self"]],[T]]],[11,R[41],E,E,125,[[["self"]],[T]]],[11,R[19],E,E,125,[[["self"]],[R[42]]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[17],E,E,126,[[["self"]],[T]]],[11,R[18],E,E,126,[[[T],["self"]]]],[11,R[12],E,E,126,[[[U]],[R[13]]]],[11,R[14],E,E,126,[[],[R[13]]]],[11,R[15],E,E,126,[[["self"]],[T]]],[11,R[41],E,E,126,[[["self"]],[T]]],[11,R[19],E,E,126,[[["self"]],[R[42]]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[17],E,E,127,[[["self"]],[T]]],[11,R[18],E,E,127,[[[T],["self"]]]],[11,R[12],E,E,127,[[[U]],[R[13]]]],[11,R[14],E,E,127,[[],[R[13]]]],[11,R[15],E,E,127,[[["self"]],[T]]],[11,R[41],E,E,127,[[["self"]],[T]]],[11,R[19],E,E,127,[[["self"]],[R[42]]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,"display",E,E,128,[[],["str"]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[17],E,E,128,[[["self"]],[T]]],[11,R[18],E,E,128,[[[T],["self"]]]],[11,R[12],E,E,128,[[[U]],[R[13]]]],[11,R[14],E,E,128,[[],[R[13]]]],[11,R[15],E,E,128,[[["self"]],[T]]],[11,R[41],E,E,128,[[["self"]],[T]]],[11,R[19],E,E,128,[[["self"]],[R[42]]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,"display",E,E,129,[[],["str"]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[17],E,E,129,[[["self"]],[T]]],[11,R[18],E,E,129,[[[T],["self"]]]],[11,R[12],E,E,129,[[[U]],[R[13]]]],[11,R[14],E,E,129,[[],[R[13]]]],[11,R[15],E,E,129,[[["self"]],[T]]],[11,R[41],E,E,129,[[["self"]],[T]]],[11,R[19],E,E,129,[[["self"]],[R[42]]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,"display",E,E,130,[[],["str"]]],[11,"span",E,E,130,[[["self"]],["span"]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[17],E,E,130,[[["self"]],[T]]],[11,R[18],E,E,130,[[[T],["self"]]]],[11,R[12],E,E,130,[[[U]],[R[13]]]],[11,R[14],E,E,130,[[],[R[13]]]],[11,R[15],E,E,130,[[["self"]],[T]]],[11,R[41],E,E,130,[[["self"]],[T]]],[11,R[19],E,E,130,[[["self"]],[R[42]]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,"display",E,E,131,[[],["str"]]],[11,"span",E,E,131,[[["self"]],["span"]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[17],E,E,131,[[["self"]],[T]]],[11,R[18],E,E,131,[[[T],["self"]]]],[11,R[12],E,E,131,[[[U]],[R[13]]]],[11,R[14],E,E,131,[[],[R[13]]]],[11,R[15],E,E,131,[[["self"]],[T]]],[11,R[41],E,E,131,[[["self"]],[T]]],[11,R[19],E,E,131,[[["self"]],[R[42]]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,"display",E,E,132,[[],["str"]]],[11,"span",E,E,132,[[["self"]],["span"]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[17],E,E,132,[[["self"]],[T]]],[11,R[18],E,E,132,[[[T],["self"]]]],[11,R[12],E,E,132,[[[U]],[R[13]]]],[11,R[14],E,E,132,[[],[R[13]]]],[11,R[15],E,E,132,[[["self"]],[T]]],[11,R[41],E,E,132,[[["self"]],[T]]],[11,R[19],E,E,132,[[["self"]],[R[42]]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,"display",E,E,133,[[],["str"]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[17],E,E,133,[[["self"]],[T]]],[11,R[18],E,E,133,[[[T],["self"]]]],[11,R[12],E,E,133,[[[U]],[R[13]]]],[11,R[14],E,E,133,[[],[R[13]]]],[11,R[15],E,E,133,[[["self"]],[T]]],[11,R[41],E,E,133,[[["self"]],[T]]],[11,R[19],E,E,133,[[["self"]],[R[42]]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,"display",E,E,134,[[],["str"]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[17],E,E,134,[[["self"]],[T]]],[11,R[18],E,E,134,[[[T],["self"]]]],[11,R[12],E,E,134,[[[U]],[R[13]]]],[11,R[14],E,E,134,[[],[R[13]]]],[11,R[15],E,E,134,[[["self"]],[T]]],[11,R[41],E,E,134,[[["self"]],[T]]],[11,R[19],E,E,134,[[["self"]],[R[42]]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,"display",E,E,135,[[],["str"]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[17],E,E,135,[[["self"]],[T]]],[11,R[18],E,E,135,[[[T],["self"]]]],[11,R[12],E,E,135,[[[U]],[R[13]]]],[11,R[14],E,E,135,[[],[R[13]]]],[11,R[15],E,E,135,[[["self"]],[T]]],[11,R[41],E,E,135,[[["self"]],[T]]],[11,R[19],E,E,135,[[["self"]],[R[42]]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,"display",E,E,136,[[],["str"]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[17],E,E,136,[[["self"]],[T]]],[11,R[18],E,E,136,[[[T],["self"]]]],[11,R[12],E,E,136,[[[U]],[R[13]]]],[11,R[14],E,E,136,[[],[R[13]]]],[11,R[15],E,E,136,[[["self"]],[T]]],[11,R[41],E,E,136,[[["self"]],[T]]],[11,R[19],E,E,136,[[["self"]],[R[42]]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,"display",E,E,137,[[],["str"]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[17],E,E,137,[[["self"]],[T]]],[11,R[18],E,E,137,[[[T],["self"]]]],[11,R[12],E,E,137,[[[U]],[R[13]]]],[11,R[14],E,E,137,[[],[R[13]]]],[11,R[15],E,E,137,[[["self"]],[T]]],[11,R[41],E,E,137,[[["self"]],[T]]],[11,R[19],E,E,137,[[["self"]],[R[42]]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,"display",E,E,138,[[],["str"]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[17],E,E,138,[[["self"]],[T]]],[11,R[18],E,E,138,[[[T],["self"]]]],[11,R[12],E,E,138,[[[U]],[R[13]]]],[11,R[14],E,E,138,[[],[R[13]]]],[11,R[15],E,E,138,[[["self"]],[T]]],[11,R[41],E,E,138,[[["self"]],[T]]],[11,R[19],E,E,138,[[["self"]],[R[42]]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,"display",E,E,139,[[],["str"]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[17],E,E,139,[[["self"]],[T]]],[11,R[18],E,E,139,[[[T],["self"]]]],[11,R[12],E,E,139,[[[U]],[R[13]]]],[11,R[14],E,E,139,[[],[R[13]]]],[11,R[15],E,E,139,[[["self"]],[T]]],[11,R[41],E,E,139,[[["self"]],[T]]],[11,R[19],E,E,139,[[["self"]],[R[42]]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,"display",E,E,140,[[],["str"]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[17],E,E,140,[[["self"]],[T]]],[11,R[18],E,E,140,[[[T],["self"]]]],[11,R[12],E,E,140,[[[U]],[R[13]]]],[11,R[14],E,E,140,[[],[R[13]]]],[11,R[15],E,E,140,[[["self"]],[T]]],[11,R[41],E,E,140,[[["self"]],[T]]],[11,R[19],E,E,140,[[["self"]],[R[42]]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,"display",E,E,141,[[],["str"]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[17],E,E,141,[[["self"]],[T]]],[11,R[18],E,E,141,[[[T],["self"]]]],[11,R[12],E,E,141,[[[U]],[R[13]]]],[11,R[14],E,E,141,[[],[R[13]]]],[11,R[15],E,E,141,[[["self"]],[T]]],[11,R[41],E,E,141,[[["self"]],[T]]],[11,R[19],E,E,141,[[["self"]],[R[42]]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,"display",E,E,142,[[],["str"]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[17],E,E,142,[[["self"]],[T]]],[11,R[18],E,E,142,[[[T],["self"]]]],[11,R[12],E,E,142,[[[U]],[R[13]]]],[11,R[14],E,E,142,[[],[R[13]]]],[11,R[15],E,E,142,[[["self"]],[T]]],[11,R[41],E,E,142,[[["self"]],[T]]],[11,R[19],E,E,142,[[["self"]],[R[42]]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,"display",E,E,143,[[],["str"]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[17],E,E,143,[[["self"]],[T]]],[11,R[18],E,E,143,[[[T],["self"]]]],[11,R[12],E,E,143,[[[U]],[R[13]]]],[11,R[14],E,E,143,[[],[R[13]]]],[11,R[15],E,E,143,[[["self"]],[T]]],[11,R[41],E,E,143,[[["self"]],[T]]],[11,R[19],E,E,143,[[["self"]],[R[42]]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,"display",E,E,144,[[],["str"]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[17],E,E,144,[[["self"]],[T]]],[11,R[18],E,E,144,[[[T],["self"]]]],[11,R[12],E,E,144,[[[U]],[R[13]]]],[11,R[14],E,E,144,[[],[R[13]]]],[11,R[15],E,E,144,[[["self"]],[T]]],[11,R[41],E,E,144,[[["self"]],[T]]],[11,R[19],E,E,144,[[["self"]],[R[42]]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,"display",E,E,145,[[],["str"]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[17],E,E,145,[[["self"]],[T]]],[11,R[18],E,E,145,[[[T],["self"]]]],[11,R[12],E,E,145,[[[U]],[R[13]]]],[11,R[14],E,E,145,[[],[R[13]]]],[11,R[15],E,E,145,[[["self"]],[T]]],[11,R[41],E,E,145,[[["self"]],[T]]],[11,R[19],E,E,145,[[["self"]],[R[42]]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,"display",E,E,146,[[],["str"]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[17],E,E,146,[[["self"]],[T]]],[11,R[18],E,E,146,[[[T],["self"]]]],[11,R[12],E,E,146,[[[U]],[R[13]]]],[11,R[14],E,E,146,[[],[R[13]]]],[11,R[15],E,E,146,[[["self"]],[T]]],[11,R[41],E,E,146,[[["self"]],[T]]],[11,R[19],E,E,146,[[["self"]],[R[42]]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,"display",E,E,147,[[],["str"]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[17],E,E,147,[[["self"]],[T]]],[11,R[18],E,E,147,[[[T],["self"]]]],[11,R[12],E,E,147,[[[U]],[R[13]]]],[11,R[14],E,E,147,[[],[R[13]]]],[11,R[15],E,E,147,[[["self"]],[T]]],[11,R[41],E,E,147,[[["self"]],[T]]],[11,R[19],E,E,147,[[["self"]],[R[42]]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,"display",E,E,148,[[],["str"]]],[11,"span",E,E,148,[[["self"]],["span"]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[17],E,E,148,[[["self"]],[T]]],[11,R[18],E,E,148,[[[T],["self"]]]],[11,R[12],E,E,148,[[[U]],[R[13]]]],[11,R[14],E,E,148,[[],[R[13]]]],[11,R[15],E,E,148,[[["self"]],[T]]],[11,R[41],E,E,148,[[["self"]],[T]]],[11,R[19],E,E,148,[[["self"]],[R[42]]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,"display",E,E,149,[[],["str"]]],[11,"span",E,E,149,[[["self"]],["span"]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[17],E,E,149,[[["self"]],[T]]],[11,R[18],E,E,149,[[[T],["self"]]]],[11,R[12],E,E,149,[[[U]],[R[13]]]],[11,R[14],E,E,149,[[],[R[13]]]],[11,R[15],E,E,149,[[["self"]],[T]]],[11,R[41],E,E,149,[[["self"]],[T]]],[11,R[19],E,E,149,[[["self"]],[R[42]]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,"display",E,E,150,[[],["str"]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[17],E,E,150,[[["self"]],[T]]],[11,R[18],E,E,150,[[[T],["self"]]]],[11,R[12],E,E,150,[[[U]],[R[13]]]],[11,R[14],E,E,150,[[],[R[13]]]],[11,R[15],E,E,150,[[["self"]],[T]]],[11,R[41],E,E,150,[[["self"]],[T]]],[11,R[19],E,E,150,[[["self"]],[R[42]]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,"display",E,E,151,[[],["str"]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[17],E,E,151,[[["self"]],[T]]],[11,R[18],E,E,151,[[[T],["self"]]]],[11,R[12],E,E,151,[[[U]],[R[13]]]],[11,R[14],E,E,151,[[],[R[13]]]],[11,R[15],E,E,151,[[["self"]],[T]]],[11,R[41],E,E,151,[[["self"]],[T]]],[11,R[19],E,E,151,[[["self"]],[R[42]]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,"display",E,E,152,[[],["str"]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[17],E,E,152,[[["self"]],[T]]],[11,R[18],E,E,152,[[[T],["self"]]]],[11,R[12],E,E,152,[[[U]],[R[13]]]],[11,R[14],E,E,152,[[],[R[13]]]],[11,R[15],E,E,152,[[["self"]],[T]]],[11,R[41],E,E,152,[[["self"]],[T]]],[11,R[19],E,E,152,[[["self"]],[R[42]]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,"display",E,E,153,[[],["str"]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[17],E,E,153,[[["self"]],[T]]],[11,R[18],E,E,153,[[[T],["self"]]]],[11,R[12],E,E,153,[[[U]],[R[13]]]],[11,R[14],E,E,153,[[],[R[13]]]],[11,R[15],E,E,153,[[["self"]],[T]]],[11,R[41],E,E,153,[[["self"]],[T]]],[11,R[19],E,E,153,[[["self"]],[R[42]]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,"display",E,E,154,[[],["str"]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[17],E,E,154,[[["self"]],[T]]],[11,R[18],E,E,154,[[[T],["self"]]]],[11,R[12],E,E,154,[[[U]],[R[13]]]],[11,R[14],E,E,154,[[],[R[13]]]],[11,R[15],E,E,154,[[["self"]],[T]]],[11,R[41],E,E,154,[[["self"]],[T]]],[11,R[19],E,E,154,[[["self"]],[R[42]]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,"display",E,E,155,[[],["str"]]],[11,"span",E,E,155,[[["self"]],["span"]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[17],E,E,155,[[["self"]],[T]]],[11,R[18],E,E,155,[[[T],["self"]]]],[11,R[12],E,E,155,[[[U]],[R[13]]]],[11,R[14],E,E,155,[[],[R[13]]]],[11,R[15],E,E,155,[[["self"]],[T]]],[11,R[41],E,E,155,[[["self"]],[T]]],[11,R[19],E,E,155,[[["self"]],[R[42]]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,"display",E,E,156,[[],["str"]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[17],E,E,156,[[["self"]],[T]]],[11,R[18],E,E,156,[[[T],["self"]]]],[11,R[12],E,E,156,[[[U]],[R[13]]]],[11,R[14],E,E,156,[[],[R[13]]]],[11,R[15],E,E,156,[[["self"]],[T]]],[11,R[41],E,E,156,[[["self"]],[T]]],[11,R[19],E,E,156,[[["self"]],[R[42]]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,"display",E,E,157,[[],["str"]]],[11,"span",E,E,157,[[["self"]],["span"]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[17],E,E,157,[[["self"]],[T]]],[11,R[18],E,E,157,[[[T],["self"]]]],[11,R[12],E,E,157,[[[U]],[R[13]]]],[11,R[14],E,E,157,[[],[R[13]]]],[11,R[15],E,E,157,[[["self"]],[T]]],[11,R[41],E,E,157,[[["self"]],[T]]],[11,R[19],E,E,157,[[["self"]],[R[42]]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,"display",E,E,158,[[],["str"]]],[11,"span",E,E,158,[[["self"]],["span"]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[17],E,E,158,[[["self"]],[T]]],[11,R[18],E,E,158,[[[T],["self"]]]],[11,R[12],E,E,158,[[[U]],[R[13]]]],[11,R[14],E,E,158,[[],[R[13]]]],[11,R[15],E,E,158,[[["self"]],[T]]],[11,R[41],E,E,158,[[["self"]],[T]]],[11,R[19],E,E,158,[[["self"]],[R[42]]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,"display",E,E,159,[[],["str"]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[17],E,E,159,[[["self"]],[T]]],[11,R[18],E,E,159,[[[T],["self"]]]],[11,R[12],E,E,159,[[[U]],[R[13]]]],[11,R[14],E,E,159,[[],[R[13]]]],[11,R[15],E,E,159,[[["self"]],[T]]],[11,R[41],E,E,159,[[["self"]],[T]]],[11,R[19],E,E,159,[[["self"]],[R[42]]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,"display",E,E,160,[[],["str"]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[17],E,E,160,[[["self"]],[T]]],[11,R[18],E,E,160,[[[T],["self"]]]],[11,R[12],E,E,160,[[[U]],[R[13]]]],[11,R[14],E,E,160,[[],[R[13]]]],[11,R[15],E,E,160,[[["self"]],[T]]],[11,R[41],E,E,160,[[["self"]],[T]]],[11,R[19],E,E,160,[[["self"]],[R[42]]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,"display",E,E,161,[[],["str"]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[17],E,E,161,[[["self"]],[T]]],[11,R[18],E,E,161,[[[T],["self"]]]],[11,R[12],E,E,161,[[[U]],[R[13]]]],[11,R[14],E,E,161,[[],[R[13]]]],[11,R[15],E,E,161,[[["self"]],[T]]],[11,R[41],E,E,161,[[["self"]],[T]]],[11,R[19],E,E,161,[[["self"]],[R[42]]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,"display",E,E,162,[[],["str"]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[17],E,E,162,[[["self"]],[T]]],[11,R[18],E,E,162,[[[T],["self"]]]],[11,R[12],E,E,162,[[[U]],[R[13]]]],[11,R[14],E,E,162,[[],[R[13]]]],[11,R[15],E,E,162,[[["self"]],[T]]],[11,R[41],E,E,162,[[["self"]],[T]]],[11,R[19],E,E,162,[[["self"]],[R[42]]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,"display",E,E,163,[[],["str"]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[17],E,E,163,[[["self"]],[T]]],[11,R[18],E,E,163,[[[T],["self"]]]],[11,R[12],E,E,163,[[[U]],[R[13]]]],[11,R[14],E,E,163,[[],[R[13]]]],[11,R[15],E,E,163,[[["self"]],[T]]],[11,R[41],E,E,163,[[["self"]],[T]]],[11,R[19],E,E,163,[[["self"]],[R[42]]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,"display",E,E,164,[[],["str"]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[17],E,E,164,[[["self"]],[T]]],[11,R[18],E,E,164,[[[T],["self"]]]],[11,R[12],E,E,164,[[[U]],[R[13]]]],[11,R[14],E,E,164,[[],[R[13]]]],[11,R[15],E,E,164,[[["self"]],[T]]],[11,R[41],E,E,164,[[["self"]],[T]]],[11,R[19],E,E,164,[[["self"]],[R[42]]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,"display",E,E,165,[[],["str"]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[17],E,E,165,[[["self"]],[T]]],[11,R[18],E,E,165,[[[T],["self"]]]],[11,R[12],E,E,165,[[[U]],[R[13]]]],[11,R[14],E,E,165,[[],[R[13]]]],[11,R[15],E,E,165,[[["self"]],[T]]],[11,R[41],E,E,165,[[["self"]],[T]]],[11,R[19],E,E,165,[[["self"]],[R[42]]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,"display",E,E,166,[[],["str"]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[17],E,E,166,[[["self"]],[T]]],[11,R[18],E,E,166,[[[T],["self"]]]],[11,R[12],E,E,166,[[[U]],[R[13]]]],[11,R[14],E,E,166,[[],[R[13]]]],[11,R[15],E,E,166,[[["self"]],[T]]],[11,R[41],E,E,166,[[["self"]],[T]]],[11,R[19],E,E,166,[[["self"]],[R[42]]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,"display",E,E,167,[[],["str"]]],[11,"span",E,E,167,[[["self"]],["span"]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[17],E,E,167,[[["self"]],[T]]],[11,R[18],E,E,167,[[[T],["self"]]]],[11,R[12],E,E,167,[[[U]],[R[13]]]],[11,R[14],E,E,167,[[],[R[13]]]],[11,R[15],E,E,167,[[["self"]],[T]]],[11,R[41],E,E,167,[[["self"]],[T]]],[11,R[19],E,E,167,[[["self"]],[R[42]]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"from",E,E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[17],E,E,168,[[["self"]],[T]]],[11,R[18],E,E,168,[[[T],["self"]]]],[11,R[12],E,E,168,[[[U]],[R[13]]]],[11,R[14],E,E,168,[[],[R[13]]]],[11,R[15],E,E,168,[[["self"]],[T]]],[11,R[41],E,E,168,[[["self"]],[T]]],[11,R[19],E,E,168,[[["self"]],[R[42]]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,"display",E,E,169,[[],["str"]]],[11,"span",E,E,169,[[["self"]],["span"]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[17],E,E,169,[[["self"]],[T]]],[11,R[18],E,E,169,[[[T],["self"]]]],[11,R[12],E,E,169,[[[U]],[R[13]]]],[11,R[14],E,E,169,[[],[R[13]]]],[11,R[15],E,E,169,[[["self"]],[T]]],[11,R[41],E,E,169,[[["self"]],[T]]],[11,R[19],E,E,169,[[["self"]],[R[42]]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,"display",E,E,170,[[],["str"]]],[11,"span",E,E,170,[[["self"]],["span"]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[17],E,E,170,[[["self"]],[T]]],[11,R[18],E,E,170,[[[T],["self"]]]],[11,R[12],E,E,170,[[[U]],[R[13]]]],[11,R[14],E,E,170,[[],[R[13]]]],[11,R[15],E,E,170,[[["self"]],[T]]],[11,R[41],E,E,170,[[["self"]],[T]]],[11,R[19],E,E,170,[[["self"]],[R[42]]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,"display",E,E,171,[[],["str"]]],[11,"span",E,E,171,[[["self"]],["span"]]],[11,"from",E,E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[17],E,E,171,[[["self"]],[T]]],[11,R[18],E,E,171,[[[T],["self"]]]],[11,R[12],E,E,171,[[[U]],[R[13]]]],[11,R[14],E,E,171,[[],[R[13]]]],[11,R[15],E,E,171,[[["self"]],[T]]],[11,R[41],E,E,171,[[["self"]],[T]]],[11,R[19],E,E,171,[[["self"]],[R[42]]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,"display",E,E,172,[[],["str"]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[17],E,E,172,[[["self"]],[T]]],[11,R[18],E,E,172,[[[T],["self"]]]],[11,R[12],E,E,172,[[[U]],[R[13]]]],[11,R[14],E,E,172,[[],[R[13]]]],[11,R[15],E,E,172,[[["self"]],[T]]],[11,R[41],E,E,172,[[["self"]],[T]]],[11,R[19],E,E,172,[[["self"]],[R[42]]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,"display",E,E,173,[[],["str"]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[17],E,E,173,[[["self"]],[T]]],[11,R[18],E,E,173,[[[T],["self"]]]],[11,R[12],E,E,173,[[[U]],[R[13]]]],[11,R[14],E,E,173,[[],[R[13]]]],[11,R[15],E,E,173,[[["self"]],[T]]],[11,R[41],E,E,173,[[["self"]],[T]]],[11,R[19],E,E,173,[[["self"]],[R[42]]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,"display",E,E,174,[[],["str"]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[17],E,E,174,[[["self"]],[T]]],[11,R[18],E,E,174,[[[T],["self"]]]],[11,R[12],E,E,174,[[[U]],[R[13]]]],[11,R[14],E,E,174,[[],[R[13]]]],[11,R[15],E,E,174,[[["self"]],[T]]],[11,R[41],E,E,174,[[["self"]],[T]]],[11,R[19],E,E,174,[[["self"]],[R[42]]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,"display",E,E,175,[[],["str"]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[17],E,E,175,[[["self"]],[T]]],[11,R[18],E,E,175,[[[T],["self"]]]],[11,R[12],E,E,175,[[[U]],[R[13]]]],[11,R[14],E,E,175,[[],[R[13]]]],[11,R[15],E,E,175,[[["self"]],[T]]],[11,R[41],E,E,175,[[["self"]],[T]]],[11,R[19],E,E,175,[[["self"]],[R[42]]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,"display",E,E,176,[[],["str"]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[17],E,E,176,[[["self"]],[T]]],[11,R[18],E,E,176,[[[T],["self"]]]],[11,R[12],E,E,176,[[[U]],[R[13]]]],[11,R[14],E,E,176,[[],[R[13]]]],[11,R[15],E,E,176,[[["self"]],[T]]],[11,R[41],E,E,176,[[["self"]],[T]]],[11,R[19],E,E,176,[[["self"]],[R[42]]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,"display",E,E,177,[[],["str"]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[17],E,E,177,[[["self"]],[T]]],[11,R[18],E,E,177,[[[T],["self"]]]],[11,R[12],E,E,177,[[[U]],[R[13]]]],[11,R[14],E,E,177,[[],[R[13]]]],[11,R[15],E,E,177,[[["self"]],[T]]],[11,R[41],E,E,177,[[["self"]],[T]]],[11,R[19],E,E,177,[[["self"]],[R[42]]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,"display",E,E,178,[[],["str"]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[17],E,E,178,[[["self"]],[T]]],[11,R[18],E,E,178,[[[T],["self"]]]],[11,R[12],E,E,178,[[[U]],[R[13]]]],[11,R[14],E,E,178,[[],[R[13]]]],[11,R[15],E,E,178,[[["self"]],[T]]],[11,R[41],E,E,178,[[["self"]],[T]]],[11,R[19],E,E,178,[[["self"]],[R[42]]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,"display",E,E,179,[[],["str"]]],[11,"span",E,E,179,[[["self"]],["span"]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[17],E,E,179,[[["self"]],[T]]],[11,R[18],E,E,179,[[[T],["self"]]]],[11,R[12],E,E,179,[[[U]],[R[13]]]],[11,R[14],E,E,179,[[],[R[13]]]],[11,R[15],E,E,179,[[["self"]],[T]]],[11,R[41],E,E,179,[[["self"]],[T]]],[11,R[19],E,E,179,[[["self"]],[R[42]]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"span",E,E,180,[[["self"]],["span"]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[17],E,E,180,[[["self"]],[T]]],[11,R[18],E,E,180,[[[T],["self"]]]],[11,R[12],E,E,180,[[[U]],[R[13]]]],[11,R[14],E,E,180,[[],[R[13]]]],[11,R[15],E,E,180,[[["self"]],[T]]],[11,R[41],E,E,180,[[["self"]],[T]]],[11,R[19],E,E,180,[[["self"]],[R[42]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[17],E,E,181,[[["self"]],[T]]],[11,R[18],E,E,181,[[[T],["self"]]]],[11,R[12],E,E,181,[[[U]],[R[13]]]],[11,R[14],E,E,181,[[],[R[13]]]],[11,R[15],E,E,181,[[["self"]],[T]]],[11,R[41],E,E,181,[[["self"]],[T]]],[11,R[19],E,E,181,[[["self"]],[R[42]]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"span",E,E,182,[[["self"]],["span"]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[17],E,E,182,[[["self"]],[T]]],[11,R[18],E,E,182,[[[T],["self"]]]],[11,R[12],E,E,182,[[[U]],[R[13]]]],[11,R[14],E,E,182,[[],[R[13]]]],[11,R[15],E,E,182,[[["self"]],[T]]],[11,R[41],E,E,182,[[["self"]],[T]]],[11,R[19],E,E,182,[[["self"]],[R[42]]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"span",E,E,183,[[["self"]],["span"]]],[11,"from",E,E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[17],E,E,183,[[["self"]],[T]]],[11,R[18],E,E,183,[[[T],["self"]]]],[11,R[12],E,E,183,[[[U]],[R[13]]]],[11,R[14],E,E,183,[[],[R[13]]]],[11,R[15],E,E,183,[[["self"]],[T]]],[11,R[41],E,E,183,[[["self"]],[T]]],[11,R[19],E,E,183,[[["self"]],[R[42]]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"span",E,E,184,[[["self"]],["span"]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[17],E,E,184,[[["self"]],[T]]],[11,R[18],E,E,184,[[[T],["self"]]]],[11,R[12],E,E,184,[[[U]],[R[13]]]],[11,R[14],E,E,184,[[],[R[13]]]],[11,R[15],E,E,184,[[["self"]],[T]]],[11,R[41],E,E,184,[[["self"]],[T]]],[11,R[19],E,E,184,[[["self"]],[R[42]]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"from",E,E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[17],E,E,185,[[["self"]],[T]]],[11,R[18],E,E,185,[[[T],["self"]]]],[11,R[12],E,E,185,[[[U]],[R[13]]]],[11,R[14],E,E,185,[[],[R[13]]]],[11,R[15],E,E,185,[[["self"]],[T]]],[11,R[41],E,E,185,[[["self"]],[T]]],[11,R[19],E,E,185,[[["self"]],[R[42]]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[17],E,E,186,[[["self"]],[T]]],[11,R[18],E,E,186,[[[T],["self"]]]],[11,R[12],E,E,186,[[[U]],[R[13]]]],[11,R[14],E,E,186,[[],[R[13]]]],[11,R[15],E,E,186,[[["self"]],[T]]],[11,R[41],E,E,186,[[["self"]],[T]]],[11,R[19],E,E,186,[[["self"]],[R[42]]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[17],E,E,187,[[["self"]],[T]]],[11,R[18],E,E,187,[[[T],["self"]]]],[11,R[12],E,E,187,[[[U]],[R[13]]]],[11,R[14],E,E,187,[[],[R[13]]]],[11,R[15],E,E,187,[[["self"]],[T]]],[11,R[41],E,E,187,[[["self"]],[T]]],[11,R[19],E,E,187,[[["self"]],[R[42]]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"from",E,E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[17],E,E,188,[[["self"]],[T]]],[11,R[18],E,E,188,[[[T],["self"]]]],[11,R[12],E,E,188,[[[U]],[R[13]]]],[11,R[14],E,E,188,[[],[R[13]]]],[11,R[15],E,E,188,[[["self"]],[T]]],[11,R[41],E,E,188,[[["self"]],[T]]],[11,R[19],E,E,188,[[["self"]],[R[42]]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"from",E,E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[17],E,E,189,[[["self"]],[T]]],[11,R[18],E,E,189,[[[T],["self"]]]],[11,R[12],E,E,189,[[[U]],[R[13]]]],[11,R[14],E,E,189,[[],[R[13]]]],[11,R[15],E,E,189,[[["self"]],[T]]],[11,R[41],E,E,189,[[["self"]],[T]]],[11,R[19],E,E,189,[[["self"]],[R[42]]]],[11,"from",R[1939],E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[12],E,E,197,[[[U]],[R[13]]]],[11,R[14],E,E,197,[[],[R[13]]]],[11,R[15],E,E,197,[[["self"]],[T]]],[11,R[41],E,E,197,[[["self"]],[T]]],[11,R[19],E,E,197,[[["self"]],[R[42]]]],[11,"from",E,E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[17],E,E,198,[[["self"]],[T]]],[11,R[18],E,E,198,[[[T],["self"]]]],[11,R[12],E,E,198,[[[U]],[R[13]]]],[11,R[14],E,E,198,[[],[R[13]]]],[11,R[15],E,E,198,[[["self"]],[T]]],[11,R[41],E,E,198,[[["self"]],[T]]],[11,R[19],E,E,198,[[["self"]],[R[42]]]],[11,"span",R[1940],E,201,[[["self"]],["span"]]],[11,"from",E,E,201,[[[T]],[T]]],[11,"into",E,E,201,[[],[U]]],[11,R[43],E,E,201,[[],["i"]]],[11,R[17],E,E,201,[[["self"]],[T]]],[11,R[18],E,E,201,[[[T],["self"]]]],[11,R[12],E,E,201,[[[U]],[R[13]]]],[11,R[14],E,E,201,[[],[R[13]]]],[11,R[15],E,E,201,[[["self"]],[T]]],[11,R[41],E,E,201,[[["self"]],[T]]],[11,R[19],E,E,201,[[["self"]],[R[42]]]],[11,"from",E,E,243,[[[T]],[T]]],[11,"into",E,E,243,[[],[U]]],[11,R[43],E,E,243,[[],["i"]]],[11,R[17],E,E,243,[[["self"]],[T]]],[11,R[18],E,E,243,[[[T],["self"]]]],[11,R[12],E,E,243,[[[U]],[R[13]]]],[11,R[14],E,E,243,[[],[R[13]]]],[11,R[15],E,E,243,[[["self"]],[T]]],[11,R[41],E,E,243,[[["self"]],[T]]],[11,R[19],E,E,243,[[["self"]],[R[42]]]],[11,"from",E,E,244,[[[T]],[T]]],[11,"into",E,E,244,[[],[U]]],[11,R[43],E,E,244,[[],["i"]]],[11,R[12],E,E,244,[[[U]],[R[13]]]],[11,R[14],E,E,244,[[],[R[13]]]],[11,R[15],E,E,244,[[["self"]],[T]]],[11,R[41],E,E,244,[[["self"]],[T]]],[11,R[19],E,E,244,[[["self"]],[R[42]]]],[11,"from",E,E,245,[[[T]],[T]]],[11,"into",E,E,245,[[],[U]]],[11,R[43],E,E,245,[[],["i"]]],[11,R[17],E,E,245,[[["self"]],[T]]],[11,R[18],E,E,245,[[[T],["self"]]]],[11,R[12],E,E,245,[[[U]],[R[13]]]],[11,R[14],E,E,245,[[],[R[13]]]],[11,R[15],E,E,245,[[["self"]],[T]]],[11,R[41],E,E,245,[[["self"]],[T]]],[11,R[19],E,E,245,[[["self"]],[R[42]]]],[11,"from",E,E,246,[[[T]],[T]]],[11,"into",E,E,246,[[],[U]]],[11,R[43],E,E,246,[[],["i"]]],[11,R[17],E,E,246,[[["self"]],[T]]],[11,R[18],E,E,246,[[[T],["self"]]]],[11,R[12],E,E,246,[[[U]],[R[13]]]],[11,R[14],E,E,246,[[],[R[13]]]],[11,R[15],E,E,246,[[["self"]],[T]]],[11,R[41],E,E,246,[[["self"]],[T]]],[11,R[19],E,E,246,[[["self"]],[R[42]]]],[11,"from",E,E,247,[[[T]],[T]]],[11,"into",E,E,247,[[],[U]]],[11,R[43],E,E,247,[[],["i"]]],[11,R[17],E,E,247,[[["self"]],[T]]],[11,R[18],E,E,247,[[[T],["self"]]]],[11,R[12],E,E,247,[[[U]],[R[13]]]],[11,R[14],E,E,247,[[],[R[13]]]],[11,R[15],E,E,247,[[["self"]],[T]]],[11,R[41],E,E,247,[[["self"]],[T]]],[11,R[19],E,E,247,[[["self"]],[R[42]]]],[11,"from",E,E,248,[[[T]],[T]]],[11,"into",E,E,248,[[],[U]]],[11,R[43],E,E,248,[[],["i"]]],[11,R[12],E,E,248,[[[U]],[R[13]]]],[11,R[14],E,E,248,[[],[R[13]]]],[11,R[15],E,E,248,[[["self"]],[T]]],[11,R[41],E,E,248,[[["self"]],[T]]],[11,R[19],E,E,248,[[["self"]],[R[42]]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"from",E,E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[17],E,E,200,[[["self"]],[T]]],[11,R[18],E,E,200,[[[T],["self"]]]],[11,R[12],E,E,200,[[[U]],[R[13]]]],[11,R[14],E,E,200,[[],[R[13]]]],[11,R[15],E,E,200,[[["self"]],[T]]],[11,R[41],E,E,200,[[["self"]],[T]]],[11,R[19],E,E,200,[[["self"]],[R[42]]]],[11,"from",R[1941],E,249,[[[T]],[T]]],[11,"into",E,E,249,[[],[U]]],[11,R[12],E,E,249,[[[U]],[R[13]]]],[11,R[14],E,E,249,[[],[R[13]]]],[11,R[15],E,E,249,[[["self"]],[T]]],[11,R[41],E,E,249,[[["self"]],[T]]],[11,R[19],E,E,249,[[["self"]],[R[42]]]],[11,R[62],E,E,208,[[["self"]],["string"]]],[11,"from",E,E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[12],E,E,208,[[[U]],[R[13]]]],[11,R[14],E,E,208,[[],[R[13]]]],[11,R[15],E,E,208,[[["self"]],[T]]],[11,R[41],E,E,208,[[["self"]],[T]]],[11,R[19],E,E,208,[[["self"]],[R[42]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[17],E,E,207,[[["self"]],[T]]],[11,R[18],E,E,207,[[[T],["self"]]]],[11,R[12],E,E,207,[[[U]],[R[13]]]],[11,R[14],E,E,207,[[],[R[13]]]],[11,R[15],E,E,207,[[["self"]],[T]]],[11,R[41],E,E,207,[[["self"]],[T]]],[11,R[19],E,E,207,[[["self"]],[R[42]]]],[11,"cmp","syn",E,210,[[["self"],["ident"]],[R[47]]]],[11,"hash",E,E,210,[[["self"],["h"]]]],[11,"fmt",E,E,210,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"eq",E,E,210,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,210,[[[T],["self"]],["bool"]]],[11,R[63],E,E,210,[[["self"],["ident"]],[[R[45],[R[47]]],[R[47]]]]],[11,"fmt",E,E,210,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,210,[[["self"]],["ident"]]],[11,R[2001],E,E,210,[[["self"],[R[543]]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,"display",E,E,31,[[],["str"]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,"display",E,E,76,[[],["str"]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,"display",E,E,32,[[],["str"]]],[11,"peek",R[1942],E,87,[[["cursor"]],["bool"]]],[11,"display",E,E,87,[[],["str"]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,"display",E,E,88,[[],["str"]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,"display",E,E,89,[[],["str"]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,"display",E,E,90,[[],["str"]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,"display",E,E,91,[[],["str"]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,"display",E,E,92,[[],["str"]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,"display",E,E,93,[[],["str"]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,"display",E,E,94,[[],["str"]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,"display",E,E,95,[[],["str"]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,"display",E,E,96,[[],["str"]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,"display",E,E,97,[[],["str"]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,"display",E,E,98,[[],["str"]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,"display",E,E,99,[[],["str"]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,"display",E,E,103,[[],["str"]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,"display",E,E,104,[[],["str"]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,"display",E,E,105,[[],["str"]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,"display",E,E,106,[[],["str"]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,"display",E,E,107,[[],["str"]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,"display",E,E,108,[[],["str"]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,"display",E,E,109,[[],["str"]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,"display",E,E,110,[[],["str"]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,"display",E,E,111,[[],["str"]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,"display",E,E,112,[[],["str"]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,"display",E,E,113,[[],["str"]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,"display",E,E,114,[[],["str"]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,"display",E,E,115,[[],["str"]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,"display",E,E,116,[[],["str"]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,"display",E,E,117,[[],["str"]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,"display",E,E,118,[[],["str"]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,"display",E,E,119,[[],["str"]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,"display",E,E,120,[[],["str"]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,"display",E,E,121,[[],["str"]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,"display",E,E,122,[[],["str"]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,"display",E,E,123,[[],["str"]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,"display",E,E,124,[[],["str"]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,"display",E,E,125,[[],["str"]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,"display",E,E,128,[[],["str"]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,"display",E,E,129,[[],["str"]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,"display",E,E,130,[[],["str"]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,"display",E,E,131,[[],["str"]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,"display",E,E,132,[[],["str"]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,"display",E,E,133,[[],["str"]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,"display",E,E,134,[[],["str"]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,"display",E,E,135,[[],["str"]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,"display",E,E,136,[[],["str"]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,"display",E,E,137,[[],["str"]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,"display",E,E,138,[[],["str"]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,"display",E,E,139,[[],["str"]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,"display",E,E,140,[[],["str"]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,"display",E,E,141,[[],["str"]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,"display",E,E,142,[[],["str"]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,"display",E,E,143,[[],["str"]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,"display",E,E,144,[[],["str"]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,"display",E,E,145,[[],["str"]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,"display",E,E,146,[[],["str"]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,"display",E,E,147,[[],["str"]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,"display",E,E,148,[[],["str"]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,"display",E,E,149,[[],["str"]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,"display",E,E,150,[[],["str"]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,"display",E,E,151,[[],["str"]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,"display",E,E,152,[[],["str"]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,"display",E,E,153,[[],["str"]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,"display",E,E,154,[[],["str"]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,"display",E,E,155,[[],["str"]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,"display",E,E,156,[[],["str"]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,"display",E,E,157,[[],["str"]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,"display",E,E,158,[[],["str"]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,"display",E,E,159,[[],["str"]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,"display",E,E,160,[[],["str"]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,"display",E,E,161,[[],["str"]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,"display",E,E,162,[[],["str"]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,"display",E,E,163,[[],["str"]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,"display",E,E,164,[[],["str"]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,"display",E,E,165,[[],["str"]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,"display",E,E,166,[[],["str"]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,"display",E,E,167,[[],["str"]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,"display",E,E,169,[[],["str"]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,"display",E,E,170,[[],["str"]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,"display",E,E,171,[[],["str"]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,"display",E,E,172,[[],["str"]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,"display",E,E,173,[[],["str"]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,"display",E,E,174,[[],["str"]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,"display",E,E,175,[[],["str"]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,"display",E,E,176,[[],["str"]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,"display",E,E,177,[[],["str"]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,"display",E,E,178,[[],["str"]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,"display",E,E,179,[[],["str"]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"peek","syn",E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"parse_any",E,E,210,[[[R[1806]]],[R[13]]]],[11,"unraw",E,E,210,[[["self"]],["ident"]]],[11,"advance_to",R[1941],E,208,[[["self"]]]],[11,"parse",R[1942],E,87,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,88,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,89,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,90,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,91,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,92,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,93,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,94,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,95,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,96,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,97,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,98,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,99,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,100,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,101,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,102,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,103,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,104,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,105,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,106,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,107,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,108,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,109,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,110,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,111,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,112,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,113,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,114,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,115,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,116,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,117,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,118,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,119,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,120,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,121,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,122,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,123,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,124,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,125,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,126,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,127,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,128,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,129,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,130,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,131,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,132,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,133,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,134,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,135,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,136,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,137,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,138,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,139,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,140,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,141,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,142,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,143,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,144,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,145,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,146,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,147,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,148,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,149,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,150,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,151,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,152,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,153,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,154,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,155,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,156,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,157,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,158,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,159,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,160,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,161,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,162,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,163,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,164,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,165,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,166,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,167,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,168,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,169,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,170,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,171,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,172,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,173,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,174,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,175,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,176,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,177,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,178,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,179,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,180,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,181,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,182,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,183,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,184,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,185,[[[R[1806]]],[R[13]]]],[11,"parse","syn",E,210,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,64,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,1,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,2,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,65,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,6,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,4,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,5,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,67,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,68,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,15,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,17,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,69,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,20,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,23,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,70,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,24,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,21,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,29,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,72,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,28,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,71,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,22,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,30,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,73,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,31,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,76,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,191,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,192,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,193,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,194,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,195,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,196,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,32,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,34,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,38,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,80,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,81,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,84,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,52,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,41,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,50,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,51,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,42,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,47,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,45,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,54,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,46,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,49,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,83,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,53,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,44,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,43,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,48,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,40,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,82,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,39,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,60,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,85,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,56,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,59,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,61,[[[R[1806]]],[R[13]]]],[11,"parse",E,E,57,[[[R[1806]]],[R[13]]]],[11,"extend",R[1940],E,201,[[["self"],[R[44]]]]],[11,"extend",E,E,201,[[["self"],[R[44]]]]],[11,R[77],R[1942],E,87,[[],["self"]]],[11,R[77],E,E,88,[[],["self"]]],[11,R[77],E,E,89,[[],["self"]]],[11,R[77],E,E,90,[[],["self"]]],[11,R[77],E,E,91,[[],["self"]]],[11,R[77],E,E,92,[[],["self"]]],[11,R[77],E,E,93,[[],["self"]]],[11,R[77],E,E,94,[[],["self"]]],[11,R[77],E,E,95,[[],["self"]]],[11,R[77],E,E,96,[[],["self"]]],[11,R[77],E,E,97,[[],["self"]]],[11,R[77],E,E,98,[[],["self"]]],[11,R[77],E,E,99,[[],["self"]]],[11,R[77],E,E,100,[[],["self"]]],[11,R[77],E,E,101,[[],["self"]]],[11,R[77],E,E,102,[[],["self"]]],[11,R[77],E,E,103,[[],["self"]]],[11,R[77],E,E,104,[[],["self"]]],[11,R[77],E,E,105,[[],["self"]]],[11,R[77],E,E,106,[[],["self"]]],[11,R[77],E,E,107,[[],["self"]]],[11,R[77],E,E,108,[[],["self"]]],[11,R[77],E,E,109,[[],["self"]]],[11,R[77],E,E,110,[[],["self"]]],[11,R[77],E,E,111,[[],["self"]]],[11,R[77],E,E,112,[[],["self"]]],[11,R[77],E,E,113,[[],["self"]]],[11,R[77],E,E,114,[[],["self"]]],[11,R[77],E,E,115,[[],["self"]]],[11,R[77],E,E,116,[[],["self"]]],[11,R[77],E,E,117,[[],["self"]]],[11,R[77],E,E,118,[[],["self"]]],[11,R[77],E,E,119,[[],["self"]]],[11,R[77],E,E,120,[[],["self"]]],[11,R[77],E,E,121,[[],["self"]]],[11,R[77],E,E,122,[[],["self"]]],[11,R[77],E,E,123,[[],["self"]]],[11,R[77],E,E,124,[[],["self"]]],[11,R[77],E,E,125,[[],["self"]]],[11,R[77],E,E,126,[[],["self"]]],[11,R[77],E,E,127,[[],["self"]]],[11,R[77],E,E,128,[[],["self"]]],[11,R[77],E,E,129,[[],["self"]]],[11,R[77],E,E,130,[[],["self"]]],[11,R[77],E,E,131,[[],["self"]]],[11,R[77],E,E,132,[[],["self"]]],[11,R[77],E,E,133,[[],["self"]]],[11,R[77],E,E,134,[[],["self"]]],[11,R[77],E,E,135,[[],["self"]]],[11,R[77],E,E,136,[[],["self"]]],[11,R[77],E,E,137,[[],["self"]]],[11,R[77],E,E,138,[[],["self"]]],[11,R[77],E,E,139,[[],["self"]]],[11,R[77],E,E,140,[[],["self"]]],[11,R[77],E,E,141,[[],["self"]]],[11,R[77],E,E,142,[[],["self"]]],[11,R[77],E,E,143,[[],["self"]]],[11,R[77],E,E,144,[[],["self"]]],[11,R[77],E,E,145,[[],["self"]]],[11,R[77],E,E,146,[[],["self"]]],[11,R[77],E,E,147,[[],["self"]]],[11,R[77],E,E,148,[[],["self"]]],[11,R[77],E,E,149,[[],["self"]]],[11,R[77],E,E,150,[[],["self"]]],[11,R[77],E,E,151,[[],["self"]]],[11,R[77],E,E,152,[[],["self"]]],[11,R[77],E,E,153,[[],["self"]]],[11,R[77],E,E,154,[[],["self"]]],[11,R[77],E,E,155,[[],["self"]]],[11,R[77],E,E,156,[[],["self"]]],[11,R[77],E,E,157,[[],["self"]]],[11,R[77],E,E,158,[[],["self"]]],[11,R[77],E,E,159,[[],["self"]]],[11,R[77],E,E,160,[[],["self"]]],[11,R[77],E,E,161,[[],["self"]]],[11,R[77],E,E,162,[[],["self"]]],[11,R[77],E,E,163,[[],["self"]]],[11,R[77],E,E,164,[[],["self"]]],[11,R[77],E,E,165,[[],["self"]]],[11,R[77],E,E,166,[[],["self"]]],[11,R[77],E,E,167,[[],["self"]]],[11,R[77],E,E,168,[[],["self"]]],[11,R[77],E,E,169,[[],["self"]]],[11,R[77],E,E,170,[[],["self"]]],[11,R[77],E,E,171,[[],["self"]]],[11,R[77],E,E,172,[[],["self"]]],[11,R[77],E,E,173,[[],["self"]]],[11,R[77],E,E,174,[[],["self"]]],[11,R[77],E,E,175,[[],["self"]]],[11,R[77],E,E,176,[[],["self"]]],[11,R[77],E,E,177,[[],["self"]]],[11,R[77],E,E,178,[[],["self"]]],[11,R[77],E,E,179,[[],["self"]]],[11,R[77],E,E,180,[[],["self"]]],[11,R[77],E,E,181,[[],["self"]]],[11,R[77],E,E,182,[[],["self"]]],[11,R[77],E,E,183,[[],["self"]]],[11,R[77],E,E,184,[[],["self"]]],[11,R[77],E,E,185,[[],["self"]]],[11,R[77],E,E,186,[[],["self"]]],[11,R[77],E,E,187,[[],["self"]]],[11,R[77],E,E,188,[[],["self"]]],[11,R[77],E,E,189,[[],["self"]]],[11,R[77],"syn",E,23,[[],[R[1995]]]],[11,R[77],E,E,21,[[],[R[1828]]]],[11,R[77],E,E,86,[[],["self"]]],[11,R[77],R[1940],E,201,[[],["self"]]],[11,"next",E,E,243,[[["self"]],[R[45]]]],[11,"next",E,E,244,[[["self"]],[R[45]]]],[11,"next",E,E,245,[[["self"]],[R[45]]]],[11,"next",E,E,246,[[["self"]],[R[45]]]],[11,"next",E,E,247,[[["self"]],[R[45]]]],[11,"next",E,E,248,[[["self"]],[R[45]]]],[11,"clone",R[1942],E,87,[[["self"]],[R[1976]]]],[11,"clone",E,E,88,[[["self"]],["abstract"]]],[11,"clone",E,E,89,[[["self"]],["as"]]],[11,"clone",E,E,90,[[["self"]],["async"]]],[11,"clone",E,E,91,[[["self"]],["auto"]]],[11,"clone",E,E,92,[[["self"]],["become"]]],[11,"clone",E,E,93,[[["self"]],["box"]]],[11,"clone",E,E,94,[[["self"]],["break"]]],[11,"clone",E,E,95,[[["self"]],["const"]]],[11,"clone",E,E,96,[[["self"]],["continue"]]],[11,"clone",E,E,97,[[["self"]],["crate"]]],[11,"clone",E,E,98,[[["self"]],[R[77]]]],[11,"clone",E,E,99,[[["self"]],["do"]]],[11,"clone",E,E,100,[[["self"]],["dyn"]]],[11,"clone",E,E,101,[[["self"]],["else"]]],[11,"clone",E,E,102,[[["self"]],["enum"]]],[11,"clone",E,E,103,[[["self"]],[R[1977]]]],[11,"clone",E,E,104,[[["self"]],["extern"]]],[11,"clone",E,E,105,[[["self"]],["final"]]],[11,"clone",E,E,106,[[["self"]],["fn"]]],[11,"clone",E,E,107,[[["self"]],["for"]]],[11,"clone",E,E,108,[[["self"]],["if"]]],[11,"clone",E,E,109,[[["self"]],["impl"]]],[11,"clone",E,E,110,[[["self"]],["in"]]],[11,"clone",E,E,111,[[["self"]],["let"]]],[11,"clone",E,E,112,[[["self"]],["loop"]]],[11,"clone",E,E,113,[[["self"]],["macro"]]],[11,"clone",E,E,114,[[["self"]],["match"]]],[11,"clone",E,E,115,[[["self"]],["mod"]]],[11,"clone",E,E,116,[[["self"]],["move"]]],[11,"clone",E,E,117,[[["self"]],["mut"]]],[11,"clone",E,E,118,[[["self"]],["override"]]],[11,"clone",E,E,119,[[["self"]],["priv"]]],[11,"clone",E,E,120,[[["self"]],["pub"]]],[11,"clone",E,E,121,[[["self"]],["ref"]]],[11,"clone",E,E,122,[[["self"]],["return"]]],[11,"clone",E,E,123,[[["self"]],["selftype"]]],[11,"clone",E,E,124,[[["self"]],["selfvalue"]]],[11,"clone",E,E,125,[[["self"]],["static"]]],[11,"clone",E,E,126,[[["self"]],["struct"]]],[11,"clone",E,E,127,[[["self"]],["super"]]],[11,"clone",E,E,128,[[["self"]],["trait"]]],[11,"clone",E,E,129,[[["self"]],["try"]]],[11,"clone",E,E,130,[[["self"]],["type"]]],[11,"clone",E,E,131,[[["self"]],["typeof"]]],[11,"clone",E,E,132,[[["self"]],["union"]]],[11,"clone",E,E,133,[[["self"]],["unsafe"]]],[11,"clone",E,E,134,[[["self"]],["unsized"]]],[11,"clone",E,E,135,[[["self"]],["use"]]],[11,"clone",E,E,136,[[["self"]],["virtual"]]],[11,"clone",E,E,137,[[["self"]],["where"]]],[11,"clone",E,E,138,[[["self"]],["while"]]],[11,"clone",E,E,139,[[["self"]],["yield"]]],[11,"clone",E,E,140,[[["self"]],["add"]]],[11,"clone",E,E,141,[[["self"]],["addeq"]]],[11,"clone",E,E,142,[[["self"]],["and"]]],[11,"clone",E,E,143,[[["self"]],["andand"]]],[11,"clone",E,E,144,[[["self"]],["andeq"]]],[11,"clone",E,E,145,[[["self"]],["at"]]],[11,"clone",E,E,146,[[["self"]],["bang"]]],[11,"clone",E,E,147,[[["self"]],["caret"]]],[11,"clone",E,E,148,[[["self"]],["careteq"]]],[11,"clone",E,E,149,[[["self"]],["colon"]]],[11,"clone",E,E,150,[[["self"]],["colon2"]]],[11,"clone",E,E,151,[[["self"]],["comma"]]],[11,"clone",E,E,152,[[["self"]],["div"]]],[11,"clone",E,E,153,[[["self"]],["diveq"]]],[11,"clone",E,E,154,[[["self"]],["dollar"]]],[11,"clone",E,E,155,[[["self"]],["dot"]]],[11,"clone",E,E,156,[[["self"]],["dot2"]]],[11,"clone",E,E,157,[[["self"]],["dot3"]]],[11,"clone",E,E,158,[[["self"]],["dotdoteq"]]],[11,"clone",E,E,159,[[["self"]],["eq"]]],[11,"clone",E,E,160,[[["self"]],["eqeq"]]],[11,"clone",E,E,161,[[["self"]],["ge"]]],[11,"clone",E,E,162,[[["self"]],["gt"]]],[11,"clone",E,E,163,[[["self"]],["le"]]],[11,"clone",E,E,164,[[["self"]],["lt"]]],[11,"clone",E,E,165,[[["self"]],["muleq"]]],[11,"clone",E,E,166,[[["self"]],["ne"]]],[11,"clone",E,E,167,[[["self"]],["or"]]],[11,"clone",E,E,168,[[["self"]],["oreq"]]],[11,"clone",E,E,169,[[["self"]],["oror"]]],[11,"clone",E,E,170,[[["self"]],["pound"]]],[11,"clone",E,E,171,[[["self"]],["question"]]],[11,"clone",E,E,172,[[["self"]],["rarrow"]]],[11,"clone",E,E,173,[[["self"]],["larrow"]]],[11,"clone",E,E,174,[[["self"]],["rem"]]],[11,"clone",E,E,175,[[["self"]],["remeq"]]],[11,"clone",E,E,176,[[["self"]],["fatarrow"]]],[11,"clone",E,E,177,[[["self"]],["semi"]]],[11,"clone",E,E,178,[[["self"]],["shl"]]],[11,"clone",E,E,179,[[["self"]],["shleq"]]],[11,"clone",E,E,180,[[["self"]],["shr"]]],[11,"clone",E,E,181,[[["self"]],["shreq"]]],[11,"clone",E,E,182,[[["self"]],["star"]]],[11,"clone",E,E,183,[[["self"]],["sub"]]],[11,"clone",E,E,184,[[["self"]],["subeq"]]],[11,"clone",E,E,185,[[["self"]],["tilde"]]],[11,"clone",E,E,186,[[["self"]],["brace"]]],[11,"clone",E,E,187,[[["self"]],["bracket"]]],[11,"clone",E,E,188,[[["self"]],["paren"]]],[11,"clone",E,E,189,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],[R[2005]]]],[11,"clone",E,E,63,[[["self"]],[R[1978]]]],[11,"clone",E,E,64,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],[R[2013]]]],[11,"clone",E,E,2,[[["self"]],[R[1878]]]],[11,"clone",E,E,65,[[["self"]],[R[1943]]]],[11,"clone",E,E,6,[[["self"]],["variant"]]],[11,"clone",E,E,66,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[1850]]]],[11,"clone",E,E,5,[[["self"]],[R[1852]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,67,[[["self"]],[R[1944]]]],[11,"clone",E,E,8,[[["self"]],[R[1953]]]],[11,"clone",E,E,7,[[["self"]],[R[2017]]]],[11,"clone",E,E,9,[[["self"]],[R[1924]]]],[11,"clone",E,E,68,[[["self"]],["expr"]]],[11,"clone",E,E,216,[[["self"]],["exprbox"]]],[11,"clone",E,E,223,[[["self"]],[R[1954]]]],[11,"clone",E,E,211,[[["self"]],[R[1979]]]],[11,"clone",E,E,11,[[["self"]],[R[2009]]]],[11,"clone",E,E,228,[[["self"]],[R[1955]]]],[11,"clone",E,E,236,[[["self"]],[R[1980]]]],[11,"clone",E,E,10,[[["self"]],[R[1945]]]],[11,"clone",E,E,18,[[["self"]],[R[1956]]]],[11,"clone",E,E,15,[[["self"]],["exprlit"]]],[11,"clone",E,E,12,[[["self"]],[R[2010]]]],[11,"clone",E,E,237,[[["self"]],["exprtype"]]],[11,"clone",E,E,224,[[["self"]],["exprlet"]]],[11,"clone",E,E,222,[[["self"]],["exprif"]]],[11,"clone",E,E,239,[[["self"]],[R[1981]]]],[11,"clone",E,E,220,[[["self"]],[R[1957]]]],[11,"clone",E,E,225,[[["self"]],["exprloop"]]],[11,"clone",E,E,227,[[["self"]],[R[1982]]]],[11,"clone",E,E,218,[[["self"]],[R[1958]]]],[11,"clone",E,E,238,[[["self"]],[R[1983]]]],[11,"clone",E,E,215,[[["self"]],[R[1984]]]],[11,"clone",E,E,212,[[["self"]],[R[1985]]]],[11,"clone",E,E,213,[[["self"]],[R[1959]]]],[11,"clone",E,E,13,[[["self"]],[R[1960]]]],[11,"clone",E,E,14,[[["self"]],[R[1961]]]],[11,"clone",E,E,229,[[["self"]],[R[1986]]]],[11,"clone",E,E,17,[[["self"]],[R[2011]]]],[11,"clone",E,E,230,[[["self"]],[R[1962]]]],[11,"clone",E,E,217,[[["self"]],[R[1987]]]],[11,"clone",E,E,219,[[["self"]],[R[1963]]]],[11,"clone",E,E,232,[[["self"]],[R[1988]]]],[11,"clone",E,E,226,[[["self"]],[R[1989]]]],[11,"clone",E,E,233,[[["self"]],[R[1990]]]],[11,"clone",E,E,231,[[["self"]],[R[1991]]]],[11,"clone",E,E,16,[[["self"]],[R[1964]]]],[11,"clone",E,E,221,[[["self"]],[R[1992]]]],[11,"clone",E,E,234,[[["self"]],["exprtry"]]],[11,"clone",E,E,214,[[["self"]],[R[1993]]]],[11,"clone",E,E,235,[[["self"]],[R[1965]]]],[11,"clone",E,E,240,[[["self"]],[R[1994]]]],[11,"clone",E,E,19,[[["self"]],[R[1846]]]],[11,"clone",E,E,69,[[["self"]],["member"]]],[11,"clone",E,E,20,[[["self"]],["index"]]],[11,"clone",E,E,23,[[["self"]],[R[1995]]]],[11,"clone",E,E,70,[[["self"]],[R[1856]]]],[11,"clone",E,E,29,[[["self"]],[R[1966]]]],[11,"clone",E,E,24,[[["self"]],[R[1862]]]],[11,"clone",E,E,22,[[["self"]],[R[1946]]]],[11,"clone",E,E,241,[[["self"]],[R[1996]]]],[11,"clone",E,E,190,[[["self"]],[R[1997]]]],[11,"clone",E,E,242,[[["self"]],[R[1998]]]],[11,"clone",E,E,21,[[["self"]],[R[1828]]]],[11,"clone",E,E,72,[[["self"]],[R[1907]]]],[11,"clone",E,E,28,[[["self"]],[R[1947]]]],[11,"clone",E,E,71,[[["self"]],[R[1896]]]],[11,"clone",E,E,30,[[["self"]],[R[1816]]]],[11,"clone",E,E,73,[[["self"]],[R[1928]]]],[11,"clone",E,E,27,[[["self"]],[R[1891]]]],[11,"clone",E,E,26,[[["self"]],[R[1889]]]],[11,"clone",E,E,25,[[["self"]],[R[1887]]]],[11,"clone",E,E,31,[[["self"]],[R[1860]]]],[11,"clone",E,E,76,[[["self"]],["lit"]]],[11,"clone",E,E,191,[[["self"]],["litstr"]]],[11,"clone",E,E,192,[[["self"]],[R[1948]]]],[11,"clone",E,E,193,[[["self"]],["litbyte"]]],[11,"clone",E,E,194,[[["self"]],["litchar"]]],[11,"clone",E,E,195,[[["self"]],["litint"]]],[11,"clone",E,E,196,[[["self"]],["litfloat"]]],[11,"clone",E,E,32,[[["self"]],["litbool"]]],[11,"clone",E,E,33,[[["self"]],[R[1871]]]],[11,"clone",E,E,77,[[["self"]],["strstyle"]]],[11,"clone",E,E,75,[[["self"]],[R[1999]]]],[11,"clone",E,E,74,[[["self"]],[R[1807]]]],[11,"clone",E,E,34,[[["self"]],["macro"]]],[11,"clone",E,E,78,[[["self"]],[R[1874]]]],[11,"clone",E,E,38,[[["self"]],[R[1835]]]],[11,"clone",E,E,79,[[["self"]],["data"]]],[11,"clone",E,E,36,[[["self"]],[R[1949]]]],[11,"clone",E,E,35,[[["self"]],[R[2007]]]],[11,"clone",E,E,37,[[["self"]],[R[1967]]]],[11,"clone",E,E,80,[[["self"]],["binop"]]],[11,"clone",E,E,81,[[["self"]],["unop"]]],[11,"clone",E,E,84,[[["self"]],["type"]]],[11,"clone",E,E,52,[[["self"]],[R[1968]]]],[11,"clone",E,E,41,[[["self"]],[R[1969]]]],[11,"clone",E,E,50,[[["self"]],["typeptr"]]],[11,"clone",E,E,51,[[["self"]],[R[1912]]]],[11,"clone",E,E,42,[[["self"]],[R[1950]]]],[11,"clone",E,E,47,[[["self"]],[R[1970]]]],[11,"clone",E,E,54,[[["self"]],[R[1971]]]],[11,"clone",E,E,49,[[["self"]],[R[2016]]]],[11,"clone",E,E,53,[[["self"]],[R[1915]]]],[11,"clone",E,E,44,[[["self"]],[R[1901]]]],[11,"clone",E,E,48,[[["self"]],[R[1972]]]],[11,"clone",E,E,43,[[["self"]],[R[1973]]]],[11,"clone",E,E,45,[[["self"]],[R[1974]]]],[11,"clone",E,E,46,[[["self"]],[R[1975]]]],[11,"clone",E,E,55,[[["self"]],[R[1918]]]],[11,"clone",E,E,39,[[["self"]],["abi"]]],[11,"clone",E,E,40,[[["self"]],[R[2000]]]],[11,"clone",E,E,82,[[["self"]],[R[1824]]]],[11,"clone",E,E,83,[[["self"]],[R[1951]]]],[11,"clone",E,E,60,[[["self"]],["path"]]],[11,"clone",E,E,61,[[["self"]],[R[1885]]]],[11,"clone",E,E,86,[[["self"]],[R[1883]]]],[11,"clone",E,E,85,[[["self"]],[R[1854]]]],[11,"clone",E,E,56,[[["self"]],[R[1819]]]],[11,"clone",E,E,57,[[["self"]],["binding"]]],[11,"clone",E,E,58,[[["self"]],[R[1952]]]],[11,"clone",E,E,59,[[["self"]],[R[1881]]]],[11,"clone",E,E,62,[[["self"]],["qself"]]],[11,"clone",R[1939],E,198,[[["self"]],["cursor"]]],[11,"clone",R[1940],E,201,[[["self"]],[R[1936]]]],[11,"clone",E,E,243,[[["self"]],["self"]]],[11,"clone",E,E,245,[[["self"]],["intopairs"]]],[11,"clone",E,E,246,[[["self"]],["intoiter"]]],[11,"clone",E,E,247,[[["self"]],["self"]]],[11,"clone",E,E,200,[[["self"]],["pair"]]],[11,"clone",R[1941],E,207,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,209,[[["self"]],["self"]]],[11,"cmp",E,E,31,[[["self"],[R[1860]]],[R[47]]]],[11,"from",E,E,210,[[["selfvalue"]],["ident"]]],[11,"from",E,E,210,[[["selftype"]],["ident"]]],[11,"from",E,E,210,[[["super"]],["ident"]]],[11,"from",E,E,210,[[["crate"]],["ident"]]],[11,"from",E,E,210,[[["extern"]],["ident"]]],[11,"from",E,E,210,[[[R[1976]]],["ident"]]],[11,"from",E,E,64,[[["ident"]],["meta"]]],[11,"from",E,E,64,[[[R[2013]]],["meta"]]],[11,"from",E,E,64,[[[R[1878]]],["meta"]]],[11,"from",E,E,65,[[["meta"]],[R[1943]]]],[11,"from",E,E,65,[[["lit"]],[R[1943]]]],[11,"from",E,E,66,[[[R[1850]]],["fields"]]],[11,"from",E,E,66,[[[R[1852]]],["fields"]]],[11,"from",E,E,67,[[[R[1953]]],[R[1944]]]],[11,"from",E,E,67,[[[R[2017]]],[R[1944]]]],[11,"from",E,E,67,[[[R[1924]]],[R[1944]]]],[11,"from",E,E,68,[[["exprbox"]],["expr"]]],[11,"from",E,E,68,[[[R[1954]]],["expr"]]],[11,"from",E,E,68,[[[R[1979]]],["expr"]]],[11,"from",E,E,68,[[[R[2009]]],["expr"]]],[11,"from",E,E,68,[[[R[1955]]],["expr"]]],[11,"from",E,E,68,[[[R[1980]]],["expr"]]],[11,"from",E,E,68,[[[R[1945]]],["expr"]]],[11,"from",E,E,68,[[[R[1956]]],["expr"]]],[11,"from",E,E,68,[[["exprlit"]],["expr"]]],[11,"from",E,E,68,[[[R[2010]]],["expr"]]],[11,"from",E,E,68,[[["exprtype"]],["expr"]]],[11,"from",E,E,68,[[["exprlet"]],["expr"]]],[11,"from",E,E,68,[[["exprif"]],["expr"]]],[11,"from",E,E,68,[[[R[1981]]],["expr"]]],[11,"from",E,E,68,[[[R[1957]]],["expr"]]],[11,"from",E,E,68,[[["exprloop"]],["expr"]]],[11,"from",E,E,68,[[[R[1982]]],["expr"]]],[11,"from",E,E,68,[[[R[1958]]],["expr"]]],[11,"from",E,E,68,[[[R[1983]]],["expr"]]],[11,"from",E,E,68,[[[R[1984]]],["expr"]]],[11,"from",E,E,68,[[[R[1985]]],["expr"]]],[11,"from",E,E,68,[[[R[1959]]],["expr"]]],[11,"from",E,E,68,[[[R[1960]]],["expr"]]],[11,"from",E,E,68,[[[R[1961]]],["expr"]]],[11,"from",E,E,68,[[[R[1986]]],["expr"]]],[11,"from",E,E,68,[[[R[2011]]],["expr"]]],[11,"from",E,E,68,[[[R[1962]]],["expr"]]],[11,"from",E,E,68,[[[R[1987]]],["expr"]]],[11,"from",E,E,68,[[[R[1963]]],["expr"]]],[11,"from",E,E,68,[[[R[1988]]],["expr"]]],[11,"from",E,E,68,[[[R[1989]]],["expr"]]],[11,"from",E,E,68,[[[R[1990]]],["expr"]]],[11,"from",E,E,68,[[[R[1991]]],["expr"]]],[11,"from",E,E,68,[[[R[1964]]],["expr"]]],[11,"from",E,E,68,[[[R[1992]]],["expr"]]],[11,"from",E,E,68,[[["exprtry"]],["expr"]]],[11,"from",E,E,68,[[[R[1993]]],["expr"]]],[11,"from",E,E,68,[[[R[1965]]],["expr"]]],[11,"from",E,E,68,[[[R[1994]]],["expr"]]],[11,"from",E,E,68,[[[R[1846]]],["expr"]]],[11,"from",E,E,20,[[[R[9]]],["index"]]],[11,"from",E,E,70,[[[R[1966]]],[R[1856]]]],[11,"from",E,E,70,[[[R[1862]]],[R[1856]]]],[11,"from",E,E,70,[[[R[1946]]],[R[1856]]]],[11,"from",E,E,29,[[["ident"]],["self"]]],[11,"from",E,E,72,[[[R[1947]]],[R[1907]]]],[11,"from",E,E,72,[[[R[1860]]],[R[1907]]]],[11,"from",E,E,73,[[[R[1891]]],[R[1928]]]],[11,"from",E,E,73,[[[R[1889]]],[R[1928]]]],[11,"from",E,E,73,[[[R[1887]]],[R[1928]]]],[11,"from",E,E,76,[[["litstr"]],["lit"]]],[11,"from",E,E,76,[[[R[1948]]],["lit"]]],[11,"from",E,E,76,[[["litbyte"]],["lit"]]],[11,"from",E,E,76,[[["litchar"]],["lit"]]],[11,"from",E,E,76,[[["litint"]],["lit"]]],[11,"from",E,E,76,[[["litfloat"]],["lit"]]],[11,"from",E,E,76,[[["litbool"]],["lit"]]],[11,"from",E,E,76,[[[R[1871]]],["lit"]]],[11,"from",E,E,79,[[[R[1949]]],["data"]]],[11,"from",E,E,79,[[[R[2007]]],["data"]]],[11,"from",E,E,79,[[[R[1967]]],["data"]]],[11,"from",E,E,84,[[[R[1968]]],["type"]]],[11,"from",E,E,84,[[[R[1969]]],["type"]]],[11,"from",E,E,84,[[["typeptr"]],["type"]]],[11,"from",E,E,84,[[[R[1912]]],["type"]]],[11,"from",E,E,84,[[[R[1950]]],["type"]]],[11,"from",E,E,84,[[[R[1970]]],["type"]]],[11,"from",E,E,84,[[[R[1971]]],["type"]]],[11,"from",E,E,84,[[[R[2016]]],["type"]]],[11,"from",E,E,84,[[[R[1915]]],["type"]]],[11,"from",E,E,84,[[[R[1901]]],["type"]]],[11,"from",E,E,84,[[[R[1972]]],["type"]]],[11,"from",E,E,84,[[[R[1973]]],["type"]]],[11,"from",E,E,84,[[[R[1974]]],["type"]]],[11,"from",E,E,84,[[[R[1975]]],["type"]]],[11,"from",E,E,84,[[[R[1918]]],["type"]]],[11,"from",E,E,60,[[[T]],["self"]]],[11,"from",E,E,61,[[[T]],["self"]]],[11,"from",E,E,209,[[["lexerror"]],["self"]]],[11,"len",R[1940],E,243,[[["self"]],[R[9]]]],[11,"len",E,E,244,[[["self"]],[R[9]]]],[11,"len",E,E,245,[[["self"]],[R[9]]]],[11,"len",E,E,246,[[["self"]],[R[9]]]],[11,"len",E,E,247,[[["self"]],[R[9]]]],[11,"len",E,E,248,[[["self"]],[R[9]]]],[11,"drop",R[1941],E,208,[[["self"]]]],[11,R[43],R[1940],E,201,[[]]],[11,R[63],"syn",E,31,[[["self"],[R[1860]]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",R[1942],E,87,[[["self"],[R[1976]]],["bool"]]],[11,"eq",E,E,88,[[["abstract"],["self"]],["bool"]]],[11,"eq",E,E,89,[[["as"],["self"]],["bool"]]],[11,"eq",E,E,90,[[["self"],["async"]],["bool"]]],[11,"eq",E,E,91,[[["auto"],["self"]],["bool"]]],[11,"eq",E,E,92,[[["self"],["become"]],["bool"]]],[11,"eq",E,E,93,[[["self"],["box"]],["bool"]]],[11,"eq",E,E,94,[[["self"],["break"]],["bool"]]],[11,"eq",E,E,95,[[["self"],["const"]],["bool"]]],[11,"eq",E,E,96,[[["continue"],["self"]],["bool"]]],[11,"eq",E,E,97,[[["crate"],["self"]],["bool"]]],[11,"eq",E,E,98,[[["self"],[R[77]]],["bool"]]],[11,"eq",E,E,99,[[["self"],["do"]],["bool"]]],[11,"eq",E,E,100,[[["self"],["dyn"]],["bool"]]],[11,"eq",E,E,101,[[["else"],["self"]],["bool"]]],[11,"eq",E,E,102,[[["enum"],["self"]],["bool"]]],[11,"eq",E,E,103,[[[R[1977]],["self"]],["bool"]]],[11,"eq",E,E,104,[[["self"],["extern"]],["bool"]]],[11,"eq",E,E,105,[[["final"],["self"]],["bool"]]],[11,"eq",E,E,106,[[["fn"],["self"]],["bool"]]],[11,"eq",E,E,107,[[["for"],["self"]],["bool"]]],[11,"eq",E,E,108,[[["self"],["if"]],["bool"]]],[11,"eq",E,E,109,[[["self"],["impl"]],["bool"]]],[11,"eq",E,E,110,[[["in"],["self"]],["bool"]]],[11,"eq",E,E,111,[[["let"],["self"]],["bool"]]],[11,"eq",E,E,112,[[["self"],["loop"]],["bool"]]],[11,"eq",E,E,113,[[["self"],["macro"]],["bool"]]],[11,"eq",E,E,114,[[["self"],["match"]],["bool"]]],[11,"eq",E,E,115,[[["self"],["mod"]],["bool"]]],[11,"eq",E,E,116,[[["self"],["move"]],["bool"]]],[11,"eq",E,E,117,[[["self"],["mut"]],["bool"]]],[11,"eq",E,E,118,[[["self"],["override"]],["bool"]]],[11,"eq",E,E,119,[[["priv"],["self"]],["bool"]]],[11,"eq",E,E,120,[[["pub"],["self"]],["bool"]]],[11,"eq",E,E,121,[[["self"],["ref"]],["bool"]]],[11,"eq",E,E,122,[[["self"],["return"]],["bool"]]],[11,"eq",E,E,123,[[["self"],["selftype"]],["bool"]]],[11,"eq",E,E,124,[[["selfvalue"],["self"]],["bool"]]],[11,"eq",E,E,125,[[["self"],["static"]],["bool"]]],[11,"eq",E,E,126,[[["self"],["struct"]],["bool"]]],[11,"eq",E,E,127,[[["super"],["self"]],["bool"]]],[11,"eq",E,E,128,[[["self"],["trait"]],["bool"]]],[11,"eq",E,E,129,[[["try"],["self"]],["bool"]]],[11,"eq",E,E,130,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,131,[[["self"],["typeof"]],["bool"]]],[11,"eq",E,E,132,[[["self"],["union"]],["bool"]]],[11,"eq",E,E,133,[[["self"],["unsafe"]],["bool"]]],[11,"eq",E,E,134,[[["unsized"],["self"]],["bool"]]],[11,"eq",E,E,135,[[["self"],["use"]],["bool"]]],[11,"eq",E,E,136,[[["virtual"],["self"]],["bool"]]],[11,"eq",E,E,137,[[["self"],["where"]],["bool"]]],[11,"eq",E,E,138,[[["while"],["self"]],["bool"]]],[11,"eq",E,E,139,[[["self"],["yield"]],["bool"]]],[11,"eq",E,E,140,[[["self"],["add"]],["bool"]]],[11,"eq",E,E,141,[[["self"],["addeq"]],["bool"]]],[11,"eq",E,E,142,[[["self"],["and"]],["bool"]]],[11,"eq",E,E,143,[[["self"],["andand"]],["bool"]]],[11,"eq",E,E,144,[[["self"],["andeq"]],["bool"]]],[11,"eq",E,E,145,[[["self"],["at"]],["bool"]]],[11,"eq",E,E,146,[[["self"],["bang"]],["bool"]]],[11,"eq",E,E,147,[[["self"],["caret"]],["bool"]]],[11,"eq",E,E,148,[[["self"],["careteq"]],["bool"]]],[11,"eq",E,E,149,[[["self"],["colon"]],["bool"]]],[11,"eq",E,E,150,[[["colon2"],["self"]],["bool"]]],[11,"eq",E,E,151,[[["self"],["comma"]],["bool"]]],[11,"eq",E,E,152,[[["div"],["self"]],["bool"]]],[11,"eq",E,E,153,[[["self"],["diveq"]],["bool"]]],[11,"eq",E,E,154,[[["self"],["dollar"]],["bool"]]],[11,"eq",E,E,155,[[["dot"],["self"]],["bool"]]],[11,"eq",E,E,156,[[["self"],["dot2"]],["bool"]]],[11,"eq",E,E,157,[[["dot3"],["self"]],["bool"]]],[11,"eq",E,E,158,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq",E,E,159,[[["self"],["eq"]],["bool"]]],[11,"eq",E,E,160,[[["eqeq"],["self"]],["bool"]]],[11,"eq",E,E,161,[[["self"],["ge"]],["bool"]]],[11,"eq",E,E,162,[[["self"],["gt"]],["bool"]]],[11,"eq",E,E,163,[[["self"],["le"]],["bool"]]],[11,"eq",E,E,164,[[["self"],["lt"]],["bool"]]],[11,"eq",E,E,165,[[["self"],["muleq"]],["bool"]]],[11,"eq",E,E,166,[[["self"],["ne"]],["bool"]]],[11,"eq",E,E,167,[[["self"],["or"]],["bool"]]],[11,"eq",E,E,168,[[["self"],["oreq"]],["bool"]]],[11,"eq",E,E,169,[[["self"],["oror"]],["bool"]]],[11,"eq",E,E,170,[[["self"],["pound"]],["bool"]]],[11,"eq",E,E,171,[[["self"],["question"]],["bool"]]],[11,"eq",E,E,172,[[["self"],["rarrow"]],["bool"]]],[11,"eq",E,E,173,[[["self"],["larrow"]],["bool"]]],[11,"eq",E,E,174,[[["rem"],["self"]],["bool"]]],[11,"eq",E,E,175,[[["self"],["remeq"]],["bool"]]],[11,"eq",E,E,176,[[["self"],["fatarrow"]],["bool"]]],[11,"eq",E,E,177,[[["self"],["semi"]],["bool"]]],[11,"eq",E,E,178,[[["self"],["shl"]],["bool"]]],[11,"eq",E,E,179,[[["self"],["shleq"]],["bool"]]],[11,"eq",E,E,180,[[["self"],["shr"]],["bool"]]],[11,"eq",E,E,181,[[["shreq"],["self"]],["bool"]]],[11,"eq",E,E,182,[[["self"],["star"]],["bool"]]],[11,"eq",E,E,183,[[["self"],["sub"]],["bool"]]],[11,"eq",E,E,184,[[["self"],["subeq"]],["bool"]]],[11,"eq",E,E,185,[[["tilde"],["self"]],["bool"]]],[11,"eq",E,E,186,[[["brace"],["self"]],["bool"]]],[11,"eq",E,E,187,[[["self"],["bracket"]],["bool"]]],[11,"eq",E,E,188,[[["paren"],["self"]],["bool"]]],[11,"eq",E,E,189,[[["self"],["group"]],["bool"]]],[11,"eq","syn",E,0,[[["self"]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[1978]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[1978]]],["bool"]]],[11,"eq",E,E,64,[[["self"],["meta"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["meta"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2013]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2013]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1878]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1878]]],["bool"]]],[11,"eq",E,E,65,[[["self"],[R[1943]]],["bool"]]],[11,"ne",E,E,65,[[["self"],[R[1943]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["variant"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["variant"]],["bool"]]],[11,"eq",E,E,66,[[["fields"],["self"]],["bool"]]],[11,"ne",E,E,66,[[["fields"],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[1850]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[1850]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1852]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1852]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["field"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["field"]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[1944]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[1944]]],["bool"]]],[11,"eq",E,E,8,[[[R[1953]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[1953]],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[2017]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[2017]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1924]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1924]]],["bool"]]],[11,"eq",E,E,68,[[["self"],["expr"]],["bool"]]],[11,"ne",E,E,68,[[["self"],["expr"]],["bool"]]],[11,"eq",E,E,216,[[["self"],["exprbox"]],["bool"]]],[11,"ne",E,E,216,[[["self"],["exprbox"]],["bool"]]],[11,"eq",E,E,223,[[["self"],[R[1954]]],["bool"]]],[11,"ne",E,E,223,[[["self"],[R[1954]]],["bool"]]],[11,"eq",E,E,211,[[["self"],[R[1979]]],["bool"]]],[11,"ne",E,E,211,[[["self"],[R[1979]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[2009]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[2009]]],["bool"]]],[11,"eq",E,E,228,[[[R[1955]],["self"]],["bool"]]],[11,"ne",E,E,228,[[[R[1955]],["self"]],["bool"]]],[11,"eq",E,E,236,[[["self"],[R[1980]]],["bool"]]],[11,"ne",E,E,236,[[["self"],[R[1980]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1945]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1945]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[1956]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[1956]]],["bool"]]],[11,"eq",E,E,15,[[["self"],["exprlit"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["exprlit"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[2010]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[2010]]],["bool"]]],[11,"eq",E,E,237,[[["exprtype"],["self"]],["bool"]]],[11,"ne",E,E,237,[[["exprtype"],["self"]],["bool"]]],[11,"eq",E,E,224,[[["self"],["exprlet"]],["bool"]]],[11,"ne",E,E,224,[[["self"],["exprlet"]],["bool"]]],[11,"eq",E,E,222,[[["self"],["exprif"]],["bool"]]],[11,"ne",E,E,222,[[["self"],["exprif"]],["bool"]]],[11,"eq",E,E,239,[[["self"],[R[1981]]],["bool"]]],[11,"ne",E,E,239,[[["self"],[R[1981]]],["bool"]]],[11,"eq",E,E,220,[[["self"],[R[1957]]],["bool"]]],[11,"ne",E,E,220,[[["self"],[R[1957]]],["bool"]]],[11,"eq",E,E,225,[[["self"],["exprloop"]],["bool"]]],[11,"ne",E,E,225,[[["self"],["exprloop"]],["bool"]]],[11,"eq",E,E,227,[[["self"],[R[1982]]],["bool"]]],[11,"ne",E,E,227,[[["self"],[R[1982]]],["bool"]]],[11,"eq",E,E,218,[[[R[1958]],["self"]],["bool"]]],[11,"ne",E,E,218,[[[R[1958]],["self"]],["bool"]]],[11,"eq",E,E,238,[[["self"],[R[1983]]],["bool"]]],[11,"ne",E,E,238,[[["self"],[R[1983]]],["bool"]]],[11,"eq",E,E,215,[[["self"],[R[1984]]],["bool"]]],[11,"ne",E,E,215,[[["self"],[R[1984]]],["bool"]]],[11,"eq",E,E,212,[[["self"],[R[1985]]],["bool"]]],[11,"ne",E,E,212,[[["self"],[R[1985]]],["bool"]]],[11,"eq",E,E,213,[[["self"],[R[1959]]],["bool"]]],[11,"ne",E,E,213,[[["self"],[R[1959]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[1960]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[1960]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[1961]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[1961]]],["bool"]]],[11,"eq",E,E,229,[[["self"],[R[1986]]],["bool"]]],[11,"ne",E,E,229,[[["self"],[R[1986]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[2011]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[2011]]],["bool"]]],[11,"eq",E,E,230,[[[R[1962]],["self"]],["bool"]]],[11,"ne",E,E,230,[[[R[1962]],["self"]],["bool"]]],[11,"eq",E,E,217,[[["self"],[R[1987]]],["bool"]]],[11,"ne",E,E,217,[[["self"],[R[1987]]],["bool"]]],[11,"eq",E,E,219,[[["self"],[R[1963]]],["bool"]]],[11,"ne",E,E,219,[[["self"],[R[1963]]],["bool"]]],[11,"eq",E,E,232,[[["self"],[R[1988]]],["bool"]]],[11,"ne",E,E,232,[[["self"],[R[1988]]],["bool"]]],[11,"eq",E,E,226,[[["self"],[R[1989]]],["bool"]]],[11,"ne",E,E,226,[[["self"],[R[1989]]],["bool"]]],[11,"eq",E,E,233,[[["self"],[R[1990]]],["bool"]]],[11,"ne",E,E,233,[[["self"],[R[1990]]],["bool"]]],[11,"eq",E,E,231,[[[R[1991]],["self"]],["bool"]]],[11,"ne",E,E,231,[[[R[1991]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1964]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1964]]],["bool"]]],[11,"eq",E,E,221,[[["self"],[R[1992]]],["bool"]]],[11,"ne",E,E,221,[[["self"],[R[1992]]],["bool"]]],[11,"eq",E,E,234,[[["self"],["exprtry"]],["bool"]]],[11,"ne",E,E,234,[[["self"],["exprtry"]],["bool"]]],[11,"eq",E,E,214,[[["self"],[R[1993]]],["bool"]]],[11,"ne",E,E,214,[[["self"],[R[1993]]],["bool"]]],[11,"eq",E,E,235,[[["self"],[R[1965]]],["bool"]]],[11,"ne",E,E,235,[[["self"],[R[1965]]],["bool"]]],[11,"eq",E,E,240,[[["self"],[R[1994]]],["bool"]]],[11,"ne",E,E,240,[[["self"],[R[1994]]],["bool"]]],[11,"eq",E,E,19,[[["self"]],["bool"]]],[11,"eq",E,E,69,[[["self"],["member"]],["bool"]]],[11,"ne",E,E,69,[[["self"],["member"]],["bool"]]],[11,"eq",E,E,20,[[["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[1995]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[1995]]],["bool"]]],[11,"eq",E,E,70,[[[R[1856]],["self"]],["bool"]]],[11,"ne",E,E,70,[[[R[1856]],["self"]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[1966]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[1966]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[1862]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[1862]]],["bool"]]],[11,"eq",E,E,22,[[[R[1946]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[1946]],["self"]],["bool"]]],[11,"eq",E,E,241,[[[R[1996]],["self"]],["bool"]]],[11,"ne",E,E,241,[[[R[1996]],["self"]],["bool"]]],[11,"eq",E,E,190,[[["self"],[R[1997]]],["bool"]]],[11,"ne",E,E,190,[[["self"],[R[1997]]],["bool"]]],[11,"eq",E,E,242,[[[R[1998]],["self"]],["bool"]]],[11,"ne",E,E,242,[[[R[1998]],["self"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[1828]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[1828]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[1907]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[1907]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[1947]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[1947]]],["bool"]]],[11,"eq",E,E,71,[[[R[1896]],["self"]],["bool"]]],[11,"ne",E,E,71,[[[R[1896]],["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[1816]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[1816]]],["bool"]]],[11,"eq",E,E,73,[[[R[1928]],["self"]],["bool"]]],[11,"ne",E,E,73,[[[R[1928]],["self"]],["bool"]]],[11,"eq",E,E,27,[[[R[1891]],["self"]],["bool"]]],[11,"ne",E,E,27,[[[R[1891]],["self"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[1889]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[1889]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[1887]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[1887]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[1860]]],["bool"]]],[11,"eq",E,E,76,[[["self"],["lit"]],["bool"]]],[11,"ne",E,E,76,[[["self"],["lit"]],["bool"]]],[11,"eq",E,E,191,[[["self"]],["bool"]]],[11,"eq",E,E,192,[[["self"]],["bool"]]],[11,"eq",E,E,193,[[["self"]],["bool"]]],[11,"eq",E,E,194,[[["self"]],["bool"]]],[11,"eq",E,E,195,[[["self"]],["bool"]]],[11,"eq",E,E,196,[[["self"]],["bool"]]],[11,"eq",E,E,32,[[["self"]],["bool"]]],[11,"eq",E,E,33,[[["self"]],["bool"]]],[11,"eq",E,E,77,[[["self"],["strstyle"]],["bool"]]],[11,"ne",E,E,77,[[["self"],["strstyle"]],["bool"]]],[11,"eq",E,E,75,[[[R[1999]],["self"]],["bool"]]],[11,"eq",E,E,74,[[["self"],[R[1807]]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[1874]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[1874]]],["bool"]]],[11,"eq",E,E,34,[[["self"]],["bool"]]],[11,"eq",E,E,38,[[[R[1835]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[1835]],["self"]],["bool"]]],[11,"eq",E,E,79,[[["self"],["data"]],["bool"]]],[11,"ne",E,E,79,[[["self"],["data"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[1949]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[1949]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[2007]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[2007]]],["bool"]]],[11,"eq",E,E,37,[[[R[1967]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[1967]],["self"]],["bool"]]],[11,"eq",E,E,80,[[["self"],["binop"]],["bool"]]],[11,"ne",E,E,80,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,81,[[["self"],["unop"]],["bool"]]],[11,"ne",E,E,81,[[["self"],["unop"]],["bool"]]],[11,"eq",E,E,84,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,84,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,52,[[["self"],[R[1968]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[1968]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[1969]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[1969]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["typeptr"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["typeptr"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[1912]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[1912]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[1950]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[1950]]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[1970]]],["bool"]]],[11,"ne",E,E,47,[[["self"],[R[1970]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[1971]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[1971]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[2016]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[2016]]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[1915]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[1915]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[1901]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[1901]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[1972]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[1972]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[1973]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[1973]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[1974]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[1974]]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[1975]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[1975]]],["bool"]]],[11,"eq",E,E,55,[[["self"]],["bool"]]],[11,"eq",E,E,39,[[["self"],["abi"]],["bool"]]],[11,"ne",E,E,39,[[["self"],["abi"]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[2000]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[2000]]],["bool"]]],[11,"eq",E,E,82,[[["self"],[R[1824]]],["bool"]]],[11,"ne",E,E,82,[[["self"],[R[1824]]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[1951]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[1951]]],["bool"]]],[11,"eq",E,E,60,[[["self"],["path"]],["bool"]]],[11,"ne",E,E,60,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[1885]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[1885]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[1883]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[1883]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[1854]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[1854]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[1819]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[1819]]],["bool"]]],[11,"eq",E,E,57,[[["self"],["binding"]],["bool"]]],[11,"ne",E,E,57,[[["self"],["binding"]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[1952]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[1952]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[1881]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[1881]]],["bool"]]],[11,"eq",E,E,62,[[["self"],["qself"]],["bool"]]],[11,"ne",E,E,62,[[["self"],["qself"]],["bool"]]],[11,"eq",R[1939],E,198,[[["self"],["cursor"]],["bool"]]],[11,"ne",E,E,198,[[["self"],["cursor"]],["bool"]]],[11,"eq",R[1940],E,201,[[[R[1936]],["self"]],["bool"]]],[11,"ne",E,E,201,[[[R[1936]],["self"]],["bool"]]],[11,R[60],R[1942],E,87,[[["self"]]]],[11,R[60],E,E,140,[[["self"]]]],[11,R[60],E,E,142,[[["self"]]]],[11,R[60],E,E,145,[[["self"]]]],[11,R[60],E,E,146,[[["self"]]]],[11,R[60],E,E,147,[[["self"]]]],[11,R[60],E,E,149,[[["self"]]]],[11,R[60],E,E,151,[[["self"]]]],[11,R[60],E,E,152,[[["self"]]]],[11,R[60],E,E,154,[[["self"]]]],[11,R[60],E,E,155,[[["self"]]]],[11,R[60],E,E,159,[[["self"]]]],[11,R[60],E,E,162,[[["self"]]]],[11,R[60],E,E,164,[[["self"]]]],[11,R[60],E,E,167,[[["self"]]]],[11,R[60],E,E,170,[[["self"]]]],[11,R[60],E,E,171,[[["self"]]]],[11,R[60],E,E,174,[[["self"]]]],[11,R[60],E,E,177,[[["self"]]]],[11,R[60],E,E,182,[[["self"]]]],[11,R[60],E,E,183,[[["self"]]]],[11,R[60],E,E,185,[[["self"]]]],[11,"fmt",E,E,87,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,88,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,89,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,90,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,91,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,92,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,93,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,94,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,95,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,97,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,98,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,99,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,100,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,101,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,102,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,103,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,104,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,106,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,107,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,108,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,109,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,110,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,111,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,112,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,113,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,114,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,115,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,116,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,118,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,119,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,120,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,121,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,122,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,123,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,124,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,125,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,126,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,127,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,128,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,129,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,130,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,131,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,132,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,133,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,134,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,135,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,136,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,137,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,138,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,139,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,140,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,141,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,142,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,143,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,144,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,145,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,146,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,147,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,148,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,149,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,150,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,151,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,152,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,153,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,154,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,155,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,156,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,157,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,158,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,159,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,160,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,161,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,162,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,163,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,164,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,165,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,166,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,167,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,168,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,169,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,170,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,171,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,172,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,173,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,174,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,175,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,176,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,177,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,178,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,179,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,180,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,181,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,182,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,183,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,184,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,185,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,186,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,187,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,188,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,189,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","syn",E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,63,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,64,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,65,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,66,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,67,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,68,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,216,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,223,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,211,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,228,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,236,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,237,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,224,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,222,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,239,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,220,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,225,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,227,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,218,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,238,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,215,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,212,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,213,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,229,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,230,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,217,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,219,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,232,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,226,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,233,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,231,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,221,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,234,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,214,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,235,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,240,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,69,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,70,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,29,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,241,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,190,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,242,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,21,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,72,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,28,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,71,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,30,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,73,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,27,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,26,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,25,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,31,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,76,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,191,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,192,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,193,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,194,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,195,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,196,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,33,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,77,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,75,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,74,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,34,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,78,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,38,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,79,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,36,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,35,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,37,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,80,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,81,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,84,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,52,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,41,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,50,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,51,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,47,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,54,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,49,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,53,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,44,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,48,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,43,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,55,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,39,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,40,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,82,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,83,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,60,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,61,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,86,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,85,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,56,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,57,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,58,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,59,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,62,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1940],E,201,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1941],E,208,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","syn",E,209,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,31,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[1941],E,208,[[["self"],[R[30]]],[R[13]]]],[11,"fmt","syn",E,209,[[["self"],[R[30]]],[R[13]]]],[11,"deref",R[1942],E,87,[[["self"]]]],[11,"deref",E,E,140,[[["self"]]]],[11,"deref",E,E,142,[[["self"]]]],[11,"deref",E,E,145,[[["self"]]]],[11,"deref",E,E,146,[[["self"]]]],[11,"deref",E,E,147,[[["self"]]]],[11,"deref",E,E,149,[[["self"]]]],[11,"deref",E,E,151,[[["self"]]]],[11,"deref",E,E,152,[[["self"]]]],[11,"deref",E,E,154,[[["self"]]]],[11,"deref",E,E,155,[[["self"]]]],[11,"deref",E,E,159,[[["self"]]]],[11,"deref",E,E,162,[[["self"]]]],[11,"deref",E,E,164,[[["self"]]]],[11,"deref",E,E,167,[[["self"]]]],[11,"deref",E,E,170,[[["self"]]]],[11,"deref",E,E,171,[[["self"]]]],[11,"deref",E,E,174,[[["self"]]]],[11,"deref",E,E,177,[[["self"]]]],[11,"deref",E,E,182,[[["self"]]]],[11,"deref",E,E,183,[[["self"]]]],[11,"deref",E,E,185,[[["self"]]]],[11,"deref",R[1941],E,207,[[["self"]]]],[11,"index",R[1940],E,201,[[["self"],[R[9]]]]],[11,R[49],E,E,201,[[["self"],[R[9]]]]],[11,"hash",R[1942],E,87,[[["self"],["h"]]]],[11,"hash",E,E,88,[[["self"],["h"]]]],[11,"hash",E,E,89,[[["self"],["h"]]]],[11,"hash",E,E,90,[[["self"],["h"]]]],[11,"hash",E,E,91,[[["self"],["h"]]]],[11,"hash",E,E,92,[[["self"],["h"]]]],[11,"hash",E,E,93,[[["self"],["h"]]]],[11,"hash",E,E,94,[[["self"],["h"]]]],[11,"hash",E,E,95,[[["self"],["h"]]]],[11,"hash",E,E,96,[[["self"],["h"]]]],[11,"hash",E,E,97,[[["self"],["h"]]]],[11,"hash",E,E,98,[[["self"],["h"]]]],[11,"hash",E,E,99,[[["self"],["h"]]]],[11,"hash",E,E,100,[[["self"],["h"]]]],[11,"hash",E,E,101,[[["self"],["h"]]]],[11,"hash",E,E,102,[[["self"],["h"]]]],[11,"hash",E,E,103,[[["self"],["h"]]]],[11,"hash",E,E,104,[[["self"],["h"]]]],[11,"hash",E,E,105,[[["self"],["h"]]]],[11,"hash",E,E,106,[[["self"],["h"]]]],[11,"hash",E,E,107,[[["self"],["h"]]]],[11,"hash",E,E,108,[[["self"],["h"]]]],[11,"hash",E,E,109,[[["self"],["h"]]]],[11,"hash",E,E,110,[[["self"],["h"]]]],[11,"hash",E,E,111,[[["self"],["h"]]]],[11,"hash",E,E,112,[[["self"],["h"]]]],[11,"hash",E,E,113,[[["self"],["h"]]]],[11,"hash",E,E,114,[[["self"],["h"]]]],[11,"hash",E,E,115,[[["self"],["h"]]]],[11,"hash",E,E,116,[[["self"],["h"]]]],[11,"hash",E,E,117,[[["self"],["h"]]]],[11,"hash",E,E,118,[[["self"],["h"]]]],[11,"hash",E,E,119,[[["self"],["h"]]]],[11,"hash",E,E,120,[[["self"],["h"]]]],[11,"hash",E,E,121,[[["self"],["h"]]]],[11,"hash",E,E,122,[[["self"],["h"]]]],[11,"hash",E,E,123,[[["self"],["h"]]]],[11,"hash",E,E,124,[[["self"],["h"]]]],[11,"hash",E,E,125,[[["self"],["h"]]]],[11,"hash",E,E,126,[[["self"],["h"]]]],[11,"hash",E,E,127,[[["self"],["h"]]]],[11,"hash",E,E,128,[[["self"],["h"]]]],[11,"hash",E,E,129,[[["self"],["h"]]]],[11,"hash",E,E,130,[[["self"],["h"]]]],[11,"hash",E,E,131,[[["self"],["h"]]]],[11,"hash",E,E,132,[[["self"],["h"]]]],[11,"hash",E,E,133,[[["self"],["h"]]]],[11,"hash",E,E,134,[[["self"],["h"]]]],[11,"hash",E,E,135,[[["self"],["h"]]]],[11,"hash",E,E,136,[[["self"],["h"]]]],[11,"hash",E,E,137,[[["self"],["h"]]]],[11,"hash",E,E,138,[[["self"],["h"]]]],[11,"hash",E,E,139,[[["self"],["h"]]]],[11,"hash",E,E,140,[[["self"],["h"]]]],[11,"hash",E,E,141,[[["self"],["h"]]]],[11,"hash",E,E,142,[[["self"],["h"]]]],[11,"hash",E,E,143,[[["self"],["h"]]]],[11,"hash",E,E,144,[[["self"],["h"]]]],[11,"hash",E,E,145,[[["self"],["h"]]]],[11,"hash",E,E,146,[[["self"],["h"]]]],[11,"hash",E,E,147,[[["self"],["h"]]]],[11,"hash",E,E,148,[[["self"],["h"]]]],[11,"hash",E,E,149,[[["self"],["h"]]]],[11,"hash",E,E,150,[[["self"],["h"]]]],[11,"hash",E,E,151,[[["self"],["h"]]]],[11,"hash",E,E,152,[[["self"],["h"]]]],[11,"hash",E,E,153,[[["self"],["h"]]]],[11,"hash",E,E,154,[[["self"],["h"]]]],[11,"hash",E,E,155,[[["self"],["h"]]]],[11,"hash",E,E,156,[[["self"],["h"]]]],[11,"hash",E,E,157,[[["self"],["h"]]]],[11,"hash",E,E,158,[[["self"],["h"]]]],[11,"hash",E,E,159,[[["self"],["h"]]]],[11,"hash",E,E,160,[[["self"],["h"]]]],[11,"hash",E,E,161,[[["self"],["h"]]]],[11,"hash",E,E,162,[[["self"],["h"]]]],[11,"hash",E,E,163,[[["self"],["h"]]]],[11,"hash",E,E,164,[[["self"],["h"]]]],[11,"hash",E,E,165,[[["self"],["h"]]]],[11,"hash",E,E,166,[[["self"],["h"]]]],[11,"hash",E,E,167,[[["self"],["h"]]]],[11,"hash",E,E,168,[[["self"],["h"]]]],[11,"hash",E,E,169,[[["self"],["h"]]]],[11,"hash",E,E,170,[[["self"],["h"]]]],[11,"hash",E,E,171,[[["self"],["h"]]]],[11,"hash",E,E,172,[[["self"],["h"]]]],[11,"hash",E,E,173,[[["self"],["h"]]]],[11,"hash",E,E,174,[[["self"],["h"]]]],[11,"hash",E,E,175,[[["self"],["h"]]]],[11,"hash",E,E,176,[[["self"],["h"]]]],[11,"hash",E,E,177,[[["self"],["h"]]]],[11,"hash",E,E,178,[[["self"],["h"]]]],[11,"hash",E,E,179,[[["self"],["h"]]]],[11,"hash",E,E,180,[[["self"],["h"]]]],[11,"hash",E,E,181,[[["self"],["h"]]]],[11,"hash",E,E,182,[[["self"],["h"]]]],[11,"hash",E,E,183,[[["self"],["h"]]]],[11,"hash",E,E,184,[[["self"],["h"]]]],[11,"hash",E,E,185,[[["self"],["h"]]]],[11,"hash",E,E,186,[[["self"],["h"]]]],[11,"hash",E,E,187,[[["self"],["h"]]]],[11,"hash",E,E,188,[[["self"],["h"]]]],[11,"hash",E,E,189,[[["self"],["h"]]]],[11,"hash","syn",E,0,[[["self"],["h"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,65,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,216,[[["self"],["__h"]]]],[11,"hash",E,E,223,[[["self"],["__h"]]]],[11,"hash",E,E,211,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,228,[[["self"],["__h"]]]],[11,"hash",E,E,236,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,237,[[["self"],["__h"]]]],[11,"hash",E,E,224,[[["self"],["__h"]]]],[11,"hash",E,E,222,[[["self"],["__h"]]]],[11,"hash",E,E,239,[[["self"],["__h"]]]],[11,"hash",E,E,220,[[["self"],["__h"]]]],[11,"hash",E,E,225,[[["self"],["__h"]]]],[11,"hash",E,E,227,[[["self"],["__h"]]]],[11,"hash",E,E,218,[[["self"],["__h"]]]],[11,"hash",E,E,238,[[["self"],["__h"]]]],[11,"hash",E,E,215,[[["self"],["__h"]]]],[11,"hash",E,E,212,[[["self"],["__h"]]]],[11,"hash",E,E,213,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,229,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,230,[[["self"],["__h"]]]],[11,"hash",E,E,217,[[["self"],["__h"]]]],[11,"hash",E,E,219,[[["self"],["__h"]]]],[11,"hash",E,E,232,[[["self"],["__h"]]]],[11,"hash",E,E,226,[[["self"],["__h"]]]],[11,"hash",E,E,233,[[["self"],["__h"]]]],[11,"hash",E,E,231,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,221,[[["self"],["__h"]]]],[11,"hash",E,E,234,[[["self"],["__h"]]]],[11,"hash",E,E,214,[[["self"],["__h"]]]],[11,"hash",E,E,235,[[["self"],["__h"]]]],[11,"hash",E,E,240,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["h"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,70,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,241,[[["self"],["__h"]]]],[11,"hash",E,E,190,[[["self"],["__h"]]]],[11,"hash",E,E,242,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,72,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,73,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["h"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,191,[[["self"],["h"]]]],[11,"hash",E,E,192,[[["self"],["h"]]]],[11,"hash",E,E,193,[[["self"],["h"]]]],[11,"hash",E,E,194,[[["self"],["h"]]]],[11,"hash",E,E,195,[[["self"],["h"]]]],[11,"hash",E,E,196,[[["self"],["h"]]]],[11,"hash",E,E,32,[[["self"],["h"]]]],[11,"hash",E,E,33,[[["self"],["h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",E,E,75,[[["self"],["__h"]]]],[11,"hash",E,E,74,[[["self"],["__h"]]]],[11,"hash",E,E,78,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,79,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",R[1940],E,201,[[["__htp"],["self"]]]],[11,R[196],E,E,201,[[[R[44]]],["self"]]],[11,R[196],E,E,201,[[[R[44]]],["self"]]],[11,R[31],"syn",E,209,[[["self"]],["str"]]],[11,R[2001],R[1942],E,87,[[[R[543]],["self"]]]],[11,R[2001],E,E,88,[[[R[543]],["self"]]]],[11,R[2001],E,E,89,[[[R[543]],["self"]]]],[11,R[2001],E,E,90,[[[R[543]],["self"]]]],[11,R[2001],E,E,91,[[[R[543]],["self"]]]],[11,R[2001],E,E,92,[[[R[543]],["self"]]]],[11,R[2001],E,E,93,[[[R[543]],["self"]]]],[11,R[2001],E,E,94,[[[R[543]],["self"]]]],[11,R[2001],E,E,95,[[[R[543]],["self"]]]],[11,R[2001],E,E,96,[[[R[543]],["self"]]]],[11,R[2001],E,E,97,[[[R[543]],["self"]]]],[11,R[2001],E,E,98,[[[R[543]],["self"]]]],[11,R[2001],E,E,99,[[[R[543]],["self"]]]],[11,R[2001],E,E,100,[[[R[543]],["self"]]]],[11,R[2001],E,E,101,[[[R[543]],["self"]]]],[11,R[2001],E,E,102,[[[R[543]],["self"]]]],[11,R[2001],E,E,103,[[[R[543]],["self"]]]],[11,R[2001],E,E,104,[[[R[543]],["self"]]]],[11,R[2001],E,E,105,[[[R[543]],["self"]]]],[11,R[2001],E,E,106,[[[R[543]],["self"]]]],[11,R[2001],E,E,107,[[[R[543]],["self"]]]],[11,R[2001],E,E,108,[[[R[543]],["self"]]]],[11,R[2001],E,E,109,[[[R[543]],["self"]]]],[11,R[2001],E,E,110,[[[R[543]],["self"]]]],[11,R[2001],E,E,111,[[[R[543]],["self"]]]],[11,R[2001],E,E,112,[[[R[543]],["self"]]]],[11,R[2001],E,E,113,[[[R[543]],["self"]]]],[11,R[2001],E,E,114,[[[R[543]],["self"]]]],[11,R[2001],E,E,115,[[[R[543]],["self"]]]],[11,R[2001],E,E,116,[[[R[543]],["self"]]]],[11,R[2001],E,E,117,[[[R[543]],["self"]]]],[11,R[2001],E,E,118,[[[R[543]],["self"]]]],[11,R[2001],E,E,119,[[[R[543]],["self"]]]],[11,R[2001],E,E,120,[[[R[543]],["self"]]]],[11,R[2001],E,E,121,[[[R[543]],["self"]]]],[11,R[2001],E,E,122,[[[R[543]],["self"]]]],[11,R[2001],E,E,123,[[[R[543]],["self"]]]],[11,R[2001],E,E,124,[[[R[543]],["self"]]]],[11,R[2001],E,E,125,[[[R[543]],["self"]]]],[11,R[2001],E,E,126,[[[R[543]],["self"]]]],[11,R[2001],E,E,127,[[[R[543]],["self"]]]],[11,R[2001],E,E,128,[[[R[543]],["self"]]]],[11,R[2001],E,E,129,[[[R[543]],["self"]]]],[11,R[2001],E,E,130,[[[R[543]],["self"]]]],[11,R[2001],E,E,131,[[[R[543]],["self"]]]],[11,R[2001],E,E,132,[[[R[543]],["self"]]]],[11,R[2001],E,E,133,[[[R[543]],["self"]]]],[11,R[2001],E,E,134,[[[R[543]],["self"]]]],[11,R[2001],E,E,135,[[[R[543]],["self"]]]],[11,R[2001],E,E,136,[[[R[543]],["self"]]]],[11,R[2001],E,E,137,[[[R[543]],["self"]]]],[11,R[2001],E,E,138,[[[R[543]],["self"]]]],[11,R[2001],E,E,139,[[[R[543]],["self"]]]],[11,R[2001],E,E,140,[[[R[543]],["self"]]]],[11,R[2001],E,E,141,[[[R[543]],["self"]]]],[11,R[2001],E,E,142,[[[R[543]],["self"]]]],[11,R[2001],E,E,143,[[[R[543]],["self"]]]],[11,R[2001],E,E,144,[[[R[543]],["self"]]]],[11,R[2001],E,E,145,[[[R[543]],["self"]]]],[11,R[2001],E,E,146,[[[R[543]],["self"]]]],[11,R[2001],E,E,147,[[[R[543]],["self"]]]],[11,R[2001],E,E,148,[[[R[543]],["self"]]]],[11,R[2001],E,E,149,[[[R[543]],["self"]]]],[11,R[2001],E,E,150,[[[R[543]],["self"]]]],[11,R[2001],E,E,151,[[[R[543]],["self"]]]],[11,R[2001],E,E,152,[[[R[543]],["self"]]]],[11,R[2001],E,E,153,[[[R[543]],["self"]]]],[11,R[2001],E,E,154,[[[R[543]],["self"]]]],[11,R[2001],E,E,155,[[[R[543]],["self"]]]],[11,R[2001],E,E,156,[[[R[543]],["self"]]]],[11,R[2001],E,E,157,[[[R[543]],["self"]]]],[11,R[2001],E,E,158,[[[R[543]],["self"]]]],[11,R[2001],E,E,159,[[[R[543]],["self"]]]],[11,R[2001],E,E,160,[[[R[543]],["self"]]]],[11,R[2001],E,E,161,[[[R[543]],["self"]]]],[11,R[2001],E,E,162,[[[R[543]],["self"]]]],[11,R[2001],E,E,163,[[[R[543]],["self"]]]],[11,R[2001],E,E,164,[[[R[543]],["self"]]]],[11,R[2001],E,E,165,[[[R[543]],["self"]]]],[11,R[2001],E,E,166,[[[R[543]],["self"]]]],[11,R[2001],E,E,167,[[[R[543]],["self"]]]],[11,R[2001],E,E,168,[[[R[543]],["self"]]]],[11,R[2001],E,E,169,[[[R[543]],["self"]]]],[11,R[2001],E,E,170,[[[R[543]],["self"]]]],[11,R[2001],E,E,171,[[[R[543]],["self"]]]],[11,R[2001],E,E,172,[[[R[543]],["self"]]]],[11,R[2001],E,E,173,[[[R[543]],["self"]]]],[11,R[2001],E,E,174,[[[R[543]],["self"]]]],[11,R[2001],E,E,175,[[[R[543]],["self"]]]],[11,R[2001],E,E,176,[[[R[543]],["self"]]]],[11,R[2001],E,E,177,[[[R[543]],["self"]]]],[11,R[2001],E,E,178,[[[R[543]],["self"]]]],[11,R[2001],E,E,179,[[[R[543]],["self"]]]],[11,R[2001],E,E,180,[[[R[543]],["self"]]]],[11,R[2001],E,E,181,[[[R[543]],["self"]]]],[11,R[2001],E,E,182,[[[R[543]],["self"]]]],[11,R[2001],E,E,183,[[[R[543]],["self"]]]],[11,R[2001],E,E,184,[[[R[543]],["self"]]]],[11,R[2001],E,E,185,[[[R[543]],["self"]]]],[11,R[2001],"syn",E,64,[[[R[543]],["self"]]]],[11,R[2001],E,E,65,[[[R[543]],["self"]]]],[11,R[2001],E,E,0,[[[R[543]],["self"]]]],[11,R[2001],E,E,1,[[[R[543]],["self"]]]],[11,R[2001],E,E,2,[[[R[543]],["self"]]]],[11,R[2001],E,E,66,[[[R[543]],["self"]]]],[11,R[2001],E,E,67,[[[R[543]],["self"]]]],[11,R[2001],E,E,6,[[[R[543]],["self"]]]],[11,R[2001],E,E,4,[[[R[543]],["self"]]]],[11,R[2001],E,E,5,[[[R[543]],["self"]]]],[11,R[2001],E,E,3,[[[R[543]],["self"]]]],[11,R[2001],E,E,8,[[[R[543]],["self"]]]],[11,R[2001],E,E,7,[[[R[543]],["self"]]]],[11,R[2001],E,E,9,[[[R[543]],["self"]]]],[11,R[2001],E,E,68,[[[R[543]],["self"]]]],[11,R[2001],E,E,11,[[[R[543]],["self"]]]],[11,R[2001],E,E,10,[[[R[543]],["self"]]]],[11,R[2001],E,E,18,[[[R[543]],["self"]]]],[11,R[2001],E,E,15,[[[R[543]],["self"]]]],[11,R[2001],E,E,12,[[[R[543]],["self"]]]],[11,R[2001],E,E,13,[[[R[543]],["self"]]]],[11,R[2001],E,E,69,[[[R[543]],["self"]]]],[11,R[2001],E,E,20,[[[R[543]],["self"]]]],[11,R[2001],E,E,14,[[[R[543]],["self"]]]],[11,R[2001],E,E,17,[[[R[543]],["self"]]]],[11,R[2001],E,E,16,[[[R[543]],["self"]]]],[11,R[2001],E,E,19,[[[R[543]],["self"]]]],[11,R[2001],E,E,70,[[[R[543]],["self"]]]],[11,R[2001],E,E,72,[[[R[543]],["self"]]]],[11,R[2001],E,E,73,[[[R[543]],["self"]]]],[11,R[2001],E,E,23,[[[R[543]],["self"]]]],[11,R[2001],E,E,241,[[[R[543]],["self"]]]],[11,R[2001],E,E,190,[[[R[543]],["self"]]]],[11,R[2001],E,E,242,[[[R[543]],["self"]]]],[11,R[2001],E,E,21,[[[R[543]],["self"]]]],[11,R[2001],E,E,24,[[[R[543]],["self"]]]],[11,R[2001],E,E,29,[[[R[543]],["self"]]]],[11,R[2001],E,E,28,[[[R[543]],["self"]]]],[11,R[2001],E,E,71,[[[R[543]],["self"]]]],[11,R[2001],E,E,22,[[[R[543]],["self"]]]],[11,R[2001],E,E,30,[[[R[543]],["self"]]]],[11,R[2001],E,E,27,[[[R[543]],["self"]]]],[11,R[2001],E,E,26,[[[R[543]],["self"]]]],[11,R[2001],E,E,25,[[[R[543]],["self"]]]],[11,R[2001],E,E,31,[[[R[543]],["self"]]]],[11,R[2001],E,E,76,[[[R[543]],["self"]]]],[11,R[2001],E,E,191,[[[R[543]],["self"]]]],[11,R[2001],E,E,192,[[[R[543]],["self"]]]],[11,R[2001],E,E,193,[[[R[543]],["self"]]]],[11,R[2001],E,E,194,[[[R[543]],["self"]]]],[11,R[2001],E,E,195,[[[R[543]],["self"]]]],[11,R[2001],E,E,196,[[[R[543]],["self"]]]],[11,R[2001],E,E,32,[[[R[543]],["self"]]]],[11,R[2001],E,E,33,[[[R[543]],["self"]]]],[11,R[2001],E,E,34,[[[R[543]],["self"]]]],[11,R[2001],E,E,38,[[[R[543]],["self"]]]],[11,R[2001],E,E,80,[[[R[543]],["self"]]]],[11,R[2001],E,E,81,[[[R[543]],["self"]]]],[11,R[2001],E,E,84,[[[R[543]],["self"]]]],[11,R[2001],E,E,52,[[[R[543]],["self"]]]],[11,R[2001],E,E,41,[[[R[543]],["self"]]]],[11,R[2001],E,E,50,[[[R[543]],["self"]]]],[11,R[2001],E,E,51,[[[R[543]],["self"]]]],[11,R[2001],E,E,42,[[[R[543]],["self"]]]],[11,R[2001],E,E,47,[[[R[543]],["self"]]]],[11,R[2001],E,E,54,[[[R[543]],["self"]]]],[11,R[2001],E,E,49,[[[R[543]],["self"]]]],[11,R[2001],E,E,53,[[[R[543]],["self"]]]],[11,R[2001],E,E,44,[[[R[543]],["self"]]]],[11,R[2001],E,E,43,[[[R[543]],["self"]]]],[11,R[2001],E,E,48,[[[R[543]],["self"]]]],[11,R[2001],E,E,45,[[[R[543]],["self"]]]],[11,R[2001],E,E,46,[[[R[543]],["self"]]]],[11,R[2001],E,E,55,[[[R[543]],["self"]]]],[11,R[2001],E,E,83,[[[R[543]],["self"]]]],[11,R[2001],E,E,40,[[[R[543]],["self"]]]],[11,R[2001],E,E,82,[[[R[543]],["self"]]]],[11,R[2001],E,E,39,[[[R[543]],["self"]]]],[11,R[2001],E,E,60,[[[R[543]],["self"]]]],[11,R[2001],E,E,61,[[[R[543]],["self"]]]],[11,R[2001],E,E,86,[[[R[543]],["self"]]]],[11,R[2001],E,E,85,[[[R[543]],["self"]]]],[11,R[2001],E,E,56,[[[R[543]],["self"]]]],[11,R[2001],E,E,57,[[[R[543]],["self"]]]],[11,R[2001],E,E,58,[[[R[543]],["self"]]]],[11,R[2001],E,E,59,[[[R[543]],["self"]]]],[11,R[2001],R[1940],E,201,[[[R[543]],["self"]]]],[11,R[2001],E,E,200,[[[R[543]],["self"]]]],[11,"new","syn",R[2002],210,[[["span"],["str"]],["ident"]]],[11,"span",E,R[2003],210,[[["self"]],["span"]]],[11,R[545],E,R[2004],210,[[["self"],["span"]]]],[11,"visit_abi","syn::visit",E,203,[[["self"],["abi"]]]],[11,R[1818],E,E,203,[[["self"],[R[1819]]]]],[11,R[1820],E,E,203,[[["self"],[R[1978]]]]],[11,R[1821],E,E,203,[[["self"],[R[2005]]]]],[11,R[1822],E,E,203,[[["self"],[R[2000]]]]],[11,R[1823],E,E,203,[[["self"],[R[1824]]]]],[11,R[1825],E,E,203,[[["self"],["binop"]]]],[11,R[1826],E,E,203,[[["self"],["binding"]]]],[11,R[1827],E,E,203,[[["self"],[R[1828]]]]],[11,R[1829],E,E,203,[[["self"],[R[1946]]]]],[11,R[1830],E,E,203,[[["self"],[R[1952]]]]],[11,R[2006],E,E,203,[[["self"],["data"]]]],[11,R[1831],E,E,203,[[["self"],[R[2007]]]]],[11,R[1832],E,E,203,[[["self"],[R[1949]]]]],[11,R[1833],E,E,203,[[["self"],[R[1967]]]]],[11,R[1834],E,E,203,[[["self"],[R[1835]]]]],[11,R[2008],E,E,203,[[["self"],["expr"]]]],[11,R[1836],E,E,203,[[["self"],[R[1945]]]]],[11,R[1837],E,E,203,[[["self"],[R[2009]]]]],[11,R[1838],E,E,203,[[["self"],[R[2010]]]]],[11,R[1839],E,E,203,[[["self"],[R[1960]]]]],[11,R[1840],E,E,203,[[["self"],[R[1961]]]]],[11,R[1841],E,E,203,[[["self"],["exprlit"]]]],[11,R[1842],E,E,203,[[["self"],[R[1964]]]]],[11,R[1843],E,E,203,[[["self"],[R[2011]]]]],[11,R[1844],E,E,203,[[["self"],[R[1956]]]]],[11,R[1845],E,E,203,[[["self"],[R[1846]]]]],[11,R[1847],E,E,203,[[["self"],["field"]]]],[11,R[1848],E,E,203,[[["self"],["fields"]]]],[11,R[1849],E,E,203,[[["self"],[R[1850]]]]],[11,R[1851],E,E,203,[[["self"],[R[1852]]]]],[11,R[1853],E,E,203,[[["self"],[R[1854]]]]],[11,R[1855],E,E,203,[[["self"],[R[1856]]]]],[11,R[1857],E,E,203,[[["self"],[R[1995]]]]],[11,R[1858],E,E,203,[[["self"],["index"]]]],[11,R[1859],E,E,203,[[["self"],[R[1860]]]]],[11,R[1861],E,E,203,[[["self"],[R[1862]]]]],[11,"visit_lit",E,E,203,[[["self"],["lit"]]]],[11,R[1863],E,E,203,[[["self"],["litbool"]]]],[11,R[1864],E,E,203,[[["self"],["litbyte"]]]],[11,R[1865],E,E,203,[[["self"],[R[1948]]]]],[11,R[1866],E,E,203,[[["self"],["litchar"]]]],[11,R[1867],E,E,203,[[["self"],["litfloat"]]]],[11,R[1868],E,E,203,[[["self"],["litint"]]]],[11,R[1869],E,E,203,[[["self"],["litstr"]]]],[11,R[1870],E,E,203,[[["self"],[R[1871]]]]],[11,R[1872],E,E,203,[[["self"],["macro"]]]],[11,R[1873],E,E,203,[[["self"],[R[1874]]]]],[11,R[1875],E,E,203,[[["self"],["member"]]]],[11,R[2012],E,E,203,[[["self"],["meta"]]]],[11,R[1876],E,E,203,[[["self"],[R[2013]]]]],[11,R[1877],E,E,203,[[["self"],[R[1878]]]]],[11,R[1879],E,E,203,[[["self"],[R[1943]]]]],[11,R[1880],E,E,203,[[["self"],[R[1881]]]]],[11,R[2014],E,E,203,[[["self"],["path"]]]],[11,R[1882],E,E,203,[[["self"],[R[1883]]]]],[11,R[1884],E,E,203,[[["self"],[R[1885]]]]],[11,R[1886],E,E,203,[[["self"],[R[1887]]]]],[11,R[1888],E,E,203,[[["self"],[R[1889]]]]],[11,R[1890],E,E,203,[[["self"],[R[1891]]]]],[11,R[1892],E,E,203,[[["self"],["qself"]]]],[11,R[1893],E,E,203,[[["self"],[R[1951]]]]],[11,R[1894],E,E,203,[[["self"],[R[1947]]]]],[11,R[1895],E,E,203,[[["self"],[R[1896]]]]],[11,R[2015],E,E,203,[[["self"],["type"]]]],[11,R[1897],E,E,203,[[["self"],[R[1969]]]]],[11,R[1898],E,E,203,[[["self"],[R[1950]]]]],[11,R[1899],E,E,203,[[["self"],[R[1973]]]]],[11,R[1900],E,E,203,[[["self"],[R[1901]]]]],[11,R[1902],E,E,203,[[["self"],[R[1974]]]]],[11,R[1903],E,E,203,[[["self"],[R[1975]]]]],[11,R[1904],E,E,203,[[["self"],[R[1970]]]]],[11,R[1905],E,E,203,[[["self"],[R[1966]]]]],[11,R[1906],E,E,203,[[["self"],[R[1907]]]]],[11,R[1908],E,E,203,[[["self"],[R[1972]]]]],[11,R[1909],E,E,203,[[["self"],[R[2016]]]]],[11,R[1910],E,E,203,[[["self"],["typeptr"]]]],[11,R[1911],E,E,203,[[["self"],[R[1912]]]]],[11,R[1913],E,E,203,[[["self"],[R[1968]]]]],[11,R[1914],E,E,203,[[["self"],[R[1915]]]]],[11,R[1916],E,E,203,[[["self"],[R[1971]]]]],[11,R[1917],E,E,203,[[["self"],[R[1918]]]]],[11,R[1919],E,E,203,[[["self"],["unop"]]]],[11,R[1920],E,E,203,[[["self"],["variant"]]]],[11,R[1921],E,E,203,[[["self"],[R[2017]]]]],[11,R[1922],E,E,203,[[["self"],[R[1953]]]]],[11,R[1923],E,E,203,[[["self"],[R[1924]]]]],[11,R[1925],E,E,203,[[["self"],[R[1944]]]]],[11,R[1926],E,E,203,[[["self"],[R[1816]]]]],[11,R[1927],E,E,203,[[["self"],[R[1928]]]]],[11,R[2018],E,E,203,[[["self"],["span"]]]],[11,R[1929],E,E,203,[[["self"],["ident"]]]],[11,"peek",R[1941],R[2019],249,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[1937],249,[[],["error"]]]],"p":[[3,R[2139]],[3,"MetaList"],[3,R[2020]],[3,"Field"],[3,R[2021]],[3,R[2022]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[2023]],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,R[2024]],[3,"Index"],[3,R[2025]],[3,"ConstParam"],[3,"Generics"],[3,R[2026]],[3,R[2027]],[3,R[2028]],[3,R[2029]],[3,"TraitBound"],[3,"TypeParam"],[3,R[2030]],[3,"Lifetime"],[3,"LitBool"],[3,R[2031]],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[2032]],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[2033]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[2034]],[3,"TypeSlice"],[3,R[2035]],[3,"TypeTuple"],[3,R[2036]],[3,R[2037]],[3,"Binding"],[3,R[2038]],[3,R[2039]],[3,"Path"],[3,R[2040]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,R[2041]],[4,R[2042]],[4,R[2043]],[4,R[2044]],[4,R[2045]],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,R[2046]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,R[2047]],[4,"ReturnType"],[4,"Type"],[4,R[2048]],[4,R[2049]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,R[2050]],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[2051]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[2052]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[2053]],[8,"Spanned"],[8,"Visit"],[8,R[2054]],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[2055]],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,R[2056]],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,R[2057]],[3,R[2058]],[3,R[2059]],[3,"ExprGroup"],[3,"ExprIf"],[3,R[2060]],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[2061]],[3,"ExprRange"],[3,R[2062]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[2063]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,R[2064]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[54]],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","i":[[3,R[2322],"synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding",E,"The name which this BindingInfo will bind to.",0,N],[12,"style",E,"The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst",E,"This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs",E,E,1,N],[12,"ident",E,E,1,N],[12,"fields",E,E,1,N],[12,R[2309],E,E,1,N],[3,R[2323],E,"A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix",E,E,2,N],[3,"Structure",E,"A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds",E,"Changes how bounds are added",N,N],[13,"Both",E,"Add for fields and generics",3,N],[13,"Fields",E,"Fields only",3,N],[13,"Generics",E,"Generics only",3,N],[13,"None",E,"None",3,N],[4,"BindStyle",E,"The type of binding to use when generating a pattern.",N,N],[13,"Move",E,"`x`",4,N],[13,"MoveMut",E,"`mut x`",4,N],[13,"Ref",E,"`ref x`",4,N],[13,"RefMut",E,"`ref mut x`",4,N],[5,"unpretty_print",E,"Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["display"]],["string"]]],[11,"ast",E,R[2313],0,[[["self"]],["field"]]],[11,"pat",E,"Generates the pattern fragment for this field binding.",0,[[["self"]],[R[543]]]],[11,R[2311],E,R[2312],0,[[["self"]],[["ident"],["vec",["ident"]]]]],[11,"bindings",E,"Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut",E,"Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast",E,"Returns a `VariantAst` object which contains references to…",2,[[["self"]],[R[2320]]]],[11,"omitted_bindings",E,"True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat",E,"Generates the match-arm pattern which could be used to…",2,[[["self"]],[R[543]]]],[11,"construct",E,"Generates the token stream required to construct the…",2,[[["self"],["f"]],[R[543]]]],[11,"each",E,R[2310],2,[[["self"],["f"]],[R[543]]]],[11,"fold",E,R[2310],2,[[["self"],["i"],["f"]],[R[543]]]],[11,"filter",E,"Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding",E,"Remove the binding at the given index.",2,[[["self"],[R[9]]],["self"]]],[11,"bind_with",E,R[2314],2,[[["self"],["f"]],["self"]]],[11,R[2315],E,R[2316],2,[[["self"],["f"]],["self"]]],[11,R[2311],E,R[2312],2,[[["self"]],[["ident"],["vec",["ident"]]]]],[11,"new",E,"Create a new `Structure` with the variants and fields from…",5,[[[R[1835]]],["self"]]],[11,"variants",E,"Returns a slice of the variants in this Structure.",5,[[["self"]]]],[11,"variants_mut",E,"Returns a mut slice of the variants in this Structure.",5,[[["self"]]]],[11,"ast",E,R[2313],5,[[["self"]],[R[1835]]]],[11,"omitted_variants",E,"True if any variants were omitted due to a…",5,[[["self"]],["bool"]]],[11,"each",E,R[2310],5,[[["self"],["f"]],[R[543]]]],[11,"fold",E,R[2310],5,[[["self"],["i"],["f"]],[R[543]]]],[11,"each_variant",E,"Runs the passed-in function once for each variant, passing…",5,[[["self"],["f"]],[R[543]]]],[11,"filter",E,"Filter the bindings created by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"add_bounds",E,"Specify which bounds should be generated by…",5,[[["self"],[R[2318]]],["self"]]],[11,"filter_variants",E,"Filter the variants matched by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"remove_variant",E,"Remove the variant at the given index.",5,[[["self"],[R[9]]],["self"]]],[11,"bind_with",E,R[2314],5,[[["self"],["f"]],["self"]]],[11,R[2315],E,R[2316],5,[[["self"],["f"]],["self"]]],[11,R[2311],E,"Returns a list of the type parameters which are refrenced…",5,[[["self"]],[["ident"],["vec",["ident"]]]]],[11,"add_impl_generic",E,"Adds an `impl<>` generic parameter. This can be used when…",5,[[["self"],[R[1856]]],["self"]]],[11,"add_trait_bounds",E,"Add trait bounds for a trait with the given path for each…",5,[[[R[1947]],[R[2318]],["self"],[R[45]]]]],[11,"bound_impl",E,R[2317],5,[[["self"],["totokens"]],[R[543]]]],[11,"unsafe_bound_impl",E,R[2317],5,[[["self"],["totokens"]],[R[543]]]],[11,"unbound_impl",E,R[2317],5,[[["self"],["totokens"]],[R[543]]]],[11,"unsafe_unbound_impl",E,R[2317],5,[[["self"],["totokens"]],[R[543]]]],[11,"gen_impl",E,"Generate an impl block for the given struct. This impl…",5,[[["self"],[R[543]]],[R[543]]]],[14,"decl_derive",E,"The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"decl_attribute",E,"The `decl_attribute!` macro declares a custom attribute…",N,N],[14,"test_derive",E,"Run a test on a custom derive. This macro expands both the…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,3,[[["self"]],[R[2318]]]],[11,"clone",E,E,4,[[["self"]],["bindstyle"]]],[11,"clone",E,E,0,[[["self"]],[R[2319]]]],[11,"clone",E,E,1,[[["self"]],[R[2320]]]],[11,"clone",E,E,2,[[["self"]],[R[2321]]]],[11,"clone",E,E,5,[[["self"]],["structure"]]],[11,"eq",E,E,3,[[["self"],[R[2318]]],["bool"]]],[11,"eq",E,E,4,[[["bindstyle"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2319]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2319]]],["bool"]]],[11,"eq",E,E,1,[[[R[2320]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[2320]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2321]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2321]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["structure"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["structure"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,R[2001],E,E,4,[[[R[543]],["self"]]]],[11,R[2001],E,E,0,[[[R[543]],["self"]]]]],"p":[[3,R[2322]],[3,"VariantAst"],[3,R[2323]],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["sysfs_gpio"]={"doc":"GPIO access under Linux using the GPIO sysfs interface","i":[[3,"Pin","sysfs_gpio",E,N,N],[3,"PinPoller",E,E,N,N],[4,"Error",E,E,N,N],[13,"Io",E,"Simple IO error",0,N],[13,R[2297],E,"Read unusual data from sysfs file.",0,N],[13,R[2298],E,"Invalid Path",0,N],[13,"Unsupported",E,"Operation not supported on target os",0,N],[4,"Direction",E,E,N,N],[13,"In",E,E,1,N],[13,"Out",E,E,1,N],[13,"High",E,E,1,N],[13,"Low",E,E,1,N],[4,"Edge",E,E,N,N],[13,"NoInterrupt",E,E,2,N],[13,"RisingEdge",E,E,2,N],[13,"FallingEdge",E,E,2,N],[13,"BothEdges",E,E,2,N],[6,"Result",E,E,N,N],[11,"new",E,"Create a new Pin with the provided `pin_num`",3,[[["u64"]],["pin"]]],[11,"from_path",E,"Create a new Pin with the provided path",3,[[["path"],["asref",["path"]]],[[R[13],["pin"]],["pin"]]]],[11,"get_pin_num",E,"Get the pin number",3,[[["self"]],["u64"]]],[11,"with_exported",E,"Run a closure with the GPIO exported",3,[[["self"],["fnonce"]],[R[13]]]],[11,"is_exported",E,"Determines whether the GPIO is exported",3,[[["self"]],["bool"]]],[11,"export",E,"Export the GPIO",3,[[["self"]],[R[13]]]],[11,"unexport",E,"Unexport the GPIO",3,[[["self"]],[R[13]]]],[11,"get_pin",E,"Get the pin number for the Pin",3,[[["self"]],["u64"]]],[11,"get_direction",E,"Get the direction of the Pin",3,[[["self"]],[[R[13],[R[2299]]],[R[2299]]]]],[11,"set_direction",E,"Set this GPIO as either an input or an output",3,[[["self"],[R[2299]]],[R[13]]]],[11,"get_value",E,"Get the value of the Pin (0 or 1)",3,[[["self"]],[[R[13],["u8"]],["u8"]]]],[11,"set_value",E,"Set the value of the Pin",3,[[["self"],["u8"]],[R[13]]]],[11,"get_edge",E,"Get the currently configured edge for this pin",3,[[["self"]],[[R[13],["edge"]],["edge"]]]],[11,"set_edge",E,"Set the edge on which this GPIO will trigger when polled",3,[[["edge"],["self"]],[R[13]]]],[11,"get_active_low",E,"Get polarity of the Pin (`true` is active low)",3,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,"set_active_low",E,"Set the polarity of the Pin (`true` is active low)",3,[[["self"],["bool"]],[R[13]]]],[11,"get_poller",E,"Get a PinPoller object for this pin",3,[[["self"]],[[R[2300]],[R[13],[R[2300]]]]]],[11,"get_pin",E,"Get the pin associated with this PinPoller",4,[[["self"]],["pin"]]],[11,"new",E,"Create a new PinPoller for the provided pin number",4,[[["u64"]],[[R[2300]],[R[13],[R[2300]]]]]],[11,"poll",E,"Block until an interrupt occurs",4,[[["self"],["isize"]],[[R[13],[R[45]]],[R[45],["u8"]]]]],[14,"try_unexport",E,E,N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"clone",E,E,3,[[["self"]],["pin"]]],[11,"clone",E,E,1,[[["self"]],[R[2299]]]],[11,"clone",E,E,2,[[["self"]],["edge"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"drop",E,E,4,[[["self"]]]],[11,"eq",E,E,3,[[["pin"],["self"]],["bool"]]],[11,"ne",E,E,3,[[["pin"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2299]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["edge"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[45],["error"]],["error"]]]]],"p":[[4,"Error"],[4,"Direction"],[4,"Edge"],[3,"Pin"],[3,"PinPoller"]]};
searchIndex["thread_id"]={"doc":"Thread-ID: get a unique ID for the current thread.","i":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",N,[[],[R[9]]]]],"p":[]};
searchIndex["time"]={"doc":"Simple time handling.","i":[[3,R[735],"time",R[2489],N,N],[3,R[940],E,"Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec",E,"A record specifying a time value in seconds and…",N,N],[12,"sec",E,E,0,N],[12,"nsec",E,E,0,N],[3,R[938],E,"An opaque structure representing a moment in time.",N,N],[3,R[939],E,"A structure representing a moment in time.",N,N],[3,"Tm",E,"Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec",E,"Seconds after the minute - [0, 60]",1,N],[12,"tm_min",E,"Minutes after the hour - [0, 59]",1,N],[12,"tm_hour",E,"Hours after midnight - [0, 23]",1,N],[12,"tm_mday",E,"Day of the month - [1, 31]",1,N],[12,"tm_mon",E,"Months since January - [0, 11]",1,N],[12,"tm_year",E,"Years since 1900",1,N],[12,"tm_wday",E,"Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday",E,"Days since January 1 - [0, 365]",1,N],[12,"tm_isdst",E,"Daylight Saving Time flag.",1,N],[12,"tm_utcoff",E,"Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec",E,"Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt",E,"A wrapper around a `Tm` and format string that implements…",N,N],[4,R[937],E,E,N,N],[13,"InvalidSecond",E,E,2,N],[13,"InvalidMinute",E,E,2,N],[13,"InvalidHour",E,E,2,N],[13,"InvalidDay",E,E,2,N],[13,"InvalidMonth",E,E,2,N],[13,"InvalidYear",E,E,2,N],[13,"InvalidDayOfWeek",E,E,2,N],[13,"InvalidDayOfMonth",E,E,2,N],[13,"InvalidDayOfYear",E,E,2,N],[13,"InvalidZoneOffset",E,E,2,N],[13,"InvalidTime",E,E,2,N],[13,"InvalidSecondsSinceEpoch",E,E,2,N],[13,"MissingFormatConverter",E,E,2,N],[13,"InvalidFormatSpecifier",E,E,2,N],[13,"UnexpectedCharacter",E,E,2,N],[5,"strptime",E,"Parses the time from the string according to the format…",N,[[["str"]],[[R[13],["tm",R[929]]],["tm"],[R[929]]]]],[5,"get_time",E,"Returns the current time as a `timespec` containing the…",N,[[],[R[513]]]],[5,"precise_time_ns",E,R[930],N,[[],["u64"]]],[5,"precise_time_s",E,R[930],N,[[],["f64"]]],[5,"tzset",E,E,N,[[]]],[5,"empty_tm",E,E,N,[[],["tm"]]],[5,"at_utc",E,"Returns the specified time in UTC",N,[[[R[513]]],["tm"]]],[5,"now_utc",E,"Returns the current time in UTC",N,[[],["tm"]]],[5,"at",E,"Returns the specified time in the local timezone",N,[[[R[513]]],["tm"]]],[5,"now",E,"Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime",E,R[934],N,[[["tm"],["str"]],[[R[13],["string",R[929]]],["string"],[R[929]]]]],[11,"weeks",E,R[2490],3,[[["i64"]],[R[411]]]],[11,"days",E,R[2491],3,[[["i64"]],[R[411]]]],[11,"hours",E,R[2492],3,[[["i64"]],[R[411]]]],[11,"minutes",E,R[2493],3,[[["i64"]],[R[411]]]],[11,"seconds",E,R[2494],3,[[["i64"]],[R[411]]]],[11,R[1400],E,R[2495],3,[[["i64"]],[R[411]]]],[11,R[1401],E,R[2496],3,[[["i64"]],[R[411]]]],[11,R[1402],E,R[2497],3,[[["i64"]],[R[411]]]],[11,"span",E,R[2498],3,[[["f"]],[R[411]]]],[11,"num_weeks",E,R[2499],3,[[["self"]],["i64"]]],[11,"num_days",E,R[2500],3,[[["self"]],["i64"]]],[11,"num_hours",E,R[2501],3,[[["self"]],["i64"]]],[11,R[1496],E,R[2502],3,[[["self"]],["i64"]]],[11,R[1403],E,R[2503],3,[[["self"]],["i64"]]],[11,R[1404],E,R[2504],3,[[["self"]],["i64"]]],[11,R[1405],E,R[2505],3,[[["self"]],[[R[45],["i64"]],["i64"]]]],[11,R[1406],E,R[2506],3,[[["self"]],[[R[45],["i64"]],["i64"]]]],[11,R[1040],E,R[2507],3,[[["self"],[R[411]]],[[R[45],[R[411]]],[R[411]]]]],[11,R[1041],E,R[2508],3,[[["self"],[R[411]]],[[R[45],[R[411]]],[R[411]]]]],[11,R[958],E,R[2509],3,[[],[R[411]]]],[11,R[959],E,R[2510],3,[[],[R[411]]]],[11,"zero",E,R[2511],3,[[],[R[411]]]],[11,"is_zero",E,R[2512],3,[[["self"]],["bool"]]],[11,R[3118],E,R[2513],3,[[[R[417]]],[[R[13],[R[411],R[931]]],[R[411]],[R[931]]]]],[11,"to_std",E,R[2514],3,[[["self"]],[[R[417]],[R[931]],[R[13],[R[417],R[931]]]]]],[11,"new",E,E,0,[[["i64"],["i32"]],[R[513]]]],[11,"now",E,"Returns a `PreciseTime` representing the current moment in…",4,[[],[R[932]]]],[11,"to",E,"Returns a `Duration` representing the span of time from…",4,[[["self"],[R[932]]],[R[411]]]],[11,"now",E,"Returns a `SteadyTime` representing the current moment in…",5,[[],[R[935]]]],[11,"to_timespec",E,"Convert time to the seconds from January 1, 1970",1,[[["self"]],[R[513]]]],[11,"to_local",E,"Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc",E,"Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime",E,R[933],1,[[["self"]],["tmfmt"]]],[11,"asctime",E,R[933],1,[[["self"]],["tmfmt"]]],[11,"strftime",E,R[934],1,[[["str"],["self"]],[["tmfmt"],[R[929]],[R[13],["tmfmt",R[929]]]]]],[11,"rfc822",E,"Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z",E,"Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339",E,"Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,R[62],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[62],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,R[62],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"clone",E,E,3,[[["self"]],[R[411]]]],[11,"clone",E,E,6,[[["self"]],[R[931]]]],[11,"clone",E,E,0,[[["self"]],[R[513]]]],[11,"clone",E,E,4,[[["self"]],[R[932]]]],[11,"clone",E,E,5,[[["self"]],[R[935]]]],[11,"clone",E,E,1,[[["self"]],["tm"]]],[11,"clone",E,E,2,[[["self"]],[R[929]]]],[11,"cmp",E,E,3,[[["self"],[R[411]]],[R[47]]]],[11,"cmp",E,E,0,[[["self"],[R[513]]],[R[47]]]],[11,"cmp",E,E,5,[[["self"],[R[935]]],[R[47]]]],[11,"cmp",E,E,1,[[["self"],["tm"]],[R[47]]]],[11,R[63],E,E,3,[[["self"],[R[411]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,R[63],E,E,0,[[["self"],[R[513]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["self"],[R[513]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[513]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[513]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[513]]],["bool"]]],[11,R[63],E,E,5,[[["self"],[R[935]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,5,[[["self"],[R[935]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[935]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[935]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[935]]],["bool"]]],[11,R[63],E,E,1,[[["self"],["tm"]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[411]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[931]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[931]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[513]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[513]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[935]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[935]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[929]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[929]]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"add",E,E,3,[[[R[411]]],[R[411]]]],[11,"add",E,E,0,[[[R[411]]],[R[513]]]],[11,"add",E,E,5,[[[R[411]]],[R[935]]]],[11,"add",E,R[936],1,[[[R[411]]],["tm"]]],[11,"sub",E,E,3,[[[R[411]]],[R[411]]]],[11,"sub",E,E,0,[[[R[411]]],[R[513]]]],[11,"sub",E,E,0,[[[R[513]]],[R[411]]]],[11,"sub",E,E,5,[[[R[935]]],[R[411]]]],[11,"sub",E,E,5,[[[R[411]]],[R[935]]]],[11,"sub",E,R[936],1,[[[R[411]]],["tm"]]],[11,"sub",E,E,1,[[["tm"]],[R[411]]]],[11,"mul",E,E,3,[[["i32"]],[R[411]]]],[11,"div",E,E,3,[[["i32"]],[R[411]]]],[11,"neg",E,E,3,[[],[R[411]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[31],E,E,6,[[["self"]],["str"]]],[11,R[31],E,E,2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,R[937]],[3,R[735]],[3,R[938]],[3,R[939]],[3,R[940]],[3,"TmFmt"]]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[5,"run","tokio",R[3782],N,[[["f"]]]],[0,"clock",E,R[4145],N,N],[5,"now","tokio::clock",R[4146],N,[[],["instant"]]],[0,"codec","tokio",R[3875],N,N],[3,R[3894],R[3789],R[3895],N,N],[8,"Decoder",E,R[3876],N,N],[16,"Item",E,R[3877],0,N],[16,"Error",E,R[3878],0,N],[10,"decode",E,R[3879],0,[[["self"],[R[1604]]],[[R[45]],[R[13],[R[45]]]]]],[11,R[3880],E,R[3881],0,[[["self"],[R[1604]]],[[R[45]],[R[13],[R[45]]]]]],[11,"framed",E,R[3127],0,[[[T]],["framed"]]],[8,"Encoder",E,R[3882],N,N],[16,"Item",E,R[3883],1,N],[16,"Error",E,R[3884],1,N],[10,"encode",E,R[3885],1,[[["self"],[R[1604]]],[R[13]]]],[3,"Framed",E,R[3494],N,N],[3,R[3456],E,R[3886],N,N],[12,"io",E,R[3887],2,N],[12,"codec",E,"The codec",2,N],[12,R[3888],E,R[3889],2,N],[12,R[3458],E,R[3890],2,N],[3,R[3891],E,R[3892],N,N],[3,R[3457],E,R[3893],N,N],[3,R[3896],E,R[3897],N,N],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,"Builder",R[3790],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[3871],E,"An error when the number of bytes read is more than max…",N,N],[3,R[3869],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",3,[[],["self"]]],[11,R[3523],E,"Returns the current max frame setting",3,[[["self"]],[R[9]]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",3,[[["self"],[R[9]]]]],[11,"new",E,"Creates a new length delimited codec builder with default…",4,[[],["builder"]]],[11,"big_endian",E,"Read the length field as a big endian integer",4,[[["self"]],["self"]]],[11,"little_endian",E,"Read the length field as a little endian integer",4,[[["self"]],["self"]]],[11,"native_endian",E,"Read the length field as a native endian integer",4,[[["self"]],["self"]]],[11,R[3523],E,"Sets the max frame length",4,[[["self"],[R[9]]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",4,[[["self"],[R[9]]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",4,[[["self"],[R[9]]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",4,[[["self"],["isize"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",4,[[["self"],[R[9]]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",4,[[["self"]],[R[3524]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",4,[[["self"],[T]],[[R[3524]],[R[3910],[R[3524]]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",4,[[["self"],[T]],[[R[3811],[R[3524]]],[R[3524]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",4,[[["self"],[T]],[[R[3524]],["framed",[R[3524]]]]]],[0,"fs","tokio","Asynchronous filesystem manipulation operations.",N,N],[3,R[3461],R[3792],R[3462],N,N],[5,"create_dir",E,R[3938],N,[[["p"]],[R[3939]]]],[5,R[3940],E,R[3941],N,[[["p"]],[R[3942]]]],[0,"file",E,R[3966],N,N],[3,"File",R[3791],R[3525],N,N],[3,R[3485],E,R[3968],N,N],[3,R[3461],E,R[3462],N,N],[3,R[3484],E,R[3967],N,N],[3,R[3972],E,R[3973],N,N],[3,R[3460],E,R[3969],N,N],[3,R[3970],E,R[3971],N,N],[5,"hard_link",R[3792],R[3943],N,[[["q"],["p"]],[R[3944]]]],[5,R[3026],E,R[3459],N,[[["p"]],[R[3466]]]],[0,"os",E,R[3998],N,N],[0,"unix","tokio::fs::os",R[3999],N,N],[5,"symlink",R[3793],R[4001],N,[[["q"],["p"]],[R[4002]]]],[3,R[3486],E,R[4000],N,N],[5,"read_dir",R[3792],R[3946],N,[[["p"]],[R[3947]]]],[5,"read_link",E,R[3948],N,[[["p"]],[R[3949]]]],[5,"read",E,R[3945],N,[[["p"]],["readfile"]]],[5,"write",E,R[3965],N,[[["c"],["p"]],["writefile"]]],[3,"ReadFile",E,R[3933],N,N],[3,R[4003],E,R[3937],N,N],[5,"remove_dir",E,R[3950],N,[[["p"]],[R[3951]]]],[5,R[3952],E,R[3953],N,[[["p"]],[R[3954]]]],[5,"rename",E,R[3955],N,[[["q"],["p"]],[R[3956]]]],[5,R[3957],E,R[3958],N,[[[R[3469]],["p"]],[R[3959]]]],[5,R[3963],E,R[3459],N,[[["p"]],[R[3964]]]],[3,"File",E,R[3525],N,N],[0,"io","tokio","Asynchronous I/O.",N,N],[8,R[4022],R[3809],R[3535],N,N],[11,R[3123],E,R[3124],5,[[["self"]],["bool"]]],[11,R[4024],E,R[3125],5,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[3888],E,R[3126],5,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,"framed",E,R[3127],5,[[[T]],["framed"]]],[11,"split",E,R[3128],5,[[]]],[8,R[3870],E,R[3536],N,N],[11,R[3284],E,R[3129],6,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4023],E,R[3130],6,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[10,R[3116],E,R[3537],6,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3458],E,R[3131],6,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[5,"stderr",E,R[3960],N,[[],["stderr"]]],[5,"stdin",E,R[3961],N,[[],["stdin"]]],[5,"stdout",E,R[3962],N,[[],["stdout"]]],[3,"Stderr",E,R[3934],N,N],[3,"Stdin",E,R[3935],N,N],[3,"Stdout",E,R[3936],N,N],[5,"copy",E,R[4013],N,[[["w"],["r"]],["copy"]]],[5,"flush",E,R[4014],N,[[["a"]],["flush"]]],[5,"lines",E,R[4018],N,[[["a"]],["lines"]]],[5,"read",E,R[4015],N,[[[T],["r"]],["read"]]],[5,R[3545],E,R[4016],N,[[["a"],[T]],["readexact"]]],[5,R[3122],E,R[3119],N,[[["a"],["vec",["u8"]],["u8"]],["readtoend"]]],[5,"read_until",E,R[3119],N,[[["a"],["vec",["u8"]],["u8"]],["readuntil"]]],[5,R[3116],E,R[4017],N,[[["a"]],[R[3116]]]],[5,R[3170],E,R[3499],N,[[["a"],[T]],["writeall"]]],[3,"Copy",E,R[4004],N,N],[3,"Flush",E,R[4005],N,N],[3,"Lines",E,R[4010],N,N],[3,R[4026],E,R[4006],N,N],[3,"ReadHalf",E,R[4011],N,N],[3,R[4027],E,R[4007],N,N],[3,R[4028],E,R[4008],N,N],[3,R[3282],E,R[4009],N,N],[3,"WriteAll",E,R[3495],N,N],[3,R[4025],E,R[4012],N,N],[3,"Error",E,"The error type for I/O operations of the [`Read`],…",N,N],[4,R[33],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",7,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",7,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",7,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",7,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",7,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",7,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",7,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",7,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",7,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",7,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",7,N],[13,R[2324],E,R[3240],7,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",7,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",7,N],[13,"WriteZero",E,R[3526],7,N],[13,"Interrupted",E,"This operation was interrupted.",7,N],[13,"Other",E,"Any I/O error not part of this list.",7,N],[13,"UnexpectedEof",E,R[3526],7,N],[8,"Read",E,R[3538],N,N],[10,"read",E,R[3126],8,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3539],E,R[3540],8,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3527],E,R[3541],8,[[["self"]],[R[3527]]]],[11,R[3122],E,R[3542],8,[[["self"],["vec"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3543],E,R[3544],8,[[["self"],["string"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3545],E,R[3546],8,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"by_ref",E,R[1673],8,[[["self"]],["self"]]],[11,"bytes",E,R[3547],8,[[],["bytes"]]],[11,"chain",E,R[3548],8,[[["r"]],["chain"]]],[11,"take",E,R[1638],8,[[["u64"]],["take"]]],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[8,"Write",E,R[3549],N,N],[10,"write",E,R[3550],9,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3551],E,R[3552],9,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[10,"flush",E,R[3553],9,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[3170],E,R[3554],9,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[3169],E,R[3555],9,[[["self"],[R[3034]]],[[R[13],["error"]],["error"]]]],[11,"by_ref",E,R[1673],9,[[["self"]],["self"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[3087],R[3531],R[3528],N,N],[3,R[3492],E,R[3529],N,N],[3,R[4187],E,R[3494],N,N],[3,R[3501],E,R[3530],N,N],[3,R[3447],E,R[3532],N,N],[3,R[3520],E,R[3494],N,N],[3,R[3448],E,R[3533],N,N],[3,R[3502],E,R[3534],N,N],[0,"tcp",E,R[4119],N,N],[3,R[3493],R[3794],R[4121],N,N],[3,R[4200],E,R[4120],N,N],[3,R[3087],E,R[3528],N,N],[3,R[3492],E,R[3529],N,N],[0,"udp",R[3531],R[4186],N,N],[3,R[3521],R[3795],R[4188],N,N],[3,R[3522],E,R[3495],N,N],[3,R[4187],E,R[3494],N,N],[3,R[3501],E,R[3530],N,N],[0,"unix",R[3531],"Unix domain socket bindings for `tokio` (only available on…",N,N],[3,R[3493],R[3796],R[4204],N,N],[3,R[4200],E,R[4201],N,N],[3,R[3521],E,R[4202],N,N],[3,R[3522],E,R[4203],N,N],[3,"UCred",E,R[4205],N,N],[12,"uid",E,R[4206],10,N],[12,"gid",E,R[4207],10,N],[3,R[3447],E,R[3532],N,N],[3,R[3520],E,R[3494],N,N],[3,R[3448],E,R[3533],N,N],[3,R[3502],E,R[3534],N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,R[4022],R[3636],R[3535],N,N],[11,R[3123],E,R[3124],5,[[["self"]],["bool"]]],[11,R[4024],E,R[3125],5,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[3888],E,R[3126],5,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,"framed",E,R[3127],5,[[[T]],["framed"]]],[11,"split",E,R[3128],5,[[]]],[8,R[3870],E,R[3536],N,N],[11,R[3284],E,R[3129],6,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4023],E,R[3130],6,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[10,R[3116],E,R[3537],6,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3458],E,R[3131],6,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[8,"Read",E,R[3538],N,N],[10,"read",E,R[3126],8,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3539],E,R[3540],8,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3527],E,R[3541],8,[[["self"]],[R[3527]]]],[11,R[3122],E,R[3542],8,[[["self"],["vec"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3543],E,R[3544],8,[[["self"],["string"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3545],E,R[3546],8,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"by_ref",E,R[1673],8,[[["self"]],["self"]]],[11,"bytes",E,R[3547],8,[[],["bytes"]]],[11,"chain",E,R[3548],8,[[["r"]],["chain"]]],[11,"take",E,R[1638],8,[[["u64"]],["take"]]],[8,"Write",E,R[3549],N,N],[10,"write",E,R[3550],9,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3551],E,R[3552],9,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[10,"flush",E,R[3553],9,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[3170],E,R[3554],9,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[3169],E,R[3555],9,[[["self"],[R[3034]]],[[R[13],["error"]],["error"]]]],[11,"by_ref",E,R[1673],9,[[["self"]],["self"]]],[0,"future",E,"Futures",N,N],[8,"Future",R[3797],R[3556],N,N],[16,"Item",E,R[3557],11,N],[16,"Error",E,R[3558],11,N],[10,"poll",E,R[3559],11,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"wait",E,R[3560],11,[[],[R[13]]]],[11,"map",E,R[3561],11,[[["f"]],["map"]]],[11,"map_err",E,R[3562],11,[[["f"]],["maperr"]]],[11,"from_err",E,R[3563],11,[[],["fromerr"]]],[11,"then",E,R[3564],11,[[["f"]],["then"]]],[11,"and_then",E,R[3565],11,[[["f"]],["andthen"]]],[11,"or_else",E,R[3566],11,[[["f"]],["orelse"]]],[11,"select",E,R[3567],11,[[["b"]],["select"]]],[11,"select2",E,R[3568],11,[[["b"]],["select2"]]],[11,"join",E,R[3569],11,[[["b"]],["join"]]],[11,"join3",E,R[103],11,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[103],11,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[103],11,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[3570],E,R[3571],11,[[],[R[3745]]]],[11,"flatten",E,R[104],11,[[],["flatten"]]],[11,R[3572],E,R[104],11,[[],[R[3573]]]],[11,"fuse",E,R[3574],11,[[],["fuse"]]],[11,"inspect",E,R[105],11,[[["f"]],["inspect"]]],[11,R[131],E,R[3575],11,[[],[R[132]]]],[11,"shared",E,R[3576],11,[[],["shared"]]],[8,R[206],E,R[3577],N,N],[16,"Future",E,R[3578],12,N],[16,"Item",E,R[3579],12,N],[16,"Error",E,R[3580],12,N],[10,R[108],E,R[3581],12,[[]]],[8,R[207],E,R[3582],N,N],[16,"Future",E,R[3583],13,N],[16,"Error",E,R[3584],13,N],[10,R[3585],E,R[3586],13,[[[T]]]],[8,R[789],E,R[3587],N,N],[10,"execute",E,R[3588],14,[[["self"],["f"]],[[R[106]],[R[13],[R[106]]]]]],[3,R[208],E,R[3589],N,N],[4,R[205],E,R[3590],N,N],[13,R[3282],E,R[3591],15,N],[13,"NoCapacity",E,R[3592],15,N],[3,"Failed",E,R[3593],N,N],[3,"JoinAll",E,R[3594],N,N],[5,"select_all",E,R[3595],N,[[["i"]],["selectall"]]],[3,"Inspect",E,R[105],N,N],[3,R[233],E,R[3596],N,N],[5,"done",E,R[3597],N,[[[R[13]]],[R[101]]]],[3,"Then",E,R[3598],N,N],[3,"Join",E,R[3599],N,N],[3,R[113],E,R[3600],N,N],[3,R[232],E,R[3601],N,N],[3,R[231],E,R[3602],N,N],[3,"Join5",E,R[3603],N,N],[3,"Select2",E,R[3604],N,N],[5,"collect",E,R[3605],N,[[["i"]],["joinall"]]],[3,"Empty",E,R[3606],N,N],[5,"failed",E,R[102],N,[[["e"]],[R[101]]]],[3,"Fuse",E,R[3607],N,N],[3,"Join4",E,R[3608],N,N],[3,"OrElse",E,R[3609],N,N],[3,"SelectOk",E,R[3610],N,N],[5,"poll_fn",E,R[3611],N,[[["f"]],["pollfn"]]],[3,"PollFn",E,R[3612],N,N],[5,"loop_fn",E,R[3613],N,[[["s"],["f"]],["loopfn"]]],[3,"LoopFn",E,R[3614],N,N],[3,"Join3",E,R[3615],N,N],[3,"MapErr",E,R[3616],N,N],[3,"Flatten",E,R[3617],N,N],[4,"Loop",E,R[3618],N,N],[13,"Break",E,R[3619],16,N],[13,"Continue",E,R[3620],16,N],[3,"Map",E,R[3621],N,N],[3,"AndThen",E,R[3622],N,N],[3,R[230],E,R[3623],N,N],[3,R[229],E,R[3624],N,N],[4,"Either",E,R[3625],N,N],[13,"A",E,R[3626],17,N],[13,"B",E,R[3627],17,N],[3,"Shared",E,R[3628],N,N],[5,"finished",E,R[102],N,[[[T]],[R[101]]]],[3,"Select",E,R[3629],N,N],[3,"Lazy",E,R[3630],N,N],[5,"select_ok",E,R[3631],N,[[["i"]],["selectok"]]],[5,"empty",E,R[3632],N,[[],["empty"]]],[5,"lazy",E,R[3633],N,[[["f"]],["lazy"]]],[3,R[228],E,R[3634],N,N],[3,"FromErr",E,R[3635],N,N],[0,"stream",R[3636],R[3637],N,N],[0,R[124],R[3639],R[125],N,N],[3,R[219],R[3798],R[125],N,N],[3,"IterMut",E,R[3638],N,N],[8,"Stream",R[3639],R[3640],N,N],[16,"Item",E,R[3641],18,N],[16,"Error",E,R[3642],18,N],[10,"poll",E,R[3643],18,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"wait",E,R[3644],18,[[],["wait"]]],[11,R[108],E,R[3645],18,[[],[R[3646]]]],[11,"map",E,R[3647],18,[[["f"]],["map"]]],[11,"map_err",E,R[3648],18,[[["f"]],["maperr"]]],[11,"filter",E,R[3649],18,[[["f"]],["filter"]]],[11,R[3764],E,R[3650],18,[[["f"]],["filtermap"]]],[11,"then",E,R[129],18,[[["f"]],["then"]]],[11,"and_then",E,R[129],18,[[["f"]],["andthen"]]],[11,"or_else",E,R[3651],18,[[["f"]],["orelse"]]],[11,"collect",E,R[3652],18,[[],["collect"]]],[11,"concat2",E,R[130],18,[[],["concat2"]]],[11,"concat",E,R[130],18,[[],["concat"]]],[11,"fold",E,R[3653],18,[[[T],["f"]],["fold"]]],[11,"flatten",E,R[3654],18,[[],["flatten"]]],[11,R[3765],E,R[3655],18,[[["p"]],["skipwhile"]]],[11,R[3766],E,R[3656],18,[[["p"]],["takewhile"]]],[11,"for_each",E,R[3657],18,[[["f"]],["foreach"]]],[11,"from_err",E,R[3658],18,[[],["fromerr"]]],[11,"take",E,R[3659],18,[[["u64"]],["take"]]],[11,"skip",E,R[3660],18,[[["u64"]],["skip"]]],[11,"fuse",E,R[3661],18,[[],["fuse"]]],[11,"by_ref",E,R[3662],18,[[["self"]],["self"]]],[11,R[131],E,R[3663],18,[[],[R[132]]]],[11,"buffered",E,R[3664],18,[[[R[9]]],["buffered"]]],[11,R[3665],E,R[3666],18,[[[R[9]]],[R[3667]]]],[11,"merge",E,R[111],18,[[["s"]],["merge"]]],[11,"zip",E,R[3668],18,[[["s"]],["zip"]]],[11,"chain",E,R[3669],18,[[["s"]],["chain"]]],[11,"peekable",E,R[3670],18,[[],["peekable"]]],[11,"chunks",E,R[3671],18,[[[R[9]]],["chunks"]]],[11,"select",E,R[3672],18,[[["s"]],["select"]]],[11,"forward",E,R[137],18,[[["s"]],["forward"]]],[11,"split",E,R[3673],18,[[]]],[11,"inspect",E,R[3674],18,[[["f"]],["inspect"]]],[11,R[3675],E,R[3676],18,[[["f"]],[R[3767]]]],[5,R[124],E,R[115],N,[[["i"]],[R[126]]]],[3,R[215],E,R[3677],N,N],[3,"Filter",E,R[3678],N,N],[3,"Then",E,R[3679],N,N],[3,"Chunks",E,R[3680],N,N],[3,"ForEach",E,R[3681],N,N],[5,R[3682],E,R[114],N,[[["j"]],["iterresult"]]],[3,R[158],E,"Error type for sending, used when the receiving end of the…",N,N],[3,"Chain",E,R[3683],N,N],[3,R[216],E,R[112],N,N],[3,"Sender",E,R[141],N,N],[5,R[377],E,R[145],N,[[]]],[3,"Repeat",E,R[3684],N,N],[3,"Concat2",E,R[110],N,N],[3,R[214],E,R[3685],N,N],[3,R[217],E,R[3686],N,N],[3,"IterOk",E,R[109],N,N],[3,"Unfold",E,R[3687],N,N],[3,R[213],E,R[3688],N,N],[5,"repeat",E,R[3689],N,[[[T]],["repeat"]]],[3,"PollFn",E,R[3690],N,N],[3,R[211],E,R[3691],N,N],[3,"Wait",E,R[3692],N,N],[3,"Collect",E,R[3693],N,N],[3,R[212],E,R[3694],N,N],[3,"Map",E,R[3695],N,N],[3,"Take",E,R[3696],N,N],[3,"AndThen",E,R[3697],N,N],[4,R[210],E,R[3698],N,N],[13,"First",E,R[3699],19,N],[13,"Second",E,R[3700],19,N],[13,"Both",E,R[3701],19,N],[3,R[218],E,R[3702],N,N],[3,R[220],E,R[3703],N,N],[3,"FromErr",E,R[3704],N,N],[3,R[3872],E,R[109],N,N],[3,"Inspect",E,R[3705],N,N],[3,R[155],E,R[142],N,N],[5,"iter_ok",E,R[3706],N,[[["i"]],["iterok"]]],[3,"Once",E,R[3707],N,N],[3,R[113],E,R[3708],N,N],[3,"Forward",E,R[3709],N,N],[3,"Concat",E,R[110],N,N],[3,"Empty",E,R[3710],N,N],[3,"Zip",E,R[111],N,N],[3,"Fuse",E,R[3711],N,N],[3,"Merge",E,R[111],N,N],[3,"OrElse",E,R[3712],N,N],[5,R[3713],E,R[115],N,[[["i"]],[R[128]]]],[3,"Peekable",E,R[3714],N,N],[5,"once",E,R[3715],N,[[[R[13]]],["once"]]],[5,"poll_fn",E,R[3716],N,[[["f"]],["pollfn"]]],[3,"MapErr",E,R[3717],N,N],[3,"Flatten",E,R[3718],N,N],[3,R[209],E,R[3719],N,N],[12,"0",E,E,20,N],[12,"1",E,E,20,N],[3,R[234],E,R[109],N,N],[5,"iter",E,R[114],N,[[["j"]],["iter"]]],[3,"Fold",E,R[3720],N,N],[3,"Select",E,R[111],N,N],[3,R[3873],E,"Future returned by `Sender::send`.",N,N],[3,"Buffered",E,R[112],N,N],[5,"unfold",E,R[3721],N,[[[T],["f"]],["unfold"]]],[3,"Skip",E,R[3722],N,N],[5,"empty",E,R[3723],N,[[],["empty"]]],[0,"task",R[3636],R[3724],N,N],[5,"is_in_task",R[3799],R[3725],N,[[],["bool"]]],[3,"Task",E,R[3726],N,N],[3,"Spawn",E,R[3727],N,N],[8,"Unpark",E,R[3728],N,N],[10,"unpark",E,R[3729],21,[[["self"]]]],[5,"spawn",E,R[3730],N,[[[T]],["spawn"]]],[3,"LocalKey",E,R[3731],N,N],[8,"EventSet",E,R[3732],N,N],[10,"insert",E,R[3733],22,[[["self"],[R[9]]]]],[3,"Run",E,"Units of work submitted to an `Executor`, currently only…",N,N],[5,"current",E,R[3734],N,[[],["task"]]],[5,R[3735],E,R[3736],N,[[["f"],[R[201]]],["r"]]],[8,R[789],E,"A trait representing requests to poll futures.",N,N],[10,"execute",E,"Requests that `Run` is executed soon on the given executor.",23,[[["run"],["self"]]]],[5,"init",E,R[3737],N,[[],["bool"]]],[3,R[237],E,R[3738],N,N],[3,"TaskRc",E,"A reference to a piece of data that's accessible only…",N,N],[3,R[236],E,R[385],N,N],[4,"Async",R[3636],R[3739],N,N],[13,"Ready",E,R[3740],24,N],[13,R[99],E,R[3741],24,N],[4,R[204],E,R[3742],N,N],[13,"Ready",E,R[3743],25,N],[13,R[99],E,R[3744],25,N],[8,"Future",E,R[3556],N,N],[16,"Item",E,R[3557],11,N],[16,"Error",E,R[3558],11,N],[10,"poll",E,R[3559],11,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"wait",E,R[3560],11,[[],[R[13]]]],[11,"map",E,R[3561],11,[[["f"]],["map"]]],[11,"map_err",E,R[3562],11,[[["f"]],["maperr"]]],[11,"from_err",E,R[3563],11,[[],["fromerr"]]],[11,"then",E,R[3564],11,[[["f"]],["then"]]],[11,"and_then",E,R[3565],11,[[["f"]],["andthen"]]],[11,"or_else",E,R[3566],11,[[["f"]],["orelse"]]],[11,"select",E,R[3567],11,[[["b"]],["select"]]],[11,"select2",E,R[3568],11,[[["b"]],["select2"]]],[11,"join",E,R[3569],11,[[["b"]],["join"]]],[11,"join3",E,R[103],11,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[103],11,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[103],11,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[3570],E,R[3571],11,[[],[R[3745]]]],[11,"flatten",E,R[104],11,[[],["flatten"]]],[11,R[3572],E,R[104],11,[[],[R[3573]]]],[11,"fuse",E,R[3574],11,[[],["fuse"]]],[11,"inspect",E,R[105],11,[[["f"]],["inspect"]]],[11,R[131],E,R[3575],11,[[],[R[132]]]],[11,"shared",E,R[3576],11,[[],["shared"]]],[8,R[206],E,R[3577],N,N],[16,"Future",E,R[3578],12,N],[16,"Item",E,R[3579],12,N],[16,"Error",E,R[3580],12,N],[10,R[108],E,R[3581],12,[[]]],[6,"Poll",E,R[3746],N,N],[8,"Sink",E,R[3747],N,N],[16,"SinkItem",E,R[3748],26,N],[16,"SinkError",E,R[3749],26,N],[10,R[190],E,R[3750],26,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[10,R[192],E,R[3751],26,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,R[3752],26,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"wait",E,R[3753],26,[[],["wait"]]],[11,"with",E,R[136],26,[[["f"]],["with"]]],[11,R[3754],E,R[136],26,[[["f"]],[R[3755]]]],[11,R[3756],E,R[3757],26,[[["f"]],[R[200]]]],[11,R[3758],E,R[3759],26,[[],[R[199]]]],[11,"buffer",E,R[3760],26,[[[R[9]]],["buffer"]]],[11,"fanout",E,R[3761],26,[[["s"]],["fanout"]]],[11,"flush",E,R[3762],26,[[],["flush"]]],[11,"send",E,R[3763],26,[[],["send"]]],[11,"send_all",E,R[137],26,[[["s"]],["sendall"]]],[8,"Stream",E,R[3640],N,N],[16,"Item",E,R[3641],18,N],[16,"Error",E,R[3642],18,N],[10,"poll",E,R[3643],18,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"wait",E,R[3644],18,[[],["wait"]]],[11,R[108],E,R[3645],18,[[],[R[3646]]]],[11,"map",E,R[3647],18,[[["f"]],["map"]]],[11,"map_err",E,R[3648],18,[[["f"]],["maperr"]]],[11,"filter",E,R[3649],18,[[["f"]],["filter"]]],[11,R[3764],E,R[3650],18,[[["f"]],["filtermap"]]],[11,"then",E,R[129],18,[[["f"]],["then"]]],[11,"and_then",E,R[129],18,[[["f"]],["andthen"]]],[11,"or_else",E,R[3651],18,[[["f"]],["orelse"]]],[11,"collect",E,R[3652],18,[[],["collect"]]],[11,"concat2",E,R[130],18,[[],["concat2"]]],[11,"concat",E,R[130],18,[[],["concat"]]],[11,"fold",E,R[3653],18,[[[T],["f"]],["fold"]]],[11,"flatten",E,R[3654],18,[[],["flatten"]]],[11,R[3765],E,R[3655],18,[[["p"]],["skipwhile"]]],[11,R[3766],E,R[3656],18,[[["p"]],["takewhile"]]],[11,"for_each",E,R[3657],18,[[["f"]],["foreach"]]],[11,"from_err",E,R[3658],18,[[],["fromerr"]]],[11,"take",E,R[3659],18,[[["u64"]],["take"]]],[11,"skip",E,R[3660],18,[[["u64"]],["skip"]]],[11,"fuse",E,R[3661],18,[[],["fuse"]]],[11,"by_ref",E,R[3662],18,[[["self"]],["self"]]],[11,R[131],E,R[3663],18,[[],[R[132]]]],[11,"buffered",E,R[3664],18,[[[R[9]]],["buffered"]]],[11,R[3665],E,R[3666],18,[[[R[9]]],[R[3667]]]],[11,"merge",E,R[111],18,[[["s"]],["merge"]]],[11,"zip",E,R[3668],18,[[["s"]],["zip"]]],[11,"chain",E,R[3669],18,[[["s"]],["chain"]]],[11,"peekable",E,R[3670],18,[[],["peekable"]]],[11,"chunks",E,R[3671],18,[[[R[9]]],["chunks"]]],[11,"select",E,R[3672],18,[[["s"]],["select"]]],[11,"forward",E,R[137],18,[[["s"]],["forward"]]],[11,"split",E,R[3673],18,[[]]],[11,"inspect",E,R[3674],18,[[["f"]],["inspect"]]],[11,R[3675],E,R[3676],18,[[["f"]],[R[3767]]]],[8,"FutureExt",E,R[3779],N,N],[11,"timeout",E,R[3774],27,[[[R[411]]],["timeout"]]],[8,"StreamExt",E,R[3781],N,N],[11,R[4163],E,R[3775],28,[[[R[411]]],[R[4163]]]],[11,R[3777],E,R[3776],28,[[],[R[3777]]]],[11,"timeout",E,R[3778],28,[[[R[411]]],["timeout"]]],[0,"reactor","tokio",R[4029],N,N],[3,R[4030],R[3800],R[4031],N,N],[3,"Handle",E,R[4035],N,N],[3,R[3874],E,R[4032],N,N],[3,"Reactor",E,R[4034],N,N],[3,R[3085],E,R[4033],N,N],[3,"Turn",E,R[4036],N,N],[0,"sync","tokio",R[3768],N,N],[0,"lock",R[3769],R[4073],N,N],[3,"Lock",R[3801],R[4074],N,N],[3,R[405],E,R[4075],N,N],[0,"mpsc",R[3769],R[4078],N,N],[0,"error",R[3770],R[4089],N,N],[3,R[225],R[3802],R[4092],N,N],[3,R[158],E,R[4091],N,N],[3,R[408],E,R[4093],N,N],[3,R[378],E,R[4090],N,N],[3,R[407],E,R[4095],N,N],[3,R[406],E,R[4094],N,N],[3,R[155],R[3770],R[4079],N,N],[3,R[156],E,R[4082],N,N],[3,R[157],E,R[4081],N,N],[5,R[377],E,R[4083],N,[[[R[9]]]]],[3,"Sender",E,R[4080],N,N],[5,R[4084],E,R[4085],N,[[]]],[0,"oneshot",R[3769],R[4096],N,N],[3,"Sender",R[3771],R[4097],N,N],[3,R[155],E,R[4098],N,N],[0,"error",E,R[4100],N,N],[3,R[378],R[3803],R[4101],N,N],[3,R[409],E,R[4102],N,N],[5,R[377],R[3771],R[4099],N,[[]]],[0,"watch",R[3769],R[4105],N,N],[3,R[155],R[3772],R[4106],N,N],[3,"Sender",E,R[4107],N,N],[3,"Ref",E,R[4108],N,N],[0,"error",E,R[4110],N,N],[3,R[378],R[3804],R[4111],N,N],[3,R[158],E,R[4112],N,N],[5,R[377],R[3772],R[4109],N,[[[T]]]],[0,"timer","tokio",R[4141],N,N],[0,R[4147],R[3773],R[3369],N,N],[3,R[3392],R[3805],R[3369],N,N],[3,"Expired",E,R[4148],N,N],[3,"Key",E,R[4149],N,N],[0,"timeout",R[3773],R[4164],N,N],[3,"Timeout",R[3806],R[3375],N,N],[3,"Error",E,R[4165],N,N],[3,"Delay",R[3773],R[4142],N,N],[3,R[3392],E,R[3369],N,N],[3,"Error",E,R[4143],N,N],[3,"Interval",E,R[4144],N,N],[3,"Timeout",E,R[3375],N,N],[0,"util","tokio","Utilities for working with Tokio.",N,N],[11,"timeout",R[3636],R[3774],27,[[[R[411]]],["timeout"]]],[11,R[4163],E,R[3775],28,[[[R[411]]],[R[4163]]]],[11,R[3777],E,R[3776],28,[[],[R[3777]]]],[11,"timeout",E,R[3778],28,[[[R[411]]],["timeout"]]],[8,"FutureExt",R[3780],R[3779],N,N],[11,"timeout",R[3636],R[3774],27,[[[R[411]]],["timeout"]]],[8,"StreamExt",R[3780],R[3781],N,N],[11,R[4163],R[3636],R[3775],28,[[[R[411]]],[R[4163]]]],[11,R[3777],E,R[3776],28,[[],[R[3777]]]],[11,"timeout",E,R[3778],28,[[[R[411]]],["timeout"]]],[0,"executor","tokio","Task execution utilities.",N,N],[8,R[789],R[3807],R[3929],N,N],[10,"spawn",E,R[3930],29,[[["self"],["box",["future"]],["future"]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,R[792],29,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[8,R[798],E,R[3931],N,N],[10,"spawn",E,R[3932],30,[[["self"],[T]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,R[792],30,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[3,R[796],E,R[3923],N,N],[3,R[795],E,R[3922],N,N],[3,"Spawn",E,"Return value from the `spawn` function.",N,N],[5,"spawn",E,"Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",N,N],[3,"Builder",R[3783],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Runtime",E,"Handle to the Tokio runtime.",N,N],[3,R[3282],E,"A future that resolves when the Tokio `Runtime` is shut…",N,N],[3,R[3407],E,"Executes futures on the runtime",N,N],[5,"run",E,R[3782],N,[[["f"]]]],[0,"current_thread",E,"A runtime implementation that runs everything on the…",N,N],[5,"spawn",R[3808],R[3918],N,[[["f"]]]],[3,R[3407],E,R[3916],N,N],[3,"Builder",E,"Builds a Single-threaded runtime with custom configuration…",N,N],[3,"Runtime",E,"Single-threaded runtime provides a way to start reactor…",N,N],[3,"Handle",E,R[3917],N,N],[5,R[3788],E,"Run the provided future to completion using a runtime…",N,[[["f"]],[R[13]]]],[5,"run",E,"Start a current-thread runtime using the supplied future…",N,[[["f"]]]],[11,"new",E,R[3784],31,[[],["builder"]]],[11,"clock",E,R[3785],31,[[["self"],["clock"]],["self"]]],[11,"build",E,R[3786],31,[[["self"]],[["runtime"],[R[13],["runtime"]]]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` runtime instance…",32,[[["self"],["f"]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,R[792],32,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"new",E,"Returns a new runtime initialized with default…",33,[[],[["runtime"],[R[13],["runtime"]]]]],[11,"handle",E,"Get a new handle to spawn futures on the single-threaded…",33,[[["self"]],["handle"]]],[11,"spawn",E,"Spawn a future onto the single-threaded Tokio runtime.",33,[[["self"],["f"]],["self"]]],[11,"block_on",E,"Runs the provided future, blocking the current thread…",33,[[["self"],["f"]],[R[13]]]],[11,"run",E,R[3394],33,[[["self"]],[[R[13],["runerror"]],["runerror"]]]],[11,"new",R[3783],R[3784],34,[[],["builder"]]],[11,"clock",E,R[3785],34,[[["self"],["clock"]],["self"]]],[11,R[4133],E,"Sets a callback to handle panics in futures.",34,[[["self"],["f"]],["self"]]],[11,"core_threads",E,"Set the maximum number of worker threads for the…",34,[[["self"],[R[9]]],["self"]]],[11,"blocking_threads",E,"Set the maximum number of concurrent blocking sections in…",34,[[["self"],[R[9]]],["self"]]],[11,"keep_alive",E,"Set the worker thread keep alive duration for threads in…",34,[[["self"],[R[45],[R[411]]],[R[411]]],["self"]]],[11,R[4134],E,"Set name prefix of threads spawned by the `Runtime`'s…",34,[[["self"],["string"],["into",["string"]]],["self"]]],[11,R[4135],E,R[4136],34,[[["self"],[R[9]]],["self"]]],[11,R[4137],E,R[4138],34,[[["self"],["f"]],["self"]]],[11,R[4139],E,R[4140],34,[[["self"],["f"]],["self"]]],[11,"build",E,R[3786],34,[[["self"]],[[R[13],["runtime"]],["runtime"]]]],[11,"spawn",E,R[3787],35,[[["self"],["f"]]]],[11,"new",E,"Create a new runtime instance with default configuration…",36,[[],[R[13]]]],[11,"reactor",E,"Return a reference to the reactor handle for this runtime…",36,[[["self"]],["handle"]]],[11,"executor",E,"Return a handle to the runtime's executor.",36,[[["self"]],[R[3405]]]],[11,"spawn",E,R[3787],36,[[["self"],["f"]],["self"]]],[11,"block_on",E,"Run a future to completion on the Tokio runtime.",36,[[["self"],["f"]],[R[13]]]],[11,R[3788],E,"Run a future to completion on the Tokio runtime, then wait…",36,[[["f"]],[R[13]]]],[11,R[3430],E,"Signals the runtime to shutdown once it becomes idle.",36,[[],[R[3116]]]],[11,R[3431],E,"Signals the runtime to shutdown immediately.",36,[[],[R[3116]]]],[11,"from",R[3789],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[17],E,E,37,[[["self"]],[T]]],[11,R[18],E,E,37,[[[T],["self"]]]],[11,R[12],E,E,37,[[[U]],[R[13]]]],[11,R[14],E,E,37,[[],[R[13]]]],[11,R[15],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[R[42]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[12],E,E,38,[[[U]],[R[13]]]],[11,R[14],E,E,38,[[],[R[13]]]],[11,R[15],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[12],E,E,39,[[[U]],[R[13]]]],[11,R[14],E,E,39,[[],[R[13]]]],[11,R[15],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[R[42]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[12],E,E,40,[[[U]],[R[13]]]],[11,R[14],E,E,40,[[],[R[13]]]],[11,R[15],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[R[42]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[17],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[[T],["self"]]]],[11,R[12],E,E,41,[[[U]],[R[13]]]],[11,R[14],E,E,41,[[],[R[13]]]],[11,R[15],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[R[42]]]],[11,"from",R[3790],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,42,[[["self"]],["string"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[12],E,E,42,[[[U]],[R[13]]]],[11,R[14],E,E,42,[[],[R[13]]]],[11,R[15],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",R[3791],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[17],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[[T],["self"]]]],[11,R[12],E,E,43,[[[U]],[R[13]]]],[11,R[14],E,E,43,[[],[R[13]]]],[11,R[15],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[R[42]]]],[11,"from",R[3792],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[12],E,E,44,[[[U]],[R[13]]]],[11,R[14],E,E,44,[[],[R[13]]]],[11,R[15],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[R[42]]]],[11,"from",R[3791],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[12],E,E,45,[[[U]],[R[13]]]],[11,R[14],E,E,45,[[],[R[13]]]],[11,R[15],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[R[42]]]],[11,R[108],E,E,45,[[],["f"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[12],E,E,46,[[[U]],[R[13]]]],[11,R[14],E,E,46,[[],[R[13]]]],[11,R[15],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[R[42]]]],[11,R[108],E,E,46,[[],["f"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[12],E,E,47,[[[U]],[R[13]]]],[11,R[14],E,E,47,[[],[R[13]]]],[11,R[15],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[R[42]]]],[11,R[108],E,E,47,[[],["f"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[12],E,E,48,[[[U]],[R[13]]]],[11,R[14],E,E,48,[[],[R[13]]]],[11,R[15],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[R[42]]]],[11,R[108],E,E,48,[[],["f"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[12],E,E,49,[[[U]],[R[13]]]],[11,R[14],E,E,49,[[],[R[13]]]],[11,R[15],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[R[42]]]],[11,R[108],E,E,49,[[],["f"]]],[11,"from",R[3793],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[12],E,E,50,[[[U]],[R[13]]]],[11,R[14],E,E,50,[[],[R[13]]]],[11,R[15],E,E,50,[[["self"]],[T]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[R[42]]]],[11,R[108],E,E,50,[[],["f"]]],[11,"from",R[3792],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[12],E,E,51,[[[U]],[R[13]]]],[11,R[14],E,E,51,[[],[R[13]]]],[11,R[15],E,E,51,[[["self"]],[T]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[["self"]],[R[42]]]],[11,R[108],E,E,51,[[],["f"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[12],E,E,52,[[[U]],[R[13]]]],[11,R[14],E,E,52,[[],[R[13]]]],[11,R[15],E,E,52,[[["self"]],[T]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[["self"]],[R[42]]]],[11,R[108],E,E,52,[[],["f"]]],[11,"from",R[3809],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[12],E,E,53,[[[U]],[R[13]]]],[11,R[14],E,E,53,[[],[R[13]]]],[11,R[15],E,E,53,[[["self"]],[T]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[R[42]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[12],E,E,54,[[[U]],[R[13]]]],[11,R[14],E,E,54,[[],[R[13]]]],[11,R[15],E,E,54,[[["self"]],[T]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[R[42]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[12],E,E,55,[[[U]],[R[13]]]],[11,R[14],E,E,55,[[],[R[13]]]],[11,R[15],E,E,55,[[["self"]],[T]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[R[42]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[12],E,E,56,[[[U]],[R[13]]]],[11,R[14],E,E,56,[[],[R[13]]]],[11,R[15],E,E,56,[[["self"]],[T]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[R[42]]]],[11,R[108],E,E,56,[[],["f"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[12],E,E,57,[[[U]],[R[13]]]],[11,R[14],E,E,57,[[],[R[13]]]],[11,R[15],E,E,57,[[["self"]],[T]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[R[42]]]],[11,R[108],E,E,57,[[],["f"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[12],E,E,58,[[[U]],[R[13]]]],[11,R[14],E,E,58,[[],[R[13]]]],[11,R[15],E,E,58,[[["self"]],[T]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[R[42]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[12],E,E,59,[[[U]],[R[13]]]],[11,R[14],E,E,59,[[],[R[13]]]],[11,R[15],E,E,59,[[["self"]],[T]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[R[42]]]],[11,R[108],E,E,59,[[],["f"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[12],E,E,60,[[[U]],[R[13]]]],[11,R[14],E,E,60,[[],[R[13]]]],[11,R[15],E,E,60,[[["self"]],[T]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[19],E,E,60,[[["self"]],[R[42]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[12],E,E,61,[[[U]],[R[13]]]],[11,R[14],E,E,61,[[],[R[13]]]],[11,R[15],E,E,61,[[["self"]],[T]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[19],E,E,61,[[["self"]],[R[42]]]],[11,R[108],E,E,61,[[],["f"]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[12],E,E,62,[[[U]],[R[13]]]],[11,R[14],E,E,62,[[],[R[13]]]],[11,R[15],E,E,62,[[["self"]],[T]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[19],E,E,62,[[["self"]],[R[42]]]],[11,R[108],E,E,62,[[],["f"]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[12],E,E,63,[[[U]],[R[13]]]],[11,R[14],E,E,63,[[],[R[13]]]],[11,R[15],E,E,63,[[["self"]],[T]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[19],E,E,63,[[["self"]],[R[42]]]],[11,R[108],E,E,63,[[],["f"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[12],E,E,64,[[[U]],[R[13]]]],[11,R[14],E,E,64,[[],[R[13]]]],[11,R[15],E,E,64,[[["self"]],[T]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[19],E,E,64,[[["self"]],[R[42]]]],[11,R[108],E,E,64,[[],["f"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[12],E,E,65,[[[U]],[R[13]]]],[11,R[14],E,E,65,[[],[R[13]]]],[11,R[15],E,E,65,[[["self"]],[T]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[19],E,E,65,[[["self"]],[R[42]]]],[11,R[62],E,E,66,[[["self"]],["string"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[12],E,E,66,[[[U]],[R[13]]]],[11,R[14],E,E,66,[[],[R[13]]]],[11,R[15],E,E,66,[[["self"]],[T]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[19],E,E,66,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",R[3794],E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[12],E,E,67,[[[U]],[R[13]]]],[11,R[14],E,E,67,[[],[R[13]]]],[11,R[15],E,E,67,[[["self"]],[T]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[19],E,E,67,[[["self"]],[R[42]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[12],E,E,68,[[[U]],[R[13]]]],[11,R[14],E,E,68,[[],[R[13]]]],[11,R[15],E,E,68,[[["self"]],[T]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[19],E,E,68,[[["self"]],[R[42]]]],[11,"from",R[3795],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[12],E,E,69,[[[U]],[R[13]]]],[11,R[14],E,E,69,[[],[R[13]]]],[11,R[15],E,E,69,[[["self"]],[T]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[19],E,E,69,[[["self"]],[R[42]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[12],E,E,70,[[[U]],[R[13]]]],[11,R[14],E,E,70,[[],[R[13]]]],[11,R[15],E,E,70,[[["self"]],[T]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[19],E,E,70,[[["self"]],[R[42]]]],[11,"from",R[3796],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[12],E,E,71,[[[U]],[R[13]]]],[11,R[14],E,E,71,[[],[R[13]]]],[11,R[15],E,E,71,[[["self"]],[T]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[19],E,E,71,[[["self"]],[R[42]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[12],E,E,72,[[[U]],[R[13]]]],[11,R[14],E,E,72,[[],[R[13]]]],[11,R[15],E,E,72,[[["self"]],[T]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[19],E,E,72,[[["self"]],[R[42]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[12],E,E,73,[[[U]],[R[13]]]],[11,R[14],E,E,73,[[],[R[13]]]],[11,R[15],E,E,73,[[["self"]],[T]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[19],E,E,73,[[["self"]],[R[42]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[12],E,E,74,[[[U]],[R[13]]]],[11,R[14],E,E,74,[[],[R[13]]]],[11,R[15],E,E,74,[[["self"]],[T]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[19],E,E,74,[[["self"]],[R[42]]]],[11,"from",R[3794],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[12],E,E,75,[[[U]],[R[13]]]],[11,R[14],E,E,75,[[],[R[13]]]],[11,R[15],E,E,75,[[["self"]],[T]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[19],E,E,75,[[["self"]],[R[42]]]],[11,R[108],E,E,75,[[],["f"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[12],E,E,76,[[[U]],[R[13]]]],[11,R[14],E,E,76,[[],[R[13]]]],[11,R[15],E,E,76,[[["self"]],[T]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[19],E,E,76,[[["self"]],[R[42]]]],[11,"from",R[3795],E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[12],E,E,77,[[[U]],[R[13]]]],[11,R[14],E,E,77,[[],[R[13]]]],[11,R[15],E,E,77,[[["self"]],[T]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[19],E,E,77,[[["self"]],[R[42]]]],[11,R[108],E,E,77,[[],["f"]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[12],E,E,78,[[[U]],[R[13]]]],[11,R[14],E,E,78,[[],[R[13]]]],[11,R[15],E,E,78,[[["self"]],[T]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[19],E,E,78,[[["self"]],[R[42]]]],[11,R[108],E,E,78,[[],["f"]]],[11,"from",R[3796],E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[12],E,E,79,[[[U]],[R[13]]]],[11,R[14],E,E,79,[[],[R[13]]]],[11,R[15],E,E,79,[[["self"]],[T]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[19],E,E,79,[[["self"]],[R[42]]]],[11,R[108],E,E,79,[[],["f"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[12],E,E,80,[[[U]],[R[13]]]],[11,R[14],E,E,80,[[],[R[13]]]],[11,R[15],E,E,80,[[["self"]],[T]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[19],E,E,80,[[["self"]],[R[42]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[12],E,E,81,[[[U]],[R[13]]]],[11,R[14],E,E,81,[[],[R[13]]]],[11,R[15],E,E,81,[[["self"]],[T]]],[11,R[41],E,E,81,[[["self"]],[T]]],[11,R[19],E,E,81,[[["self"]],[R[42]]]],[11,R[108],E,E,81,[[],["f"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[12],E,E,82,[[[U]],[R[13]]]],[11,R[14],E,E,82,[[],[R[13]]]],[11,R[15],E,E,82,[[["self"]],[T]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[19],E,E,82,[[["self"]],[R[42]]]],[11,R[108],E,E,82,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",R[3797],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[12],E,E,83,[[[U]],[R[13]]]],[11,R[14],E,E,83,[[],[R[13]]]],[11,R[15],E,E,83,[[["self"]],[T]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[19],E,E,83,[[["self"]],[R[42]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[17],E,E,84,[[["self"]],[T]]],[11,R[18],E,E,84,[[[T],["self"]]]],[11,R[12],E,E,84,[[[U]],[R[13]]]],[11,R[14],E,E,84,[[],[R[13]]]],[11,R[15],E,E,84,[[["self"]],[T]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[19],E,E,84,[[["self"]],[R[42]]]],[11,R[108],E,E,84,[[],["f"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[12],E,E,85,[[[U]],[R[13]]]],[11,R[14],E,E,85,[[],[R[13]]]],[11,R[15],E,E,85,[[["self"]],[T]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[19],E,E,85,[[["self"]],[R[42]]]],[11,R[108],E,E,85,[[],["f"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[12],E,E,86,[[[U]],[R[13]]]],[11,R[14],E,E,86,[[],[R[13]]]],[11,R[15],E,E,86,[[["self"]],[T]]],[11,R[41],E,E,86,[[["self"]],[T]]],[11,R[19],E,E,86,[[["self"]],[R[42]]]],[11,R[108],E,E,86,[[],["f"]]],[11,R[62],E,E,87,[[["self"]],["string"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[17],E,E,87,[[["self"]],[T]]],[11,R[18],E,E,87,[[[T],["self"]]]],[11,R[12],E,E,87,[[[U]],[R[13]]]],[11,R[14],E,E,87,[[],[R[13]]]],[11,R[15],E,E,87,[[["self"]],[T]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[19],E,E,87,[[["self"]],[R[42]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[12],E,E,88,[[[U]],[R[13]]]],[11,R[14],E,E,88,[[],[R[13]]]],[11,R[15],E,E,88,[[["self"]],[T]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[19],E,E,88,[[["self"]],[R[42]]]],[11,R[108],E,E,88,[[],["f"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[12],E,E,89,[[[U]],[R[13]]]],[11,R[14],E,E,89,[[],[R[13]]]],[11,R[15],E,E,89,[[["self"]],[T]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[19],E,E,89,[[["self"]],[R[42]]]],[11,R[108],E,E,89,[[],["f"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[12],E,E,90,[[[U]],[R[13]]]],[11,R[14],E,E,90,[[],[R[13]]]],[11,R[15],E,E,90,[[["self"]],[T]]],[11,R[41],E,E,90,[[["self"]],[T]]],[11,R[19],E,E,90,[[["self"]],[R[42]]]],[11,R[108],E,E,90,[[],["f"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[17],E,E,91,[[["self"]],[T]]],[11,R[18],E,E,91,[[[T],["self"]]]],[11,R[12],E,E,91,[[[U]],[R[13]]]],[11,R[14],E,E,91,[[],[R[13]]]],[11,R[15],E,E,91,[[["self"]],[T]]],[11,R[41],E,E,91,[[["self"]],[T]]],[11,R[19],E,E,91,[[["self"]],[R[42]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[12],E,E,92,[[[U]],[R[13]]]],[11,R[14],E,E,92,[[],[R[13]]]],[11,R[15],E,E,92,[[["self"]],[T]]],[11,R[41],E,E,92,[[["self"]],[T]]],[11,R[19],E,E,92,[[["self"]],[R[42]]]],[11,R[108],E,E,92,[[],["f"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[12],E,E,93,[[[U]],[R[13]]]],[11,R[14],E,E,93,[[],[R[13]]]],[11,R[15],E,E,93,[[["self"]],[T]]],[11,R[41],E,E,93,[[["self"]],[T]]],[11,R[19],E,E,93,[[["self"]],[R[42]]]],[11,R[108],E,E,93,[[],["f"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[12],E,E,94,[[[U]],[R[13]]]],[11,R[14],E,E,94,[[],[R[13]]]],[11,R[15],E,E,94,[[["self"]],[T]]],[11,R[41],E,E,94,[[["self"]],[T]]],[11,R[19],E,E,94,[[["self"]],[R[42]]]],[11,R[108],E,E,94,[[],["f"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[12],E,E,95,[[[U]],[R[13]]]],[11,R[14],E,E,95,[[],[R[13]]]],[11,R[15],E,E,95,[[["self"]],[T]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[19],E,E,95,[[["self"]],[R[42]]]],[11,R[108],E,E,95,[[],["f"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[12],E,E,96,[[[U]],[R[13]]]],[11,R[14],E,E,96,[[],[R[13]]]],[11,R[15],E,E,96,[[["self"]],[T]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[19],E,E,96,[[["self"]],[R[42]]]],[11,R[108],E,E,96,[[],["f"]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[12],E,E,97,[[[U]],[R[13]]]],[11,R[14],E,E,97,[[],[R[13]]]],[11,R[15],E,E,97,[[["self"]],[T]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[19],E,E,97,[[["self"]],[R[42]]]],[11,R[108],E,E,97,[[],["f"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[12],E,E,98,[[[U]],[R[13]]]],[11,R[14],E,E,98,[[],[R[13]]]],[11,R[15],E,E,98,[[["self"]],[T]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[19],E,E,98,[[["self"]],[R[42]]]],[11,R[108],E,E,98,[[],["f"]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[12],E,E,99,[[[U]],[R[13]]]],[11,R[14],E,E,99,[[],[R[13]]]],[11,R[15],E,E,99,[[["self"]],[T]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[19],E,E,99,[[["self"]],[R[42]]]],[11,R[108],E,E,99,[[],["f"]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[12],E,E,100,[[[U]],[R[13]]]],[11,R[14],E,E,100,[[],[R[13]]]],[11,R[15],E,E,100,[[["self"]],[T]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[19],E,E,100,[[["self"]],[R[42]]]],[11,R[108],E,E,100,[[],["f"]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[12],E,E,101,[[[U]],[R[13]]]],[11,R[14],E,E,101,[[],[R[13]]]],[11,R[15],E,E,101,[[["self"]],[T]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[19],E,E,101,[[["self"]],[R[42]]]],[11,R[108],E,E,101,[[],["f"]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[12],E,E,102,[[[U]],[R[13]]]],[11,R[14],E,E,102,[[],[R[13]]]],[11,R[15],E,E,102,[[["self"]],[T]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[19],E,E,102,[[["self"]],[R[42]]]],[11,R[108],E,E,102,[[],["f"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[12],E,E,103,[[[U]],[R[13]]]],[11,R[14],E,E,103,[[],[R[13]]]],[11,R[15],E,E,103,[[["self"]],[T]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[19],E,E,103,[[["self"]],[R[42]]]],[11,R[108],E,E,103,[[],["f"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[12],E,E,104,[[[U]],[R[13]]]],[11,R[14],E,E,104,[[],[R[13]]]],[11,R[15],E,E,104,[[["self"]],[T]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[19],E,E,104,[[["self"]],[R[42]]]],[11,R[108],E,E,104,[[],["f"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[12],E,E,105,[[[U]],[R[13]]]],[11,R[14],E,E,105,[[],[R[13]]]],[11,R[15],E,E,105,[[["self"]],[T]]],[11,R[41],E,E,105,[[["self"]],[T]]],[11,R[19],E,E,105,[[["self"]],[R[42]]]],[11,R[108],E,E,105,[[],["f"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[12],E,E,106,[[[U]],[R[13]]]],[11,R[14],E,E,106,[[],[R[13]]]],[11,R[15],E,E,106,[[["self"]],[T]]],[11,R[41],E,E,106,[[["self"]],[T]]],[11,R[19],E,E,106,[[["self"]],[R[42]]]],[11,R[108],E,E,106,[[],["f"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[12],E,E,107,[[[U]],[R[13]]]],[11,R[14],E,E,107,[[],[R[13]]]],[11,R[15],E,E,107,[[["self"]],[T]]],[11,R[41],E,E,107,[[["self"]],[T]]],[11,R[19],E,E,107,[[["self"]],[R[42]]]],[11,R[108],E,E,107,[[],["f"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[12],E,E,108,[[[U]],[R[13]]]],[11,R[14],E,E,108,[[],[R[13]]]],[11,R[15],E,E,108,[[["self"]],[T]]],[11,R[41],E,E,108,[[["self"]],[T]]],[11,R[19],E,E,108,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,R[108],E,E,17,[[],["f"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[17],E,E,109,[[["self"]],[T]]],[11,R[18],E,E,109,[[[T],["self"]]]],[11,R[12],E,E,109,[[[U]],[R[13]]]],[11,R[14],E,E,109,[[],[R[13]]]],[11,R[15],E,E,109,[[["self"]],[T]]],[11,R[41],E,E,109,[[["self"]],[T]]],[11,R[19],E,E,109,[[["self"]],[R[42]]]],[11,R[108],E,E,109,[[],["f"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[12],E,E,110,[[[U]],[R[13]]]],[11,R[14],E,E,110,[[],[R[13]]]],[11,R[15],E,E,110,[[["self"]],[T]]],[11,R[41],E,E,110,[[["self"]],[T]]],[11,R[19],E,E,110,[[["self"]],[R[42]]]],[11,R[108],E,E,110,[[],["f"]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[12],E,E,111,[[[U]],[R[13]]]],[11,R[14],E,E,111,[[],[R[13]]]],[11,R[15],E,E,111,[[["self"]],[T]]],[11,R[41],E,E,111,[[["self"]],[T]]],[11,R[19],E,E,111,[[["self"]],[R[42]]]],[11,R[108],E,E,111,[[],["f"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[12],E,E,112,[[[U]],[R[13]]]],[11,R[14],E,E,112,[[],[R[13]]]],[11,R[15],E,E,112,[[["self"]],[T]]],[11,R[41],E,E,112,[[["self"]],[T]]],[11,R[19],E,E,112,[[["self"]],[R[42]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[12],E,E,113,[[[U]],[R[13]]]],[11,R[14],E,E,113,[[],[R[13]]]],[11,R[15],E,E,113,[[["self"]],[T]]],[11,R[41],E,E,113,[[["self"]],[T]]],[11,R[19],E,E,113,[[["self"]],[R[42]]]],[11,R[108],E,E,113,[[],["f"]]],[11,"from",R[3798],E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[12],E,E,114,[[[U]],[R[13]]]],[11,R[14],E,E,114,[[],[R[13]]]],[11,R[15],E,E,114,[[["self"]],[T]]],[11,R[41],E,E,114,[[["self"]],[T]]],[11,R[19],E,E,114,[[["self"]],[R[42]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[43],E,E,115,[[],["i"]]],[11,R[12],E,E,115,[[[U]],[R[13]]]],[11,R[14],E,E,115,[[],[R[13]]]],[11,R[15],E,E,115,[[["self"]],[T]]],[11,R[41],E,E,115,[[["self"]],[T]]],[11,R[19],E,E,115,[[["self"]],[R[42]]]],[11,"from",R[3639],E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[12],E,E,116,[[[U]],[R[13]]]],[11,R[14],E,E,116,[[],[R[13]]]],[11,R[15],E,E,116,[[["self"]],[T]]],[11,R[41],E,E,116,[[["self"]],[T]]],[11,R[19],E,E,116,[[["self"]],[R[42]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[12],E,E,117,[[[U]],[R[13]]]],[11,R[14],E,E,117,[[],[R[13]]]],[11,R[15],E,E,117,[[["self"]],[T]]],[11,R[41],E,E,117,[[["self"]],[T]]],[11,R[19],E,E,117,[[["self"]],[R[42]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[12],E,E,118,[[[U]],[R[13]]]],[11,R[14],E,E,118,[[],[R[13]]]],[11,R[15],E,E,118,[[["self"]],[T]]],[11,R[41],E,E,118,[[["self"]],[T]]],[11,R[19],E,E,118,[[["self"]],[R[42]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[12],E,E,119,[[[U]],[R[13]]]],[11,R[14],E,E,119,[[],[R[13]]]],[11,R[15],E,E,119,[[["self"]],[T]]],[11,R[41],E,E,119,[[["self"]],[T]]],[11,R[19],E,E,119,[[["self"]],[R[42]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[12],E,E,120,[[[U]],[R[13]]]],[11,R[14],E,E,120,[[],[R[13]]]],[11,R[15],E,E,120,[[["self"]],[T]]],[11,R[41],E,E,120,[[["self"]],[T]]],[11,R[19],E,E,120,[[["self"]],[R[42]]]],[11,R[108],E,E,120,[[],["f"]]],[11,R[62],E,E,121,[[["self"]],["string"]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[12],E,E,121,[[[U]],[R[13]]]],[11,R[14],E,E,121,[[],[R[13]]]],[11,R[15],E,E,121,[[["self"]],[T]]],[11,R[41],E,E,121,[[["self"]],[T]]],[11,R[19],E,E,121,[[["self"]],[R[42]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[12],E,E,122,[[[U]],[R[13]]]],[11,R[14],E,E,122,[[],[R[13]]]],[11,R[15],E,E,122,[[["self"]],[T]]],[11,R[41],E,E,122,[[["self"]],[T]]],[11,R[19],E,E,122,[[["self"]],[R[42]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[12],E,E,123,[[[U]],[R[13]]]],[11,R[14],E,E,123,[[],[R[13]]]],[11,R[15],E,E,123,[[["self"]],[T]]],[11,R[41],E,E,123,[[["self"]],[T]]],[11,R[19],E,E,123,[[["self"]],[R[42]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[12],E,E,124,[[[U]],[R[13]]]],[11,R[14],E,E,124,[[],[R[13]]]],[11,R[15],E,E,124,[[["self"]],[T]]],[11,R[41],E,E,124,[[["self"]],[T]]],[11,R[19],E,E,124,[[["self"]],[R[42]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[12],E,E,125,[[[U]],[R[13]]]],[11,R[14],E,E,125,[[],[R[13]]]],[11,R[15],E,E,125,[[["self"]],[T]]],[11,R[41],E,E,125,[[["self"]],[T]]],[11,R[19],E,E,125,[[["self"]],[R[42]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[12],E,E,126,[[[U]],[R[13]]]],[11,R[14],E,E,126,[[],[R[13]]]],[11,R[15],E,E,126,[[["self"]],[T]]],[11,R[41],E,E,126,[[["self"]],[T]]],[11,R[19],E,E,126,[[["self"]],[R[42]]]],[11,R[108],E,E,126,[[],["f"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[12],E,E,127,[[[U]],[R[13]]]],[11,R[14],E,E,127,[[],[R[13]]]],[11,R[15],E,E,127,[[["self"]],[T]]],[11,R[41],E,E,127,[[["self"]],[T]]],[11,R[19],E,E,127,[[["self"]],[R[42]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[12],E,E,128,[[[U]],[R[13]]]],[11,R[14],E,E,128,[[],[R[13]]]],[11,R[15],E,E,128,[[["self"]],[T]]],[11,R[41],E,E,128,[[["self"]],[T]]],[11,R[19],E,E,128,[[["self"]],[R[42]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[12],E,E,129,[[[U]],[R[13]]]],[11,R[14],E,E,129,[[],[R[13]]]],[11,R[15],E,E,129,[[["self"]],[T]]],[11,R[41],E,E,129,[[["self"]],[T]]],[11,R[19],E,E,129,[[["self"]],[R[42]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[12],E,E,130,[[[U]],[R[13]]]],[11,R[14],E,E,130,[[],[R[13]]]],[11,R[15],E,E,130,[[["self"]],[T]]],[11,R[41],E,E,130,[[["self"]],[T]]],[11,R[19],E,E,130,[[["self"]],[R[42]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[12],E,E,131,[[[U]],[R[13]]]],[11,R[14],E,E,131,[[],[R[13]]]],[11,R[15],E,E,131,[[["self"]],[T]]],[11,R[41],E,E,131,[[["self"]],[T]]],[11,R[19],E,E,131,[[["self"]],[R[42]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[12],E,E,132,[[[U]],[R[13]]]],[11,R[14],E,E,132,[[],[R[13]]]],[11,R[15],E,E,132,[[["self"]],[T]]],[11,R[41],E,E,132,[[["self"]],[T]]],[11,R[19],E,E,132,[[["self"]],[R[42]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[12],E,E,133,[[[U]],[R[13]]]],[11,R[14],E,E,133,[[],[R[13]]]],[11,R[15],E,E,133,[[["self"]],[T]]],[11,R[41],E,E,133,[[["self"]],[T]]],[11,R[19],E,E,133,[[["self"]],[R[42]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[43],E,E,134,[[],["i"]]],[11,R[12],E,E,134,[[[U]],[R[13]]]],[11,R[14],E,E,134,[[],[R[13]]]],[11,R[15],E,E,134,[[["self"]],[T]]],[11,R[41],E,E,134,[[["self"]],[T]]],[11,R[19],E,E,134,[[["self"]],[R[42]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[12],E,E,135,[[[U]],[R[13]]]],[11,R[14],E,E,135,[[],[R[13]]]],[11,R[15],E,E,135,[[["self"]],[T]]],[11,R[41],E,E,135,[[["self"]],[T]]],[11,R[19],E,E,135,[[["self"]],[R[42]]]],[11,R[108],E,E,135,[[],["f"]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[12],E,E,136,[[[U]],[R[13]]]],[11,R[14],E,E,136,[[],[R[13]]]],[11,R[15],E,E,136,[[["self"]],[T]]],[11,R[41],E,E,136,[[["self"]],[T]]],[11,R[19],E,E,136,[[["self"]],[R[42]]]],[11,R[108],E,E,136,[[],["f"]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[12],E,E,137,[[[U]],[R[13]]]],[11,R[14],E,E,137,[[],[R[13]]]],[11,R[15],E,E,137,[[["self"]],[T]]],[11,R[41],E,E,137,[[["self"]],[T]]],[11,R[19],E,E,137,[[["self"]],[R[42]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[12],E,E,138,[[[U]],[R[13]]]],[11,R[14],E,E,138,[[],[R[13]]]],[11,R[15],E,E,138,[[["self"]],[T]]],[11,R[41],E,E,138,[[["self"]],[T]]],[11,R[19],E,E,138,[[["self"]],[R[42]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[12],E,E,139,[[[U]],[R[13]]]],[11,R[14],E,E,139,[[],[R[13]]]],[11,R[15],E,E,139,[[["self"]],[T]]],[11,R[41],E,E,139,[[["self"]],[T]]],[11,R[19],E,E,139,[[["self"]],[R[42]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[12],E,E,140,[[[U]],[R[13]]]],[11,R[14],E,E,140,[[],[R[13]]]],[11,R[15],E,E,140,[[["self"]],[T]]],[11,R[41],E,E,140,[[["self"]],[T]]],[11,R[19],E,E,140,[[["self"]],[R[42]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[12],E,E,141,[[[U]],[R[13]]]],[11,R[14],E,E,141,[[],[R[13]]]],[11,R[15],E,E,141,[[["self"]],[T]]],[11,R[41],E,E,141,[[["self"]],[T]]],[11,R[19],E,E,141,[[["self"]],[R[42]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[12],E,E,142,[[[U]],[R[13]]]],[11,R[14],E,E,142,[[],[R[13]]]],[11,R[15],E,E,142,[[["self"]],[T]]],[11,R[41],E,E,142,[[["self"]],[T]]],[11,R[19],E,E,142,[[["self"]],[R[42]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[12],E,E,143,[[[U]],[R[13]]]],[11,R[14],E,E,143,[[],[R[13]]]],[11,R[15],E,E,143,[[["self"]],[T]]],[11,R[41],E,E,143,[[["self"]],[T]]],[11,R[19],E,E,143,[[["self"]],[R[42]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[12],E,E,144,[[[U]],[R[13]]]],[11,R[14],E,E,144,[[],[R[13]]]],[11,R[15],E,E,144,[[["self"]],[T]]],[11,R[41],E,E,144,[[["self"]],[T]]],[11,R[19],E,E,144,[[["self"]],[R[42]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[12],E,E,145,[[[U]],[R[13]]]],[11,R[14],E,E,145,[[],[R[13]]]],[11,R[15],E,E,145,[[["self"]],[T]]],[11,R[41],E,E,145,[[["self"]],[T]]],[11,R[19],E,E,145,[[["self"]],[R[42]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[12],E,E,146,[[[U]],[R[13]]]],[11,R[14],E,E,146,[[],[R[13]]]],[11,R[15],E,E,146,[[["self"]],[T]]],[11,R[41],E,E,146,[[["self"]],[T]]],[11,R[19],E,E,146,[[["self"]],[R[42]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[12],E,E,147,[[[U]],[R[13]]]],[11,R[14],E,E,147,[[],[R[13]]]],[11,R[15],E,E,147,[[["self"]],[T]]],[11,R[41],E,E,147,[[["self"]],[T]]],[11,R[19],E,E,147,[[["self"]],[R[42]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[12],E,E,148,[[[U]],[R[13]]]],[11,R[14],E,E,148,[[],[R[13]]]],[11,R[15],E,E,148,[[["self"]],[T]]],[11,R[41],E,E,148,[[["self"]],[T]]],[11,R[19],E,E,148,[[["self"]],[R[42]]]],[11,R[108],E,E,148,[[],["f"]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[12],E,E,149,[[[U]],[R[13]]]],[11,R[14],E,E,149,[[],[R[13]]]],[11,R[15],E,E,149,[[["self"]],[T]]],[11,R[41],E,E,149,[[["self"]],[T]]],[11,R[19],E,E,149,[[["self"]],[R[42]]]],[11,R[108],E,E,149,[[],["f"]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[12],E,E,150,[[[U]],[R[13]]]],[11,R[14],E,E,150,[[],[R[13]]]],[11,R[15],E,E,150,[[["self"]],[T]]],[11,R[41],E,E,150,[[["self"]],[T]]],[11,R[19],E,E,150,[[["self"]],[R[42]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[12],E,E,151,[[[U]],[R[13]]]],[11,R[14],E,E,151,[[],[R[13]]]],[11,R[15],E,E,151,[[["self"]],[T]]],[11,R[41],E,E,151,[[["self"]],[T]]],[11,R[19],E,E,151,[[["self"]],[R[42]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[12],E,E,152,[[[U]],[R[13]]]],[11,R[14],E,E,152,[[],[R[13]]]],[11,R[15],E,E,152,[[["self"]],[T]]],[11,R[41],E,E,152,[[["self"]],[T]]],[11,R[19],E,E,152,[[["self"]],[R[42]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[12],E,E,153,[[[U]],[R[13]]]],[11,R[14],E,E,153,[[],[R[13]]]],[11,R[15],E,E,153,[[["self"]],[T]]],[11,R[41],E,E,153,[[["self"]],[T]]],[11,R[19],E,E,153,[[["self"]],[R[42]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[12],E,E,154,[[[U]],[R[13]]]],[11,R[14],E,E,154,[[],[R[13]]]],[11,R[15],E,E,154,[[["self"]],[T]]],[11,R[41],E,E,154,[[["self"]],[T]]],[11,R[19],E,E,154,[[["self"]],[R[42]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[12],E,E,155,[[[U]],[R[13]]]],[11,R[14],E,E,155,[[],[R[13]]]],[11,R[15],E,E,155,[[["self"]],[T]]],[11,R[41],E,E,155,[[["self"]],[T]]],[11,R[19],E,E,155,[[["self"]],[R[42]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[12],E,E,156,[[[U]],[R[13]]]],[11,R[14],E,E,156,[[],[R[13]]]],[11,R[15],E,E,156,[[["self"]],[T]]],[11,R[41],E,E,156,[[["self"]],[T]]],[11,R[19],E,E,156,[[["self"]],[R[42]]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[12],E,E,157,[[[U]],[R[13]]]],[11,R[14],E,E,157,[[],[R[13]]]],[11,R[15],E,E,157,[[["self"]],[T]]],[11,R[41],E,E,157,[[["self"]],[T]]],[11,R[19],E,E,157,[[["self"]],[R[42]]]],[11,R[62],E,E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[12],E,E,158,[[[U]],[R[13]]]],[11,R[14],E,E,158,[[],[R[13]]]],[11,R[15],E,E,158,[[["self"]],[T]]],[11,R[41],E,E,158,[[["self"]],[T]]],[11,R[19],E,E,158,[[["self"]],[R[42]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[12],E,E,159,[[[U]],[R[13]]]],[11,R[14],E,E,159,[[],[R[13]]]],[11,R[15],E,E,159,[[["self"]],[T]]],[11,R[41],E,E,159,[[["self"]],[T]]],[11,R[19],E,E,159,[[["self"]],[R[42]]]],[11,R[108],E,E,159,[[],["f"]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[12],E,E,160,[[[U]],[R[13]]]],[11,R[14],E,E,160,[[],[R[13]]]],[11,R[15],E,E,160,[[["self"]],[T]]],[11,R[41],E,E,160,[[["self"]],[T]]],[11,R[19],E,E,160,[[["self"]],[R[42]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[12],E,E,161,[[[U]],[R[13]]]],[11,R[14],E,E,161,[[],[R[13]]]],[11,R[15],E,E,161,[[["self"]],[T]]],[11,R[41],E,E,161,[[["self"]],[T]]],[11,R[19],E,E,161,[[["self"]],[R[42]]]],[11,R[108],E,E,161,[[],["f"]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[12],E,E,162,[[[U]],[R[13]]]],[11,R[14],E,E,162,[[],[R[13]]]],[11,R[15],E,E,162,[[["self"]],[T]]],[11,R[41],E,E,162,[[["self"]],[T]]],[11,R[19],E,E,162,[[["self"]],[R[42]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[12],E,E,163,[[[U]],[R[13]]]],[11,R[14],E,E,163,[[],[R[13]]]],[11,R[15],E,E,163,[[["self"]],[T]]],[11,R[41],E,E,163,[[["self"]],[T]]],[11,R[19],E,E,163,[[["self"]],[R[42]]]],[11,"from",R[3799],E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[17],E,E,164,[[["self"]],[T]]],[11,R[18],E,E,164,[[[T],["self"]]]],[11,R[12],E,E,164,[[[U]],[R[13]]]],[11,R[14],E,E,164,[[],[R[13]]]],[11,R[15],E,E,164,[[["self"]],[T]]],[11,R[41],E,E,164,[[["self"]],[T]]],[11,R[19],E,E,164,[[["self"]],[R[42]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[12],E,E,165,[[[U]],[R[13]]]],[11,R[14],E,E,165,[[],[R[13]]]],[11,R[15],E,E,165,[[["self"]],[T]]],[11,R[41],E,E,165,[[["self"]],[T]]],[11,R[19],E,E,165,[[["self"]],[R[42]]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[12],E,E,166,[[[U]],[R[13]]]],[11,R[14],E,E,166,[[],[R[13]]]],[11,R[15],E,E,166,[[["self"]],[T]]],[11,R[41],E,E,166,[[["self"]],[T]]],[11,R[19],E,E,166,[[["self"]],[R[42]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[12],E,E,167,[[[U]],[R[13]]]],[11,R[14],E,E,167,[[],[R[13]]]],[11,R[15],E,E,167,[[["self"]],[T]]],[11,R[41],E,E,167,[[["self"]],[T]]],[11,R[19],E,E,167,[[["self"]],[R[42]]]],[11,"from",E,E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[17],E,E,168,[[["self"]],[T]]],[11,R[18],E,E,168,[[[T],["self"]]]],[11,R[12],E,E,168,[[[U]],[R[13]]]],[11,R[14],E,E,168,[[],[R[13]]]],[11,R[15],E,E,168,[[["self"]],[T]]],[11,R[41],E,E,168,[[["self"]],[T]]],[11,R[19],E,E,168,[[["self"]],[R[42]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[17],E,E,169,[[["self"]],[T]]],[11,R[18],E,E,169,[[[T],["self"]]]],[11,R[12],E,E,169,[[[U]],[R[13]]]],[11,R[14],E,E,169,[[],[R[13]]]],[11,R[15],E,E,169,[[["self"]],[T]]],[11,R[41],E,E,169,[[["self"]],[T]]],[11,R[19],E,E,169,[[["self"]],[R[42]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[12],E,E,170,[[[U]],[R[13]]]],[11,R[14],E,E,170,[[],[R[13]]]],[11,R[15],E,E,170,[[["self"]],[T]]],[11,R[41],E,E,170,[[["self"]],[T]]],[11,R[19],E,E,170,[[["self"]],[R[42]]]],[11,"from",R[3636],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[17],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[[T],["self"]]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[17],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[[T],["self"]]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,"from",R[3800],E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[12],E,E,171,[[[U]],[R[13]]]],[11,R[14],E,E,171,[[],[R[13]]]],[11,R[15],E,E,171,[[["self"]],[T]]],[11,R[41],E,E,171,[[["self"]],[T]]],[11,R[19],E,E,171,[[["self"]],[R[42]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[17],E,E,172,[[["self"]],[T]]],[11,R[18],E,E,172,[[[T],["self"]]]],[11,R[12],E,E,172,[[[U]],[R[13]]]],[11,R[14],E,E,172,[[],[R[13]]]],[11,R[15],E,E,172,[[["self"]],[T]]],[11,R[41],E,E,172,[[["self"]],[T]]],[11,R[19],E,E,172,[[["self"]],[R[42]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[12],E,E,173,[[[U]],[R[13]]]],[11,R[14],E,E,173,[[],[R[13]]]],[11,R[15],E,E,173,[[["self"]],[T]]],[11,R[41],E,E,173,[[["self"]],[T]]],[11,R[19],E,E,173,[[["self"]],[R[42]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[12],E,E,174,[[[U]],[R[13]]]],[11,R[14],E,E,174,[[],[R[13]]]],[11,R[15],E,E,174,[[["self"]],[T]]],[11,R[41],E,E,174,[[["self"]],[T]]],[11,R[19],E,E,174,[[["self"]],[R[42]]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[12],E,E,175,[[[U]],[R[13]]]],[11,R[14],E,E,175,[[],[R[13]]]],[11,R[15],E,E,175,[[["self"]],[T]]],[11,R[41],E,E,175,[[["self"]],[T]]],[11,R[19],E,E,175,[[["self"]],[R[42]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[12],E,E,176,[[[U]],[R[13]]]],[11,R[14],E,E,176,[[],[R[13]]]],[11,R[15],E,E,176,[[["self"]],[T]]],[11,R[41],E,E,176,[[["self"]],[T]]],[11,R[19],E,E,176,[[["self"]],[R[42]]]],[11,"from",R[3801],E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[17],E,E,177,[[["self"]],[T]]],[11,R[18],E,E,177,[[[T],["self"]]]],[11,R[12],E,E,177,[[[U]],[R[13]]]],[11,R[14],E,E,177,[[],[R[13]]]],[11,R[15],E,E,177,[[["self"]],[T]]],[11,R[41],E,E,177,[[["self"]],[T]]],[11,R[19],E,E,177,[[["self"]],[R[42]]]],[11,R[62],E,E,178,[[["self"]],["string"]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[12],E,E,178,[[[U]],[R[13]]]],[11,R[14],E,E,178,[[],[R[13]]]],[11,R[15],E,E,178,[[["self"]],[T]]],[11,R[41],E,E,178,[[["self"]],[T]]],[11,R[19],E,E,178,[[["self"]],[R[42]]]],[11,R[62],R[3802],E,179,[[["self"]],["string"]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[12],E,E,179,[[[U]],[R[13]]]],[11,R[14],E,E,179,[[],[R[13]]]],[11,R[15],E,E,179,[[["self"]],[T]]],[11,R[41],E,E,179,[[["self"]],[T]]],[11,R[19],E,E,179,[[["self"]],[R[42]]]],[11,R[62],E,E,180,[[["self"]],["string"]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[12],E,E,180,[[[U]],[R[13]]]],[11,R[14],E,E,180,[[],[R[13]]]],[11,R[15],E,E,180,[[["self"]],[T]]],[11,R[41],E,E,180,[[["self"]],[T]]],[11,R[19],E,E,180,[[["self"]],[R[42]]]],[11,R[62],E,E,181,[[["self"]],["string"]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[12],E,E,181,[[[U]],[R[13]]]],[11,R[14],E,E,181,[[],[R[13]]]],[11,R[15],E,E,181,[[["self"]],[T]]],[11,R[41],E,E,181,[[["self"]],[T]]],[11,R[19],E,E,181,[[["self"]],[R[42]]]],[11,R[62],E,E,182,[[["self"]],["string"]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[12],E,E,182,[[[U]],[R[13]]]],[11,R[14],E,E,182,[[],[R[13]]]],[11,R[15],E,E,182,[[["self"]],[T]]],[11,R[41],E,E,182,[[["self"]],[T]]],[11,R[19],E,E,182,[[["self"]],[R[42]]]],[11,R[62],E,E,183,[[["self"]],["string"]]],[11,"from",E,E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[12],E,E,183,[[[U]],[R[13]]]],[11,R[14],E,E,183,[[],[R[13]]]],[11,R[15],E,E,183,[[["self"]],[T]]],[11,R[41],E,E,183,[[["self"]],[T]]],[11,R[19],E,E,183,[[["self"]],[R[42]]]],[11,R[62],E,E,184,[[["self"]],["string"]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[12],E,E,184,[[[U]],[R[13]]]],[11,R[14],E,E,184,[[],[R[13]]]],[11,R[15],E,E,184,[[["self"]],[T]]],[11,R[41],E,E,184,[[["self"]],[T]]],[11,R[19],E,E,184,[[["self"]],[R[42]]]],[11,"from",R[3770],E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[12],E,E,185,[[[U]],[R[13]]]],[11,R[14],E,E,185,[[],[R[13]]]],[11,R[15],E,E,185,[[["self"]],[T]]],[11,R[41],E,E,185,[[["self"]],[T]]],[11,R[19],E,E,185,[[["self"]],[R[42]]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[17],E,E,186,[[["self"]],[T]]],[11,R[18],E,E,186,[[[T],["self"]]]],[11,R[12],E,E,186,[[[U]],[R[13]]]],[11,R[14],E,E,186,[[],[R[13]]]],[11,R[15],E,E,186,[[["self"]],[T]]],[11,R[41],E,E,186,[[["self"]],[T]]],[11,R[19],E,E,186,[[["self"]],[R[42]]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[12],E,E,187,[[[U]],[R[13]]]],[11,R[14],E,E,187,[[],[R[13]]]],[11,R[15],E,E,187,[[["self"]],[T]]],[11,R[41],E,E,187,[[["self"]],[T]]],[11,R[19],E,E,187,[[["self"]],[R[42]]]],[11,"from",E,E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[17],E,E,188,[[["self"]],[T]]],[11,R[18],E,E,188,[[[T],["self"]]]],[11,R[12],E,E,188,[[[U]],[R[13]]]],[11,R[14],E,E,188,[[],[R[13]]]],[11,R[15],E,E,188,[[["self"]],[T]]],[11,R[41],E,E,188,[[["self"]],[T]]],[11,R[19],E,E,188,[[["self"]],[R[42]]]],[11,"from",R[3771],E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[12],E,E,189,[[[U]],[R[13]]]],[11,R[14],E,E,189,[[],[R[13]]]],[11,R[15],E,E,189,[[["self"]],[T]]],[11,R[41],E,E,189,[[["self"]],[T]]],[11,R[19],E,E,189,[[["self"]],[R[42]]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[12],E,E,190,[[[U]],[R[13]]]],[11,R[14],E,E,190,[[],[R[13]]]],[11,R[15],E,E,190,[[["self"]],[T]]],[11,R[41],E,E,190,[[["self"]],[T]]],[11,R[19],E,E,190,[[["self"]],[R[42]]]],[11,R[108],E,E,190,[[],["f"]]],[11,R[62],R[3803],E,191,[[["self"]],["string"]]],[11,"from",E,E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[12],E,E,191,[[[U]],[R[13]]]],[11,R[14],E,E,191,[[],[R[13]]]],[11,R[15],E,E,191,[[["self"]],[T]]],[11,R[41],E,E,191,[[["self"]],[T]]],[11,R[19],E,E,191,[[["self"]],[R[42]]]],[11,R[62],E,E,192,[[["self"]],["string"]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[12],E,E,192,[[[U]],[R[13]]]],[11,R[14],E,E,192,[[],[R[13]]]],[11,R[15],E,E,192,[[["self"]],[T]]],[11,R[41],E,E,192,[[["self"]],[T]]],[11,R[19],E,E,192,[[["self"]],[R[42]]]],[11,"from",R[3772],E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[17],E,E,193,[[["self"]],[T]]],[11,R[18],E,E,193,[[[T],["self"]]]],[11,R[12],E,E,193,[[[U]],[R[13]]]],[11,R[14],E,E,193,[[],[R[13]]]],[11,R[15],E,E,193,[[["self"]],[T]]],[11,R[41],E,E,193,[[["self"]],[T]]],[11,R[19],E,E,193,[[["self"]],[R[42]]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[12],E,E,194,[[[U]],[R[13]]]],[11,R[14],E,E,194,[[],[R[13]]]],[11,R[15],E,E,194,[[["self"]],[T]]],[11,R[41],E,E,194,[[["self"]],[T]]],[11,R[19],E,E,194,[[["self"]],[R[42]]]],[11,"from",E,E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[12],E,E,195,[[[U]],[R[13]]]],[11,R[14],E,E,195,[[],[R[13]]]],[11,R[15],E,E,195,[[["self"]],[T]]],[11,R[41],E,E,195,[[["self"]],[T]]],[11,R[19],E,E,195,[[["self"]],[R[42]]]],[11,R[62],R[3804],E,196,[[["self"]],["string"]]],[11,"from",E,E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[12],E,E,196,[[[U]],[R[13]]]],[11,R[14],E,E,196,[[],[R[13]]]],[11,R[15],E,E,196,[[["self"]],[T]]],[11,R[41],E,E,196,[[["self"]],[T]]],[11,R[19],E,E,196,[[["self"]],[R[42]]]],[11,R[62],E,E,197,[[["self"]],["string"]]],[11,"from",E,E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[12],E,E,197,[[[U]],[R[13]]]],[11,R[14],E,E,197,[[],[R[13]]]],[11,R[15],E,E,197,[[["self"]],[T]]],[11,R[41],E,E,197,[[["self"]],[T]]],[11,R[19],E,E,197,[[["self"]],[R[42]]]],[11,"from",R[3773],E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[12],E,E,198,[[[U]],[R[13]]]],[11,R[14],E,E,198,[[],[R[13]]]],[11,R[15],E,E,198,[[["self"]],[T]]],[11,R[41],E,E,198,[[["self"]],[T]]],[11,R[19],E,E,198,[[["self"]],[R[42]]]],[11,"from",R[3805],E,199,[[[T]],[T]]],[11,"into",E,E,199,[[],[U]]],[11,R[12],E,E,199,[[[U]],[R[13]]]],[11,R[14],E,E,199,[[],[R[13]]]],[11,R[15],E,E,199,[[["self"]],[T]]],[11,R[41],E,E,199,[[["self"]],[T]]],[11,R[19],E,E,199,[[["self"]],[R[42]]]],[11,"from",E,E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[17],E,E,200,[[["self"]],[T]]],[11,R[18],E,E,200,[[[T],["self"]]]],[11,R[12],E,E,200,[[[U]],[R[13]]]],[11,R[14],E,E,200,[[],[R[13]]]],[11,R[15],E,E,200,[[["self"]],[T]]],[11,R[41],E,E,200,[[["self"]],[T]]],[11,R[19],E,E,200,[[["self"]],[R[42]]]],[11,"from",R[3773],E,201,[[[T]],[T]]],[11,"into",E,E,201,[[],[U]]],[11,R[12],E,E,201,[[[U]],[R[13]]]],[11,R[14],E,E,201,[[],[R[13]]]],[11,R[15],E,E,201,[[["self"]],[T]]],[11,R[41],E,E,201,[[["self"]],[T]]],[11,R[19],E,E,201,[[["self"]],[R[42]]]],[11,R[108],E,E,201,[[],["f"]]],[11,R[62],R[3806],E,202,[[["self"]],["string"]]],[11,"from",E,E,202,[[[T]],[T]]],[11,"into",E,E,202,[[],[U]]],[11,R[12],E,E,202,[[[U]],[R[13]]]],[11,R[14],E,E,202,[[],[R[13]]]],[11,R[15],E,E,202,[[["self"]],[T]]],[11,R[41],E,E,202,[[["self"]],[T]]],[11,R[19],E,E,202,[[["self"]],[R[42]]]],[11,"from",R[3773],E,203,[[[T]],[T]]],[11,"into",E,E,203,[[],[U]]],[11,R[12],E,E,203,[[[U]],[R[13]]]],[11,R[14],E,E,203,[[],[R[13]]]],[11,R[15],E,E,203,[[["self"]],[T]]],[11,R[41],E,E,203,[[["self"]],[T]]],[11,R[19],E,E,203,[[["self"]],[R[42]]]],[11,R[108],E,E,203,[[],["f"]]],[11,R[62],E,E,204,[[["self"]],["string"]]],[11,"from",E,E,204,[[[T]],[T]]],[11,"into",E,E,204,[[],[U]]],[11,R[12],E,E,204,[[[U]],[R[13]]]],[11,R[14],E,E,204,[[],[R[13]]]],[11,R[15],E,E,204,[[["self"]],[T]]],[11,R[41],E,E,204,[[["self"]],[T]]],[11,R[19],E,E,204,[[["self"]],[R[42]]]],[11,"from",E,E,205,[[[T]],[T]]],[11,"into",E,E,205,[[],[U]]],[11,R[12],E,E,205,[[[U]],[R[13]]]],[11,R[14],E,E,205,[[],[R[13]]]],[11,R[15],E,E,205,[[["self"]],[T]]],[11,R[41],E,E,205,[[["self"]],[T]]],[11,R[19],E,E,205,[[["self"]],[R[42]]]],[11,"from",R[3807],E,206,[[[T]],[T]]],[11,"into",E,E,206,[[],[U]]],[11,R[17],E,E,206,[[["self"]],[T]]],[11,R[18],E,E,206,[[[T],["self"]]]],[11,R[12],E,E,206,[[[U]],[R[13]]]],[11,R[14],E,E,206,[[],[R[13]]]],[11,R[15],E,E,206,[[["self"]],[T]]],[11,R[41],E,E,206,[[["self"]],[T]]],[11,R[19],E,E,206,[[["self"]],[R[42]]]],[11,R[62],E,E,207,[[["self"]],["string"]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[12],E,E,207,[[[U]],[R[13]]]],[11,R[14],E,E,207,[[],[R[13]]]],[11,R[15],E,E,207,[[["self"]],[T]]],[11,R[41],E,E,207,[[["self"]],[T]]],[11,R[19],E,E,207,[[["self"]],[R[42]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[12],E,E,208,[[[U]],[R[13]]]],[11,R[14],E,E,208,[[],[R[13]]]],[11,R[15],E,E,208,[[["self"]],[T]]],[11,R[41],E,E,208,[[["self"]],[T]]],[11,R[19],E,E,208,[[["self"]],[R[42]]]],[11,R[108],E,E,208,[[],["f"]]],[11,"from",R[3808],E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[17],E,E,209,[[["self"]],[T]]],[11,R[18],E,E,209,[[[T],["self"]]]],[11,R[12],E,E,209,[[[U]],[R[13]]]],[11,R[14],E,E,209,[[],[R[13]]]],[11,R[15],E,E,209,[[["self"]],[T]]],[11,R[41],E,E,209,[[["self"]],[T]]],[11,R[19],E,E,209,[[["self"]],[R[42]]]],[11,"from",R[3783],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[12],E,E,34,[[[U]],[R[13]]]],[11,R[14],E,E,34,[[],[R[13]]]],[11,R[15],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[R[42]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[12],E,E,36,[[[U]],[R[13]]]],[11,R[14],E,E,36,[[],[R[13]]]],[11,R[15],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[R[42]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[12],E,E,210,[[[U]],[R[13]]]],[11,R[14],E,E,210,[[],[R[13]]]],[11,R[15],E,E,210,[[["self"]],[T]]],[11,R[41],E,E,210,[[["self"]],[T]]],[11,R[19],E,E,210,[[["self"]],[R[42]]]],[11,R[108],E,E,210,[[],["f"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[17],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[[T],["self"]]]],[11,R[12],E,E,35,[[[U]],[R[13]]]],[11,R[14],E,E,35,[[],[R[13]]]],[11,R[15],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[R[42]]]],[11,"from",R[3808],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[12],E,E,31,[[[U]],[R[13]]]],[11,R[14],E,E,31,[[],[R[13]]]],[11,R[15],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[R[42]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[12],E,E,33,[[[U]],[R[13]]]],[11,R[14],E,E,33,[[],[R[13]]]],[11,R[15],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[R[42]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[17],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[[T],["self"]]]],[11,R[12],E,E,32,[[[U]],[R[13]]]],[11,R[14],E,E,32,[[],[R[13]]]],[11,R[15],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[R[42]]]],[11,R[63],R[3809],E,7,[[["self"],[R[1]]],[[R[45],[R[47]]],[R[47]]]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",66,[[["nulerror"]],["error"]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",66,[[[R[1]]],["error"]]],[11,"from",E,E,66,[[["intoinnererror"]],["error"]]],[11,R[31],E,E,66,[[["self"]],["str"]]],[11,"cause",E,E,66,[[["self"]],[[R[45],["error"]],["error"]]]],[11,"source",E,E,66,[[["self"]],[[R[45],["error"]],["error"]]]],[11,"fmt",E,E,66,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"eq",E,E,7,[[["self"],[R[1]]],["bool"]]],[11,"cmp",E,E,7,[[["self"],[R[1]]],[R[47]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"fmt",E,E,66,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,7,[[["self"]],[R[1]]]],[11,R[77],R[3639],E,141,[[],[R[128]]]],[11,R[77],R[3799],E,170,[[],[R[387]]]],[11,R[77],R[3798],E,114,[[],[R[126]]]],[11,R[196],R[3639],E,141,[[[T]],[R[128]]]],[11,R[196],R[3798],E,114,[[[T]],[R[126]]]],[11,"next",E,E,115,[[["self"]],[["f"],[R[45]]]]],[11,R[46],E,E,115,[[["self"]]]],[11,"next",R[3639],E,134,[[["self"]],[R[45]]]],[11,"poll",R[3797],E,112,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",R[3639],E,160,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,150,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,153,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,163,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,117,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,131,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,158,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,143,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,130,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,157,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,133,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,162,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,146,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,123,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,116,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,155,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",R[3797],E,108,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",R[3639],E,137,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,156,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,122,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,152,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,119,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,144,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,147,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,128,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,118,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,129,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,132,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",R[3797],E,17,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",R[3639],E,125,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,127,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,138,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,142,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",R[3798],E,114,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",R[3639],E,145,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,139,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,154,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,141,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,151,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"from",R[3797],E,84,[[[R[13]]],[R[101]]]],[11,"from",R[3636],E,24,[[[T]],["async"]]],[11,"fmt",R[3797],E,106,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,165,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,135,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,152,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,85,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,148,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,140,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,143,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,133,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,141,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,144,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,136,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,150,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,91,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,100,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3636],E,25,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,154,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,128,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3636],E,24,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,158,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,93,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,99,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,167,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,88,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,118,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,166,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,90,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,149,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,137,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,127,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,83,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,146,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,20,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,151,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,84,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,108,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,94,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,157,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,160,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,119,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,95,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,123,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,111,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,105,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,142,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,110,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,162,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,121,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,117,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,169,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,97,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,138,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,112,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,107,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,129,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,89,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,109,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,96,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,147,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,161,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,124,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,120,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,122,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,16,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,116,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,159,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,131,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,153,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,139,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,155,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,102,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,87,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3798],E,114,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,132,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,103,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,86,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,126,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,170,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,101,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,145,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,125,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,134,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,98,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,104,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,92,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,164,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,15,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,113,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,156,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,130,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3799],E,168,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,163,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3798],E,115,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[190],R[3639],E,139,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,139,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,139,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,140,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,140,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,140,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,162,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,162,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,162,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,137,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,137,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,137,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,138,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,138,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,138,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,156,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,156,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,156,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,155,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,155,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,155,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,152,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,152,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,152,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,116,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,116,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,116,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,123,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,123,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,123,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,117,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,117,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,117,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,118,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,118,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,118,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,131,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,131,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,131,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,127,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,127,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,127,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,142,[[["self"]],[[R[193]],[R[13],[R[193]]]]]],[11,R[192],E,E,142,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,142,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,144,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,144,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,144,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,163,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,163,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,163,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,119,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,119,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,119,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,157,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,157,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,157,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,133,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,133,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,133,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,154,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,154,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,154,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"clone",R[3799],E,168,[[["self"]],[R[201]]]],[11,"clone",R[3797],E,109,[[["self"]],["shared"]]],[11,"clone",E,E,15,[[["self"]],[R[107]]]],[11,"clone",R[3799],E,164,[[["self"]],["task"]]],[11,"clone",R[3797],E,84,[[["self"]],[R[101]]]],[11,"clone",R[3636],E,24,[[["self"]],["async"]]],[11,"clone",E,E,25,[[["self"]],[R[193]]]],[11,"clone",R[3799],E,169,[[["self"]],["taskrc"]]],[11,"clone",R[3797],E,87,[[["self"]],[R[198]]]],[11,"clone",E,E,91,[[["self"]],[R[197]]]],[11,"poll",E,E,102,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,104,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,86,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,109,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3639],E,148,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3797],E,90,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3639],E,135,[[["self"]],[["async",["vec"]],[R[13],["async"]]]]],[11,"poll",R[3797],E,99,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,98,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3639],E,161,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3797],E,94,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,103,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,17,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,100,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,95,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,110,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,107,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,105,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,88,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3639],E,120,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3797],E,113,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,96,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3639],E,126,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,159,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3797],E,92,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,111,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,106,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,97,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3639],E,136,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3797],E,84,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,93,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,85,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3639],E,149,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3797],E,101,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,89,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"fmt",R[3639],E,20,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3797],E,87,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3639],E,121,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"drop",R[3798],E,114,[[["self"]]]],[11,"drop",R[3797],E,109,[[["self"]]]],[11,"eq",E,E,15,[[["self"],[R[107]]],["bool"]]],[11,"eq",R[3636],E,24,[[["self"],["async"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["async"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[193]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[193]]],["bool"]]],[11,"deref",R[3797],E,91,[[["self"]],[T]]],[11,"deref",E,E,87,[[["self"]],["e"]]],[11,R[31],R[3639],E,20,[[["self"]],["str"]]],[11,R[31],R[3797],E,87,[[["self"]],["str"]]],[11,"cause",E,E,87,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[31],R[3639],E,121,[[["self"]],["str"]]],[11,"encode",R[3789],E,37,[[["self"],["bytes"],[R[1604]]],[[R[13],["error"]],["error"]]]],[11,"encode",E,E,41,[[["self"],["string"],[R[1604]]],[[R[13],["error"]],["error"]]]],[11,"cmp",E,E,37,[[[R[3449]],["self"]],[R[47]]]],[11,"cmp",E,E,41,[[["self"],[R[3450]]],[R[47]]]],[11,"fmt",E,E,41,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,37,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"eq",E,E,41,[[["self"],[R[3450]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[3450]]],["bool"]]],[11,"eq",E,E,37,[[[R[3449]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[3449]],["self"]],["bool"]]],[11,R[63],E,E,41,[[["self"],[R[3450]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,41,[[["self"],[R[3450]]],["bool"]]],[11,"le",E,E,41,[[["self"],[R[3450]]],["bool"]]],[11,"gt",E,E,41,[[["self"],[R[3450]]],["bool"]]],[11,"ge",E,E,41,[[["self"],[R[3450]]],["bool"]]],[11,R[63],E,E,37,[[[R[3449]],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,37,[[[R[3449]],["self"]],["bool"]]],[11,"le",E,E,37,[[[R[3449]],["self"]],["bool"]]],[11,"gt",E,E,37,[[[R[3449]],["self"]],["bool"]]],[11,"ge",E,E,37,[[[R[3449]],["self"]],["bool"]]],[11,"decode",E,E,41,[[["self"],[R[1604]]],[["error"],[R[45],["string"]],[R[13],[R[45],"error"]]]]],[11,R[3880],E,E,41,[[["self"],[R[1604]]],[["error"],[R[45],["string"]],[R[13],[R[45],"error"]]]]],[11,"decode",E,E,37,[[["self"],[R[1604]]],[[R[45],[R[1604]]],[R[13],[R[45],"error"]],["error"]]]],[11,"clone",E,E,37,[[["self"]],[R[3449]]]],[11,"clone",E,E,41,[[["self"]],[R[3450]]]],[11,"fmt",R[3809],E,64,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,59,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,61,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,56,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3789],E,38,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,40,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3809],E,63,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,65,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,58,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,57,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,60,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,62,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3789],E,39,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[3888],R[3809],E,60,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[3116],E,E,65,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3458],E,E,65,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,"poll",E,E,57,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,64,[[["self"]],[["error"],["async"],[R[13],["async","error"]]]]],[11,"poll",E,E,61,[[["self"]],[["async"],[R[13],["async","error"]],["error"]]]],[11,"poll",E,E,63,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,62,[[["self"]],[["async"],[R[13],["async","error"]],["error"]]]],[11,"poll",E,E,59,[[["self"]],[["error"],["async"],[R[13],["async","error"]]]]],[11,"poll",E,E,56,[[["self"]],[["async"],[R[13],["async","error"]],["error"]]]],[11,"write",E,E,65,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,65,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"read",E,E,60,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"poll",R[3789],E,38,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,39,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,40,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",R[3809],E,58,[[["self"]],[[R[13],["async","error"]],["async",[R[45]]],["error"]]]],[11,R[190],R[3789],E,38,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,38,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,38,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,40,[[["self"]],[[R[193]],[R[13],[R[193]]]]]],[11,R[192],E,E,40,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"close",E,E,40,[[["self"]],[["async"],[R[13],["async"]]]]],[11,R[190],E,E,39,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,39,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,39,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"fmt",R[3808],E,209,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"spawn",E,E,209,[[["self"],["f"]],[[R[791]],[R[13],[R[791]]]]]],[11,"spawn",E,E,209,[[["self"],["box",["future"]],["future"]],[[R[791]],[R[13],[R[791]]]]]],[11,"execute",E,E,209,[[["self"],["f"]],[[R[106]],[R[13],[R[106]]]]]],[11,"clone",E,E,209,[[["self"]],[R[3405]]]],[11,"execute",R[3807],E,206,[[["self"],[T]],[[R[106]],[R[13],[R[106]]]]]],[11,"fmt",E,E,207,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,206,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,207,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[31],E,E,207,[[["self"]],["str"]]],[11,"spawn",E,E,206,[[["self"],["box",["future"]],["future"]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,E,206,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"spawn",E,E,206,[[["self"],[T]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,E,206,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"clone",E,E,206,[[["self"]],[R[794]]]],[11,"drop",R[3792],E,44,[[["self"]]]],[11,"fmt",E,E,52,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3809],E,55,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,54,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3791],E,45,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,43,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,48,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,49,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,46,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3793],E,50,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3792],E,51,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,44,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3809],E,53,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3791],E,47,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[3116],R[3792],E,44,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3116],R[3809],E,53,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3116],E,E,55,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,"from",R[3791],E,43,[[[R[3463]]],[R[3463]]]],[11,"write",R[3809],E,55,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,55,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"write",R[3792],E,44,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,44,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"write",R[3809],E,53,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,53,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"read",E,E,54,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"read",R[3792],E,44,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[3123],E,E,44,[[["self"]],["bool"]]],[11,R[3123],R[3809],E,54,[[["self"]],["bool"]]],[11,"poll",R[3793],E,50,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",R[3791],E,49,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3792],E,51,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3791],E,47,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,45,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,46,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3792],E,52,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3791],E,48,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"clone",E,E,43,[[["self"]],[R[3463]]]],[11,"from",R[3809],E,66,[[["error"]],["error"]]],[11,"fmt",R[3800],E,171,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,173,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,175,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,174,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,172,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,176,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"unpark",E,E,172,[[["self"]]]],[11,"unpark",E,E,174,[[["self"]]]],[11,"park",E,E,174,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[788],E,E,174,[[["self"],[R[411]]],[[R[13],["error"]],["error"]]]],[11,R[3116],E,E,173,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[853],E,E,174,[[["self"]],["i32"]]],[11,"drop",E,E,171,[[["self"]]]],[11,"drop",E,E,173,[[["self"]]]],[11,"write",E,E,173,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,173,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[77],E,R[4072],172,[[],["handle"]]],[11,"read",E,E,173,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"clone",E,E,172,[[["self"]],["handle"]]],[11,"fmt",R[3772],E,193,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,179,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3803],E,192,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,181,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3771],E,189,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3803],E,191,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3801],E,177,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3771],E,190,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,183,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,182,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3770],E,186,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3801],E,178,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3770],E,187,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3804],E,196,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3770],E,185,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3772],E,195,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,184,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3772],E,194,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,180,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3804],E,197,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3770],E,188,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"deref",R[3772],E,195,[[["self"]],[T]]],[11,"deref",R[3801],E,178,[[["self"]]]],[11,"poll",R[3772],E,193,[[["self"]],[[R[393]],[R[13],["async",R[393]]],["async",[R[45]]]]]],[11,"poll",R[3770],E,185,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,187,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"from",R[3802],E,183,[[],[R[376]]]],[11,"from",R[3801],E,177,[[[T]],["lock"]]],[11,"from",R[3802],E,179,[[],[R[148]]]],[11,R[31],E,E,183,[[["self"]],["str"]]],[11,R[31],E,E,184,[[["self"]],["str"]]],[11,R[31],E,E,181,[[["self"]],["str"]]],[11,R[31],E,E,182,[[["self"]],["str"]]],[11,R[31],R[3803],E,192,[[["self"]],["str"]]],[11,R[31],R[3804],E,196,[[["self"]],["str"]]],[11,R[31],E,E,197,[[["self"]],["str"]]],[11,R[31],R[3803],E,191,[[["self"]],["str"]]],[11,R[31],R[3802],E,179,[[["self"]],["str"]]],[11,R[31],E,E,180,[[["self"]],["str"]]],[11,"poll",R[3771],E,190,[[["self"]],[["async"],[R[13],["async",R[393]]],[R[393]]]]],[11,"drop",E,E,190,[[["self"]]]],[11,"drop",E,E,189,[[["self"]]]],[11,"drop",R[3772],E,194,[[["self"]]]],[11,"drop",E,E,193,[[["self"]]]],[11,"drop",R[3801],E,178,[[["self"]]]],[11,R[60],E,E,178,[[["self"]]]],[11,"fmt",E,E,178,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,180,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3804],E,197,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,183,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,182,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,184,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,181,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3803],E,192,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,191,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3804],E,196,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3802],E,179,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[77],R[3801],E,177,[[],["lock"]]],[11,R[190],R[3770],E,188,[[["self"],[T]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,188,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,188,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],R[3772],E,194,[[["self"],[T]],[[R[149]],[R[13],[R[193],R[149]]],[R[193]]]]],[11,R[192],E,E,194,[[["self"]],[[R[13],["async",R[149]]],["async"],[R[149]]]]],[11,R[190],R[3770],E,186,[[["self"],[T]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,186,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,186,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"clone",R[3772],E,193,[[["self"]],["receiver"]]],[11,"clone",R[3770],E,186,[[["self"]],[R[3810]]]],[11,"clone",E,E,188,[[["self"]],["sender"]]],[11,"clone",R[3801],E,177,[[["self"]],["lock"]]],[11,"poll",R[3794],E,75,[[["self"]],[["error"],[R[13],["async","error"]],["async",[R[805]]]]]],[11,"fmt",E,E,68,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,67,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,75,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,76,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[3116],E,E,68,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3458],E,E,68,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,"write",E,E,68,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,68,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[3123],E,E,68,[[["self"]],["bool"]]],[11,R[3888],E,E,68,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,"read",E,E,68,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"poll",E,E,76,[[["self"]],[["async",[R[45]]],[R[13],["async","error"]],["error"]]]],[11,R[853],E,E,68,[[["self"]],["i32"]]],[11,R[853],E,E,67,[[["self"]],["i32"]]],[11,"poll",R[3773],E,203,[[["self"]],[["async"],[R[13],["async"]]]]],[11,"poll",E,E,201,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"fmt",R[3805],E,199,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3773],E,204,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3806],E,202,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3773],E,201,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,205,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,198,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3805],E,200,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3773],E,203,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,204,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",R[3806],E,202,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[31],R[3773],E,204,[[["self"]],["str"]]],[11,R[31],R[3806],E,202,[[["self"]],["str"]]],[11,"poll",R[3773],E,201,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"poll",E,E,198,[[["self"]],[["error"],["async",[R[45]]],[R[13],["async","error"]]]]],[11,"poll",E,E,205,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,"clone",R[3805],E,200,[[["self"]],["key"]]],[11,"poll",R[3795],E,77,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,78,[[["self"]],[[R[13],["async","error"]],["error"],["async"]]]],[11,"poll",E,E,69,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,R[853],E,E,70,[[["self"]],["i32"]]],[11,"fmt",E,E,69,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,77,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,78,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,70,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[190],E,E,69,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,69,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,69,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",R[3796],E,82,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,81,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"poll",E,E,79,[[["self"]],[["async",[R[3443]]],[R[13],["async","error"]],["error"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"fmt",E,E,71,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,79,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,74,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,81,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,73,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,72,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,80,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,82,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,R[3123],E,E,74,[[["self"]],["bool"]]],[11,R[3888],E,E,74,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,"eq",E,E,10,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["ucred"]],["bool"]]],[11,"write",E,E,74,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"flush",E,E,74,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"read",E,E,74,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,"poll",E,E,80,[[["self"]],[["async",[R[45]]],[R[13],["async","error"]],["error"]]]],[11,"poll",E,E,72,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,R[853],E,E,73,[[["self"]],["i32"]]],[11,R[853],E,E,74,[[["self"]],["i32"]]],[11,R[853],E,E,71,[[["self"]],["i32"]]],[11,R[3116],E,E,74,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3458],E,E,74,[[["self"],["b"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[190],E,E,72,[[["self"]],[[R[193]],[R[13],[R[193]]]]]],[11,R[192],E,E,72,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,72,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"clone",E,E,10,[[["self"]],["ucred"]]],[11,"clone",R[3790],E,4,[[["self"]],["builder"]]],[11,"clone",R[3808],E,32,[[["self"]],["handle"]]],[11,"clone",R[3783],E,35,[[["self"]],[R[3405]]]],[11,"drop",E,E,36,[[["self"]]]],[11,"fmt",R[3790],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,42,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3807],E,208,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3808],E,31,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,33,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,32,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3783],E,34,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,210,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,35,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,36,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3790],E,42,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,42,[[["self"]],["str"]]],[11,"poll",R[3783],E,210,[[["self"]],["poll"]]],[11,R[108],R[3807],E,208,[[]]],[11,"execute",R[3808],E,32,[[["self"],[T]],[[R[13],[R[106]]],[R[106]]]]],[11,"execute",R[3783],E,35,[[["self"],[T]],[[R[13],[R[106]]],[R[106]]]]],[11,"encode",R[3790],E,3,[[["self"],[R[1604]],["bytes"]],[["error"],[R[13],["error"]]]]],[11,"decode",E,E,3,[[["self"],[R[1604]]],[[R[13],[R[45]]],[R[45],[R[1604]]]]]],[11,"spawn",R[3783],E,35,[[["self"],["box",["future"]],["future"]],[[R[791]],[R[13],[R[791]]]]]],[11,"spawn",R[3808],E,32,[[["self"],[T]],[[R[791]],[R[13],[R[791]]]]]],[11,"spawn",R[3783],E,35,[[["self"],[T]],[[R[791]],[R[13],[R[791]]]]]],[11,"new",R[3789],R[3898],37,[[],[R[3449]]]],[11,"new",E,R[3127],38,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[3127],38,[[[R[3451]]],["framed"]]],[11,R[120],E,R[3452],38,[[["self"]],[T]]],[11,R[121],E,R[3453],38,[[["self"]],[T]]],[11,"codec",E,R[3903],38,[[["self"]],[U]]],[11,"codec_mut",E,R[3904],38,[[["self"]],[U]]],[11,R[118],E,R[3905],38,[[],[T]]],[11,R[3906],E,R[3907],38,[[],[R[3451]]]],[11,"new",E,R[3908],2,[[[U],[T]],[R[3451]]]],[11,"new",E,R[3909],39,[[["d"],[T]],[R[3910]]]],[11,R[120],E,R[3452],39,[[["self"]],[T]]],[11,R[121],E,R[3453],39,[[["self"]],[T]]],[11,R[118],E,R[3911],39,[[],[T]]],[11,"decoder",E,R[3454],39,[[["self"]],["d"]]],[11,R[3912],E,R[3455],39,[[["self"]],["d"]]],[11,"new",E,R[3913],40,[[[T],["e"]],[R[3811]]]],[11,R[120],E,R[3452],40,[[["self"]],[T]]],[11,R[121],E,R[3453],40,[[["self"]],[T]]],[11,R[118],E,R[3914],40,[[],[T]]],[11,"encoder",E,R[3454],40,[[["self"]],["e"]]],[11,R[3915],E,R[3455],40,[[["self"]],["e"]]],[11,"new",E,R[3899],41,[[],[R[3450]]]],[11,R[3900],E,R[3901],41,[[[R[9]]],[R[3450]]]],[11,"max_length",E,R[3902],41,[[["self"]],[R[9]]]],[11,"new",R[3791],R[3974],43,[[],[R[3463]]]],[11,"read",E,R[3975],43,[[["self"],["bool"]],[R[3463]]]],[11,"write",E,R[3976],43,[[["self"],["bool"]],[R[3463]]]],[11,"append",E,R[3977],43,[[["self"],["bool"]],[R[3463]]]],[11,R[2724],E,R[3978],43,[[["self"],["bool"]],[R[3463]]]],[11,"create",E,R[3979],43,[[["self"],["bool"]],[R[3463]]]],[11,"create_new",E,R[3980],43,[[["self"],["bool"]],[R[3463]]]],[11,"open",E,R[3981],43,[[["self"],["p"]],[R[3982]]]],[11,"open",R[3792],R[3983],44,[[["p"]],[R[3982]]]],[11,"create",E,R[3984],44,[[["p"]],[R[3985]]]],[11,R[3118],E,R[3986],44,[[["file"]],["file"]]],[11,"poll_seek",E,R[3465],44,[[["self"],["seekfrom"]],[[R[13],["async","error"]],["async",["u64"]],["error"]]]],[11,"seek",E,R[3465],44,[[["seekfrom"]],["seekfuture"]]],[11,R[3987],E,R[3988],44,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3989],E,R[3990],44,[[["self"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3991],E,R[3992],44,[[["self"],["u64"]],[[R[13],["async","error"]],["async"],["error"]]]],[11,R[3026],E,R[3467],44,[[],[R[3466]]]],[11,R[3471],E,R[3467],44,[[["self"]],[[R[13],["async","error"]],["async",[R[3026]]],["error"]]]],[11,R[3993],E,R[3468],44,[[["self"]],[["async",["file"]],["error"],[R[13],["async","error"]]]]],[11,R[3117],E,R[3468],44,[[],[R[3994]]]],[11,R[3995],E,R[3996],44,[[["self"],[R[3469]]],[[R[13],["async","error"]],["async"],["error"]]]],[11,"into_std",E,R[3997],44,[[],["file"]]],[11,R[118],R[3809],R[4019],58,[[],["a"]]],[11,"unsplit",E,R[4020],60,[[["writehalf"]],[T]]],[11,"unsplit",E,R[4021],65,[[["readhalf"]],[T]]],[11,"new",E,"Creates a new I/O error from a known kind of error as well…",66,[[[R[1]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",66,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",66,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",66,[[["self"]],[[R[45],["i32"]],["i32"]]]],[11,R[120],E,"Returns a reference to the inner error wrapped by this…",66,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[121],E,"Returns a mutable reference to the inner error wrapped by…",66,[[["self"]],[[R[45],["error"]],["error"]]]],[11,R[118],E,"Consumes the `Error`, returning its inner error (if any).",66,[[],[["box",["error"]],[R[45],["box"]]]]],[11,"kind",E,R[2331],66,[[["self"]],[R[1]]]],[11,"bind",R[3794],R[4122],67,[[[R[806]]],[["error"],[R[13],[R[804],"error"]],[R[804]]]]],[11,R[3513],E,R[3487],67,[[["self"]],[["error"],[R[13],["async","error"]],["async"]]]],[11,R[3514],E,R[3487],67,[[["self"]],[["async"],[R[13],["async","error"]],["error"]]]],[11,R[3118],E,R[4123],67,[[[R[804]],["handle"]],[["error"],[R[13],[R[804],"error"]],[R[804]]]]],[11,R[3076],E,R[4124],67,[[["self"]],[[R[806]],[R[13],[R[806],"error"]],["error"]]]],[11,R[4221],E,R[3515],67,[[],[R[4221]]]],[11,"ttl",E,R[828],67,[[["self"]],[["u32"],["error"],[R[13],["u32","error"]]]]],[11,"set_ttl",E,R[810],67,[[["self"],["u32"]],[[R[13],["error"]],["error"]]]],[11,"connect",E,R[4125],68,[[[R[806]]],[R[3489]]]],[11,R[3118],E,R[4126],68,[[[R[805]],["handle"]],[[R[13],[R[805],"error"]],[R[805]],["error"]]]],[11,R[4127],E,R[3488],68,[[[R[805]],["handle"],[R[806]]],[R[3489]]]],[11,R[3277],E,R[4128],68,[[["self"],["ready"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3278],E,R[4129],68,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3076],E,R[4130],68,[[["self"]],[[R[806]],[R[13],[R[806],"error"]],["error"]]]],[11,R[3490],E,R[4131],68,[[["self"]],[[R[806]],[R[13],[R[806],"error"]],["error"]]]],[11,"poll_peek",E,R[3115],68,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[3116],E,R[3444],68,[[["self"],[R[3116]]],[[R[13],["error"]],["error"]]]],[11,"nodelay",E,R[3090],68,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,R[3088],E,R[3089],68,[[["self"],["bool"]],[[R[13],["error"]],["error"]]]],[11,R[837],E,R[838],68,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[835],E,R[836],68,[[["self"],[R[9]]],[[R[13],["error"]],["error"]]]],[11,R[841],E,R[842],68,[[["self"]],[["error"],[R[9]],[R[13],[R[9],"error"]]]]],[11,R[839],E,R[840],68,[[["self"],[R[9]]],[[R[13],["error"]],["error"]]]],[11,R[3491],E,R[823],68,[[["self"]],[[R[45],[R[411]]],["error"],[R[13],[R[45],"error"]]]]],[11,R[3091],E,R[822],68,[[["self"],[R[45],[R[411]]],[R[411]]],[[R[13],["error"]],["error"]]]],[11,"ttl",E,R[828],68,[[["self"]],[["u32"],["error"],[R[13],["u32","error"]]]]],[11,"set_ttl",E,R[810],68,[[["self"],["u32"]],[[R[13],["error"]],["error"]]]],[11,"linger",E,R[4132],68,[[["self"]],[[R[45],[R[411]]],["error"],[R[13],[R[45],"error"]]]]],[11,R[832],E,R[833],68,[[["self"],[R[45],[R[411]]],[R[411]]],[[R[13],["error"]],["error"]]]],[11,"new",R[3795],R[4189],69,[[[R[809]],["c"]],["udpframed"]]],[11,R[120],E,R[3452],69,[[["self"]],[R[809]]]],[11,R[121],E,R[3453],69,[[["self"]],[R[809]]]],[11,R[118],E,R[4190],69,[[],[R[809]]]],[11,"bind",E,R[4191],70,[[[R[806]]],[[R[809]],[R[13],[R[809],"error"]],["error"]]]],[11,R[3118],E,R[4192],70,[[[R[809]],["handle"]],[[R[809]],[R[13],[R[809],"error"]],["error"]]]],[11,R[3076],E,R[3505],70,[[["self"]],[[R[806]],[R[13],[R[806],"error"]],["error"]]]],[11,"connect",E,R[3496],70,[[["self"],[R[806]]],[[R[13],["error"]],["error"]]]],[11,R[4214],E,R[3497],70,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4211],E,R[4193],70,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[3508],E,R[3498],70,[[["self"],[R[806]]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4194],E,R[3499],70,[[[T],[R[806]]],[R[4216]]]],[11,R[3507],E,R[3500],70,[[["self"]],[["async"],[R[13],["async","error"]],["error"]]]],[11,R[4195],E,R[4196],70,[[[T]],[R[4213]]]],[11,R[3277],E,R[4197],70,[[["self"],["ready"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3278],E,R[4198],70,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[862],E,R[3094],70,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,R[3092],E,R[3093],70,[[["self"],["bool"]],[[R[13],["error"]],["error"]]]],[11,R[3097],E,R[3098],70,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,R[3095],E,R[3096],70,[[["self"],["bool"]],[[R[13],["error"]],["error"]]]],[11,R[3101],E,R[3102],70,[[["self"]],[["u32"],["error"],[R[13],["u32","error"]]]]],[11,R[3099],E,R[3100],70,[[["self"],["u32"]],[[R[13],["error"]],["error"]]]],[11,R[3105],E,R[3106],70,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,R[3103],E,R[3104],70,[[["self"],["bool"]],[[R[13],["error"]],["error"]]]],[11,"ttl",E,R[828],70,[[["self"]],[["u32"],["error"],[R[13],["u32","error"]]]]],[11,"set_ttl",E,R[810],70,[[["self"],["u32"]],[[R[13],["error"]],["error"]]]],[11,R[3107],E,R[3108],70,[[["self"],[R[843]]],[[R[13],["error"]],["error"]]]],[11,R[3109],E,R[3110],70,[[["self"],["u32"],[R[1326]]],[[R[13],["error"]],["error"]]]],[11,R[3111],E,R[3112],70,[[["self"],[R[843]]],[[R[13],["error"]],["error"]]]],[11,R[3113],E,R[3114],70,[[["self"],["u32"],[R[1326]]],[[R[13],["error"]],["error"]]]],[11,"bind",R[3796],R[4208],71,[[["p"]],[[R[3436]],[R[13],[R[3436],"error"]],["error"]]]],[11,"pair",E,R[3503],71,[[],[[R[13],["error"]],["error"]]]],[11,R[3118],E,R[4209],71,[[[R[3436]],["handle"]],[[R[3436]],[R[13],[R[3436],"error"]],["error"]]]],[11,"unbound",E,R[4210],71,[[],[[R[3436]],[R[13],[R[3436],"error"]],["error"]]]],[11,"connect",E,R[3504],71,[[["self"],["p"]],[[R[13],["error"]],["error"]]]],[11,R[3277],E,R[3512],71,[[["self"],["ready"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3278],E,R[3517],71,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3076],E,R[3505],71,[[["self"]],[[R[13],[R[806],"error"]],[R[806]],["error"]]]],[11,R[3490],E,R[3506],71,[[["self"]],[[R[13],[R[806],"error"]],[R[806]],["error"]]]],[11,R[3507],E,R[3437],71,[[["self"]],[["error"],["async"],[R[13],["async","error"]]]]],[11,R[4211],E,R[3437],71,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4195],E,R[4212],71,[[[T]],[R[4213]]]],[11,R[3508],E,R[3509],71,[[["p"],["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4214],E,R[3510],71,[[["self"]],[[R[13],["async","error"]],["async",[R[9]]],["error"]]]],[11,R[4194],E,R[4215],71,[[[T],["p"]],[R[4216]]]],[11,R[816],E,R[3441],71,[[["self"]],[[R[13],[R[45],"error"]],[R[45],["error"]],["error"]]]],[11,R[3116],E,R[3511],71,[[["self"],[R[3116]]],[[R[13],["error"]],["error"]]]],[11,"new",E,R[4217],72,[[["c"],[R[3436]]],[R[4218]]]],[11,R[120],E,R[3452],72,[[["self"]],[R[3436]]]],[11,R[121],E,R[3453],72,[[["self"]],[R[3436]]]],[11,"bind",E,R[4219],73,[[["p"]],[[R[3438]],["error"],[R[13],[R[3438],"error"]]]]],[11,R[3118],E,R[4220],73,[[["handle"],[R[3438]]],[[R[3438]],["error"],[R[13],[R[3438],"error"]]]]],[11,R[3076],E,R[3440],73,[[["self"]],[[R[13],[R[806],"error"]],[R[806]],["error"]]]],[11,R[3277],E,R[3512],73,[[["self"],["ready"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[816],E,R[3441],73,[[["self"]],[[R[13],[R[45],"error"]],[R[45],["error"]],["error"]]]],[11,R[3513],E,R[3487],73,[[["self"]],[["error"],["async"],[R[13],["async","error"]]]]],[11,R[3514],E,R[3487],73,[[["self"]],[["error"],[R[13],["async","error"]],["async"]]]],[11,R[4221],E,R[3515],73,[[],[R[4221]]]],[11,"connect",E,R[3516],74,[[["p"]],[R[3489]]]],[11,R[3118],E,R[4222],74,[[["handle"],[R[3443]]],[[R[3443]],[R[13],[R[3443],"error"]],["error"]]]],[11,"pair",E,R[3503],74,[[],[[R[13],["error"]],["error"]]]],[11,R[3277],E,R[3512],74,[[["self"],["ready"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3278],E,R[3517],74,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[3076],E,R[3518],74,[[["self"]],[[R[13],[R[806],"error"]],[R[806]],["error"]]]],[11,R[3490],E,R[3519],74,[[["self"]],[[R[13],[R[806],"error"]],[R[806]],["error"]]]],[11,"peer_cred",E,R[4223],74,[[["self"]],[["ucred"],[R[13],["ucred","error"]],["error"]]]],[11,R[816],E,R[3441],74,[[["self"]],[[R[13],[R[45],"error"]],[R[45],["error"]],["error"]]]],[11,R[3116],E,R[3444],74,[[["self"],[R[3116]]],[[R[13],["error"]],["error"]]]],[11,R[3906],R[3795],R[4199],77,[[],["parts"]]],[11,"new",R[3797],R[3812],83,[[["f"],[R[107]]],[R[106]]]],[11,"kind",E,R[3813],83,[[["self"]],[R[107]]]],[11,R[108],E,R[3814],83,[[],["f"]]],[11,"is_done",E,R[3815],96,[[["self"]],["bool"]]],[11,"split",E,R[3816],17,[[]]],[11,"peek",E,R[3817],109,[[["self"]],[[R[13],[R[197],R[198]]],[R[45],[R[13]]]]]],[11,"new",R[3798],R[3818],114,[[],[R[126]]]],[11,"len",E,R[3819],114,[[["self"]],[R[9]]]],[11,R[73],E,R[3820],114,[[["self"]],["bool"]]],[11,"push",E,R[3821],114,[[["self"],[T]]]],[11,"iter_mut",E,R[3822],114,[[["self"]],["itermut"]]],[11,R[120],R[3639],R[116],116,[[["self"]],["s"]]],[11,R[121],E,R[117],116,[[["self"]],["s"]]],[11,R[118],E,R[119],116,[[],["s"]]],[11,R[120],E,R[116],117,[[["self"]],["s"]]],[11,R[121],E,R[117],117,[[["self"]],["s"]]],[11,R[118],E,R[119],117,[[],["s"]]],[11,R[120],E,R[116],119,[[["self"]],["s"]]],[11,R[121],E,R[117],119,[[["self"]],["s"]]],[11,R[118],E,R[119],119,[[],["s"]]],[11,R[120],E,R[116],123,[[["self"]],["s"]]],[11,R[121],E,R[117],123,[[["self"]],["s"]]],[11,R[118],E,R[119],123,[[],["s"]]],[11,"send",E,"Sends a new value along this channel to the receiver.",124,[[[R[13]]],["futuresender"]]],[11,R[120],E,R[116],127,[[["self"]],["s"]]],[11,R[121],E,R[117],127,[[["self"]],["s"]]],[11,R[118],E,R[119],127,[[],["s"]]],[11,"reunite",E,R[123],128,[[["splitsink"]],[[R[122]],[R[13],[R[122]]]]]],[11,R[120],E,R[116],131,[[["self"]],["s"]]],[11,R[121],E,R[117],131,[[["self"]],["s"]]],[11,R[118],E,R[119],131,[[],["s"]]],[11,R[120],E,R[116],133,[[["self"]],["s"]]],[11,R[121],E,R[117],133,[[["self"]],["s"]]],[11,R[118],E,R[119],133,[[],["s"]]],[11,R[120],E,R[116],134,[[["self"]],["s"]]],[11,R[121],E,R[117],134,[[["self"]],["s"]]],[11,R[118],E,R[119],134,[[],["s"]]],[11,R[120],E,R[116],136,[[["self"]],[[R[45]],["s"]]]],[11,R[121],E,R[117],136,[[["self"]],[[R[45]],["s"]]]],[11,R[118],E,R[119],136,[[],[R[45]]]],[11,R[120],E,R[116],137,[[["self"]],["s"]]],[11,R[121],E,R[117],137,[[["self"]],["s"]]],[11,R[118],E,R[119],137,[[],["s"]]],[11,R[120],E,R[116],138,[[["self"]],["s"]]],[11,R[121],E,R[117],138,[[["self"]],["s"]]],[11,R[118],E,R[119],138,[[],["s"]]],[11,R[120],E,R[116],139,[[["self"]],["s"]]],[11,R[121],E,R[117],139,[[["self"]],["s"]]],[11,R[118],E,R[119],139,[[],["s"]]],[11,"reunite",E,R[123],140,[[[R[3823]]],[[R[122]],[R[13],[R[122]]]]]],[11,"new",E,R[3824],141,[[],[R[128]]]],[11,"len",E,R[3825],141,[[["self"]],[R[9]]]],[11,R[73],E,R[3826],141,[[["self"]],["bool"]]],[11,"push",E,R[3827],141,[[["self"],[T]]]],[11,R[120],E,R[116],142,[[["self"]],["s"]]],[11,R[121],E,R[117],142,[[["self"]],["s"]]],[11,R[118],E,R[119],142,[[],["s"]]],[11,R[120],E,R[116],144,[[["self"]],["s"]]],[11,R[121],E,R[117],144,[[["self"]],["s"]]],[11,R[118],E,R[119],144,[[],["s"]]],[11,"sink_ref",E,R[3828],148,[[["self"]],[[U],[R[45]]]]],[11,"sink_mut",E,R[3829],148,[[["self"]],[[R[45]],[U]]]],[11,"stream_ref",E,R[3830],148,[[["self"]],[[R[45]],[T]]]],[11,"stream_mut",E,R[3831],148,[[["self"]],[[R[45]],[T]]]],[11,"is_done",E,R[3832],152,[[["self"]],["bool"]]],[11,R[120],E,R[116],152,[[["self"]],["s"]]],[11,R[121],E,R[117],152,[[["self"]],["s"]]],[11,R[118],E,R[119],152,[[],["s"]]],[11,"peek",E,R[3833],155,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,R[120],E,R[116],156,[[["self"]],["s"]]],[11,R[121],E,R[117],156,[[["self"]],["s"]]],[11,R[118],E,R[119],156,[[],["s"]]],[11,R[120],E,R[116],157,[[["self"]],["s"]]],[11,R[121],E,R[117],157,[[["self"]],["s"]]],[11,R[118],E,R[119],157,[[],["s"]]],[11,R[120],E,R[116],162,[[["self"]],["s"]]],[11,R[121],E,R[117],162,[[["self"]],["s"]]],[11,R[118],E,R[119],162,[[],["s"]]],[11,R[120],E,R[116],163,[[["self"]],["s"]]],[11,R[121],E,R[117],163,[[["self"]],["s"]]],[11,R[118],E,R[119],163,[[],["s"]]],[11,"notify",R[3799],R[3834],164,[[["self"]]]],[11,"is_current",E,R[3835],164,[[["self"]],["bool"]]],[11,R[3836],E,R[3837],164,[[["self"]],["bool"]]],[11,R[3838],E,R[3839],165,[[["self"]],[R[13]]]],[11,R[3840],E,R[3841],165,[[["self"]],[[R[13]],[R[45],[R[13]]]]]],[11,"wait_send",E,R[3842],165,[[["self"]],[R[13]]]],[11,"wait_flush",E,R[3843],165,[[["self"]],[R[13]]]],[11,"wait_close",E,R[3844],165,[[["self"]],[R[13]]]],[11,R[120],E,R[3845],165,[[["self"]],[T]]],[11,R[121],E,R[3846],165,[[["self"]],[T]]],[11,R[118],E,R[3847],165,[[],[T]]],[11,R[3848],E,R[3849],165,[[["self"],["n"],[R[9]],["f"]],["r"]]],[11,R[3850],E,R[3851],165,[[["self"],["n"],[R[9]]],[["async"],[R[13],["async"]]]]],[11,R[3852],E,R[3853],165,[[["self"],["n"],[R[9]]],[[R[13],["async"]],["async",[R[45]]]]]],[11,R[3854],E,R[3855],165,[[["self"],["n"],[R[9]]],[[R[193]],[R[13],[R[193]]]]]],[11,R[3856],E,R[3857],165,[[["self"],["n"],[R[9]]],[[R[13],["async"]],["async"]]]],[11,R[3858],E,R[3859],165,[[["self"],["n"],[R[9]]],[[R[13],["async"]],["async"]]]],[11,"with",E,R[3860],166,[[["self"],["f"]],["r"]]],[11,"run",E,"Actually run the task (invoking `poll` on its future) on…",167,[[]]],[11,"new",E,R[3861],168,[[["arc",["eventset"]],["eventset"],[R[9]]],[R[201]]]],[11,"new",E,"Inserts a new piece of task-local data into this task,…",169,[[["a"]],["taskrc"]]],[11,"with",E,"Operate with a reference to the underlying data.",169,[[["self"],["f"]],["r"]]],[11,"new",E,R[386],170,[[],[R[387]]]],[11,R[3081],E,R[388],170,[[["self"]]]],[11,R[389],E,R[390],170,[[["self"],["task"]]]],[11,"notify",E,R[391],170,[[["self"]]]],[11,"map",R[3636],R[3862],24,[[["f"]],["async"]]],[11,"is_ready",E,R[3863],24,[[["self"]],["bool"]]],[11,R[100],E,R[3864],24,[[["self"]],["bool"]]],[11,"map",E,R[3865],25,[[["f"]],[R[193]]]],[11,"is_ready",E,R[3866],25,[[["self"]],["bool"]]],[11,R[100],E,R[3867],25,[[["self"]],["bool"]]],[11,"handle",R[3800],R[4037],171,[[["self"]],["handle"]]],[11,R[3430],E,R[4038],171,[[],[R[3116]]]],[11,R[3431],E,R[4039],171,[[],[R[3116]]]],[11,"forget",E,R[4040],171,[[]]],[11,"new",E,R[4041],173,[[["e"]],[R[3868]]]],[11,R[4042],E,R[4043],173,[[["handle"],["e"]],[[R[13],[R[3868],"error"]],[R[3868]],["error"]]]],[11,R[120],E,R[4044],173,[[["self"]],["e"]]],[11,R[121],E,R[4045],173,[[["self"]],["e"]]],[11,R[118],E,R[4046],173,[[],[["error"],[R[13],["error"]]]]],[11,R[3277],E,R[4047],173,[[["self"],["ready"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[4048],E,R[4049],173,[[["self"],["ready"]],[[R[13],["error"]],["error"]]]],[11,R[3278],E,R[4050],173,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[4051],E,R[4052],173,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"new",E,R[4065],174,[[],[["reactor"],["error"],[R[13],["reactor","error"]]]]],[11,"handle",E,R[4066],174,[[["self"]],["handle"]]],[11,R[4067],E,R[4068],174,[[["self"]],[[R[3279]],[R[13],[R[3279]]]]]],[11,"turn",E,R[4069],174,[[["self"],[R[45],[R[411]]],[R[411]]],[["turn"],["error"],[R[13],["turn","error"]]]]],[11,"is_idle",E,R[4070],174,[[["self"]],["bool"]]],[11,R[3280],E,R[4071],174,[[],[[R[13],[R[3280],"error"]],["error"],[R[3280]]]]],[11,"new",E,R[4053],175,[[],[R[4054]]]],[11,R[3081],E,R[4055],175,[[[T],["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,R[3080],E,R[4056],175,[[["self"],[T]],[[R[13],["error"]],["error"]]]],[11,R[4057],E,R[4058],175,[[[T],["self"],["handle"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[11,R[3277],E,R[4059],175,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[4060],E,R[4061],175,[[["self"]],[[R[45],["ready"]],[R[13],[R[45],"error"]],["error"]]]],[11,R[3278],E,R[4062],175,[[["self"]],[[R[13],["async","error"]],["error"],["async",["ready"]]]]],[11,R[4063],E,R[4064],175,[[["self"]],[[R[45],["ready"]],[R[13],[R[45],"error"]],["error"]]]],[11,"new",R[3801],R[4076],177,[[[T]],["lock"]]],[11,R[370],E,R[4077],177,[[["self"]],[["async",[R[371]]],[R[371]]]]],[11,R[118],R[3802],R[402],179,[[],[T]]],[11,R[150],E,R[4117],179,[[["self"]],["bool"]]],[11,"is_full",E,R[4118],179,[[["self"]],["bool"]]],[11,R[118],E,R[402],183,[[],[T]]],[11,"close",R[3770],R[374],185,[[["self"]]]],[11,R[375],E,R[4088],186,[[["self"],[T]],[[R[13],[R[376]]],[R[376]]]]],[11,"close",E,R[374],187,[[["self"]]]],[11,R[373],E,R[4086],188,[[["self"]],[[R[13],["async",R[149]]],["async"],[R[149]]]]],[11,R[375],E,R[4087],188,[[["self"],[T]],[[R[13],[R[148]]],[R[148]]]]],[11,"send",R[3771],R[172],189,[[[T]],[R[13]]]],[11,R[394],E,R[380],189,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[150],E,R[380],189,[[["self"]],["bool"]]],[11,"close",E,R[4103],190,[[["self"]]]],[11,"try_recv",E,R[4104],190,[[["self"]],[[R[381]],[R[13],[R[381]]]]]],[11,R[120],R[3772],R[4113],193,[[["self"]],["ref"]]],[11,"poll_ref",E,R[4114],193,[[["self"]],[[R[13],["async",R[393]]],[R[393]],["async",[R[45]]]]]],[11,R[862],E,R[4115],194,[[["self"],[T]],[[R[13],[R[149]]],[R[149]]]]],[11,R[394],E,R[4116],194,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"new",R[3773],R[4150],198,[[],[R[3370]]]],[11,R[4151],E,R[4152],198,[[["handle"],[R[9]]],[R[3370]]]],[11,R[72],E,R[4153],198,[[[R[9]]],[R[3370]]]],[11,"insert_at",E,R[4154],198,[[["self"],["instant"],[T]],["key"]]],[11,"insert",E,R[4155],198,[[["self"],[T],[R[411]]],["key"]]],[11,"remove",E,R[4156],198,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[3371],198,[[["self"],["instant"],["key"]]]],[11,"reset",E,R[3371],198,[[["self"],[R[411]],["key"]]]],[11,"clear",E,R[4157],198,[[["self"]]]],[11,R[74],E,R[4158],198,[[["self"]],[R[9]]]],[11,"reserve",E,R[4159],198,[[["self"],[R[9]]]]],[11,R[73],E,R[4160],198,[[["self"]],["bool"]]],[11,R[120],R[3805],R[4161],199,[[["self"]],[T]]],[11,R[121],E,R[3372],199,[[["self"]],[T]]],[11,R[118],E,R[4162],199,[[],[T]]],[11,"new",R[3773],R[4166],201,[[[T],[R[411]]],["timeout"]]],[11,R[120],E,R[4167],201,[[["self"]],[T]]],[11,R[121],E,R[4168],201,[[["self"]],[T]]],[11,R[118],E,R[4169],201,[[],[T]]],[11,"new_at",E,R[4170],201,[[["instant"],[T]],["timeout"]]],[11,"inner",R[3806],R[4171],202,[[[T]],["error"]]],[11,"is_inner",E,R[3376],202,[[["self"]],["bool"]]],[11,R[118],E,R[4172],202,[[],[R[45]]]],[11,"elapsed",E,R[4173],202,[[],["error"]]],[11,R[4174],E,R[3376],202,[[["self"]],["bool"]]],[11,"timer",E,R[4175],202,[[["error"]],["error"]]],[11,"is_timer",E,R[4176],202,[[["self"]],["bool"]]],[11,"into_timer",E,R[4177],202,[[],[[R[45],["error"]],["error"]]]],[11,"new",R[3773],R[4178],203,[[["instant"]],["delay"]]],[11,"deadline",E,R[4179],203,[[["self"]],["instant"]]],[11,R[4174],E,R[4180],203,[[["self"]],["bool"]]],[11,"reset",E,R[4181],203,[[["self"],["instant"]]]],[11,R[3116],E,R[4182],204,[[],["error"]]],[11,R[3381],E,R[3384],204,[[["self"]],["bool"]]],[11,R[3382],E,R[4183],204,[[],["error"]]],[11,R[3383],E,R[3384],204,[[["self"]],["bool"]]],[11,"new",E,R[3385],205,[[["instant"],[R[411]]],[R[3386]]]],[11,R[4184],E,R[4185],205,[[[R[411]]],[R[3386]]]],[11,"current",R[3807],R[3928],206,[[],[R[794]]]],[11,R[3116],E,R[3924],207,[[],[R[791]]]],[11,R[3382],E,R[3925],207,[[],[R[791]]]],[11,R[3381],E,R[3926],207,[[["self"]],["bool"]]],[11,R[3383],E,R[3927],207,[[["self"]],["bool"]]],[11,"current",R[3808],R[3919],209,[[],[R[3405]]]],[11,R[3920],E,R[3921],209,[[["self"],["future"],["box",["future"]]],[[R[791]],[R[13],[R[791]]]]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[3456]],[3,R[3869]],[3,"Builder"],[8,R[4022]],[8,R[3870]],[4,R[33]],[8,"Read"],[8,"Write"],[3,"UCred"],[8,"Future"],[8,R[206]],[8,R[207]],[8,R[789]],[4,R[205]],[4,"Loop"],[4,"Either"],[8,"Stream"],[4,R[210]],[3,R[209]],[8,"Unpark"],[8,"EventSet"],[8,R[789]],[4,"Async"],[4,R[204]],[8,"Sink"],[8,"FutureExt"],[8,"StreamExt"],[8,R[789]],[8,R[798]],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"Builder"],[3,R[3407]],[3,"Runtime"],[3,R[3894]],[3,"Framed"],[3,R[3891]],[3,R[3457]],[3,R[3896]],[3,R[3871]],[3,R[3461]],[3,"File"],[3,R[3485]],[3,R[3484]],[3,R[3972]],[3,R[3460]],[3,R[3970]],[3,R[3486]],[3,"ReadFile"],[3,R[4003]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Copy"],[3,"Flush"],[3,"Lines"],[3,R[4026]],[3,"ReadHalf"],[3,R[4027]],[3,R[4028]],[3,R[3282]],[3,"WriteAll"],[3,R[4025]],[3,"Error"],[3,R[3087]],[3,R[3492]],[3,R[4187]],[3,R[3501]],[3,R[3447]],[3,R[3520]],[3,R[3448]],[3,R[3502]],[3,R[3493]],[3,R[4200]],[3,R[3521]],[3,R[3522]],[3,R[3493]],[3,R[4200]],[3,R[3521]],[3,R[3522]],[3,R[208]],[3,"Failed"],[3,"JoinAll"],[3,"Inspect"],[3,R[233]],[3,"Then"],[3,"Join"],[3,R[113]],[3,R[232]],[3,R[231]],[3,"Join5"],[3,"Select2"],[3,"Empty"],[3,"Fuse"],[3,"Join4"],[3,"OrElse"],[3,"SelectOk"],[3,"PollFn"],[3,"LoopFn"],[3,"Join3"],[3,"MapErr"],[3,"Flatten"],[3,"Map"],[3,"AndThen"],[3,R[230]],[3,R[229]],[3,"Shared"],[3,"Select"],[3,"Lazy"],[3,R[228]],[3,"FromErr"],[3,R[219]],[3,"IterMut"],[3,R[215]],[3,"Filter"],[3,"Then"],[3,"Chunks"],[3,"ForEach"],[3,R[158]],[3,"Chain"],[3,R[216]],[3,"Sender"],[3,"Repeat"],[3,"Concat2"],[3,R[214]],[3,R[217]],[3,"IterOk"],[3,"Unfold"],[3,R[213]],[3,"PollFn"],[3,R[211]],[3,"Wait"],[3,"Collect"],[3,R[212]],[3,"Map"],[3,"Take"],[3,"AndThen"],[3,R[218]],[3,R[220]],[3,"FromErr"],[3,R[3872]],[3,"Inspect"],[3,R[155]],[3,"Once"],[3,R[113]],[3,"Forward"],[3,"Concat"],[3,"Empty"],[3,"Zip"],[3,"Fuse"],[3,"Merge"],[3,"OrElse"],[3,"Peekable"],[3,"MapErr"],[3,"Flatten"],[3,R[234]],[3,"Fold"],[3,"Select"],[3,R[3873]],[3,"Buffered"],[3,"Skip"],[3,"Task"],[3,"Spawn"],[3,"LocalKey"],[3,"Run"],[3,R[237]],[3,"TaskRc"],[3,R[236]],[3,R[4030]],[3,"Handle"],[3,R[3874]],[3,"Reactor"],[3,R[3085]],[3,"Turn"],[3,"Lock"],[3,R[405]],[3,R[225]],[3,R[158]],[3,R[408]],[3,R[378]],[3,R[407]],[3,R[406]],[3,R[155]],[3,R[156]],[3,R[157]],[3,"Sender"],[3,"Sender"],[3,R[155]],[3,R[378]],[3,R[409]],[3,R[155]],[3,"Sender"],[3,"Ref"],[3,R[378]],[3,R[158]],[3,R[3392]],[3,"Expired"],[3,"Key"],[3,"Timeout"],[3,"Error"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,R[796]],[3,R[795]],[3,"Spawn"],[3,R[3407]],[3,R[3282]]]};
searchIndex["tokio_codec"]={"doc":R[3875],"i":[[8,"Decoder","tokio_codec",R[3876],N,N],[16,"Item",E,R[3877],0,N],[16,"Error",E,R[3878],0,N],[10,"decode",E,R[3879],0,[[["self"],[R[1604]]],[[R[13],[R[45]]],[R[45]]]]],[11,R[3880],E,R[3881],0,[[["self"],[R[1604]]],[[R[13],[R[45]]],[R[45]]]]],[11,"framed",E,R[3127],0,[[[T]],["framed"]]],[8,"Encoder",E,R[3882],N,N],[16,"Item",E,R[3883],1,N],[16,"Error",E,R[3884],1,N],[10,"encode",E,R[3885],1,[[["self"],[R[1604]]],[R[13]]]],[3,"Framed",E,R[3494],N,N],[3,R[3456],E,R[3886],N,N],[12,"io",E,R[3887],2,N],[12,"codec",E,"The codec",2,N],[12,R[3888],E,R[3889],2,N],[12,R[3458],E,R[3890],2,N],[3,R[3891],E,R[3892],N,N],[3,R[3457],E,R[3893],N,N],[3,R[3894],E,R[3895],N,N],[3,R[3896],E,R[3897],N,N],[11,"new",E,R[3898],3,[[],[R[3449]]]],[11,"new",E,R[3899],4,[[],[R[3450]]]],[11,R[3900],E,R[3901],4,[[[R[9]]],["self"]]],[11,"max_length",E,R[3902],4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"poll",E,E,5,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,6,[[["self"]],[["async",[R[45]]],[R[13],["async"]]]]],[11,"poll",E,E,7,[[["self"]],[[R[13],["async"]],["async",[R[45]]]]]],[11,R[190],E,E,5,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,5,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,5,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,7,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,7,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,7,[[["self"]],[[R[13],["async"]],["async"]]]],[11,R[190],E,E,6,[[["self"]],[[R[13],[R[193]]],[R[193]]]]],[11,R[192],E,E,6,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"close",E,E,6,[[["self"]],[[R[13],["async"]],["async"]]]],[11,"clone",E,E,3,[[["self"]],[R[3449]]]],[11,"clone",E,E,4,[[["self"]],[R[3450]]]],[11,"cmp",E,E,3,[[["self"],[R[3449]]],[R[47]]]],[11,"cmp",E,E,4,[[["self"],[R[3450]]],[R[47]]]],[11,R[63],E,E,3,[[["self"],[R[3449]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,3,[[["self"],[R[3449]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[3449]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[3449]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[3449]]],["bool"]]],[11,R[63],E,E,4,[[["self"],[R[3450]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,4,[[["self"],[R[3450]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[3450]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[3450]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[3450]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[3449]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[3449]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[3450]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[3450]]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"encode",E,E,3,[[["self"],["bytes"],[R[1604]]],[["error"],[R[13],["error"]]]]],[11,"encode",E,E,4,[[["self"],["string"],[R[1604]]],[["error"],[R[13],["error"]]]]],[11,"decode",E,E,3,[[["self"],[R[1604]]],[["error"],[R[45],[R[1604]]],[R[13],[R[45],"error"]]]]],[11,"decode",E,E,4,[[["self"],[R[1604]]],[[R[45],["string"]],["error"],[R[13],[R[45],"error"]]]]],[11,R[3880],E,E,4,[[["self"],[R[1604]]],[[R[45],["string"]],["error"],[R[13],[R[45],"error"]]]]],[11,"new",E,R[3127],5,[[[U],[T]],["framed"]]],[11,"from_parts",E,R[3127],5,[[[R[3451]]],["framed"]]],[11,R[120],E,R[3452],5,[[["self"]],[T]]],[11,R[121],E,R[3453],5,[[["self"]],[T]]],[11,"codec",E,R[3903],5,[[["self"]],[U]]],[11,"codec_mut",E,R[3904],5,[[["self"]],[U]]],[11,R[118],E,R[3905],5,[[],[T]]],[11,R[3906],E,R[3907],5,[[],[R[3451]]]],[11,"new",E,R[3908],2,[[[U],[T]],[R[3451]]]],[11,"new",E,R[3909],6,[[["d"],[T]],[R[3910]]]],[11,R[120],E,R[3452],6,[[["self"]],[T]]],[11,R[121],E,R[3453],6,[[["self"]],[T]]],[11,R[118],E,R[3911],6,[[],[T]]],[11,"decoder",E,R[3454],6,[[["self"]],["d"]]],[11,R[3912],E,R[3455],6,[[["self"]],["d"]]],[11,"new",E,R[3913],7,[[[T],["e"]],[R[3811]]]],[11,R[120],E,R[3452],7,[[["self"]],[T]]],[11,R[121],E,R[3453],7,[[["self"]],[T]]],[11,R[118],E,R[3914],7,[[],[T]]],[11,"encoder",E,R[3454],7,[[["self"]],["e"]]],[11,R[3915],E,R[3455],7,[[["self"]],["e"]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[3456]],[3,R[3894]],[3,R[3896]],[3,"Framed"],[3,R[3891]],[3,R[3457]]]};
searchIndex["tokio_current_thread"]={"doc":"A single-threaded executor which executes tasks on the…","i":[[3,R[3406],"tokio_current_thread","Executes tasks on the current thread",N,N],[3,R[3407],E,R[3916],N,N],[3,"Turn",E,"Returned by the `turn` function.",N,N],[3,"Entered",E,"A `CurrentThread` instance bound to a supplied execution…",N,N],[3,"RunError",E,"Error returned by the `run` function.",N,N],[3,R[3408],E,"Error returned by the `run_timeout` function.",N,N],[3,"TurnError",E,"Error returned by the `turn` function.",N,N],[3,"BlockError",E,"Error returned by the `block_on` function.",N,N],[3,"Handle",E,R[3917],N,N],[5,R[3788],E,"Run the executor bootstrapping the execution with the…",N,[[["f"]],[R[13]]]],[5,"spawn",E,R[3918],N,[[["f"]]]],[11,"has_polled",E,"`true` if any futures were polled at all and `false`…",0,[[["self"]],["bool"]]],[11,"new",E,"Create a new instance of `CurrentThread`.",1,[[],["self"]]],[11,"new_with_park",E,"Create a new instance of `CurrentThread` backed by the…",1,[[["p"]],["self"]]],[11,"is_idle",E,"Returns `true` if the executor is currently idle.",1,[[["self"]],["bool"]]],[11,"spawn",E,R[3396],1,[[["self"],["f"]],["self"]]],[11,"block_on",E,R[3397],1,[[["self"],["f"]],[[R[3398]],[R[13],[R[3398]]]]]],[11,"run",E,R[3394],1,[[["self"]],[[R[13],["runerror"]],["runerror"]]]],[11,R[3399],E,R[3394],1,[[["self"],[R[411]]],[[R[3395]],[R[13],[R[3395]]]]]],[11,"turn",E,R[3400],1,[[["self"],[R[45],[R[411]]],[R[411]]],[[R[3401]],[R[13],["turn",R[3401]]],["turn"]]]],[11,"enter",E,"Bind `CurrentThread` instance with an execution context.",1,[[["self"],["enter"]],["entered"]]],[11,"get_park",E,R[3402],1,[[["self"]],["p"]]],[11,R[3403],E,R[3404],1,[[["self"]],["p"]]],[11,"handle",E,"Get a new handle to spawn futures on the executor",1,[[["self"]],["handle"]]],[11,"spawn",E,R[3396],2,[[["self"],["f"]],["self"]]],[11,"block_on",E,R[3397],2,[[["self"],["f"]],[[R[3398]],[R[13],[R[3398]]]]]],[11,"run",E,R[3394],2,[[["self"]],[[R[13],["runerror"]],["runerror"]]]],[11,R[3399],E,R[3394],2,[[["self"],[R[411]]],[[R[3395]],[R[13],[R[3395]]]]]],[11,"turn",E,R[3400],2,[[["self"],[R[45],[R[411]]],[R[411]]],[[R[3401]],[R[13],["turn",R[3401]]],["turn"]]]],[11,"get_park",E,R[3402],2,[[["self"]],["p"]]],[11,R[3403],E,R[3404],2,[[["self"]],["p"]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` instance…",3,[[["self"],["f"]],[[R[13],[R[791]]],[R[791]]]]],[11,"status",E,R[792],3,[[["self"]],[[R[13],[R[791]]],[R[791]]]]],[11,"current",E,R[3919],4,[[],[R[3405]]]],[11,R[3920],E,R[3921],4,[[["self"],["box",["future"]],["future"]],[[R[13],[R[791]]],[R[791]]]]],[11,"is_timeout",E,"Returns `true` if the error was caused by the operation…",5,[[["self"]],["bool"]]],[11,R[118],E,"Returns the error yielded by the future being blocked on",6,[[],[R[45]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[62],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[62],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"clone",E,E,4,[[["self"]],[R[3405]]]],[11,"clone",E,E,3,[[["self"]],["handle"]]],[11,"from",E,E,5,[[[R[787]]],["self"]]],[11,"from",E,E,6,[[[R[787]]],["self"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,7,[[["self"]],["str"]]],[11,R[31],E,E,5,[[["self"]],["str"]]],[11,R[31],E,E,8,[[["self"]],["str"]]],[11,R[31],E,E,6,[[["self"]],["str"]]],[11,"execute",E,E,4,[[["self"],["f"]],[[R[13],[R[106]]],[R[106]]]]],[11,"spawn",E,E,1,[[["self"],["box",["future"]],["future"]],[[R[13],[R[791]]],[R[791]]]]],[11,"spawn",E,E,4,[[["self"],["box",["future"]],["future"]],[[R[13],[R[791]]],[R[791]]]]],[11,"spawn",E,E,1,[[["self"],[T]],[[R[13],[R[791]]],[R[791]]]]],[11,"spawn",E,E,4,[[["self"],["f"]],[[R[13],[R[791]]],[R[791]]]]]],"p":[[3,"Turn"],[3,R[3406]],[3,"Entered"],[3,"Handle"],[3,R[3407]],[3,R[3408]],[3,"BlockError"],[3,"RunError"],[3,"TurnError"]]};
searchIndex["tokio_executor"]={"doc":"Task execution related traits and utilities.","i":[[3,"Enter",R[790],"Represents an executor context.",N,N],[3,R[799],E,"An error returned by `enter` if an execution scope has…",N,N],[3,R[795],E,R[3922],N,N],[3,R[796],E,R[3923],N,N],[5,"enter",E,"Marks the current thread as being within the dynamic…",N,[[],[[R[13],["enter",R[787]]],["enter"],[R[787]]]]],[5,"spawn",E,"Submits a future for execution on the default executor --…",N,[[[T]]]],[5,R[3276],E,"Set the default executor for the duration of the closure",N,[[[T],["f"],["enter"]],["r"]]],[11,"on_exit",E,"Register a callback to be invoked if and when the thread…",0,[[["self"],["f"]]]],[11,"make_permanent",E,"Treat the remainder of execution on this thread as part of…",0,[[]]],[11,"block_on",E,"Blocks the thread on the specified future, returning the…",0,[[["self"],["future"]],[R[13]]]],[11,R[3116],E,R[3924],1,[[],["self"]]],[11,R[3382],E,R[3925],1,[[],["self"]]],[11,R[3381],E,R[3926],1,[[["self"]],["bool"]]],[11,R[3383],E,R[3927],1,[[["self"]],["bool"]]],[11,"current",E,R[3928],2,[[],[R[794]]]],[0,"park",E,"Abstraction over blocking and unblocking the current thread.",N,N],[3,R[797],R[793],"Blocks the current thread using a condition variable.",N,N],[3,R[800],E,R[3428],N,N],[3,R[801],E,"Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park",E,"Block the current thread.",N,N],[16,"Unpark",E,"Unpark handle type for the `Park` implementation.",3,N],[16,"Error",E,"Error returned by `park`",3,N],[10,"unpark",E,"Get a new `Unpark` handle associated with this `Park`…",3,[[["self"]]]],[10,"park",E,"Block the current thread unless or until the token is…",3,[[["self"]],[R[13]]]],[10,R[788],E,"Park the current thread for at most `duration`.",3,[[["self"],[R[411]]],[R[13]]]],[8,"Unpark",E,"Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark",E,"Unblock a thread that is blocked by the associated `Park`…",4,[[["self"]]]],[11,"new",E,"Create a new `ParkThread` handle for the current thread.",5,[[],["parkthread"]]],[8,R[789],R[790],R[3929],N,N],[10,"spawn",E,R[3930],6,[[["self"],["box",["future"]],["future"]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,R[792],6,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[8,R[798],E,R[3931],N,N],[10,"spawn",E,R[3932],7,[[["self"],[T]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,R[792],7,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",R[793],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[17],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[[T],["self"]]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"spawn",R[790],E,2,[[["self"],["box",["future"]],["future"]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,E,2,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"unpark",R[793],E,5,[[["self"]]]],[11,"park",E,E,5,[[["self"]],[R[13]]]],[11,R[788],E,E,5,[[["self"],[R[411]]],[R[13]]]],[11,"unpark",E,E,10,[[["self"]]]],[11,"spawn",R[790],E,2,[[["self"],[T]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,E,2,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"clone",E,E,2,[[["self"]],[R[794]]]],[11,"clone",R[793],E,10,[[["self"]],["unparkthread"]]],[11,"drop",R[790],E,0,[[["self"]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[793],E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[790],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,8,[[["self"]],["str"]]],[11,R[31],E,E,1,[[["self"]],["str"]]],[11,"execute",E,E,2,[[["self"],[T]],[[R[106]],[R[13],[R[106]]]]]],[11,"status",E,R[792],6,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"status",E,R[792],7,[[["self"]],[[R[791]],[R[13],[R[791]]]]]]],"p":[[3,"Enter"],[3,R[795]],[3,R[796]],[8,"Park"],[8,"Unpark"],[3,R[797]],[8,R[789]],[8,R[798]],[3,R[799]],[3,R[800]],[3,R[801]]]};
searchIndex["tokio_fs"]={"doc":"Asynchronous file and standard stream adaptation.","i":[[3,R[3474],R[3473],"Future returned by `create_dir`.",N,N],[3,R[3475],E,"Future returned by `create_dir_all`.",N,N],[3,R[3461],E,R[3462],N,N],[3,R[3476],E,"Future returned by `hard_link`.",N,N],[3,R[3460],E,"Future returned by `metadata`.",N,N],[3,"ReadFile",E,R[3933],N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[3,R[3477],E,"Future returned by `read_dir`.",N,N],[3,R[3478],E,"Future returned by `read_link`.",N,N],[3,R[3479],E,"Future returned by `remove_dir`.",N,N],[3,R[3480],E,"Future returned by `remove_file`.",N,N],[3,R[3481],E,"Future returned by `rename`.",N,N],[3,R[3482],E,"Future returned by `set_permissions`.",N,N],[3,"Stderr",E,R[3934],N,N],[3,"Stdin",E,R[3935],N,N],[3,"Stdout",E,R[3936],N,N],[3,R[3483],E,"Future returned by `symlink_metadata`.",N,N],[3,R[4003],E,R[3937],N,N],[5,"create_dir",E,R[3938],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[3939]]]]],[5,R[3940],E,R[3941],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[3942]]]]],[5,"hard_link",E,R[3943],N,[[["path"],["asref",["path"]]],[[R[3944]],["path"],["asref",["path"]]]]],[5,R[3026],E,R[3459],N,[[["p"]],[R[3466]]]],[5,"read",E,R[3945],N,[[["p"]],["readfile"]]],[5,"read_dir",E,R[3946],N,[[["p"]],[R[3947]]]],[5,"read_link",E,R[3948],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[3949]]]]],[5,"remove_dir",E,R[3950],N,[[["path"],["asref",["path"]]],[[R[3951]],["path"],["asref",["path"]]]]],[5,R[3952],E,R[3953],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[3954]]]]],[5,"rename",E,R[3955],N,[[["path"],["asref",["path"]]],[["path"],[R[3956]],["asref",["path"]]]]],[5,R[3957],E,R[3958],N,[[["path"],["asref",["path"]],[R[3469]]],[["path"],["asref",["path"]],[R[3959]]]]],[5,"stderr",E,R[3960],N,[[],["stderr"]]],[5,"stdin",E,R[3961],N,[[],["stdin"]]],[5,"stdout",E,R[3962],N,[[],["stdout"]]],[5,R[3963],E,R[3459],N,[[["p"]],[R[3964]]]],[5,"write",E,R[3965],N,[[["asref"],["p"]],[["writefile"],["asref"]]]],[0,"file",E,R[3966],N,N],[3,R[3484],R[3464],R[3967],N,N],[3,R[3485],E,R[3968],N,N],[3,R[3460],E,R[3969],N,N],[3,R[3970],E,R[3971],N,N],[3,R[3461],E,R[3462],N,N],[3,R[3972],E,R[3973],N,N],[3,"File",E,R[3525],N,N],[11,"new",R[3473],R[3974],0,[[],[R[3463]]]],[11,"read",E,R[3975],0,[[["self"],["bool"]],[R[3463]]]],[11,"write",E,R[3976],0,[[["self"],["bool"]],[R[3463]]]],[11,"append",E,R[3977],0,[[["self"],["bool"]],[R[3463]]]],[11,R[2724],E,R[3978],0,[[["self"],["bool"]],[R[3463]]]],[11,"create",E,R[3979],0,[[["self"],["bool"]],[R[3463]]]],[11,"create_new",E,R[3980],0,[[["self"],["bool"]],[R[3463]]]],[11,"open",E,R[3981],0,[[["self"],["p"]],[R[3982]]]],[11,"open",R[3464],R[3983],1,[[["p"]],[R[3982]]]],[11,"create",E,R[3984],1,[[["p"]],[R[3985]]]],[11,R[3118],E,R[3986],1,[[["stdfile"]],["file"]]],[11,"poll_seek",E,R[3465],1,[[["self"],["seekfrom"]],[["poll",["u64","error"]],["error"],["u64"]]]],[11,"seek",E,R[3465],1,[[["seekfrom"]],["seekfuture"]]],[11,R[3987],E,R[3988],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[3989],E,R[3990],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[3991],E,R[3992],1,[[["self"],["u64"]],[["poll",["error"]],["error"]]]],[11,R[3026],E,R[3467],1,[[],[R[3466]]]],[11,R[3471],E,R[3467],1,[[["self"]],[[R[3026]],["error"],["poll",[R[3026],"error"]]]]],[11,R[3993],E,R[3468],1,[[["self"]],[["poll",["file","error"]],["error"],["file"]]]],[11,R[3117],E,R[3468],1,[[],[R[3994]]]],[11,R[3995],E,R[3996],1,[[["self"],[R[3469]]],[["poll",["error"]],["error"]]]],[11,"into_std",E,R[3997],1,[[],["stdfile"]]],[0,"os",R[3473],R[3998],N,N],[0,"unix","tokio_fs::os",R[3999],N,N],[3,R[3486],R[3472],R[4000],N,N],[5,"symlink",E,R[4001],N,[[["path"],["asref",["path"]]],[[R[4002]],["path"],["asref",["path"]]]]],[11,"into_std",R[3473],"Destructures the `tokio_fs::DirEntry` into a…",2,[[],["stddirentry"]]],[11,"path",E,"Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name",E,R[3470],2,[[["self"]],["osstring"]]],[11,R[3471],E,"Return the metadata for the file that this entry points at.",2,[[["self"]],[[R[3026]],["error"],["poll",[R[3026],"error"]]]]],[11,"poll_file_type",E,"Return the file type for the file that this entry points at.",2,[[["self"]],[["error"],["filetype"],["poll",["filetype","error"]]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[108],E,E,3,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[108],E,E,4,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[108],E,E,5,[[],["f"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[108],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[108],E,E,7,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,R[108],E,E,9,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,R[108],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,R[108],E,E,11,[[],["f"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,R[108],E,E,12,[[],["f"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,R[108],E,E,13,[[],["f"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,R[108],E,E,14,[[],["f"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,R[108],E,E,18,[[],["f"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,R[108],E,E,19,[[],["f"]]],[11,"from",R[3464],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,R[108],E,E,20,[[],["f"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,R[108],E,E,21,[[],["f"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,R[108],E,E,22,[[],["f"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,R[108],E,E,23,[[],["f"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,R[108],E,E,24,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",R[3472],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,R[108],E,E,25,[[],["f"]]],[11,"clone",R[3473],E,0,[[["self"]],[R[3463]]]],[11,"from",E,E,0,[[["stdopenoptions"]],[R[3463]]]],[11,"drop",R[3464],E,1,[[["self"]]]],[11,"fmt",R[3473],E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3464],E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,21,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3473],E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3464],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3473],E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3472],E,25,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3473],E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"write",R[3464],E,1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,1,[[["self"]],[R[13]]]],[11,"write",R[3473],E,15,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,15,[[["self"]],[R[13]]]],[11,"write",E,E,17,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,17,[[["self"]],[R[13]]]],[11,"read",R[3464],E,1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"read",R[3473],E,16,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"ino",E,E,2,[[["self"]],["u64"]]],[11,"poll",E,E,3,[[["self"]],["poll"]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,"poll",R[3464],E,20,[[["self"]],["poll"]]],[11,"poll",E,E,21,[[["self"]],["poll"]]],[11,"poll",E,E,22,[[["self"]],["poll"]]],[11,"poll",E,E,23,[[["self"]],["poll"]]],[11,"poll",E,E,24,[[["self"]],["poll"]]],[11,"poll",R[3473],E,5,[[["self"]],["poll"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",R[3472],E,25,[[["self"]],["poll"]]],[11,"poll",R[3473],E,7,[[["self"]],["poll"]]],[11,"poll",E,E,9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,10,[[["self"]],["poll"]]],[11,"poll",E,E,11,[[["self"]],["poll"]]],[11,"poll",E,E,12,[[["self"]],["poll"]]],[11,"poll",E,E,13,[[["self"]],["poll"]]],[11,"poll",E,E,14,[[["self"]],["poll"]]],[11,"poll",E,E,18,[[["self"]],["poll"]]],[11,"poll",E,E,19,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],[[R[45]],["poll",[R[45]]]]]],[11,R[3123],R[3464],E,1,[[["self"]],["bool"]]],[11,R[3123],R[3473],E,16,[[["self"]],["bool"]]],[11,R[3116],R[3464],E,1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[3116],R[3473],E,15,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[3116],E,E,17,[[["self"]],[["poll",["error"]],["error"]]]]],"p":[[3,R[3461]],[3,"File"],[3,"DirEntry"],[3,R[3474]],[3,R[3475]],[3,R[3476]],[3,R[3460]],[3,"ReadFile"],[3,"ReadDir"],[3,R[3477]],[3,R[3478]],[3,R[3479]],[3,R[3480]],[3,R[3481]],[3,R[3482]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[3483]],[3,R[4003]],[3,R[3484]],[3,R[3485]],[3,R[3460]],[3,R[3970]],[3,R[3972]],[3,R[3486]]]};
searchIndex["tokio_io"]={"doc":"Core I/O traits and combinators when working with Tokio.","i":[[0,"io","tokio_io","I/O conveniences when working with primitives in…",N,N],[3,"Copy",R[3120],R[4004],N,N],[3,"Flush",E,R[4005],N,N],[3,"Read",E,"A future which can be used to easily read available number…",N,N],[3,R[4026],E,R[4006],N,N],[3,R[4027],E,R[4007],N,N],[3,R[4028],E,R[4008],N,N],[3,R[3282],E,R[4009],N,N],[3,"WriteAll",E,R[3495],N,N],[3,"AllowStdIo",E,"A simple wrapper type which allows types that only…",N,N],[3,"Lines",E,R[4010],N,N],[3,"ReadHalf",E,R[4011],N,N],[3,R[4025],E,R[4012],N,N],[3,"Window",E,"A owned window around an underlying buffer.",N,N],[5,"copy",E,R[4013],N,[[["w"],["r"]],["copy"]]],[5,"flush",E,R[4014],N,[[["a"]],["flush"]]],[5,"read",E,R[4015],N,[[[T],["r"]],["read"]]],[5,R[3545],E,R[4016],N,[[["a"],[T]],["readexact"]]],[5,R[3122],E,R[3119],N,[[["a"],["vec",["u8"]],["u8"]],["readtoend"]]],[5,"read_until",E,R[3119],N,[[["a"],["vec",["u8"]],["u8"]],["readuntil"]]],[5,R[3116],E,R[4017],N,[[["a"]],[R[3116]]]],[5,R[3170],E,R[3499],N,[[["a"],[T]],["writeall"]]],[5,"lines",E,R[4018],N,[[["a"]],["lines"]]],[11,"new",E,"Creates a new `AllowStdIo` from an existing IO object.",0,[[[T]],["self"]]],[11,R[120],E,"Returns a reference to the contained IO object.",0,[[["self"]],[T]]],[11,R[121],E,"Returns a mutable reference to the contained IO object.",0,[[["self"]],[T]]],[11,R[118],E,"Consumes self and returns the contained IO object.",0,[[],[T]]],[11,R[118],E,R[4019],1,[[],["a"]]],[11,"unsplit",E,R[4020],2,[[["writehalf"]],[T]]],[11,"unsplit",E,R[4021],3,[[["readhalf"]],[T]]],[11,"new",E,"Creates a new window around the buffer `t` defaulting to…",4,[[[T]],["window"]]],[11,R[120],E,"Gets a shared reference to the underlying buffer inside of…",4,[[["self"]],[T]]],[11,R[121],E,"Gets a mutable reference to the underlying buffer inside…",4,[[["self"]],[T]]],[11,R[118],E,"Consumes this `Window`, returning the underlying buffer.",4,[[],[T]]],[11,"start",E,"Returns the starting index of this window into the…",4,[[["self"]],[R[9]]]],[11,"end",E,"Returns the end index of this window into the underlying…",4,[[["self"]],[R[9]]]],[11,"set_start",E,"Changes the starting index of this window to the index…",4,[[["self"],[R[9]]],["window"]]],[11,"set_end",E,"Changes the end index of this window to the index specified.",4,[[["self"],[R[9]]],["window"]]],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error…",N,N],[6,"IoStream",E,"A convenience typedef around a `Stream` whose error…",N,N],[8,R[4022],E,R[3535],N,N],[11,R[3123],E,R[3124],5,[[["self"]],["bool"]]],[11,R[4024],E,R[3125],5,[[["self"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[11,R[3888],E,R[3126],5,[[["self"],["b"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[11,"framed",E,R[3127],5,[[["encoder"],["decoder"]],[["framed"],["encoder"],["decoder"]]]],[11,"split",E,R[3128],5,[[]]],[8,R[3870],E,R[3536],N,N],[11,R[3284],E,R[3129],6,[[["self"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[11,R[4023],E,R[3130],6,[[["self"]],[["error"],["poll",["error"]]]]],[10,R[3116],E,R[3537],6,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3458],E,R[3131],6,[[["self"],["b"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[14,"try_nb",E,"A convenience macro for working with `io::Result<T>` from…",N,N],[11,"from",R[3120],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[108],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[108],E,E,8,[[],["f"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,R[108],E,E,9,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,R[108],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,R[108],E,E,11,[[],["f"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,R[108],E,E,12,[[],["f"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,R[108],E,E,13,[[],["f"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,R[108],E,E,14,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[3888],E,E,2,[[["self"],["b"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[3116],E,E,0,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3116],E,E,3,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3458],E,E,3,[[["self"],["b"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,"clone",E,E,0,[[["self"]],[R[3121]]]],[11,"cmp",E,E,0,[[["self"],[R[3121]]],[R[47]]]],[11,R[63],E,E,0,[[["self"],[R[3121]]],[[R[45],[R[47]]],[R[47]]]]],[11,"lt",E,E,0,[[["self"],[R[3121]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[3121]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[3121]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[3121]]],["bool"]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"eq",E,E,0,[[["self"],[R[3121]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3121]]],["bool"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"write",E,E,0,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,0,[[["self"]],[R[13]]]],[11,R[3170],E,E,0,[[["self"]],[R[13]]]],[11,R[3169],E,E,0,[[["self"],[R[3034]]],[R[13]]]],[11,"write",E,E,3,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,3,[[["self"]],[R[13]]]],[11,"read",E,E,0,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[3122],E,E,0,[[["self"],["vec"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[3543],E,E,0,[[["self"],["string"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[3545],E,E,0,[[["self"]],[R[13]]]],[11,"read",E,E,2,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"poll",E,E,7,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,8,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,10,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,11,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,12,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,13,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,14,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,1,[[["self"]],[["poll",[R[45],"error"]],[R[45],["string"]],["error"]]]],[11,R[3123],"tokio_io",R[3124],5,[[["self"]],["bool"]]],[11,R[4024],E,R[3125],5,[[["self"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[11,R[3888],E,R[3126],5,[[["self"],["b"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[11,"framed",E,R[3127],5,[[["encoder"],["decoder"]],[["framed"],["encoder"],["decoder"]]]],[11,"split",E,R[3128],5,[[]]],[11,R[3284],E,R[3129],6,[[["self"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]],[11,R[4023],E,R[3130],6,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3458],E,R[3131],6,[[["self"],["b"]],[["poll",[R[9],"error"]],["error"],[R[9]]]]]],"p":[[3,"AllowStdIo"],[3,"Lines"],[3,"ReadHalf"],[3,R[4025]],[3,"Window"],[8,R[4022]],[8,R[3870]],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,R[4026]],[3,R[4027]],[3,R[4028]],[3,R[3282]],[3,"WriteAll"]]};
searchIndex["tokio_reactor"]={"doc":R[4029],"i":[[3,R[4030],"tokio_reactor",R[4031],N,N],[3,R[3282],E,"Future that resolves when the reactor thread has shutdown.",N,N],[3,R[3281],E,R[4032],N,N],[3,R[3085],E,R[4033],N,N],[3,"Reactor",E,R[4034],N,N],[3,"Handle",E,R[4035],N,N],[3,"Turn",E,R[4036],N,N],[3,R[3283],E,"Error returned from `Handle::set_fallback`.",N,N],[5,R[3276],E,"Set the default reactor for the duration of the closure",N,[[["handle"],["f"],["enter"]],["r"]]],[11,"handle",E,R[4037],0,[[["self"]],["handle"]]],[11,R[3430],E,R[4038],0,[[],[R[3116]]]],[11,R[3431],E,R[4039],0,[[],[R[3116]]]],[11,"forget",E,R[4040],0,[[]]],[11,"new",E,R[4041],1,[[["e"]],[R[3868]]]],[11,R[4042],E,R[4043],1,[[["handle"],["e"]],[R[13]]]],[11,R[120],E,R[4044],1,[[["self"]],["e"]]],[11,R[121],E,R[4045],1,[[["self"]],["e"]]],[11,R[118],E,R[4046],1,[[],[R[13]]]],[11,R[3277],E,R[4047],1,[[["self"],["ready"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,R[4048],E,R[4049],1,[[["self"],["ready"]],[R[13]]]],[11,R[3278],E,R[4050],1,[[["self"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,R[4051],E,R[4052],1,[[["self"]],[R[13]]]],[11,"new",E,R[4053],2,[[],[R[4054]]]],[11,R[3081],E,R[4055],2,[[[T],["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3080],E,R[4056],2,[[["self"],[T]],[R[13]]]],[11,R[4057],E,R[4058],2,[[[T],["self"],["handle"]],[["bool"],[R[13],["bool"]]]]],[11,R[3277],E,R[4059],2,[[["self"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,R[4060],E,R[4061],2,[[["self"]],[[R[13],[R[45]]],[R[45],["ready"]]]]],[11,R[3278],E,R[4062],2,[[["self"]],[["poll",["ready","error"]],["ready"],["error"]]]],[11,R[4063],E,R[4064],2,[[["self"]],[[R[13],[R[45]]],[R[45],["ready"]]]]],[11,"new",E,R[4065],3,[[],[["reactor"],[R[13],["reactor"]]]]],[11,"handle",E,R[4066],3,[[["self"]],["handle"]]],[11,R[4067],E,R[4068],3,[[["self"]],[[R[13],[R[3279]]],[R[3279]]]]],[11,"turn",E,R[4069],3,[[["self"],[R[45],[R[411]]],[R[411]]],[[R[13],["turn"]],["turn"]]]],[11,"is_idle",E,R[4070],3,[[["self"]],["bool"]]],[11,R[3280],E,R[4071],3,[[],[[R[13],[R[3280]]],[R[3280]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[108],E,E,4,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[62],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[77],E,R[4072],5,[[],["handle"]]],[11,"clone",E,E,5,[[["self"]],["handle"]]],[11,"clone",E,E,7,[[["self"]],[R[3279]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"write",E,E,1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,1,[[["self"]],[R[13]]]],[11,"read",E,E,1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[31],E,E,7,[[["self"]],["str"]]],[11,R[853],E,E,3,[[["self"]],["rawfd"]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,"unpark",E,E,3,[[["self"]]]],[11,"park",E,E,3,[[["self"]],[R[13]]]],[11,R[788],E,E,3,[[["self"],[R[411]]],[R[13]]]],[11,"unpark",E,E,5,[[["self"]]]],[11,R[3116],E,E,1,[[["self"]],[["error"],["poll",["error"]]]]]],"p":[[3,R[4030]],[3,R[3281]],[3,R[3085]],[3,"Reactor"],[3,R[3282]],[3,"Handle"],[3,"Turn"],[3,R[3283]]]};
searchIndex["tokio_serial"]={"doc":"Bindings for serial port I/O and futures","i":[[4,"DataBits","tokio_serial",R[3243],N,N],[13,"Five",E,R[3244],0,N],[13,"Six",E,R[3245],0,N],[13,"Seven",E,R[3246],0,N],[13,"Eight",E,R[3247],0,N],[3,"Error",E,R[3222],N,N],[12,"kind",E,R[3223],1,N],[12,R[31],E,R[3224],1,N],[4,R[33],E,R[3238],N,N],[13,"NoDevice",E,R[3239],2,N],[13,R[2324],E,R[3240],2,N],[13,"Unknown",E,R[3241],2,N],[13,"Io",E,R[3242],2,N],[4,R[2355],E,R[3255],N,N],[13,"None",E,R[3256],3,N],[13,"Software",E,R[3257],3,N],[13,"Hardware",E,R[3258],3,N],[4,"Parity",E,R[3248],N,N],[13,"None",E,R[3249],4,N],[13,"Odd",E,R[3250],4,N],[13,"Even",E,R[3251],4,N],[8,R[3269],E,R[3270],N,N],[10,"name",E,R[3271],5,[[["self"]],[["string"],[R[45],["string"]]]]],[10,"settings",E,R[3200],5,[[["self"]],[R[2328]]]],[10,R[3226],E,R[3201],5,[[["self"]],[["error"],[R[13],["u32","error"]],["u32"]]]],[10,R[3228],E,R[3202],5,[[["self"]],[["error"],[R[13],[R[2347],"error"]],[R[2347]]]]],[10,R[2329],E,R[3203],5,[[["self"]],[["error"],[R[13],[R[2330],"error"]],[R[2330]]]]],[10,"parity",E,R[3204],5,[[["self"]],[["error"],["parity"],[R[13],["parity","error"]]]]],[10,R[3232],E,R[3205],5,[[["self"]],[["error"],[R[13],[R[2348],"error"]],[R[2348]]]]],[10,"timeout",E,R[3272],5,[[["self"]],[R[411]]]],[10,"set_all",E,R[3206],5,[[["self"],[R[2328]]],[["error"],[R[13],["error"]]]]],[10,R[2333],E,R[3207],5,[[["self"],["u32"]],[["error"],[R[13],["error"]]]]],[10,R[2335],E,R[3208],5,[[["self"],[R[2347]]],[["error"],[R[13],["error"]]]]],[10,R[2334],E,R[3209],5,[[["self"],[R[2330]]],[["error"],[R[13],["error"]]]]],[10,R[3273],E,R[3210],5,[[["self"],["parity"]],[["error"],[R[13],["error"]]]]],[10,R[2336],E,R[3211],5,[[["self"],[R[2348]]],[["error"],[R[13],["error"]]]]],[10,R[2337],E,R[3274],5,[[["self"],[R[411]]],[["error"],[R[13],["error"]]]]],[10,R[2338],E,R[3212],5,[[["self"],["bool"]],[["error"],[R[13],["error"]]]]],[10,R[2339],E,R[3213],5,[[["self"],["bool"]],[["error"],[R[13],["error"]]]]],[10,R[2340],E,R[3214],5,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[10,R[2341],E,R[3215],5,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[10,R[2342],E,R[3216],5,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[10,R[2343],E,R[3217],5,[[["self"]],[["error"],[R[13],["bool","error"]],["bool"]]]],[10,R[2344],E,R[3218],5,[[["self"]],[["error"],[R[13],["u32","error"]],["u32"]]]],[10,R[2345],E,R[3219],5,[[["self"]],[["error"],[R[13],["u32","error"]],["u32"]]]],[10,"clear",E,R[3220],5,[[["self"],[R[2346]]],[["error"],[R[13],["error"]]]]],[10,R[3117],E,R[3221],5,[[["self"]],[["error"],[R[13],["box","error"]],["box",[R[2325]]]]]],[3,R[2352],E,R[3225],N,N],[12,R[3226],E,R[3227],6,N],[12,R[3228],E,R[3229],6,N],[12,R[2329],E,R[3230],6,N],[12,"parity",E,R[3231],6,N],[12,R[3232],E,R[3233],6,N],[12,"timeout",E,R[3234],6,N],[4,"StopBits",E,R[3252],N,N],[13,"One",E,R[3253],7,N],[13,"Two",E,R[3254],7,N],[4,R[2356],E,R[3259],N,N],[13,"Input",E,R[3260],8,N],[13,"Output",E,R[3261],8,N],[13,"All",E,R[3262],8,N],[3,"Serial",E,"Serial port I/O struct.",N,N],[6,"Result",E,R[3268],N,N],[11,"from_path",E,"Open serial port from a provided path, using the default…",9,[[[R[2328]],["p"]],[["serial"],[R[13],["serial"]]]]],[11,"from_path_with_handle",E,"Open serial port from a provided path, using the specified…",9,[[[R[2328]],["handle"],["p"]],[["serial"],[R[13],["serial"]]]]],[11,"pair",E,"Create a pair of pseudo serial terminals using the default…",9,[[],[R[13]]]],[11,"pair_with_handle",E,"Create a pair of pseudo serial terminals using the…",9,[[["handle"]],[R[13]]]],[11,R[3265],E,R[3266],9,[[["self"],["bool"]],[R[13]]]],[11,"exclusive",E,R[3264],9,[[["self"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[17],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[[T],["self"]]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[17],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[[T],["self"]]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[17],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[[T],["self"]]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,R[31],E,E,1,[[["self"]],["str"]]],[11,R[77],E,E,6,[[],[R[2328]]]],[11,"eq",E,E,6,[[["self"],[R[2328]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[2328]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[2330]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[2346]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["parity"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2347]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[2348]]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[["error"],[R[13],["error"]]]]],[11,"clone",E,E,2,[[["self"]],[R[1]]]],[11,"clone",E,E,3,[[["self"]],[R[2330]]]],[11,"clone",E,E,6,[[["self"]],[R[2328]]]],[11,"clone",E,E,0,[[["self"]],[R[2347]]]],[11,"clone",E,E,8,[[["self"]],[R[2346]]]],[11,"clone",E,E,7,[[["self"]],[R[2348]]]],[11,"clone",E,E,4,[[["self"]],["parity"]]],[11,"write",E,E,9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,9,[[["self"]],[R[13]]]],[11,"read",E,E,9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[853],E,E,9,[[["self"]],["rawfd"]]],[11,R[4024],E,E,9,[[["self"]],[["async",[R[9]]],[R[13],["async"]]]]],[11,R[3284],E,E,9,[[["self"]],[["async",[R[9]]],[R[13],["async"]]]]],[11,R[3116],E,E,9,[[["self"]],[["error"],["poll",["error"]]]]],[11,"settings",E,E,9,[[["self"]],[R[2328]]]],[11,"name",E,E,9,[[["self"]],[[R[45],["string"]],["string"]]]],[11,R[3226],E,E,9,[[["self"]],[[R[13],["u32"]],["u32"]]]],[11,R[3228],E,E,9,[[["self"]],[[R[13],[R[2347]]],[R[2347]]]]],[11,R[2329],E,E,9,[[["self"]],[[R[2330]],[R[13],[R[2330]]]]]],[11,"parity",E,E,9,[[["self"]],[[R[13],["parity"]],["parity"]]]],[11,R[3232],E,E,9,[[["self"]],[[R[13],[R[2348]]],[R[2348]]]]],[11,"timeout",E,E,9,[[["self"]],[R[411]]]],[11,"set_all",E,E,9,[[["self"],[R[2328]]],[R[13]]]],[11,R[2333],E,E,9,[[["self"],["u32"]],[R[13]]]],[11,R[2335],E,E,9,[[["self"],[R[2347]]],[R[13]]]],[11,R[2334],E,E,9,[[["self"],[R[2330]]],[R[13]]]],[11,R[3273],E,E,9,[[["self"],["parity"]],[R[13]]]],[11,R[2336],E,E,9,[[["self"],[R[2348]]],[R[13]]]],[11,R[2337],E,E,9,[[["self"],[R[411]]],[R[13]]]],[11,R[2338],E,E,9,[[["self"],["bool"]],[R[13]]]],[11,R[2339],E,E,9,[[["self"],["bool"]],[R[13]]]],[11,R[2340],E,E,9,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2341],E,E,9,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2342],E,E,9,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2343],E,E,9,[[["self"]],[[R[13],["bool"]],["bool"]]]],[11,R[2344],E,E,9,[[["self"]],[[R[13],["u32"]],["u32"]]]],[11,R[2345],E,E,9,[[["self"]],[[R[13],["u32"]],["u32"]]]],[11,"clear",E,E,9,[[[R[2346]],["self"]],[R[13]]]],[11,R[3117],E,E,9,[[["self"]],[["box",[R[2325]]],[R[13],["box"]]]]],[11,"new",E,R[3275],1,[[[R[1]],[T]],["error"]]],[11,"kind",E,R[2331],1,[[["self"]],[R[1]]]]],"p":[[4,"DataBits"],[3,"Error"],[4,R[33]],[4,R[2355]],[4,"Parity"],[8,R[3269]],[3,R[2352]],[4,"StopBits"],[4,R[2356]],[3,"Serial"]]};
searchIndex["tokio_sync"]={"doc":"Asynchronous synchronization primitives.","i":[[0,"lock",R[372],R[4073],N,N],[3,"Lock",R[395],R[4074],N,N],[3,R[405],E,R[4075],N,N],[11,"new",E,R[4076],0,[[[T]],["self"]]],[11,R[370],E,R[4077],0,[[["self"]],[[R[371]],["async",[R[371]]]]]],[0,"mpsc",R[372],R[4078],N,N],[3,R[155],R[396],R[4079],N,N],[3,"Sender",E,R[4080],N,N],[3,R[157],E,R[4081],N,N],[3,R[156],E,R[4082],N,N],[5,R[377],E,R[4083],N,[[[R[9]]]]],[5,R[4084],E,R[4085],N,[[]]],[11,"close",E,R[374],1,[[["self"]]]],[11,R[373],E,R[4086],2,[[["self"]],[["poll",[R[149]]],[R[149]]]]],[11,R[375],E,R[4087],2,[[["self"],[T]],[[R[148]],[R[13],[R[148]]]]]],[11,"close",E,R[374],3,[[["self"]]]],[11,R[375],E,R[4088],4,[[["self"],[T]],[[R[376]],[R[13],[R[376]]]]]],[0,"error",E,R[4089],N,N],[3,R[378],R[397],R[4090],N,N],[3,R[158],E,R[4091],N,N],[3,R[225],E,R[4092],N,N],[3,R[408],E,R[4093],N,N],[3,R[406],E,R[4094],N,N],[3,R[407],E,R[4095],N,N],[0,"oneshot",R[372],R[4096],N,N],[3,"Sender",R[379],R[4097],N,N],[3,R[155],E,R[4098],N,N],[5,R[377],E,R[4099],N,[[]]],[0,"error",E,R[4100],N,N],[3,R[378],R[398],R[4101],N,N],[3,R[409],E,R[4102],N,N],[11,"send",R[379],R[172],5,[[[T]],[R[13]]]],[11,R[394],E,R[380],5,[[["self"]],["poll"]]],[11,R[150],E,R[380],5,[[["self"]],["bool"]]],[11,"close",E,R[4103],6,[[["self"]]]],[11,"try_recv",E,R[4104],6,[[["self"]],[[R[381]],[R[13],[R[381]]]]]],[0,R[382],R[372],"Thread-safe, asynchronous counting semaphore.",N,N],[3,R[403],R[399],"Futures-aware semaphore.",N,N],[3,"Permit",E,"A semaphore permit",N,N],[3,R[410],E,"Error returned by `Permit::poll_acquire`.",N,N],[3,R[404],E,"Error returned by `Permit::try_acquire`.",N,N],[11,"new",E,"Creates a new semaphore with the initial number of permits",7,[[[R[9]]],[R[382]]]],[11,"available_permits",E,"Returns the current number of available permits",7,[[["self"]],[R[9]]]],[11,"close",E,"Close the semaphore. This prevents the semaphore from…",7,[[["self"]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",7,[[["self"],[R[9]]]]],[11,"new",E,"Create a new `Permit`.",8,[[],["permit"]]],[11,"is_acquired",E,"Returns true if the permit has been acquired",8,[[["self"]],["bool"]]],[11,"poll_acquire",E,"Try to acquire the permit. If no permits are available,…",8,[[["self"],[R[382]]],[["poll",[R[383]]],[R[383]]]]],[11,"try_acquire",E,"Try to acquire the permit.",8,[[["self"],[R[382]]],[[R[384]],[R[13],[R[384]]]]]],[11,"release",E,"Release a permit back to the semaphore",8,[[["self"],[R[382]]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",8,[[["self"]]]],[11,R[150],E,"Returns true if the error was caused by a closed semaphore.",9,[[["self"]],["bool"]]],[11,"is_no_permits",E,"Returns true if the error was caused by calling…",9,[[["self"]],["bool"]]],[0,"task",R[372],"Thread-safe task notification primitives.",N,N],[3,R[236],R[400],R[385],N,N],[11,"new",E,R[386],10,[[],[R[387]]]],[11,R[3081],E,R[388],10,[[["self"]]]],[11,R[389],E,R[390],10,[[["self"],["task"]]]],[11,"notify",E,R[391],10,[[["self"]]]],[11,"take_task",E,"Attempts to take the `Task` value out of the `AtomicTask`…",10,[[["self"]],[[R[45],["task"]],["task"]]]],[0,"watch",R[372],R[4105],N,N],[3,R[155],R[392],R[4106],N,N],[3,"Sender",E,R[4107],N,N],[3,"Ref",E,R[4108],N,N],[5,R[377],E,R[4109],N,[[[T]]]],[0,"error",E,R[4110],N,N],[3,R[378],R[401],R[4111],N,N],[3,R[158],E,R[4112],N,N],[11,R[120],R[392],R[4113],11,[[["self"]],["ref"]]],[11,"poll_ref",E,R[4114],11,[[["self"]],[[R[393]],["poll",[R[45],R[393]]],[R[45],["ref"]]]]],[11,R[862],E,R[4115],12,[[["self"],[T]],[[R[149]],[R[13],[R[149]]]]]],[11,R[394],E,R[4116],12,[[["self"]],["poll"]]],[11,"from",R[395],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],E,E,13,[[["self"]],["string"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",R[396],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],R[397],E,14,[[["self"]],["string"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,R[62],E,E,15,[[["self"]],["string"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,R[62],E,E,16,[[["self"]],["string"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[12],E,E,16,[[[U]],[R[13]]]],[11,R[14],E,E,16,[[],[R[13]]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[R[42]]]],[11,R[62],E,E,17,[[["self"]],["string"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[12],E,E,17,[[[U]],[R[13]]]],[11,R[14],E,E,17,[[],[R[13]]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[R[42]]]],[11,R[62],E,E,18,[[["self"]],["string"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[12],E,E,18,[[[U]],[R[13]]]],[11,R[14],E,E,18,[[],[R[13]]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[R[42]]]],[11,R[62],E,E,19,[[["self"]],["string"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[[U]],[R[13]]]],[11,R[14],E,E,19,[[],[R[13]]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[R[42]]]],[11,"from",R[379],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[108],E,E,6,[[],["f"]]],[11,R[62],R[398],E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[[U]],[R[13]]]],[11,R[14],E,E,20,[[],[R[13]]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[R[42]]]],[11,R[62],E,E,21,[[["self"]],["string"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[12],E,E,21,[[[U]],[R[13]]]],[11,R[14],E,E,21,[[],[R[13]]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[R[42]]]],[11,"from",R[399],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[62],E,E,22,[[["self"]],["string"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[12],E,E,22,[[[U]],[R[13]]]],[11,R[14],E,E,22,[[],[R[13]]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[R[42]]]],[11,R[62],E,E,9,[[["self"]],["string"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",R[400],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",R[392],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[[T],["self"]]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[12],E,E,23,[[[U]],[R[13]]]],[11,R[14],E,E,23,[[],[R[13]]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[R[42]]]],[11,R[62],R[401],E,24,[[["self"]],["string"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[12],E,E,24,[[[U]],[R[13]]]],[11,R[14],E,E,24,[[],[R[13]]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[R[42]]]],[11,R[62],E,E,25,[[["self"]],["string"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[12],E,E,25,[[[U]],[R[13]]]],[11,R[14],E,E,25,[[],[R[13]]]],[11,R[15],E,E,25,[[["self"]],[T]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[R[42]]]],[11,R[77],R[395],E,0,[[],["self"]]],[11,R[77],R[400],E,10,[[],["self"]]],[11,"clone",R[395],E,0,[[["self"]],["self"]]],[11,"clone",R[396],E,2,[[["self"]],["self"]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,"clone",R[392],E,11,[[["self"]],["self"]]],[11,"from",R[395],E,0,[[[T]],["self"]]],[11,"from",R[397],E,15,[[],[R[148]]]],[11,"from",E,E,18,[[],[R[376]]]],[11,"drop",R[395],E,13,[[["self"]]]],[11,"drop",R[379],E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"drop",R[392],E,11,[[["self"]]]],[11,"drop",E,E,12,[[["self"]]]],[11,R[60],R[395],E,13,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[396],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[397],E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[396],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[397],E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[379],E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[398],E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,21,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[399],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[400],E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[392],E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,23,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[401],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,25,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[395],E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[397],E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,16,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,17,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,18,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,19,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[398],E,20,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,21,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[399],E,22,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[401],E,24,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,25,[[["self"],[R[30]]],[R[13]]]],[11,"deref",R[395],E,13,[[["self"]]]],[11,"deref",R[392],E,23,[[["self"]],[T]]],[11,R[31],R[397],E,14,[[["self"]],["str"]]],[11,R[31],E,E,15,[[["self"]],["str"]]],[11,R[31],E,E,16,[[["self"]],["str"]]],[11,R[31],E,E,17,[[["self"]],["str"]]],[11,R[31],E,E,18,[[["self"]],["str"]]],[11,R[31],E,E,19,[[["self"]],["str"]]],[11,R[31],R[398],E,20,[[["self"]],["str"]]],[11,R[31],E,E,21,[[["self"]],["str"]]],[11,R[31],R[399],E,22,[[["self"]],["str"]]],[11,R[31],E,E,9,[[["self"]],["str"]]],[11,R[31],R[401],E,24,[[["self"]],["str"]]],[11,R[31],E,E,25,[[["self"]],["str"]]],[11,"poll",R[379],E,6,[[["self"]],[[R[393]],["poll",[R[393]]]]]],[11,"poll",R[396],E,1,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,3,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[392],E,11,[[["self"]],[[R[45]],[R[393]],["poll",[R[45],R[393]]]]]],[11,R[190],R[396],E,2,[[["self"],[T]],[R[191]]]],[11,R[192],E,E,2,[[["self"]],["poll"]]],[11,"close",E,E,2,[[["self"]],["poll"]]],[11,R[190],E,E,4,[[["self"],[T]],[R[191]]]],[11,R[192],E,E,4,[[["self"]],["poll"]]],[11,"close",E,E,4,[[["self"]],["poll"]]],[11,R[190],R[392],E,12,[[["self"],[T]],[[R[149]],[R[191],[R[149]]]]]],[11,R[192],E,E,12,[[["self"]],[[R[149]],["poll",[R[149]]]]]],[11,R[118],R[397],R[402],15,[[],[T]]],[11,R[150],E,R[4117],15,[[["self"]],["bool"]]],[11,"is_full",E,R[4118],15,[[["self"]],["bool"]]],[11,R[118],E,R[402],18,[[],[T]]]],"p":[[3,"Lock"],[3,R[155]],[3,"Sender"],[3,R[157]],[3,R[156]],[3,"Sender"],[3,R[155]],[3,R[403]],[3,"Permit"],[3,R[404]],[3,R[236]],[3,R[155]],[3,"Sender"],[3,R[405]],[3,R[158]],[3,R[225]],[3,R[378]],[3,R[406]],[3,R[407]],[3,R[408]],[3,R[378]],[3,R[409]],[3,R[410]],[3,"Ref"],[3,R[378]],[3,R[158]]]};
searchIndex["tokio_tcp"]={"doc":R[4119],"i":[[3,R[4200],"tokio_tcp",R[4120],N,N],[3,R[3087],E,R[3528],N,N],[3,R[3492],E,R[3529],N,N],[3,R[3493],E,R[4121],N,N],[11,"bind",E,R[4122],0,[[[R[806]]],[[R[804]],[R[13],[R[804]]]]]],[11,R[3513],E,R[3487],0,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3514],E,R[3487],0,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3118],E,R[4123],0,[[[R[804]],["handle"]],[[R[804]],[R[13],[R[804]]]]]],[11,R[3076],E,R[4124],0,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[4221],E,R[3515],0,[[],[R[4221]]]],[11,"ttl",E,R[828],0,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,"set_ttl",E,R[810],0,[[["self"],["u32"]],[R[13]]]],[11,"connect",E,R[4125],1,[[[R[806]]],[R[3489]]]],[11,R[3118],E,R[4126],1,[[["handle"],[R[805]]],[[R[13],[R[805]]],[R[805]]]]],[11,R[4127],E,R[3488],1,[[["handle"],[R[805]],[R[806]]],[R[3489]]]],[11,R[3277],E,R[4128],1,[[["self"],["ready"]],[["error"],["ready"],["poll",["ready","error"]]]]],[11,R[3278],E,R[4129],1,[[["self"]],[["error"],["ready"],["poll",["ready","error"]]]]],[11,R[3076],E,R[4130],1,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3490],E,R[4131],1,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,"poll_peek",E,R[3115],1,[[["self"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[3116],E,R[3444],1,[[["self"],[R[3116]]],[R[13]]]],[11,"nodelay",E,R[3090],1,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3088],E,R[3089],1,[[["self"],["bool"]],[R[13]]]],[11,R[837],E,R[838],1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[835],E,R[836],1,[[["self"],[R[9]]],[R[13]]]],[11,R[841],E,R[842],1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[839],E,R[840],1,[[["self"],[R[9]]],[R[13]]]],[11,R[3491],E,R[823],1,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[11,R[3091],E,R[822],1,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[11,"ttl",E,R[828],1,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,"set_ttl",E,R[810],1,[[["self"],["u32"]],[R[13]]]],[11,"linger",E,R[4132],1,[[["self"]],[[R[45],[R[411]]],[R[13],[R[45]]]]]],[11,R[832],E,R[833],1,[[["self"],[R[45],[R[411]]],[R[411]]],[R[13]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[108],E,E,3,[[],["f"]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"write",E,E,1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,1,[[["self"]],[R[13]]]],[11,"read",E,E,1,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[853],E,E,0,[[["self"]],["rawfd"]]],[11,R[853],E,E,1,[[["self"]],["rawfd"]]],[11,"poll",E,E,3,[[["self"]],[["error"],[R[805]],["poll",[R[805],"error"]]]]],[11,"poll",E,E,2,[[["self"]],[["error"],["poll",[R[45],"error"]],[R[45]]]]],[11,R[3123],E,E,1,[[["self"]],["bool"]]],[11,R[3888],E,E,1,[[["self"],["b"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[3116],E,E,1,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3458],E,E,1,[[["self"],["b"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]]],"p":[[3,R[3087]],[3,R[3492]],[3,R[4200]],[3,R[3493]]]};
searchIndex["tokio_threadpool"]={"doc":"A work-stealing based thread pool for executing futures.","i":[[3,R[3434],R[3429],"Error raised by `blocking`.",N,N],[3,"Builder",E,"Builds a thread pool with custom configuration values.",N,N],[3,"Sender",E,"Submit futures to the associated thread pool for execution.",N,N],[3,R[3282],E,"Future that resolves when the thread pool is shutdown.",N,N],[3,R[143],E,"Handle returned from ThreadPool::spawn_handle.",N,N],[3,"ThreadPool",E,"Work-stealing based thread pool for executing futures.",N,N],[3,"Worker",E,"Thread worker",N,N],[3,"WorkerId",E,"Identifies a thread pool worker.",N,N],[5,"blocking",E,"Enter a blocking section of code.",N,[[["f"]],[[R[3427]],["poll",[R[3427]]]]]],[0,"park",E,"Thread parking utilities.",N,N],[3,R[3433],R[3432],"Parks the thread.",N,N],[3,R[3435],E,"Unparks threads that were parked by `DefaultPark`.",N,N],[3,R[800],E,R[3428],N,N],[11,"new",E,"Creates a new `DefaultPark` instance.",0,[[],["defaultpark"]]],[11,"new",R[3429],"Returns a new thread pool builder initialized with default…",1,[[],["builder"]]],[11,"pool_size",E,"Set the maximum number of worker threads for the thread…",1,[[["self"],[R[9]]],["self"]]],[11,"max_blocking",E,"Set the maximum number of concurrent blocking sections.",1,[[["self"],[R[9]]],["self"]]],[11,"keep_alive",E,"Set the thread keep alive duration",1,[[["self"],[R[45],[R[411]]],[R[411]]],["self"]]],[11,R[4133],E,"Sets a callback to be triggered when a panic during a…",1,[[["self"],["f"]],["self"]]],[11,R[4134],E,"Set name prefix of threads spawned by the scheduler",1,[[["self"],["string"],["into",["string"]]],["self"]]],[11,R[4135],E,R[4136],1,[[["self"],[R[9]]],["self"]]],[11,"around_worker",E,"Execute function `f` on each worker thread.",1,[[["self"],["f"]],["self"]]],[11,R[4137],E,R[4138],1,[[["self"],["f"]],["self"]]],[11,R[4139],E,R[4140],1,[[["self"],["f"]],["self"]]],[11,"custom_park",E,"Customize the `park` instance used by each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `ThreadPool`.",1,[[["self"]],["threadpool"]]],[11,"spawn",E,"Spawn a future onto the thread pool",2,[[["self"],["f"]],[[R[13],[R[791]]],[R[791]]]]],[11,"new",E,"Create a new `ThreadPool` with default values.",3,[[],["threadpool"]]],[11,"spawn",E,"Spawn a future onto the thread pool.",3,[[["self"],["f"]]]],[11,"spawn_handle",E,"Spawn a future on to the thread pool, return a future…",3,[[["self"],["f"]],[R[139]]]],[11,"sender",E,"Return a reference to the sender handle",3,[[["self"]],["sender"]]],[11,"sender_mut",E,"Return a mutable reference to the sender handle",3,[[["self"]],["sender"]]],[11,R[3430],E,"Shutdown the pool once it becomes idle.",3,[[],[R[3116]]]],[11,R[3116],E,"Shutdown the pool",3,[[],[R[3116]]]],[11,R[3431],E,"Shutdown the pool immediately",3,[[],[R[3116]]]],[11,"id",E,"Returns a reference to the worker's identifier.",4,[[["self"]],["workerid"]]],[11,"run",E,"Run the worker",4,[[["self"]]]],[11,"to_usize",E,"Returns this identifier represented as an integer.",5,[[["self"]],[R[9]]]],[11,R[62],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[108],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[108],E,E,8,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",R[3432],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,R[62],E,E,10,[[["self"]],["string"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"clone",R[3429],E,2,[[["self"]],["sender"]]],[11,"clone",E,E,5,[[["self"]],["workerid"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"eq",E,E,5,[[["self"],["workerid"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["workerid"]],["bool"]]],[11,"fmt",R[3432],E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3429],E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3432],E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3429],E,6,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,R[31],R[3432],E,10,[[["self"]],["str"]]],[11,R[31],R[3429],E,6,[[["self"]],["str"]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],["poll"]]],[11,"execute",E,E,2,[[["self"],[T]],[[R[106]],[R[13],[R[106]]]]]],[11,"status",E,E,2,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"spawn",E,E,2,[[["self"],["box",["future"]],["future"]],[[R[13],[R[791]]],[R[791]]]]],[11,"unpark",R[3432],E,0,[[["self"]]]],[11,"park",E,E,0,[[["self"]],[R[13]]]],[11,R[788],E,E,0,[[["self"],[R[411]]],[R[13]]]],[11,"unpark",E,E,9,[[["self"]]]],[11,"status",R[3429],E,2,[[["self"]],[[R[791]],[R[13],[R[791]]]]]],[11,"spawn",E,E,2,[[["self"],[T]],[[R[13],[R[791]]],[R[791]]]]]],"p":[[3,R[3433]],[3,"Builder"],[3,"Sender"],[3,"ThreadPool"],[3,"Worker"],[3,"WorkerId"],[3,R[3434]],[3,R[3282]],[3,R[143]],[3,R[3435]],[3,R[800]]]};
searchIndex["tokio_timer"]={"doc":R[4141],"i":[[3,"Delay",R[3368],R[4142],N,N],[3,R[3392],E,R[3369],N,N],[3,"Error",E,R[4143],N,N],[3,"Interval",E,R[4144],N,N],[3,"Timeout",E,R[3375],N,N],[5,R[3276],E,R[3378],N,[[["handle"],["enter"],["f"]],["r"]]],[5,"sleep",E,"Create a Future that completes in `duration` from now.",N,[[[R[411]]],["delay"]]],[0,"clock",E,R[4145],N,N],[3,"Clock",R[3389],R[3377],N,N],[5,"now",E,R[4146],N,[[],["instant"]]],[5,R[3276],E,"Set the default clock for the duration of the closure.",N,[[["enter"],["f"],["clock"]],["r"]]],[11,"new",E,"Return a new `Clock` instance that uses the current…",0,[[],["clock"]]],[11,R[3379],E,"Return a new `Clock` instance that uses `now` as the…",0,[[["now"]],["clock"]]],[11,"system",E,"Return a new `Clock` instance that uses [`Instant::now`]…",0,[[],["clock"]]],[11,"now",E,"Returns an instant corresponding to \"now\" by using the…",0,[[["self"]],["instant"]]],[8,"Now",E,"Returns [`Instant`] values representing the current…",N,N],[10,"now",E,"Returns an instant corresponding to \"now\".",1,[[["self"]],["instant"]]],[0,R[4147],R[3368],R[3369],N,N],[3,R[3392],R[3387],R[3369],N,N],[3,"Expired",E,R[4148],N,N],[3,"Key",E,R[4149],N,N],[11,"new",E,R[4150],2,[[],[R[3370]]]],[11,R[4151],E,R[4152],2,[[["handle"],[R[9]]],[R[3370]]]],[11,R[72],E,R[4153],2,[[[R[9]]],[R[3370]]]],[11,"insert_at",E,R[4154],2,[[["self"],["instant"],[T]],["key"]]],[11,"insert",E,R[4155],2,[[["self"],[T],[R[411]]],["key"]]],[11,"remove",E,R[4156],2,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[3371],2,[[["self"],["instant"],["key"]]]],[11,"reset",E,R[3371],2,[[["self"],[R[411]],["key"]]]],[11,"clear",E,R[4157],2,[[["self"]]]],[11,R[74],E,R[4158],2,[[["self"]],[R[9]]]],[11,"reserve",E,R[4159],2,[[["self"],[R[9]]]]],[11,R[73],E,R[4160],2,[[["self"]],["bool"]]],[11,R[120],E,R[4161],3,[[["self"]],[T]]],[11,R[121],E,R[3372],3,[[["self"]],[T]]],[11,R[118],E,R[4162],3,[[],[T]]],[0,R[4163],R[3368],R[3373],N,N],[3,"Throttle",R[3390],R[3373],N,N],[3,R[3393],E,"Either the error of the underlying stream, or an error…",N,N],[11,"new",E,R[3373],4,[[[T],[R[411]]],["self"]]],[11,R[120],E,R[116],4,[[["self"]],[T]]],[11,R[121],E,R[117],4,[[["self"]],[T]]],[11,R[118],E,R[119],4,[[],[T]]],[11,"from_stream_err",E,"Creates a new `ThrottleError` from the given stream error.",5,[[[T]],["self"]]],[11,"from_timer_err",E,"Creates a new `ThrottleError` from the given tokio timer…",5,[[["error"]],["self"]]],[11,"get_stream_error",E,"Attempts to get the underlying stream error, if it is…",5,[[["self"]],[[T],[R[45]]]]],[11,"get_timer_error",E,"Attempts to get the underlying timer error, if it is…",5,[[["self"]],[["error"],[R[45],["error"]]]]],[11,"into_stream_error",E,"Attempts to extract the underlying stream error, if it is…",5,[[],[R[45]]]],[11,"into_timer_error",E,"Attempts to extract the underlying timer error, if it is…",5,[[],[["error"],[R[45],["error"]]]]],[11,"is_stream_error",E,R[3374],5,[[["self"]],["bool"]]],[11,"is_timer_error",E,R[3374],5,[[["self"]],["bool"]]],[0,"timeout",R[3368],R[4164],N,N],[3,"Timeout",R[3388],R[3375],N,N],[3,"Error",E,R[4165],N,N],[11,"new",E,R[4166],6,[[[T],[R[411]]],["timeout"]]],[11,R[120],E,R[4167],6,[[["self"]],[T]]],[11,R[121],E,R[4168],6,[[["self"]],[T]]],[11,R[118],E,R[4169],6,[[],[T]]],[11,"new_at",E,R[4170],6,[[["instant"],[T]],["timeout"]]],[11,"inner",E,R[4171],7,[[[T]],["error"]]],[11,"is_inner",E,R[3376],7,[[["self"]],["bool"]]],[11,R[118],E,R[4172],7,[[],[R[45]]]],[11,"elapsed",E,R[4173],7,[[],["error"]]],[11,R[4174],E,R[3376],7,[[["self"]],["bool"]]],[11,"timer",E,R[4175],7,[[["error"]],["error"]]],[11,"is_timer",E,R[4176],7,[[["self"]],["bool"]]],[11,"into_timer",E,R[4177],7,[[],[[R[45],["error"]],["error"]]]],[0,"timer",R[3368],"Timer implementation.",N,N],[3,"Handle",R[3391],"Handle to timer instance.",N,N],[3,"SystemNow",E,R[3377],N,N],[3,"Timer",E,"Timer implementation that drives [`Delay`], [`Interval`],…",N,N],[3,"Turn",E,"Return value from the `turn` method on `Timer`.",N,N],[5,R[3276],E,R[3378],N,[[["handle"],["enter"],["f"]],["r"]]],[11,"current",E,"Returns a handle to the current timer.",8,[[],["handle"]]],[11,"delay",E,"Create a `Delay` driven by this handle's associated `Timer`.",8,[[["instant"],["self"]],["delay"]]],[11,"timeout",E,"Create a `Timeout` driven by this handle's associated…",8,[[["instant"],["self"],[T]],["timeout"]]],[11,R[3386],E,R[3385],8,[[["instant"],["self"],[R[411]]],[R[3386]]]],[11,"new",E,R[3380],9,[[[T]],["self"]]],[11,"get_park",E,R[3402],9,[[["self"]],[T]]],[11,R[3403],E,R[3404],9,[[["self"]],[T]]],[11,R[3379],E,R[3380],9,[[[T],["n"]],["self"]]],[11,"handle",E,"Returns a handle to the timer.",9,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the timer loop.",9,[[["self"],[R[45],[R[411]]],[R[411]]],[["turn"],[R[13],["turn"]]]]],[11,"new",R[3368],R[4178],10,[[["instant"]],["delay"]]],[11,"deadline",E,R[4179],10,[[["self"]],["instant"]]],[11,R[4174],E,R[4180],10,[[["self"]],["bool"]]],[11,"reset",E,R[4181],10,[[["self"],["instant"]]]],[11,R[3116],E,R[4182],11,[[],["error"]]],[11,R[3381],E,R[3384],11,[[["self"]],["bool"]]],[11,R[3382],E,R[4183],11,[[],["error"]]],[11,R[3383],E,R[3384],11,[[["self"]],["bool"]]],[11,"new",E,R[3385],12,[[["instant"],[R[411]]],[R[3386]]]],[11,R[4184],E,R[4185],12,[[[R[411]]],[R[3386]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,R[108],E,E,10,[[],["f"]]],[11,"from",R[3387],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[62],R[3368],E,11,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",R[3388],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[108],E,E,6,[[],["f"]]],[11,"from",R[3389],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",R[3387],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[17],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[[T],["self"]]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",R[3390],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[62],R[3388],E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"from",R[3391],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,R[77],R[3389],E,0,[[],["clock"]]],[11,R[77],R[3391],E,8,[[],["handle"]]],[11,R[77],E,E,9,[[],["self"]]],[11,"clone",R[3389],E,0,[[["self"]],["clock"]]],[11,"clone",R[3387],E,13,[[["self"]],["key"]]],[11,"clone",R[3391],E,8,[[["self"]],["handle"]]],[11,"drop",E,E,9,[[["self"]]]],[11,"fmt",R[3389],E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3387],E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,13,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3390],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3388],E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3391],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,9,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3368],E,10,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,11,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3390],E,5,[[["self"],[R[30]]],[R[195]]]],[11,"fmt",R[3388],E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3368],E,11,[[["self"],[R[30]]],[R[13]]]],[11,R[31],R[3390],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[[R[45],[R[32]]],[R[32]]]]],[11,R[31],R[3388],E,7,[[["self"]],["str"]]],[11,R[31],R[3368],E,11,[[["self"]],["str"]]],[11,"poll",R[3388],E,6,[[["self"]],["poll"]]],[11,"poll",R[3368],E,10,[[["self"]],["poll"]]],[11,"poll",R[3387],E,2,[[["self"]],[["poll",[R[45],"error"]],["error"],[R[45]]]]],[11,"poll",R[3390],E,4,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[3388],E,6,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",R[3368],E,12,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"unpark",R[3391],E,9,[[["self"]]]],[11,"park",E,E,9,[[["self"]],[R[13]]]],[11,R[788],E,E,9,[[["self"],[R[411]]],[R[13]]]]],"p":[[3,"Clock"],[8,"Now"],[3,R[3392]],[3,"Expired"],[3,"Throttle"],[3,R[3393]],[3,"Timeout"],[3,"Error"],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,"Key"],[3,"Turn"]]};
searchIndex["tokio_udp"]={"doc":R[4186],"i":[[3,R[4187],"tokio_udp",R[3494],N,N],[3,R[3501],E,R[3530],N,N],[3,R[3522],E,R[3495],N,N],[3,R[3521],E,R[4188],N,N],[11,"new",E,R[4189],0,[[["c"],[R[809]]],["udpframed"]]],[11,R[120],E,R[3452],0,[[["self"]],[R[809]]]],[11,R[121],E,R[3453],0,[[["self"]],[R[809]]]],[11,R[118],E,R[4190],0,[[],[R[809]]]],[11,"bind",E,R[4191],1,[[[R[806]]],[[R[13],[R[809]]],[R[809]]]]],[11,R[3118],E,R[4192],1,[[[R[809]],["handle"]],[[R[13],[R[809]]],[R[809]]]]],[11,R[3076],E,R[3505],1,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,"connect",E,R[3496],1,[[["self"],[R[806]]],[R[13]]]],[11,R[4214],E,R[3497],1,[[["self"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[4211],E,R[4193],1,[[["self"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[3508],E,R[3498],1,[[["self"],[R[806]]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[4194],E,R[3499],1,[[[T],[R[806]]],[R[4216]]]],[11,R[3507],E,R[3500],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4195],E,R[4196],1,[[[T]],[R[4213]]]],[11,R[3277],E,R[4197],1,[[["self"],["ready"]],[["error"],["ready"],["poll",["ready","error"]]]]],[11,R[3278],E,R[4198],1,[[["self"]],[["error"],["ready"],["poll",["ready","error"]]]]],[11,R[862],E,R[3094],1,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3092],E,R[3093],1,[[["self"],["bool"]],[R[13]]]],[11,R[3097],E,R[3098],1,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3095],E,R[3096],1,[[["self"],["bool"]],[R[13]]]],[11,R[3101],E,R[3102],1,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,R[3099],E,R[3100],1,[[["self"],["u32"]],[R[13]]]],[11,R[3105],E,R[3106],1,[[["self"]],[["bool"],[R[13],["bool"]]]]],[11,R[3103],E,R[3104],1,[[["self"],["bool"]],[R[13]]]],[11,"ttl",E,R[828],1,[[["self"]],[["u32"],[R[13],["u32"]]]]],[11,"set_ttl",E,R[810],1,[[["self"],["u32"]],[R[13]]]],[11,R[3107],E,R[3108],1,[[[R[843]],["self"]],[R[13]]]],[11,R[3109],E,R[3110],1,[[[R[1326]],["self"],["u32"]],[R[13]]]],[11,R[3111],E,R[3112],1,[[[R[843]],["self"]],[R[13]]]],[11,R[3113],E,R[3114],1,[[[R[1326]],["self"],["u32"]],[R[13]]]],[11,R[3906],E,R[4199],2,[[],["parts"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,R[108],E,E,3,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,R[108],E,E,2,[[],["f"]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,R[853],E,E,1,[[["self"]],["rawfd"]]],[11,"poll",E,E,3,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,2,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,0,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,R[190],E,E,0,[[["self"]],[R[191]]]],[11,R[192],E,E,0,[[["self"]],["poll"]]],[11,"close",E,E,0,[[["self"]],["poll"]]]],"p":[[3,R[4187]],[3,R[3501]],[3,R[3521]],[3,R[3522]]]};
searchIndex["tokio_uds"]={"doc":"Unix Domain Sockets for Tokio.","i":[[3,R[3447],"tokio_uds",R[3532],N,N],[3,R[3520],E,R[3494],N,N],[3,R[4200],E,R[4201],N,N],[3,R[3448],E,R[3533],N,N],[3,R[3521],E,R[4202],N,N],[3,R[3522],E,R[4203],N,N],[3,R[3502],E,R[3534],N,N],[3,R[3493],E,R[4204],N,N],[3,"UCred",E,R[4205],N,N],[12,"uid",E,R[4206],0,N],[12,"gid",E,R[4207],0,N],[11,"bind",E,R[4208],1,[[["p"]],[[R[3436]],[R[13],[R[3436]]]]]],[11,"pair",E,R[3503],1,[[],[R[13]]]],[11,R[3118],E,R[4209],1,[[["handle"],[R[3436]]],[[R[3436]],[R[13],[R[3436]]]]]],[11,"unbound",E,R[4210],1,[[],[[R[3436]],[R[13],[R[3436]]]]]],[11,"connect",E,R[3504],1,[[["path"],["self"],["asref",["path"]]],[R[13]]]],[11,R[3277],E,R[3512],1,[[["self"],["ready"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[3278],E,R[3517],1,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[3076],E,R[3505],1,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3490],E,R[3506],1,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3507],E,R[3437],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[4211],E,R[3437],1,[[["self"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[4195],E,R[4212],1,[[[T]],[R[4213]]]],[11,R[3508],E,R[3509],1,[[["p"],["self"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[4214],E,R[3510],1,[[["self"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[4194],E,R[4215],1,[[[T],["p"]],[R[4216]]]],[11,R[816],E,R[3441],1,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,R[3116],E,R[3511],1,[[["self"],[R[3116]]],[R[13]]]],[11,"new",E,R[4217],2,[[[R[3436]],["c"]],[R[4218]]]],[11,R[120],E,R[3452],2,[[["self"]],[R[3436]]]],[11,R[121],E,R[3453],2,[[["self"]],[R[3436]]]],[11,"bind",E,R[4219],3,[[["p"]],[[R[3438]],[R[13],[R[3438]]]]]],[11,R[3118],E,R[4220],3,[[[R[3438]],["handle"]],[[R[3438]],[R[13],[R[3438]]]]]],[11,R[3076],E,R[3440],3,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3277],E,R[3512],3,[[["self"],["ready"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[816],E,R[3441],3,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,R[3513],E,R[3487],3,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3514],E,R[3487],3,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[4221],E,R[3515],3,[[],[R[4221]]]],[11,"connect",E,R[3516],4,[[["p"]],[R[3489]]]],[11,R[3118],E,R[4222],4,[[[R[3443]],["handle"]],[[R[3443]],[R[13],[R[3443]]]]]],[11,"pair",E,R[3503],4,[[],[R[13]]]],[11,R[3277],E,R[3512],4,[[["self"],["ready"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[3278],E,R[3517],4,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[3076],E,R[3518],4,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,R[3490],E,R[3519],4,[[["self"]],[[R[13],[R[806]]],[R[806]]]]],[11,"peer_cred",E,R[4223],4,[[["self"]],[["ucred"],[R[13],["ucred"]]]]],[11,R[816],E,R[3441],4,[[["self"]],[[R[45],["error"]],[R[13],[R[45]]]]]],[11,R[3116],E,R[3444],4,[[["self"],[R[3116]]],[R[13]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[108],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,R[108],E,E,7,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,R[108],E,E,8,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[[T],["self"]]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,"clone",E,E,0,[[["self"]],["ucred"]]],[11,"eq",E,E,0,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["ucred"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[13]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"write",E,E,4,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"flush",E,E,4,[[["self"]],[R[13]]]],[11,"read",E,E,4,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,R[853],E,E,1,[[["self"]],["rawfd"]]],[11,R[853],E,E,3,[[["self"]],["rawfd"]]],[11,R[853],E,E,4,[[["self"]],["rawfd"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],[["error"],["poll",[R[3443],"error"]],[R[3443]]]]],[11,"poll",E,E,2,[[["self"]],[["poll",[R[45]]],[R[45]]]]],[11,"poll",E,E,5,[[["self"]],[["error"],["poll",[R[45],"error"]],[R[45]]]]],[11,R[190],E,E,2,[[["self"]],[R[191]]]],[11,R[192],E,E,2,[[["self"]],["poll"]]],[11,"close",E,E,2,[[["self"]],["poll"]]],[11,R[3123],E,E,4,[[["self"]],["bool"]]],[11,R[3888],E,E,4,[[["self"],["b"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]],[11,R[3116],E,E,4,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[3458],E,E,4,[[["self"],["b"]],[["error"],[R[9]],["poll",[R[9],"error"]]]]]],"p":[[3,"UCred"],[3,R[3447]],[3,R[3520]],[3,R[3448]],[3,R[3502]],[3,R[4200]],[3,R[3521]],[3,R[3522]],[3,R[3493]]]};
searchIndex["toml"]={"doc":"A [TOML]-parsing library","i":[[0,"map","toml","A map of String to toml::Value.",N,N],[3,"Map",R[3065],"Represents a JSON key/value type.",N,N],[3,R[71],E,"A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,R[786],E,"An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter",E,"An iterator over a toml::Map's entries.",N,N],[3,"IterMut",E,"A mutable iterator over a toml::Map's entries.",N,N],[3,R[54],E,"An owning iterator over a toml::Map's entries.",N,N],[3,"Keys",E,"An iterator over a toml::Map's keys.",N,N],[3,"Values",E,"An iterator over a toml::Map's values.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry.",0,N],[13,"Occupied",E,"An occupied Entry.",0,N],[11,"new",E,"Makes a new empty Map.",1,[[],["self"]]],[11,R[72],E,"Makes a new empty Map with the given initial capacity.",1,[[[R[9]]],["self"]]],[11,"clear",E,"Clears the map, removing all values.",1,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",1,[[["self"],["q"]],[[R[45],["value"]],["value"]]]],[11,"contains_key",E,"Returns true if the map contains a value for the specified…",1,[[["self"],["q"]],["bool"]]],[11,R[121],E,"Returns a mutable reference to the value corresponding to…",1,[[["self"],["q"]],[[R[45],["value"]],["value"]]]],[11,"insert",E,"Inserts a key-value pair into the map.",1,[[["self"],["string"],["value"]],[[R[45],["value"]],["value"]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",1,[[["self"],["q"]],[[R[45],["value"]],["value"]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",1,[[["self"],["s"]],["entry"]]],[11,"len",E,"Returns the number of elements in the map.",1,[[["self"]],[R[9]]]],[11,R[73],E,"Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",1,[[["self"]],["iter"]]],[11,"iter_mut",E,"Gets a mutable iterator over the entries of the map.",1,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map.",1,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",1,[[["self"]],["values"]]],[11,"key",E,"Returns a reference to this entry's key.",0,[[["self"]],["string"]]],[11,"or_insert",E,R[3070],0,[[["value"]],["value"]]],[11,R[3071],E,R[3072],0,[[["f"]],["value"]]],[11,"key",E,"Gets a reference to the key that would be used when…",2,[[["self"]],["string"]]],[11,"insert",E,"Sets the value of the entry with the VacantEntry's key,…",2,[[["value"]],["value"]]],[11,"key",E,"Gets a reference to the key in the entry.",3,[[["self"]],["string"]]],[11,"get",E,"Gets a reference to the value in the entry.",3,[[["self"]],["value"]]],[11,R[121],E,"Gets a mutable reference to the value in the entry.",3,[[["self"]],["value"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",3,[[],["value"]]],[11,"insert",E,"Sets the value of the entry with the `OccupiedEntry`'s…",3,[[["self"],["value"]],["value"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",3,[[],["value"]]],[0,"value","toml","Definition of a TOML value",N,N],[3,"Datetime",R[3064],"A parsed TOML datetime value",N,N],[3,R[3069],E,"Error returned from parsing a `Datetime` in the `FromStr`…",N,N],[4,"Value",E,"Representation of a TOML value.",N,N],[13,"String",E,"Represents a TOML string",4,N],[13,"Integer",E,"Represents a TOML integer",4,N],[13,"Float",E,"Represents a TOML float",4,N],[13,"Boolean",E,"Represents a TOML boolean",4,N],[13,"Datetime",E,"Represents a TOML datetime",4,N],[13,"Array",E,"Represents a TOML array",4,N],[13,"Table",E,"Represents a TOML table",4,N],[6,"Array",E,"Type representing a TOML array, payload of the…",N,N],[6,"Table",E,"Type representing a TOML table, payload of the…",N,N],[8,"Index",E,"Types that can be used to index a `toml::Value`",N,N],[11,R[12],E,"Convert a `T` into `toml::Value` which is an enum that can…",4,[[[T]],[["error"],[R[13],["value","error"]],["value"]]]],[11,R[14],E,"Interpret a `toml::Value` as an instance of type `T`.",4,[[],[["error"],[R[13],["error"]]]]],[11,"get",E,"Index into a TOML array or map. A string index can be used…",4,[[["self"],["index"]],[[R[45],["value"]],["value"]]]],[11,R[121],E,"Mutably index into a TOML array or map. A string index can…",4,[[["self"],["index"]],[[R[45],["value"]],["value"]]]],[11,"as_integer",E,"Extracts the integer value if it is an integer.",4,[[["self"]],[[R[45],["i64"]],["i64"]]]],[11,"is_integer",E,"Tests whether this value is an integer.",4,[[["self"]],["bool"]]],[11,"as_float",E,"Extracts the float value if it is a float.",4,[[["self"]],[["f64"],[R[45],["f64"]]]]],[11,"is_float",E,"Tests whether this value is a float.",4,[[["self"]],["bool"]]],[11,"as_bool",E,"Extracts the boolean value if it is a boolean.",4,[[["self"]],[["bool"],[R[45],["bool"]]]]],[11,"is_bool",E,"Tests whether this value is a boolean.",4,[[["self"]],["bool"]]],[11,"as_str",E,"Extracts the string of this value if it is a string.",4,[[["self"]],[[R[45],["str"]],["str"]]]],[11,"is_str",E,"Tests if this value is a string.",4,[[["self"]],["bool"]]],[11,"as_datetime",E,"Extracts the datetime value if it is a datetime.",4,[[["self"]],[[R[45],[R[2369]]],[R[2369]]]]],[11,"is_datetime",E,"Tests whether this value is a datetime.",4,[[["self"]],["bool"]]],[11,"as_array",E,R[3060],4,[[["self"]],[[R[45],["vec"]],["vec"]]]],[11,"as_array_mut",E,R[3060],4,[[["self"]],[["vec"],[R[45],["vec"]]]]],[11,"is_array",E,"Tests whether this value is an array.",4,[[["self"]],["bool"]]],[11,"as_table",E,R[3061],4,[[["self"]],[["table"],[R[45],["table"]]]]],[11,"as_table_mut",E,R[3061],4,[[["self"]],[[R[45],["table"]],["table"]]]],[11,"is_table",E,"Tests whether this value is a table.",4,[[["self"]],["bool"]]],[11,"same_type",E,"Tests whether this and another value have the same type.",4,[[["self"],["value"]],["bool"]]],[11,"type_str",E,"Returns a human-readable representation of the type of…",4,[[["self"]],["str"]]],[0,"ser","toml","Serializing Rust structures into TOML.",N,N],[3,R[2996],R[3066],"Serialization implementation for TOML.",N,N],[4,"Error",E,"Errors that can occur when serializing a type.",N,N],[13,"UnsupportedType",E,"Indicates that a Rust type was requested to be serialized…",5,N],[13,"KeyNotString",E,"The key of all TOML maps must be strings, but…",5,N],[13,"ArrayMixedType",E,"Arrays in TOML must have a homogenous type, but a…",5,N],[13,"ValueAfterTable",E,"All values in a TOML table must be emitted before further…",5,N],[13,"DateInvalid",E,"A serialized date was invalid.",5,N],[13,"NumberInvalid",E,"A serialized number was invalid.",5,N],[13,"UnsupportedNone",E,"None was attempted to be serialized, but it's not supported.",5,N],[13,"Custom",E,"A custom error which could be generated when serializing a…",5,N],[5,"to_vec",E,"Serialize the given data structure as a TOML byte vector.",N,[[[T]],[["vec",["u8"]],["error"],[R[13],["vec","error"]]]]],[5,R[62],E,"Serialize the given data structure as a String of TOML.",N,[[[T]],[[R[13],["string","error"]],["string"],["error"]]]],[5,"to_string_pretty",E,"Serialize the given data structure as a \"pretty\" String of…",N,[[[T]],[[R[13],["string","error"]],["string"],["error"]]]],[5,"tables_last",E,"Convenience function to serialize items in a map in an…",N,[[["i"],["s"]],[R[13]]]],[11,"new",E,"Creates a new serializer which will emit TOML into the…",6,[[["string"]],[R[3062]]]],[11,"pretty",E,"Instantiate a \"pretty\" formatter",6,[[["string"]],[R[3062]]]],[11,"pretty_string",E,"Enable or Disable pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_string_literal",E,"Enable or Disable Literal strings for pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array",E,"Enable or Disable pretty arrays",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array_indent",E,"Set the indent for pretty arrays",6,[[["self"],[R[9]]],["self"]]],[11,"pretty_array_trailing_comma",E,"Specify whether to use a trailing comma when serializing…",6,[[["self"],["bool"]],["self"]]],[0,"de","toml","Deserializing TOML into Rust structures.",N,N],[3,"Error",R[3068],"Errors that can occur when deserializing a type.",N,N],[3,R[2820],E,"Deserialization implementation for TOML.",N,N],[5,R[1495],E,"Deserializes a byte slice into a type.",N,[[],[["error"],[R[13],["error"]]]]],[5,R[551],E,"Deserializes a string into a type.",N,[[["str"]],[["error"],[R[13],["error"]]]]],[11,"new",E,"Creates a new deserializer which will be deserializing the…",7,[[["str"]],[R[3047]]]],[11,"end",E,"The `Deserializer::end` method should be called after a…",7,[[["self"]],[["error"],[R[13],["error"]]]]],[11,"set_require_newline_after_table",E,R[3063],7,[[["self"],["bool"]]]],[11,"set_allow_duplicate_after_longer_table",E,R[3063],7,[[["self"],["bool"]]]],[11,"line_col",E,"Produces a (line, column) pair of the position of the…",8,[[["self"]],[R[45]]]],[14,"toml","toml","Construct a [`toml::Value`] from TOML syntax.",N,N],[11,"from",R[3065],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[43],E,E,1,[[],["i"]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[[T],["self"]]]],[11,R[12],E,E,1,[[[U]],[R[13]]]],[11,R[14],E,E,1,[[],[R[13]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[42]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[43],E,E,9,[[],["i"]]],[11,R[12],E,E,9,[[[U]],[R[13]]]],[11,R[14],E,E,9,[[],[R[13]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[42]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[43],E,E,10,[[],["i"]]],[11,R[12],E,E,10,[[[U]],[R[13]]]],[11,R[14],E,E,10,[[],[R[13]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[42]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[43],E,E,11,[[],["i"]]],[11,R[12],E,E,11,[[[U]],[R[13]]]],[11,R[14],E,E,11,[[],[R[13]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[42]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[43],E,E,12,[[],["i"]]],[11,R[12],E,E,12,[[[U]],[R[13]]]],[11,R[14],E,E,12,[[],[R[13]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[42]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[43],E,E,13,[[],["i"]]],[11,R[12],E,E,13,[[[U]],[R[13]]]],[11,R[14],E,E,13,[[],[R[13]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[62],R[3064],E,14,[[["self"]],["string"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[17],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[[T],["self"]]]],[11,R[12],E,E,14,[[[U]],[R[13]]]],[11,R[14],E,E,14,[[],[R[13]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[42]]]],[11,R[62],E,E,15,[[["self"]],["string"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[17],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[[T],["self"]]]],[11,R[12],E,E,15,[[[U]],[R[13]]]],[11,R[14],E,E,15,[[],[R[13]]]],[11,R[15],E,E,15,[[["self"]],[T]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[R[42]]]],[11,R[62],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[[T],["self"]]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",R[3066],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[[U]],[R[13]]]],[11,R[14],E,E,6,[[],[R[13]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[42]]]],[11,R[62],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[17],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[[T],["self"]]]],[11,R[12],E,E,5,[[[U]],[R[13]]]],[11,R[14],E,E,5,[[],[R[13]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[42]]]],[11,R[62],R[3068],E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[[T],["self"]]]],[11,R[12],E,E,8,[[[U]],[R[13]]]],[11,R[14],E,E,8,[[],[R[13]]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[R[42]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[[U]],[R[13]]]],[11,R[14],E,E,7,[[],[R[13]]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[R[42]]]],[11,"extend",R[3065],E,1,[[["self"],[T]]]],[11,R[77],E,E,1,[[],["self"]]],[11,"next",E,E,9,[[["self"]],[R[45]]]],[11,R[46],E,E,9,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[45]]]],[11,R[46],E,E,10,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[45]]]],[11,R[46],E,E,11,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[45]]]],[11,R[46],E,E,12,[[["self"]]]],[11,"next",E,E,13,[[["self"]],[R[45]]]],[11,R[46],E,E,13,[[["self"]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",R[3064],E,4,[[["self"]],["value"]]],[11,"clone",E,E,14,[[["self"]],[R[2369]]]],[11,"clone",E,E,15,[[["self"]],[R[3067]]]],[11,"clone",R[3066],E,5,[[["self"]],["error"]]],[11,"clone",R[3068],E,8,[[["self"]],["error"]]],[11,"from",R[3064],E,4,[[["str"]],["value"]]],[11,"from",E,E,4,[[["vec"]],["value"]]],[11,"from",E,E,4,[[["btreemap"]],["value"]]],[11,"from",E,E,4,[[["hashmap"]],["value"]]],[11,"from",E,E,4,[[["string"]],["value"]]],[11,"from",E,E,4,[[["i64"]],["value"]]],[11,"from",E,E,4,[[["i32"]],["value"]]],[11,"from",E,E,4,[[["i8"]],["value"]]],[11,"from",E,E,4,[[["u8"]],["value"]]],[11,"from",E,E,4,[[["u32"]],["value"]]],[11,"from",E,E,4,[[["f64"]],["value"]]],[11,"from",E,E,4,[[["f32"]],["value"]]],[11,"from",E,E,4,[[["bool"]],["value"]]],[11,"from",E,E,4,[[[R[2369]]],["value"]]],[11,"from",E,E,4,[[["table"]],["value"]]],[11,"len",R[3065],E,9,[[["self"]],[R[9]]]],[11,"len",E,E,10,[[["self"]],[R[9]]]],[11,"len",E,E,11,[[["self"]],[R[9]]]],[11,"len",E,E,12,[[["self"]],[R[9]]]],[11,"len",E,E,13,[[["self"]],[R[9]]]],[11,R[43],E,E,1,[[]]],[11,R[48],E,E,9,[[["self"]],[R[45]]]],[11,R[48],E,E,10,[[["self"]],[R[45]]]],[11,R[48],E,E,11,[[["self"]],[R[45]]]],[11,R[48],E,E,12,[[["self"]],[R[45]]]],[11,R[48],E,E,13,[[["self"]],[R[45]]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,"eq",R[3064],E,4,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[2369]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[2369]]],["bool"]]],[11,"eq",R[3066],E,5,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["error"]],["bool"]]],[11,"eq",R[3068],E,8,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["error"]],["bool"]]],[11,"fmt",R[3065],E,1,[[["self"],[R[30]]],[[R[13],["error"]],["error"]]]],[11,"fmt",R[3064],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3066],E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3068],E,8,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3064],E,4,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,14,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,15,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3066],E,5,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",R[3068],E,8,[[["self"],[R[30]]],[R[13]]]],[11,R[551],R[3064],E,4,[[["str"]],[["value"],[R[13],["value"]]]]],[11,R[551],E,E,14,[[["str"]],[[R[3067]],[R[2369]],[R[13],[R[2369],R[3067]]]]]],[11,"index",R[3065],E,1,[[["self"],["q"]],["value"]]],[11,"index",R[3064],E,4,[[["self"],["i"]],["value"]]],[11,R[49],R[3065],E,1,[[["self"],["q"]],["value"]]],[11,R[49],R[3064],E,4,[[["self"],["i"]],["value"]]],[11,R[196],R[3065],E,1,[[[T]],["self"]]],[11,R[31],R[3064],E,15,[[["self"]],["str"]]],[11,R[31],R[3066],E,5,[[["self"]],["str"]]],[11,R[31],R[3068],E,8,[[["self"]],["str"]]],[11,R[2837],R[3064],E,4,[[["v"]],[["error"],[R[13],["error"]]]]],[11,R[2887],E,E,4,[[["v"],["str"]],[["error"],[R[13],["error"]]]]],[11,R[2871],E,E,4,[[["v"]],[["error"],[R[13],["error"]]]]],[11,R[2877],E,E,4,[[["v"],["str"]],[["error"],[R[13],["error"]]]]],[11,R[2839],E,E,4,[[["v"]],[R[13]]]],[11,R[2851],E,E,4,[[["v"]],[R[13]]]],[11,R[2853],E,E,4,[[["v"]],[R[13]]]],[11,R[2855],E,E,4,[[["v"]],[R[13]]]],[11,R[2857],E,E,4,[[["v"]],[R[13]]]],[11,R[2841],E,E,4,[[["v"]],[R[13]]]],[11,R[2843],E,E,4,[[["v"]],[R[13]]]],[11,R[2845],E,E,4,[[["v"]],[R[13]]]],[11,R[2847],E,E,4,[[["v"]],[R[13]]]],[11,R[2861],E,E,4,[[["v"]],[R[13]]]],[11,R[2863],E,E,4,[[["v"]],[R[13]]]],[11,R[2865],E,E,4,[[["v"]],[R[13]]]],[11,R[2867],E,E,4,[[["v"]],[R[13]]]],[11,R[2868],E,E,4,[[["v"]],[R[13]]]],[11,R[2873],E,E,4,[[["v"]],[R[13]]]],[11,R[2879],E,E,4,[[["v"]],[R[13]]]],[11,R[2869],E,E,4,[[["v"]],[R[13]]]],[11,R[2870],E,E,4,[[["v"]],[R[13]]]],[11,R[2883],E,E,4,[[["v"]],[R[13]]]],[11,R[2875],E,E,4,[[["v"],["str"]],[R[13]]]],[11,R[2881],E,E,4,[[["v"],[R[9]],["str"]],[R[13]]]],[11,R[2885],E,E,4,[[["v"],["str"]],[R[13]]]],[11,R[2880],E,E,4,[[[R[9]],["v"]],[R[13]]]],[11,R[2891],E,E,4,[[["v"]],[R[13]]]],[11,R[2889],E,E,4,[[["v"]],[R[13]]]],[11,"custom",R[3066],E,5,[[["display"]],["error"]]],[11,R[3033],R[3065],E,1,[[["self"],["s"]],[R[13]]]],[11,R[3033],R[3064],E,4,[[["self"],["s"]],[R[13]]]],[11,R[3033],E,E,14,[[["self"],["s"]],[R[13]]]],[11,R[3049],E,E,4,[[],["self"]]],[11,"custom",R[3068],E,8,[[["display"]],["error"]]],[11,R[2809],R[3065],E,1,[[["d"]],[R[13]]]],[11,R[2809],R[3064],E,4,[[["d"]],[["value"],[R[13],["value"]]]]],[11,R[2809],E,E,14,[[["d"]],[[R[13],[R[2369]]],[R[2369]]]]]],"p":[[4,"Entry"],[3,"Map"],[3,R[71]],[3,R[786]],[4,"Value"],[4,"Error"],[3,R[2996]],[3,R[2820]],[3,"Error"],[3,"Iter"],[3,"IterMut"],[3,R[54]],[3,"Keys"],[3,"Values"],[3,"Datetime"],[3,R[3069]]]};
searchIndex["traitobject"]={"doc":R[68],"i":[[5,"data",R[68],"Get the data pointer from this trait object.",N,[[]]],[5,"data_mut",E,"Get the data pointer from this trait object, mutably.",N,[[]]],[8,"Trait",E,"A trait implemented for all trait objects.",N,N]],"p":[]};
searchIndex["typemap"]={"doc":"A type-based key value store where one value type is…","i":[[3,"TypeMap","typemap","A map keyed by types.",N,N],[3,R[786],E,R[782],N,N],[3,R[71],E,R[783],N,N],[4,"Entry",E,"A view onto an entry in a TypeMap.",N,N],[13,"Occupied",E,R[782],0,N],[13,"Vacant",E,R[783],0,N],[6,"SendMap",E,"A version of `TypeMap` containing only `Send` types.",N,N],[6,"SyncMap",E,"A version of `TypeMap` containing only `Sync` types.",N,N],[6,"ShareMap",E,"A version of `TypeMap` containing only `Send + Sync` types.",N,N],[6,"CloneMap",E,"A version of `TypeMap` containing only `Clone` types.",N,N],[6,"ShareCloneMap",E,"A version of `TypeMap` containing only `Clone + Send +…",N,N],[6,"DebugMap",E,"A version of `TypeMap` containing only `Debug` types.",N,N],[6,"ShareDebugMap",E,"A version of `TypeMap` containing only `Debug + Send +…",N,N],[8,"CloneAny",E,R[784],N,N],[8,"DebugAny",E,R[784],N,N],[8,"Key",E,"This trait defines the relationship between keys and…",N,N],[16,"Value",E,"The value type associated with this key type.",1,N],[11,"new",E,R[785],2,[[],["typemap"]]],[11,"custom",E,R[785],2,[[],["typemap"]]],[11,"insert",E,"Insert a value into the map with a specified key type.",2,[[["self"]],[R[45]]]],[11,"get",E,"Find a value in the map and get a reference to it.",2,[[["self"]],[R[45]]]],[11,R[121],E,"Find a value in the map and get a mutable reference to it.",2,[[["self"]],[R[45]]]],[11,R[1110],E,"Check if a key has an associated value stored in the map.",2,[[["self"]],["bool"]]],[11,"remove",E,"Remove a value from the map.",2,[[["self"]],[R[45]]]],[11,"entry",E,"Get the given key's corresponding entry in the map for…",2,[[["self"]],[["key"],["entry"]]]],[11,"data",E,"Read the underlying HashMap",2,[[["self"]],["hashmap"]]],[11,"data_mut",E,"Get a mutable reference to the underlying HashMap",2,[[["self"]],["hashmap"]]],[11,"len",E,"Get the number of values stored in the map.",2,[[["self"]],[R[9]]]],[11,R[73],E,"Return true if the map contains no values.",2,[[["self"]],["bool"]]],[11,"clear",E,"Remove all entries from the map.",2,[[["self"]]]],[11,"or_insert",E,R[3070],0,[[]]],[11,R[3071],E,R[3072],0,[[["fnonce"]]]],[11,"get",E,"Get a reference to the entry's value.",3,[[["self"]]]],[11,R[121],E,"Get a mutable reference to the entry's value.",3,[[["self"]]]],[11,"into_mut",E,"Transform the entry into a mutable reference with the same…",3,[[]]],[11,"insert",E,"Set the entry's value and return the previous value.",3,[[["self"]]]],[11,"remove",E,"Move the entry's value out of the map, consuming the entry.",3,[[]]],[11,"insert",E,"Set the entry's value and return a mutable reference to it.",4,[[]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[[U]],[R[13]]]],[11,R[14],E,E,3,[[],[R[13]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[42]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[[U]],[R[13]]]],[11,R[14],E,E,4,[[],[R[13]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[42]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[[U]],[R[13]]]],[11,R[14],E,E,0,[[],[R[13]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[42]]]],[11,R[77],E,E,2,[[],["typemap"]]],[11,"clone",E,E,2,[[["self"]],["typemap"]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]]],"p":[[4,"Entry"],[8,"Key"],[3,"TypeMap"],[3,R[786]],[3,R[71]]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[0],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[0]]]};
searchIndex["unsafe_any"]={"doc":"Traits for unsafe downcasting from trait objects to & or…","i":[[8,R[332],"unsafe_any","A trait providing unchecked downcasting to its contents…",N,N],[8,R[331],E,"An extension trait for unchecked downcasting of trait…",N,N],[11,R[324],E,R[325],0,[[["self"]],[T]]],[11,R[326],E,R[327],0,[[["self"]],[T]]],[11,R[328],E,R[329],0,[[["box"]],[["any"],["box"]]]],[11,R[324],E,R[325],1,[[["self"]],[T]]],[11,R[326],E,R[327],1,[[["self"]],[T]]],[11,R[328],E,R[329],1,[[[R[330]],["box",[R[330]]]],[["any"],["box"]]]]],"p":[[8,R[331]],[8,R[332]]]};
searchIndex["void"]={"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,R[61],E,"A safe version of `intrinsincs::unreachable`.",N,[[["void"]]]],[8,R[64],E,"Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap",E,"Get the value out of a wrapper.",0,[[],[T]]],[8,R[65],E,"Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err",E,"Get the error out of a wrapper.",1,[[],["e"]]],[11,R[62],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[[T],["self"]]]],[11,R[12],E,E,2,[[[U]],[R[13]]]],[11,R[14],E,E,2,[[],[R[13]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[42]]]],[11,"clone",E,E,2,[[["self"]],["void"]]],[11,R[63],E,E,2,[[[T],["self"]],[[R[45],[R[47]]],[R[47]]]]],[11,"eq",E,E,2,[[[T],["self"]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,"fmt",E,E,2,[[["self"],[R[30]]],[R[13]]]],[11,R[31],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[45],["error"]],["error"]]]]],"p":[[8,R[64]],[8,R[65]],[4,"Void"]]};
searchIndex["winapi"]={"doc":E,"i":[],"p":[]};
searchIndex["winconsole"]={"doc":E,"i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);