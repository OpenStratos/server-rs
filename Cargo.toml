[package]
name = "os_balloon"
version = "2.0.0-dev"
authors = [
    "Razican <razican@protonmail.ch>",
]
edition = "2021"
license = "GPL-3.0"
readme = "README.md"
repository = "https://github.com/OpenStratos/server-rs"
homepage = "https://openstratos.org/"
description = """\
Stratospheric balloon control software.
"""
keywords = ["OpenStratos", "stratosphere", "raspberry", "balloon", "science"]
categories = ["science"]

[badges]
travis-ci = { repository = "OpenStratos/server-rs", branch = "master" }
codecov = { repository = "OpenStratos/server-rs", branch = "master", service = "github" }
is-it-maintained-issue-resolution = { repository = "OpenStratos/server-rs" }
is-it-maintained-open-issues = { repository = "OpenStratos/server-rs" }

[lib]
name = "os_balloon"
path = "src/lib.rs"

[[bin]]
name = "launcher"
path = "src/main.rs"

[features]
default = ["all_hardware", "colored/no-color"]
all_hardware = ["gps", "raspicam", "fona", "telemetry"]
# GPS feature.
gps = ["sysfs_gpio", "tokio-serial", "tokio"]
# Raspberry Pi camera.
raspicam = []
# Adafruit FONA GSM module.
fona = ["sysfs_gpio", "tokio-serial", "tokio"]
# Do not send SMSs (so that it does not cost money)
no_sms = ["fona"]
# Transparent serial telemetry.
telemetry = ["tokio-serial", "tokio"]
# Do not ever power off the system, only exit.
no_power_off = []

[dependencies]
anyhow = "1.0.71"
once_cell = "1.18.0"
toml = "0.7.4"
tracing = "0.1.37"
tracing-subscriber = "0.3.17"
colored = "2.0.0"
chrono = "0.4.26"
libc = "0.2.146"
serde = { version = "1.0.164", features = ["derive"] }
sysfs_gpio = { version = "0.6.1", optional = true }
tokio-serial = { version = "5.4.4", optional = true }
tokio = { version = "1.28.2", features = ["sync"], optional = true }
thiserror = "1.0.40"

# The release profile, used for `cargo build --release`.
[profile.release]
# Enables "fat" LTO, for faster release builds
lto = "fat"
# Makes sure that all code is compiled together, for LTO
codegen-units = 1

# The test profile, used for `cargo test`.
[profile.test]
# Enables thin local LTO and some optimizations.
opt-level = 1

# The benchmark profile, used for `cargo bench`.
[profile.bench]
# Enables "fat" LTO, for faster benchmark builds
lto = "fat"
# Makes sure that all code is compiled together, for LTO
codegen-units = 1
