language: rust
cache: cargo
dist: trusty
sudo: true
os: linux
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      - zlib1g-dev
      - libudev-dev

# Run builds for all the supported trains
rust:
  - nightly
  - beta
  - stable
  - 1.17.0

# Update distribution packages before anything else.
before_install:
- sudo apt-get update

# Load travis-cargo
before_script:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        ( cargo install rustfmt --force || true );
      fi
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
        ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
      fi
  - export PATH=$PATH:~/.cargo/bin

# The main build
script:
  - cargo build
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        cargo package
      fi
  - cargo test
  - cargo test --features="no_power_off"
  - cargo test --no-default-features
  - cargo test --no-default-features --features="no_power_off"
  # Testing with fona
  - cargo test --no-default-features --features="fona"
  - cargo test --no-default-features --features="fona gps"
  - cargo test --no-default-features --features="fona gps raspicam"
  - cargo test --no-default-features --features="fona gps telemetry"
  - cargo test --no-default-features --features="fona raspicam"
  - cargo test --no-default-features --features="fona raspicam telemetry"
  - cargo test --no-default-features --features="fona telemetry"
  # Testing without FONA, with GPS
  - cargo test --no-default-features --features="gps"
  - cargo test --no-default-features --features="gps telemetry"
  - cargo test --no-default-features --features="gps telemetry raspicam"
  - cargo test --no-default-features --features="gps raspicam"
  # Testing without FONA or GPS
  - cargo test --no-default-features --features="raspicam"
  - cargo test --no-default-features --features="raspicam telemetry"
  - cargo test --no-default-features --features="telemetry"
  # Overall final test (and for coverage report)
  - cargo test
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" && $CLIPPY ]]; then
        cargo clippy
      fi
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
          cargo fmt -- --write-mode=diff
      fi

# Send coverage reports and upload docs
after_success:
  # Coverage report
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        for file in target/debug/os_balloon-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        for file in target/debug/launcher-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
      fi
  # Documentation upload
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" && "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" == "develop" ]]; then
        cargo doc &&
        echo "<meta http-equiv=refresh content=0;url=os_balloon/index.html>" > target/doc/index.html &&
        git clone https://github.com/davisp/ghp-import.git &&
        ./ghp-import/ghp_import.py -n -p -f -m "Documentation upload" -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc &&
        echo "Uploaded documentation"
      fi

notifications:
  email:
    recipients:
      - razican@protonmail.ch
      - eneko.cruz@opendeusto.es
    on_success: change
    on_failure: always
